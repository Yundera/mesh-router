{"version":3,"sources":["../../../node_modules/err-code/index.js","../../../node_modules/@chainsafe/as-chacha20poly1305/common/const.ts","../../../node_modules/@chainsafe/as-chacha20poly1305/src/chacha20poly1305.ts","../../../node_modules/@chainsafe/as-chacha20poly1305/src/poly1305.ts","../../../node_modules/@chainsafe/as-chacha20poly1305/src/wasmCode.ts","../../../node_modules/@chainsafe/as-chacha20poly1305/src/wasm.ts","../../../node_modules/@chainsafe/as-chacha20poly1305/src/chacha20.ts","../../../node_modules/@chainsafe/as-chacha20poly1305/src/index.ts","../../../node_modules/@chainsafe/as-sha256/src/wasmCode.ts","../../../node_modules/@chainsafe/as-sha256/src/wasm.ts","../../../node_modules/@chainsafe/as-sha256/src/hashObject.ts","../../../node_modules/@chainsafe/as-sha256/src/sha256.ts","../../../node_modules/@chainsafe/as-sha256/src/index.ts","../../../node_modules/is-electron/index.js","../../../node_modules/netmask/lib/netmask.js","../../../node_modules/merge-options/node_modules/is-plain-obj/index.js","../../../node_modules/merge-options/index.js","../../../node_modules/truncate-utf8-bytes/lib/truncate.js","../../../node_modules/truncate-utf8-bytes/index.js","../../../node_modules/sanitize-filename/index.js","../../../node_modules/hashlru/index.js","../../../node_modules/p-queue/node_modules/eventemitter3/index.js","../../../node_modules/debug/node_modules/ms/index.js","../../../node_modules/debug/src/common.js","../../../node_modules/debug/src/browser.js","../../../node_modules/has-flag/index.js","../../../node_modules/supports-color/index.js","../../../node_modules/debug/src/node.js","../../../node_modules/debug/src/index.js","../../../node_modules/event-iterator/lib/event-iterator.js","../../../node_modules/event-iterator/lib/node.js","../../../node_modules/xml2js/lib/defaults.js","../../../node_modules/xmlbuilder/lib/Utility.js","../../../node_modules/xmlbuilder/lib/XMLDOMImplementation.js","../../../node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js","../../../node_modules/xmlbuilder/lib/XMLDOMStringList.js","../../../node_modules/xmlbuilder/lib/XMLDOMConfiguration.js","../../../node_modules/xmlbuilder/lib/NodeType.js","../../../node_modules/xmlbuilder/lib/XMLAttribute.js","../../../node_modules/xmlbuilder/lib/XMLNamedNodeMap.js","../../../node_modules/xmlbuilder/lib/XMLElement.js","../../../node_modules/xmlbuilder/lib/XMLCharacterData.js","../../../node_modules/xmlbuilder/lib/XMLCData.js","../../../node_modules/xmlbuilder/lib/XMLComment.js","../../../node_modules/xmlbuilder/lib/XMLDeclaration.js","../../../node_modules/xmlbuilder/lib/XMLDTDAttList.js","../../../node_modules/xmlbuilder/lib/XMLDTDEntity.js","../../../node_modules/xmlbuilder/lib/XMLDTDElement.js","../../../node_modules/xmlbuilder/lib/XMLDTDNotation.js","../../../node_modules/xmlbuilder/lib/XMLDocType.js","../../../node_modules/xmlbuilder/lib/XMLRaw.js","../../../node_modules/xmlbuilder/lib/XMLText.js","../../../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","../../../node_modules/xmlbuilder/lib/XMLDummy.js","../../../node_modules/xmlbuilder/lib/XMLNodeList.js","../../../node_modules/xmlbuilder/lib/DocumentPosition.js","../../../node_modules/xmlbuilder/lib/XMLNode.js","../../../node_modules/xmlbuilder/lib/XMLStringifier.js","../../../node_modules/xmlbuilder/lib/WriterState.js","../../../node_modules/xmlbuilder/lib/XMLWriterBase.js","../../../node_modules/xmlbuilder/lib/XMLStringWriter.js","../../../node_modules/xmlbuilder/lib/XMLDocument.js","../../../node_modules/xmlbuilder/lib/XMLDocumentCB.js","../../../node_modules/xmlbuilder/lib/XMLStreamWriter.js","../../../node_modules/xmlbuilder/lib/index.js","../../../node_modules/xml2js/lib/builder.js","../../../node_modules/sax/lib/sax.js","../../../node_modules/xml2js/lib/bom.js","../../../node_modules/xml2js/lib/processors.js","../../../node_modules/xml2js/lib/parser.js","../../../node_modules/xml2js/lib/xml2js.js","../../../node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","../../../node_modules/murmurhash3js-revisited/index.js","../../../node_modules/sparse-array/index.js","../src/index.ts","../../../node_modules/@libp2p/tcp/src/index.ts","../../../node_modules/@libp2p/interface/src/content-routing/index.ts","../../../node_modules/@libp2p/interface/src/peer-discovery/index.ts","../../../node_modules/@libp2p/interface/src/peer-id/index.ts","../../../node_modules/@libp2p/interface/src/peer-routing/index.ts","../../../node_modules/@libp2p/interface/src/transport/index.ts","../../../node_modules/@libp2p/interface/src/errors.ts","../../../node_modules/@libp2p/interface/src/events.ts","../../../node_modules/@libp2p/interface/src/event-target.ts","../../../node_modules/@multiformats/multiaddr/src/multiaddr.ts","../../../node_modules/uint8arrays/src/equals.ts","../../../node_modules/uint8arrays/src/to-string.node.ts","../../../node_modules/uint8arrays/src/util/bases.ts","../../../node_modules/uint8arrays/src/alloc.node.ts","../../../node_modules/uint8arrays/src/util/as-uint8array.node.ts","../../../node_modules/uint8-varint/src/index.ts","../../../node_modules/uint8arrays/src/concat.node.ts","../../../node_modules/@chainsafe/is-ip/src/parser.ts","../../../node_modules/@chainsafe/is-ip/src/parse.ts","../../../node_modules/@chainsafe/netmask/src/ip.ts","../../../node_modules/@multiformats/multiaddr/src/convert.ts","../../../node_modules/uint8arrays/src/from-string.node.ts","../../../node_modules/@chainsafe/is-ip/src/is-ip.node.ts","../../../node_modules/@multiformats/multiaddr/src/ip.ts","../../../node_modules/@multiformats/multiaddr/src/protocols-table.ts","../../../node_modules/@multiformats/multiaddr/src/codec.ts","../../../node_modules/@multiformats/multiaddr/src/index.ts","../../../node_modules/@multiformats/mafmt/src/index.ts","../../../node_modules/@libp2p/tcp/src/constants.ts","../../../node_modules/@libp2p/tcp/src/listener.ts","../../../node_modules/@libp2p/utils/src/ip-port-to-multiaddr.ts","../../../node_modules/stream-to-it/src/source.ts","../../../node_modules/stream-to-it/src/sink.ts","../../../node_modules/stream-to-it/src/duplex.ts","../../../node_modules/@libp2p/tcp/src/utils.ts","../../../node_modules/@libp2p/tcp/src/socket-to-conn.ts","../../../node_modules/@libp2p/peer-id/src/index.ts","../../../node_modules/@libp2p/bootstrap/src/index.ts","../../../node_modules/@libp2p/crypto/src/keys/index.ts","../../../node_modules/@libp2p/crypto/src/keys/ed25519-class.ts","../../../node_modules/@libp2p/crypto/src/util.ts","../../../node_modules/@libp2p/crypto/src/keys/ed25519.ts","../../../node_modules/@libp2p/crypto/src/keys/exporter.ts","../../../node_modules/@libp2p/crypto/src/ciphers/aes-gcm.ts","../../../node_modules/@libp2p/crypto/src/keys/keys.ts","../../../node_modules/protons-runtime/src/utils/float.ts","../../../node_modules/protons-runtime/src/utils/longbits.ts","../../../node_modules/protons-runtime/src/utils/utf8.ts","../../../node_modules/protons-runtime/src/utils/reader.ts","../../../node_modules/protons-runtime/src/decode.ts","../../../node_modules/protons-runtime/src/utils/pool.ts","../../../node_modules/protons-runtime/src/utils/writer.ts","../../../node_modules/protons-runtime/src/encode.ts","../../../node_modules/protons-runtime/src/codec.ts","../../../node_modules/protons-runtime/src/codecs/enum.ts","../../../node_modules/protons-runtime/src/codecs/message.ts","../../../node_modules/protons-runtime/src/index.ts","../../../node_modules/@libp2p/crypto/src/keys/ecdh.ts","../../../node_modules/@libp2p/crypto/src/keys/ephemeral-keys.ts","../../../node_modules/@libp2p/crypto/src/keys/importer.ts","../../../node_modules/@libp2p/crypto/src/hmac/index.ts","../../../node_modules/@libp2p/crypto/src/hmac/lengths.ts","../../../node_modules/@libp2p/crypto/src/keys/key-stretcher.ts","../../../node_modules/@libp2p/crypto/src/keys/rsa-class.ts","../../../node_modules/@libp2p/crypto/src/keys/rsa.ts","../../../node_modules/@noble/hashes/src/cryptoNode.ts","../../../node_modules/@noble/hashes/src/_assert.ts","../../../node_modules/@noble/hashes/src/utils.ts","../../../node_modules/@libp2p/crypto/src/random-bytes.ts","../../../node_modules/@libp2p/crypto/src/keys/rsa-utils.ts","../../../node_modules/@noble/hashes/src/hmac.ts","../../../node_modules/@noble/hashes/src/pbkdf2.ts","../../../node_modules/@noble/hashes/src/_md.ts","../../../node_modules/@noble/hashes/src/_u64.ts","../../../node_modules/@noble/hashes/src/sha512.ts","../../../node_modules/pvtsutils/build/index.es.js","../../../node_modules/pvutils/build/utils.es.js","../../../node_modules/asn1js/build/index.es.js","../../../node_modules/@libp2p/crypto/src/webcrypto.ts","../../../node_modules/@libp2p/crypto/src/keys/secp256k1-class.ts","../../../node_modules/@libp2p/crypto/src/keys/secp256k1.ts","../../../node_modules/@noble/hashes/src/sha256.ts","../../../node_modules/@noble/curves/src/abstract/utils.ts","../../../node_modules/@noble/curves/src/abstract/modular.ts","../../../node_modules/@noble/curves/src/abstract/curve.ts","../../../node_modules/@noble/curves/src/abstract/weierstrass.ts","../../../node_modules/@noble/curves/src/_shortw_utils.ts","../../../node_modules/@noble/curves/src/secp256k1.ts","../../../node_modules/uint8arraylist/src/index.ts","../../../node_modules/it-length-prefixed/src/utils.ts","../../../node_modules/it-length-prefixed/src/encode.ts","../../../node_modules/it-length-prefixed/src/decode.ts","../../../node_modules/p-defer/index.js","../../../node_modules/race-signal/src/index.ts","../../../node_modules/it-byte-stream/src/pushable.ts","../../../node_modules/it-byte-stream/src/index.ts","../../../node_modules/it-length-prefixed-stream/src/index.ts","../../../node_modules/it-pair/src/index.ts","../../../node_modules/it-pair/src/duplex.ts","../../../node_modules/it-pushable/src/fifo.ts","../../../node_modules/it-pushable/src/index.ts","../../../node_modules/it-merge/src/index.ts","../../../node_modules/it-pipe/src/index.ts","../../../node_modules/@chainsafe/libp2p-noise/src/constants.ts","../../../node_modules/@chainsafe/libp2p-noise/src/crypto/index.ts","../../../node_modules/wherearewe/src/index.js","../../../node_modules/@noble/ciphers/src/utils.ts","../../../node_modules/@noble/ciphers/src/_assert.ts","../../../node_modules/@noble/ciphers/src/_poly1305.ts","../../../node_modules/@noble/ciphers/src/_arx.ts","../../../node_modules/@noble/ciphers/src/chacha.ts","../../../node_modules/@noble/curves/src/abstract/edwards.ts","../../../node_modules/@noble/curves/src/abstract/montgomery.ts","../../../node_modules/@noble/curves/src/ed25519.ts","../../../node_modules/@noble/hashes/src/hkdf.ts","../../../node_modules/@chainsafe/libp2p-noise/src/crypto/js.ts","../../../node_modules/@chainsafe/libp2p-noise/src/crypto.ts","../../../node_modules/@chainsafe/libp2p-noise/src/encoder.ts","../../../node_modules/@chainsafe/libp2p-noise/src/metrics.ts","../../../node_modules/@chainsafe/libp2p-noise/src/logger.ts","../../../node_modules/uint8arrays/src/xor.ts","../../../node_modules/uint8arrays/src/compare.node.ts","../../../node_modules/@chainsafe/libp2p-noise/src/errors.ts","../../../node_modules/@chainsafe/libp2p-noise/src/nonce.ts","../../../node_modules/@chainsafe/libp2p-noise/src/protocol.ts","../../../node_modules/@chainsafe/libp2p-noise/src/proto/payload.ts","../../../node_modules/@chainsafe/libp2p-noise/src/utils.ts","../../../node_modules/@chainsafe/libp2p-noise/src/performHandshake.ts","../../../node_modules/@chainsafe/libp2p-noise/src/streaming.ts","../../../node_modules/@chainsafe/libp2p-noise/src/noise.ts","../../../node_modules/@chainsafe/libp2p-noise/src/index.ts","../../../node_modules/get-iterator/src/index.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/constants.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/config.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/frame.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/decode.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/encode.ts","../../../node_modules/@libp2p/utils/src/is-promise.ts","../../../node_modules/@libp2p/utils/src/close-source.ts","../../../node_modules/@libp2p/utils/src/abstract-stream.ts","../../../node_modules/it-peekable/src/index.ts","../../../node_modules/it-foreach/src/index.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/stream.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/muxer.ts","../../../node_modules/@chainsafe/libp2p-yamux/src/index.ts","../../../node_modules/delay/index.js","../../../node_modules/@libp2p/utils/src/rate-limiter.ts","../../../node_modules/@libp2p/mplex/src/message-types.ts","../../../node_modules/@libp2p/mplex/src/decode.ts","../../../node_modules/@libp2p/mplex/src/encode.ts","../../../node_modules/@libp2p/mplex/src/stream.ts","../../../node_modules/@libp2p/mplex/src/mplex.ts","../../../node_modules/@libp2p/mplex/src/index.ts","../../../node_modules/@libp2p/peer-id-factory/src/index.ts","../../../node_modules/@libp2p/utils/src/private-ip.ts","../../../node_modules/it-first/src/index.ts","../../../node_modules/it-map/src/index.ts","../../../node_modules/it-parallel/src/index.ts","../../../node_modules/@libp2p/autonat/src/constants.ts","../../../node_modules/@libp2p/autonat/src/pb/index.ts","../../../node_modules/@libp2p/autonat/src/autonat.ts","../../../node_modules/@libp2p/autonat/src/index.ts","../../../node_modules/it-protobuf-stream/src/index.ts","../../../node_modules/@libp2p/dcutr/src/pb/message.ts","../../../node_modules/@multiformats/multiaddr-matcher/src/index.ts","../../../node_modules/@libp2p/dcutr/src/utils.ts","../../../node_modules/@libp2p/dcutr/src/dcutr.ts","../../../node_modules/@libp2p/dcutr/src/index.ts","../../../node_modules/@libp2p/identify/src/consts.ts","../../../node_modules/@libp2p/peer-record/src/errors.ts","../../../node_modules/@libp2p/peer-record/src/envelope/envelope.ts","../../../node_modules/@libp2p/peer-record/src/envelope/index.ts","../../../node_modules/@libp2p/utils/src/array-equals.ts","../../../node_modules/@libp2p/peer-record/src/peer-record/consts.ts","../../../node_modules/@libp2p/peer-record/src/peer-record/peer-record.ts","../../../node_modules/@libp2p/peer-record/src/peer-record/index.ts","../../../node_modules/@libp2p/identify/src/pb/message.ts","../../../node_modules/@libp2p/identify/src/identify.ts","../../../node_modules/@libp2p/identify/src/index.ts","../../../node_modules/@noble/hashes/src/sha1.ts","../../../node_modules/@libp2p/crypto/src/pbkdf2.ts","../../../node_modules/interface-datastore/src/key.ts","../../../node_modules/merge-options/index.mjs","../../../node_modules/@libp2p/keychain/src/keychain.ts","../../../node_modules/@libp2p/keychain/src/errors.ts","../../../node_modules/@libp2p/keychain/src/index.ts","../../../node_modules/@libp2p/ping/src/constants.ts","../../../node_modules/@libp2p/ping/src/ping.ts","../../../node_modules/@libp2p/ping/src/index.ts","../../../node_modules/it-drain/src/index.ts","../../../node_modules/@libp2p/kad-dht/src/constants.ts","../../../node_modules/@libp2p/record/src/record.ts","../../../node_modules/@libp2p/record/src/utils.ts","../../../node_modules/@libp2p/record/src/index.ts","../../../node_modules/@libp2p/kad-dht/src/message/dht.ts","../../../node_modules/@libp2p/kad-dht/src/query/events.ts","../../../node_modules/@libp2p/kad-dht/src/record/selectors.ts","../../../node_modules/@libp2p/kad-dht/src/record/validators.ts","../../../node_modules/@libp2p/kad-dht/src/utils.ts","../../../node_modules/@libp2p/kad-dht/src/content-fetching/index.ts","../../../node_modules/@libp2p/peer-collections/src/util.ts","../../../node_modules/@libp2p/peer-collections/src/set.ts","../../../node_modules/@libp2p/kad-dht/src/message/utils.ts","../../../node_modules/@libp2p/kad-dht/src/content-routing/index.ts","../../../node_modules/@libp2p/kad-dht/src/network.ts","../../../node_modules/@libp2p/kad-dht/src/peer-list/peer-distance-list.ts","../../../node_modules/@libp2p/kad-dht/src/peer-routing/index.ts","../../../node_modules/@libp2p/kad-dht/src/providers.ts","../../../node_modules/p-queue/node_modules/eventemitter3/index.mjs","../../../node_modules/p-timeout/index.js","../../../node_modules/p-queue/dist/lower-bound.js","../../../node_modules/p-queue/dist/priority-queue.js","../../../node_modules/p-queue/dist/index.js","../../../node_modules/any-signal/src/index.ts","../../../node_modules/@libp2p/kad-dht/src/query/utils.ts","../../../node_modules/@libp2p/kad-dht/src/query/query-path.ts","../../../node_modules/@libp2p/kad-dht/src/query/manager.ts","../../../node_modules/it-length/src/index.ts","../../../node_modules/it-take/src/index.ts","../../../node_modules/p-event/index.js","../../../node_modules/@libp2p/kad-dht/src/query-self.ts","../../../node_modules/race-event/src/index.ts","../../../node_modules/@libp2p/utils/src/queue/recipient.ts","../../../node_modules/@libp2p/utils/src/queue/job.ts","../../../node_modules/@libp2p/utils/src/queue/index.ts","../../../node_modules/@libp2p/utils/src/peer-queue.ts","../../../node_modules/@libp2p/kad-dht/src/routing-table/k-bucket.ts","../../../node_modules/@libp2p/kad-dht/src/routing-table/index.ts","../../../node_modules/@libp2p/kad-dht/src/routing-table/refresh.ts","../../../node_modules/@libp2p/kad-dht/src/routing-table/generated-prefix-list.ts","../../../node_modules/@libp2p/kad-dht/src/rpc/handlers/add-provider.ts","../../../node_modules/@libp2p/kad-dht/src/rpc/handlers/find-node.ts","../../../node_modules/@libp2p/kad-dht/src/rpc/handlers/get-providers.ts","../../../node_modules/@libp2p/kad-dht/src/rpc/handlers/get-value.ts","../../../node_modules/@libp2p/kad-dht/src/rpc/handlers/ping.ts","../../../node_modules/@libp2p/kad-dht/src/rpc/handlers/put-value.ts","../../../node_modules/@libp2p/kad-dht/src/rpc/index.ts","../../../node_modules/@libp2p/kad-dht/src/topology-listener.ts","../../../node_modules/@libp2p/kad-dht/src/kad-dht.ts","../../../node_modules/@libp2p/kad-dht/src/index.ts","../../../node_modules/@achingbrain/nat-port-mapper/src/index.ts","../../../node_modules/@libp2p/logger/src/index.ts","../../../node_modules/@achingbrain/ssdp/src/index.ts","../../../node_modules/@achingbrain/ssdp/src/adverts.ts","../../../node_modules/@achingbrain/ssdp/src/cache.ts","../../../node_modules/@achingbrain/ssdp/src/commands/resolve-location.ts","../../../node_modules/@achingbrain/ssdp/src/fetch.ts","../../../node_modules/@achingbrain/ssdp/src/commands/resolve-service.ts","../../../node_modules/@achingbrain/ssdp/src/commands/notify.ts","../../../node_modules/@achingbrain/ssdp/src/advertise/broadcast-advert.ts","../../../node_modules/@achingbrain/ssdp/src/advertise/create-location.ts","../../../node_modules/freeport-promise/src/index.ts","../../../node_modules/@achingbrain/ssdp/src/advertise/details-handler.ts","../../../node_modules/@achingbrain/ssdp/src/advertise/find-all-interfaces.ts","../../../node_modules/@achingbrain/ssdp/src/advertise/parse-options.ts","../../../node_modules/@achingbrain/ssdp/src/advertise/index.ts","../../../node_modules/@achingbrain/ssdp/src/commands/search.ts","../../../node_modules/@achingbrain/ssdp/src/create-sockets.ts","../../../node_modules/@achingbrain/ssdp/src/default-ssdp-options.ts","../../../node_modules/@achingbrain/ssdp/src/default-socket-options.ts","../../../node_modules/@achingbrain/ssdp/src/discover/index.ts","../../../node_modules/@achingbrain/ssdp/src/discover/search-response.ts","../../../node_modules/@achingbrain/ssdp/src/parse-ssdp-message.ts","../../../node_modules/@achingbrain/ssdp/src/send-ssdp-message.ts","../../../node_modules/@achingbrain/nat-port-mapper/src/discovery/index.ts","../../../node_modules/@achingbrain/nat-port-mapper/src/pmp/index.ts","../../../node_modules/@achingbrain/nat-port-mapper/src/upnp/device.ts","../../../node_modules/@achingbrain/nat-port-mapper/src/upnp/fetch.ts","../../../node_modules/@achingbrain/nat-port-mapper/src/upnp/index.ts","../../../node_modules/is-loopback-addr/src/index.ts","../../../node_modules/@libp2p/utils/src/multiaddr/is-loopback.ts","../../../node_modules/@libp2p/upnp-nat/src/upnp-nat.ts","../../../node_modules/@libp2p/upnp-nat/src/index.ts","../../../node_modules/ipfs-unixfs-importer/src/index.ts","../../../node_modules/it-batch/src/index.ts","../../../node_modules/it-parallel-batch/src/index.ts","../../../node_modules/ipfs-unixfs-importer/src/chunker/fixed-size.ts","../../../node_modules/@ipld/dag-pb/src/index.js","../../../node_modules/@ipld/dag-pb/src/pb-decode.js","../../../node_modules/@ipld/dag-pb/src/pb-encode.js","../../../node_modules/@ipld/dag-pb/src/util.js","../../../node_modules/ipfs-unixfs/src/index.ts","../../../node_modules/ipfs-unixfs/src/unixfs.ts","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/buffer-importer.ts","../../../node_modules/progress-events/src/index.ts","../../../node_modules/ipfs-unixfs-importer/src/utils/persist.ts","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/index.ts","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/dir.ts","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/file.ts","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/validate-chunks.ts","../../../node_modules/ipfs-unixfs-importer/src/layout/balanced.ts","../../../node_modules/it-all/src/index.ts","../../../node_modules/ipfs-unixfs-importer/src/dir.ts","../../../node_modules/ipfs-unixfs-importer/src/dir-flat.ts","../../../node_modules/@multiformats/murmur3/src/index.js","../../../node_modules/hamt-sharding/src/bucket.ts","../../../node_modules/hamt-sharding/src/consumable-buffer.ts","../../../node_modules/hamt-sharding/src/consumable-hash.ts","../../../node_modules/hamt-sharding/src/index.ts","../../../node_modules/ipfs-unixfs-importer/src/dir-sharded.ts","../../../node_modules/ipfs-unixfs-importer/src/flat-to-shard.ts","../../../node_modules/ipfs-unixfs-importer/src/utils/to-path-components.ts","../../../node_modules/ipfs-unixfs-importer/src/tree-builder.ts","../../../node_modules/@helia/unixfs/src/commands/add.ts","../../../node_modules/ipfs-unixfs-exporter/src/index.ts","../../../node_modules/it-last/src/index.ts","../../../node_modules/cborg/lib/is.js","../../../node_modules/cborg/lib/token.js","../../../node_modules/cborg/lib/byte-utils.js","../../../node_modules/cborg/lib/bl.js","../../../node_modules/cborg/lib/common.js","../../../node_modules/cborg/lib/0uint.js","../../../node_modules/cborg/lib/1negint.js","../../../node_modules/cborg/lib/2bytes.js","../../../node_modules/cborg/lib/3string.js","../../../node_modules/cborg/lib/4array.js","../../../node_modules/cborg/lib/5map.js","../../../node_modules/cborg/lib/6tag.js","../../../node_modules/cborg/lib/7float.js","../../../node_modules/cborg/lib/jump.js","../../../node_modules/cborg/lib/encode.js","../../../node_modules/cborg/lib/decode.js","../../../node_modules/@ipld/dag-cbor/src/index.js","../../../node_modules/cborg/lib/json/encode.js","../../../node_modules/cborg/lib/json/decode.js","../../../node_modules/@ipld/dag-json/src/index.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/index.ts","../../../node_modules/ipfs-unixfs-exporter/src/utils/resolve-object-path.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/dag-cbor.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/dag-json.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/identity.ts","../../../node_modules/ipfs-unixfs-exporter/src/utils/extract-data-from-block.ts","../../../node_modules/ipfs-unixfs-exporter/src/utils/validate-offset-and-length.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/json.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/raw.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/index.ts","../../../node_modules/ipfs-unixfs-exporter/src/utils/find-cid-in-shard.ts","../../../node_modules/it-filter/src/index.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/file.ts","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/hamt-sharded-directory.ts","../../../node_modules/@helia/unixfs/src/errors.ts","../../../node_modules/@helia/unixfs/src/commands/utils/add-link.ts","../../../node_modules/@helia/unixfs/src/commands/utils/consumable-hash.ts","../../../node_modules/@helia/unixfs/src/commands/utils/hamt-constants.ts","../../../node_modules/@helia/unixfs/src/commands/utils/hamt-utils.ts","../../../node_modules/@helia/unixfs/src/commands/utils/dir-sharded.ts","../../../node_modules/@helia/unixfs/src/commands/utils/persist.ts","../../../node_modules/@helia/unixfs/src/commands/utils/is-over-shard-threshold.ts","../../../node_modules/@helia/unixfs/src/commands/utils/cid-to-directory.ts","../../../node_modules/@helia/unixfs/src/commands/utils/cid-to-pblink.ts","../../../node_modules/@helia/unixfs/src/commands/utils/resolve.ts","../../../node_modules/@helia/unixfs/src/commands/cat.ts","../../../node_modules/@helia/unixfs/src/commands/chmod.ts","../../../node_modules/@helia/unixfs/src/commands/utils/constants.ts","../../../node_modules/@helia/unixfs/src/commands/cp.ts","../../../node_modules/@helia/unixfs/src/commands/ls.ts","../../../node_modules/@helia/unixfs/src/commands/mkdir.ts","../../../node_modules/@helia/unixfs/src/commands/utils/remove-link.ts","../../../node_modules/@helia/unixfs/src/commands/rm.ts","../../../node_modules/@helia/unixfs/src/commands/stat.ts","../../../node_modules/@helia/unixfs/src/commands/touch.ts","../../../node_modules/@helia/unixfs/src/index.ts","../src/EnvConfig.ts"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n",null,null,null,null,null,null,null,null,null,null,null,null,"// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to false\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var Netmask, atob, chr, chr0, chrA, chra, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, c, i, j, n, ref;\n    b = [];\n    for (i = j = 0; j <= 3; i = ++j) {\n      if (ip.length === 0) {\n        break;\n      }\n      if (i > 0) {\n        if (ip[0] !== '.') {\n          throw new Error('Invalid IP');\n        }\n        ip = ip.substring(1);\n      }\n      ref = atob(ip), n = ref[0], c = ref[1];\n      ip = ip.substring(c);\n      b.push(n);\n    }\n    if (ip.length !== 0) {\n      throw new Error('Invalid IP');\n    }\n    switch (b.length) {\n      case 1:\n        if (b[0] > 0xFFFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return b[0] >>> 0;\n      case 2:\n        if (b[0] > 0xFF || b[1] > 0xFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1]) >>> 0;\n      case 3:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2]) >>> 0;\n      case 4:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFF || b[3] > 0xFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]) >>> 0;\n      default:\n        throw new Error('Invalid IP');\n    }\n  };\n\n  chr = function(b) {\n    return b.charCodeAt(0);\n  };\n\n  chr0 = chr('0');\n\n  chra = chr('a');\n\n  chrA = chr('A');\n\n  atob = function(s) {\n    var base, dmax, i, n, start;\n    n = 0;\n    base = 10;\n    dmax = '9';\n    i = 0;\n    if (s.length > 1 && s[i] === '0') {\n      if (s[i + 1] === 'x' || s[i + 1] === 'X') {\n        i += 2;\n        base = 16;\n      } else if ('0' <= s[i + 1] && s[i + 1] <= '9') {\n        i++;\n        base = 8;\n        dmax = '7';\n      }\n    }\n    start = i;\n    while (i < s.length) {\n      if ('0' <= s[i] && s[i] <= dmax) {\n        n = (n * base + (chr(s[i]) - chr0)) >>> 0;\n      } else if (base === 16) {\n        if ('a' <= s[i] && s[i] <= 'f') {\n          n = (n * base + (10 + chr(s[i]) - chra)) >>> 0;\n        } else if ('A' <= s[i] && s[i] <= 'F') {\n          n = (n * base + (10 + chr(s[i]) - chrA)) >>> 0;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n      if (n > 0xFFFFFFFF) {\n        throw new Error('too large');\n      }\n      i++;\n    }\n    if (i === start) {\n      throw new Error('empty octet');\n    }\n    return [n, i];\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        mask = 32;\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask || mask === 0) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error1) {\n        error = error1;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, lastLong, long;\n      long = ip2long(this.first);\n      lastLong = ip2long(this.last);\n      index = 0;\n      while (long <= lastLong) {\n        fn(long2ip(long), long, index);\n        index++;\n        long++;\n      }\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n\n    curByteLength += getLength(segment);\n\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    }\n    else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n\n  return string;\n};\n\n","'use strict';\n\nvar truncate = require(\"./lib/truncate\");\nvar getLength = Buffer.byteLength.bind(Buffer);\nmodule.exports = truncate.bind(null, getLength);\n","/*jshint node:true*/\n'use strict';\n\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String | Function }\n * @return {String}         Sanitized filename\n */\n\nvar truncate = require(\"truncate-utf8-bytes\");\n\nvar illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\nvar controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reservedRe = /^\\.+$/;\nvar windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nvar windowsTrailingRe = /[\\. ]+$/;\n\nfunction sanitize(input, replacement) {\n  if (typeof input !== 'string') {\n    throw new Error('Input must be string');\n  }\n  var sanitized = input\n    .replace(illegalRe, replacement)\n    .replace(controlRe, replacement)\n    .replace(reservedRe, replacement)\n    .replace(windowsReservedRe, replacement)\n    .replace(windowsTrailingRe, replacement);\n  return truncate(sanitized, 255);\n}\n\nmodule.exports = function (input, options) {\n  var replacement = (options && options.replacement) || '';\n  var output = sanitize(input, replacement);\n  if (replacement === '') {\n    return output;\n  }\n  return sanitize(output, '');\n};\n","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet flagForceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tflagForceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m') ||\n\t\t\thasFlag('color=full') ||\n\t\t\thasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream, options = {}) {\n\tconst level = supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options\n\t});\n\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel({isTTY: tty.isatty(1)}),\n\tstderr: getSupportLevel({isTTY: tty.isatty(2)})\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EventQueue {\n    constructor() {\n        this.pullQueue = [];\n        this.pushQueue = [];\n        this.eventHandlers = {};\n        this.isPaused = false;\n        this.isStopped = false;\n    }\n    push(value) {\n        if (this.isStopped)\n            return;\n        const resolution = { value, done: false };\n        if (this.pullQueue.length) {\n            const placeholder = this.pullQueue.shift();\n            if (placeholder)\n                placeholder.resolve(resolution);\n        }\n        else {\n            this.pushQueue.push(Promise.resolve(resolution));\n            if (this.highWaterMark !== undefined &&\n                this.pushQueue.length >= this.highWaterMark &&\n                !this.isPaused) {\n                this.isPaused = true;\n                if (this.eventHandlers.highWater) {\n                    this.eventHandlers.highWater();\n                }\n                else if (console) {\n                    console.warn(`EventIterator queue reached ${this.pushQueue.length} items`);\n                }\n            }\n        }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        for (const placeholder of this.pullQueue) {\n            placeholder.resolve({ value: undefined, done: true });\n        }\n        this.pullQueue.length = 0;\n    }\n    fail(error) {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        if (this.pullQueue.length) {\n            for (const placeholder of this.pullQueue) {\n                placeholder.reject(error);\n            }\n            this.pullQueue.length = 0;\n        }\n        else {\n            const rejection = Promise.reject(error);\n            /* Attach error handler to avoid leaking an unhandled promise rejection. */\n            rejection.catch(() => { });\n            this.pushQueue.push(rejection);\n        }\n    }\n    remove() {\n        Promise.resolve().then(() => {\n            if (this.removeCallback)\n                this.removeCallback();\n        });\n    }\n    [Symbol.asyncIterator]() {\n        return {\n            next: (value) => {\n                const result = this.pushQueue.shift();\n                if (result) {\n                    if (this.lowWaterMark !== undefined &&\n                        this.pushQueue.length <= this.lowWaterMark &&\n                        this.isPaused) {\n                        this.isPaused = false;\n                        if (this.eventHandlers.lowWater) {\n                            this.eventHandlers.lowWater();\n                        }\n                    }\n                    return result;\n                }\n                else if (this.isStopped) {\n                    return Promise.resolve({ value: undefined, done: true });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        this.pullQueue.push({ resolve, reject });\n                    });\n                }\n            },\n            return: () => {\n                this.isStopped = true;\n                this.pushQueue.length = 0;\n                this.remove();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n        };\n    }\n}\nclass EventIterator {\n    constructor(listen, { highWaterMark = 100, lowWaterMark = 1 } = {}) {\n        const queue = new EventQueue();\n        queue.highWaterMark = highWaterMark;\n        queue.lowWaterMark = lowWaterMark;\n        queue.removeCallback =\n            listen({\n                push: value => queue.push(value),\n                stop: () => queue.stop(),\n                fail: error => queue.fail(error),\n                on: (event, fn) => {\n                    queue.eventHandlers[event] = fn;\n                },\n            }) || (() => { });\n        this[Symbol.asyncIterator] = () => queue[Symbol.asyncIterator]();\n        Object.freeze(this);\n    }\n}\nexports.EventIterator = EventIterator;\nexports.default = EventIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_iterator_1 = require(\"./event-iterator\");\nexports.EventIterator = event_iterator_1.EventIterator;\nfunction stream(evOptions) {\n    return new event_iterator_1.EventIterator(queue => {\n        this.addListener(\"data\", queue.push);\n        this.addListener(\"end\", queue.stop);\n        this.addListener(\"error\", queue.fail);\n        queue.on(\"highWater\", () => this.pause());\n        queue.on(\"lowWater\", () => this.resume());\n        return () => {\n            this.removeListener(\"data\", queue.push);\n            this.removeListener(\"end\", queue.stop);\n            this.removeListener(\"error\", queue.fail);\n            /* We are no longer interested in any data; attempt to close the stream. */\n            if (this.destroy) {\n                this.destroy();\n            }\n            else if (typeof this.close == \"function\") {\n                ;\n                this.close();\n            }\n        };\n    }, evOptions);\n}\nexports.stream = stream;\nexports.default = event_iterator_1.EventIterator;\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = (function() {\n    function XMLDOMImplementation() {}\n\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\n      return true;\n    };\n\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLDOMImplementation;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = (function() {\n    function XMLDOMErrorHandler() {}\n\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\n      throw new Error(error);\n    };\n\n    return XMLDOMErrorHandler;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    XMLDOMStringList.prototype.item = function(index) {\n      return this.arr[index] || null;\n    };\n\n    XMLDOMStringList.prototype.contains = function(str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n\n    return XMLDOMStringList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  module.exports = XMLDOMConfiguration = (function() {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\n      return true;\n    };\n\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n\n    return XMLDOMConfiguration;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLAttribute.prototype.debugInfo = function(name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLAttribute.prototype.isEqualNode = function(node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    XMLNamedNodeMap.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\n      return this.nodes[name];\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.item = function(index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLNamedNodeMap;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.getAttribute = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttribute = function(name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNode = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.hasAttribute = function(name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.isEqualNode = function(node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCharacterData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCharacterData = (function(superClass) {\n    extend(XMLCharacterData, superClass);\n\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    XMLCharacterData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCharacterData.prototype.substringData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.appendData = function(arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.isEqualNode = function(node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLCharacterData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLComment,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLComment;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLText.prototype.splitText = function(offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLText.prototype.replaceWholeText = function(content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLText;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDummy, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDummy = (function(superClass) {\n    extend(XMLDummy, superClass);\n\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n\n    XMLDummy.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLDummy.prototype.toString = function(options) {\n      return '';\n    };\n\n    return XMLDummy;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    XMLNodeList.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNodeList.prototype.item = function(index) {\n      return this.nodes[index] || null;\n    };\n\n    return XMLNodeList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.name = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n\n    XMLStringifier.prototype.text = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.assertLegalName = function(str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.textEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = require('./Utility').assign;\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocument.prototype.createElement = function(tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createDocumentFragment = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTextNode = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createComment = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createCDATASection = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttribute = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEntityReference = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementById = function(elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.adoptNode = function(source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.normalizeDocument = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEvent = function(eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createRange = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n\n    XMLStreamWriter.prototype.document = function(doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n  if (!Stream) Stream = function () {}\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            if (parser.opt.unparsedEntities) {\n              var parsedEntity = parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n              parser.write(parsedEntity)\n            } else {\n              parser[buffer] += parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n            }\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default: /* istanbul ignore next */ {\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n        }\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, defineProperty, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  defineProperty = function(obj, key, value) {\n    var descriptor;\n    descriptor = Object.create(null);\n    descriptor.value = value;\n    descriptor.writable = true;\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return Object.defineProperty(obj, key, descriptor);\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return defineProperty(obj, key, newValue);\n        } else {\n          return defineProperty(obj, key, [newValue]);\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          defineProperty(obj, key, [obj[key]]);\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                defineProperty(obj[attrkey], processedKey, newValue);\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            if (typeof _this.options.emptyTag === 'function') {\n              obj = _this.options.emptyTag();\n            } else {\n              obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n            }\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                defineProperty(objClone, key, obj[key]);\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              defineProperty(obj, nodeName, old);\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n  exports.parseStringPromise = parser.parseStringPromise;\n\n}).call(this);\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","module.exports = require('./lib/murmurHash3js');\n","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","import {createLibp2p} from \"libp2p\";\r\n\r\nimport { promises as fs } from 'fs';\r\nimport * as path from 'path';\r\n\r\nimport {Libp2p} from 'libp2p';\r\nimport {EventEmitter} from 'events';\r\nimport {tcp} from \"@libp2p/tcp\";\r\nimport {bootstrap} from \"@libp2p/bootstrap\";\r\n\r\nimport {noise} from \"@chainsafe/libp2p-noise\";\r\nimport {yamux} from \"@chainsafe/libp2p-yamux\";\r\nimport {mplex} from \"@libp2p/mplex\";\r\nimport {autoNAT} from \"@libp2p/autonat\";\r\nimport {dcutr} from \"@libp2p/dcutr\";\r\nimport {identify} from \"@libp2p/identify\";\r\nimport * as libp2pInfo from \"libp2p/version\";\r\nimport {keychain} from \"@libp2p/keychain\";\r\nimport {ping} from \"@libp2p/ping\";\r\nimport {kadDHT, removePrivateAddressesMapper} from \"@libp2p/kad-dht\";\r\nimport {ipnsValidator} from \"ipns/validator\";\r\nimport {ipnsSelector} from \"ipns/selector\";\r\nimport {uPnPNAT} from \"@libp2p/upnp-nat\";\r\nimport {createHelia} from \"helia\";\r\nimport {unixfs} from \"@helia/unixfs\";\r\nimport {config} from \"./EnvConfig.js\";\r\n\r\nexport interface Data {\r\n    nodeAddress: string[];\r\n    libp2p: Libp2p\r\n}\r\n\r\nEventEmitter.defaultMaxListeners = 2000; // Or any number that suits your application's needs\r\n\r\nexport async function createConfig<T>(\r\n    additionalServices: any,\r\n    bootstrapAddrList?: string[],\r\n): Promise<T> {\r\n\r\n    bootstrapAddrList = bootstrapAddrList || process.env.BOOTSTRAP?.split(',') || [\"bootstrap\"];\r\n\r\n    //add public network for IPNS support\r\n    bootstrapAddrList.push(\"/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN\");\r\n    bootstrapAddrList.push(\"/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa\");\r\n    bootstrapAddrList.push(\"/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb\");\r\n    bootstrapAddrList.push(\"/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt\");\r\n\r\n    const libp2pOptions: any = {\r\n        connectionEncryption: [\r\n            noise()\r\n        ],\r\n        streamMuxers: [\r\n            yamux(),\r\n            mplex()\r\n        ],\r\n        transports: [\r\n            tcp(),\r\n        ],\r\n        peerDiscovery: [\r\n            bootstrap({\r\n                list: bootstrapAddrList,\r\n                timeout: 0,\r\n            }),\r\n        ],\r\n        services: {\r\n            autoNAT: autoNAT(),\r\n            dcutr: dcutr(),\r\n            identify: identify({\r\n                agentVersion: `${libp2pInfo.name}/${libp2pInfo.version} UserAgent=meta-getaway`\r\n            }),\r\n            keychain: keychain(),\r\n            ping: ping(),\r\n            aminoDHT: kadDHT({\r\n                protocol: '/ipfs/kad/1.0.0',\r\n                peerInfoMapper: removePrivateAddressesMapper,\r\n                clientMode: false,\r\n                validators: {\r\n                    ipns: ipnsValidator\r\n                },\r\n                selectors: {\r\n                    ipns: ipnsSelector\r\n                }\r\n            }),\r\n            upnp: uPnPNAT(),\r\n            ...additionalServices\r\n        }\r\n    }\r\n    return libp2pOptions;\r\n}\r\n\r\nasync function watchIPNS(ipnsName: string) {\r\n    let lastCid: string | null = null;\r\n\r\n    while (true) {\r\n        try {\r\n            const cid = await this.ipfs.name.resolve(ipnsName);\r\n            if (cid !== lastCid) {\r\n                console.log(`IPNS name ${ipnsName} has changed. New CID: ${cid}`);\r\n                lastCid = cid;\r\n            }\r\n        } catch (error) {\r\n            console.error(`Failed to resolve IPNS name ${ipnsName}: ${error}`);\r\n        }\r\n\r\n        // Wait for a while before the next check\r\n        await new Promise(resolve => setTimeout(resolve, 5000));\r\n    }\r\n}\r\n\r\nasync function startGateway() {\r\n    this.libp2p = await createLibp2p(await createConfig({}));\r\n    this.ipfs = await createHelia({libp2p: this.libp2p});\r\n    this.fs = unixfs(this.ipfs);\r\n\r\n    //Download a folder from IPFS (IPNS cid) and move it to the local filesystem\r\n    const cid = config.IPNS; // Replace with your IPNS CID\r\n    const localPath = config.TARGET_FOLDER; // Replace with your local path\r\n\r\n    for await (const file of this.fs.get(cid)) {\r\n        if (file.type === 'file') {\r\n            const filePath = path.join(localPath, file.path);\r\n            await fs.writeFile(filePath, new Uint8Array(file.content));\r\n            console.log(`File ${file.path} has been downloaded to ${filePath}`);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nstartGateway().catch(console.error);\r\n","/**\n * @packageDocumentation\n *\n * A [libp2p transport](https://docs.libp2p.io/concepts/transports/overview/) based on the TCP networking stack.\n *\n * @example\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { tcp } from '@libp2p/tcp'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const node = await createLibp2p({\n *   transports: [\n *     tcp()\n *   ]\n * })\n *\n * const ma = multiaddr('/ip4/123.123.123.123/tcp/1234')\n *\n * // dial a TCP connection, timing out after 10 seconds\n * const connection = await node.dial(ma, {\n *   signal: AbortSignal.timeout(10_000)\n * })\n *\n * // use connection...\n * ```\n */\n\nimport net from 'net'\nimport { AbortError, CodeError, transportSymbol } from '@libp2p/interface'\nimport * as mafmt from '@multiformats/mafmt'\nimport { CODE_CIRCUIT, CODE_P2P, CODE_UNIX } from './constants.js'\nimport { type CloseServerOnMaxConnectionsOpts, TCPListener } from './listener.js'\nimport { toMultiaddrConnection } from './socket-to-conn.js'\nimport { multiaddrToNetConfig } from './utils.js'\nimport type { ComponentLogger, Logger, Connection, CounterGroup, Metrics, CreateListenerOptions, DialOptions, Transport, Listener } from '@libp2p/interface'\nimport type { AbortOptions, Multiaddr } from '@multiformats/multiaddr'\nimport type { Socket, IpcSocketConnectOpts, TcpSocketConnectOpts } from 'net'\n\nexport interface TCPOptions {\n  /**\n   * An optional number in ms that is used as an inactivity timeout after which the socket will be closed\n   */\n  inboundSocketInactivityTimeout?: number\n\n  /**\n   * An optional number in ms that is used as an inactivity timeout after which the socket will be closed\n   */\n  outboundSocketInactivityTimeout?: number\n\n  /**\n   * When closing a socket, wait this long for it to close gracefully before it is closed more forcibly\n   */\n  socketCloseTimeout?: number\n\n  /**\n   * Set this property to reject connections when the server's connection count gets high.\n   * https://nodejs.org/api/net.html#servermaxconnections\n   */\n  maxConnections?: number\n\n  /**\n   * Parameter to specify the maximum length of the queue of pending connections\n   * https://nodejs.org/dist/latest-v18.x/docs/api/net.html#serverlisten\n   */\n  backlog?: number\n\n  /**\n   * Close server (stop listening for new connections) if connections exceed a limit.\n   * Open server (start listening for new connections) if connections fall below a limit.\n   */\n  closeServerOnMaxConnections?: CloseServerOnMaxConnectionsOpts\n\n  /**\n   * Options passed to `net.connect` for every opened TCP socket\n   */\n  dialOpts?: TCPSocketOptions\n\n  /**\n   * Options passed to every `net.createServer` for every TCP server\n   */\n  listenOpts?: TCPSocketOptions\n}\n\n/**\n * Expose a subset of net.connect options\n */\nexport interface TCPSocketOptions extends AbortOptions {\n  /**\n   * @see https://nodejs.org/api/net.html#socketconnectoptions-connectlistener\n   */\n  noDelay?: boolean\n\n  /**\n   * @see https://nodejs.org/api/net.html#socketconnectoptions-connectlistener\n   */\n  keepAlive?: boolean\n\n  /**\n   * @see https://nodejs.org/api/net.html#socketconnectoptions-connectlistener\n   */\n  keepAliveInitialDelay?: number\n\n  /**\n   * @see https://nodejs.org/api/net.html#new-netsocketoptions\n   */\n  allowHalfOpen?: boolean\n}\n\nexport interface TCPDialOptions extends DialOptions, TCPSocketOptions {\n\n}\n\nexport interface TCPCreateListenerOptions extends CreateListenerOptions, TCPSocketOptions {\n\n}\n\nexport interface TCPComponents {\n  metrics?: Metrics\n  logger: ComponentLogger\n}\n\nexport interface TCPMetrics {\n  dialerEvents: CounterGroup\n}\n\nclass TCP implements Transport {\n  private readonly opts: TCPOptions\n  private readonly metrics?: TCPMetrics\n  private readonly components: TCPComponents\n  private readonly log: Logger\n\n  constructor (components: TCPComponents, options: TCPOptions = {}) {\n    this.log = components.logger.forComponent('libp2p:tcp')\n    this.opts = options\n    this.components = components\n\n    if (components.metrics != null) {\n      this.metrics = {\n        dialerEvents: components.metrics.registerCounterGroup('libp2p_tcp_dialer_events_total', {\n          label: 'event',\n          help: 'Total count of TCP dialer events by type'\n        })\n      }\n    }\n  }\n\n  readonly [transportSymbol] = true\n\n  readonly [Symbol.toStringTag] = '@libp2p/tcp'\n\n  async dial (ma: Multiaddr, options: TCPDialOptions): Promise<Connection> {\n    options.keepAlive = options.keepAlive ?? true\n    options.noDelay = options.noDelay ?? true\n\n    // options.signal destroys the socket before 'connect' event\n    const socket = await this._connect(ma, options)\n\n    // Avoid uncaught errors caused by unstable connections\n    socket.on('error', err => {\n      this.log('socket error', err)\n    })\n\n    const maConn = toMultiaddrConnection(socket, {\n      remoteAddr: ma,\n      socketInactivityTimeout: this.opts.outboundSocketInactivityTimeout,\n      socketCloseTimeout: this.opts.socketCloseTimeout,\n      metrics: this.metrics?.dialerEvents,\n      logger: this.components.logger\n    })\n\n    const onAbort = (): void => {\n      maConn.close().catch(err => {\n        this.log.error('Error closing maConn after abort', err)\n      })\n    }\n    options.signal?.addEventListener('abort', onAbort, { once: true })\n\n    this.log('new outbound connection %s', maConn.remoteAddr)\n    const conn = await options.upgrader.upgradeOutbound(maConn)\n    this.log('outbound connection %s upgraded', maConn.remoteAddr)\n\n    options.signal?.removeEventListener('abort', onAbort)\n\n    if (options.signal?.aborted === true) {\n      conn.close().catch(err => {\n        this.log.error('Error closing conn after abort', err)\n      })\n\n      throw new AbortError()\n    }\n\n    return conn\n  }\n\n  async _connect (ma: Multiaddr, options: TCPDialOptions): Promise<Socket> {\n    if (options.signal?.aborted === true) {\n      throw new AbortError()\n    }\n\n    return new Promise<Socket>((resolve, reject) => {\n      const start = Date.now()\n      const cOpts = multiaddrToNetConfig(ma, {\n        ...(this.opts.dialOpts ?? {}),\n        ...options\n      }) as (IpcSocketConnectOpts & TcpSocketConnectOpts)\n\n      this.log('dialing %a', ma)\n      const rawSocket = net.connect(cOpts)\n\n      const onError = (err: Error): void => {\n        const cOptsStr = cOpts.path ?? `${cOpts.host ?? ''}:${cOpts.port}`\n        err.message = `connection error ${cOptsStr}: ${err.message}`\n        this.metrics?.dialerEvents.increment({ error: true })\n\n        done(err)\n      }\n\n      const onTimeout = (): void => {\n        this.log('connection timeout %a', ma)\n        this.metrics?.dialerEvents.increment({ timeout: true })\n\n        const err = new CodeError(`connection timeout after ${Date.now() - start}ms`, 'ERR_CONNECT_TIMEOUT')\n        // Note: this will result in onError() being called\n        rawSocket.emit('error', err)\n      }\n\n      const onConnect = (): void => {\n        this.log('connection opened %a', ma)\n        this.metrics?.dialerEvents.increment({ connect: true })\n        done()\n      }\n\n      const onAbort = (): void => {\n        this.log('connection aborted %a', ma)\n        this.metrics?.dialerEvents.increment({ abort: true })\n        rawSocket.destroy()\n        done(new AbortError())\n      }\n\n      const done = (err?: any): void => {\n        rawSocket.removeListener('error', onError)\n        rawSocket.removeListener('timeout', onTimeout)\n        rawSocket.removeListener('connect', onConnect)\n\n        if (options.signal != null) {\n          options.signal.removeEventListener('abort', onAbort)\n        }\n\n        if (err != null) {\n          reject(err); return\n        }\n\n        resolve(rawSocket)\n      }\n\n      rawSocket.on('error', onError)\n      rawSocket.on('timeout', onTimeout)\n      rawSocket.on('connect', onConnect)\n\n      if (options.signal != null) {\n        options.signal.addEventListener('abort', onAbort)\n      }\n    })\n  }\n\n  /**\n   * Creates a TCP listener. The provided `handler` function will be called\n   * anytime a new incoming Connection has been successfully upgraded via\n   * `upgrader.upgradeInbound`.\n   */\n  createListener (options: TCPCreateListenerOptions): Listener {\n    return new TCPListener({\n      ...(this.opts.listenOpts ?? {}),\n      ...options,\n      maxConnections: this.opts.maxConnections,\n      backlog: this.opts.backlog,\n      closeServerOnMaxConnections: this.opts.closeServerOnMaxConnections,\n      socketInactivityTimeout: this.opts.inboundSocketInactivityTimeout,\n      socketCloseTimeout: this.opts.socketCloseTimeout,\n      metrics: this.components.metrics,\n      logger: this.components.logger\n    })\n  }\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid TCP addresses\n   */\n  filter (multiaddrs: Multiaddr[]): Multiaddr[] {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    return multiaddrs.filter(ma => {\n      if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n        return false\n      }\n\n      if (ma.protoCodes().includes(CODE_UNIX)) {\n        return true\n      }\n\n      return mafmt.TCP.matches(ma.decapsulateCode(CODE_P2P))\n    })\n  }\n}\n\nexport function tcp (init: TCPOptions = {}): (components: TCPComponents) => Transport {\n  return (components: TCPComponents) => {\n    return new TCP(components, init)\n  }\n}\n","import type { RoutingOptions } from '../index.js'\nimport type { PeerInfo } from '../peer-info/index.js'\nimport type { CID } from 'multiformats/cid'\n\n/**\n * Any object that implements this Symbol as a property should return a\n * ContentRouting instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { contentRoutingSymbol, ContentRouting } from '@libp2p/content-routing'\n *\n * class MyContentRouter implements ContentRouting {\n *   get [contentRoutingSymbol] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const contentRoutingSymbol = Symbol.for('@libp2p/content-routing')\n\n/**\n * Implementers of this interface can provide a ContentRouting implementation to\n * interested callers.\n */\nexport interface ContentRoutingProvider {\n  [contentRoutingSymbol]: ContentRouting\n}\n\nexport interface ContentRouting {\n  /**\n   * The implementation of this method should ensure that network peers know the\n   * caller can provide content that corresponds to the passed CID.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * // ...\n   * await contentRouting.provide(cid)\n   * ```\n   */\n  provide(cid: CID, options?: RoutingOptions): Promise<void>\n\n  /**\n   * Find the providers of the passed CID.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * // Iterate over the providers found for the given cid\n   * for await (const provider of contentRouting.findProviders(cid)) {\n   *  console.log(provider.id, provider.multiaddrs)\n   * }\n   * ```\n   */\n  findProviders(cid: CID, options?: RoutingOptions): AsyncIterable<PeerInfo>\n\n  /**\n   * Puts a value corresponding to the passed key in a way that can later be\n   * retrieved by another network peer using the get method.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * // ...\n   * const key = '/key'\n   * const value = uint8ArrayFromString('oh hello there')\n   *\n   * await contentRouting.put(key, value)\n   * ```\n   */\n  put(key: Uint8Array, value: Uint8Array, options?: RoutingOptions): Promise<void>\n\n  /**\n   * Retrieves a value from the network corresponding to the passed key.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * // ...\n   *\n   * const key = '/key'\n   * const value = await contentRouting.get(key)\n   * ```\n   */\n  get(key: Uint8Array, options?: RoutingOptions): Promise<Uint8Array>\n}\n","import type { TypedEventTarget } from '../event-target.js'\nimport type { PeerInfo } from '../peer-info/index.js'\n\n/**\n * Any object that implements this Symbol as a property should return a\n * PeerDiscovery instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { peerDiscovery, PeerDiscovery } from '@libp2p/peer-discovery'\n *\n * class MyPeerDiscoverer implements PeerDiscovery {\n *   get [peerDiscovery] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const peerDiscoverySymbol = Symbol.for('@libp2p/peer-discovery')\n\n/**\n * Implementers of this interface can provide a PeerDiscovery implementation to\n * interested callers.\n */\nexport interface PeerDiscoveryProvider {\n  [peerDiscoverySymbol]: PeerDiscovery\n}\n\nexport interface PeerDiscoveryEvents {\n  'peer': CustomEvent<PeerInfo>\n}\n\nexport interface PeerDiscovery extends TypedEventTarget<PeerDiscoveryEvents> {}\n","import type { CID } from 'multiformats/cid'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\nexport type PeerIdType = 'RSA' | 'Ed25519' | 'secp256k1'\n\ninterface BasePeerId {\n  readonly type: PeerIdType\n  readonly multihash: MultihashDigest\n  readonly privateKey?: Uint8Array\n  readonly publicKey?: Uint8Array\n\n  toString(): string\n  toCID(): CID\n  toBytes(): Uint8Array\n  equals(other?: PeerId | Uint8Array | string): boolean\n}\n\nexport interface RSAPeerId extends BasePeerId {\n  readonly type: 'RSA'\n  readonly publicKey?: Uint8Array\n}\n\nexport interface Ed25519PeerId extends BasePeerId {\n  readonly type: 'Ed25519'\n  readonly publicKey: Uint8Array\n}\n\nexport interface Secp256k1PeerId extends BasePeerId {\n  readonly type: 'secp256k1'\n  readonly publicKey: Uint8Array\n}\n\nexport type PeerId = RSAPeerId | Ed25519PeerId | Secp256k1PeerId\n\nexport const peerIdSymbol = Symbol.for('@libp2p/peer-id')\n\nexport function isPeerId (other: any): other is PeerId {\n  return other != null && Boolean(other[peerIdSymbol])\n}\n","import type { RoutingOptions } from '../index.js'\nimport type { PeerId } from '../peer-id/index.js'\nimport type { PeerInfo } from '../peer-info/index.js'\n\n/**\n * Any object that implements this Symbol as a property should return a\n * PeerRouting instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```TypeScript\n * import { peerRouting, PeerRouting } from '@libp2p/peer-routing'\n *\n * class MyPeerRouter implements PeerRouting {\n *   get [peerRouting] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const peerRoutingSymbol = Symbol.for('@libp2p/peer-routing')\n\n/**\n * Implementers of this interface can provide a PeerRouting implementation to\n * interested callers.\n */\nexport interface PeerRoutingProvider {\n  [peerRoutingSymbol]: PeerRouting\n}\n\nexport interface PeerRouting {\n  /**\n   * Searches the network for peer info corresponding to the passed peer id.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * // ...\n   * const peer = await peerRouting.findPeer(peerId, options)\n   * ```\n   */\n  findPeer(peerId: PeerId, options?: RoutingOptions): Promise<PeerInfo>\n\n  /**\n   * Search the network for peers that are closer to the passed key. Peer\n   * info should be yielded in ever-increasing closeness to the key.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * // Iterate over the closest peers found for the given key\n   * for await (const peer of peerRouting.getClosestPeers(key)) {\n   *   console.log(peer.id, peer.multiaddrs)\n   * }\n   * ```\n   */\n  getClosestPeers(key: Uint8Array, options?: RoutingOptions): AsyncIterable<PeerInfo>\n}\n","import type { Connection, MultiaddrConnection } from '../connection/index.js'\nimport type { TypedEventTarget } from '../event-target.js'\nimport type { AbortOptions } from '../index.js'\nimport type { StreamMuxerFactory } from '../stream-muxer/index.js'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface ListenerEvents {\n  'connection': CustomEvent<Connection>\n  'listening': CustomEvent\n  'error': CustomEvent<Error>\n  'close': CustomEvent\n}\n\nexport interface Listener extends TypedEventTarget<ListenerEvents> {\n  /**\n   * Start a listener\n   */\n  listen(multiaddr: Multiaddr): Promise<void>\n  /**\n   * Get listen addresses\n   */\n  getAddrs(): Multiaddr[]\n  /**\n   * Close listener\n   *\n   * @returns {Promise<void>}\n   */\n  close(): Promise<void>\n}\n\nexport const transportSymbol = Symbol.for('@libp2p/transport')\n\nexport interface ConnectionHandler { (connection: Connection): void }\n\nexport interface MultiaddrFilter { (multiaddrs: Multiaddr[]): Multiaddr[] }\n\nexport interface CreateListenerOptions {\n  handler?: ConnectionHandler\n  upgrader: Upgrader\n}\n\nexport interface DialOptions extends AbortOptions {\n  upgrader: Upgrader\n}\n\n/**\n * A libp2p transport is understood as something that offers a dial and listen interface to establish connections.\n */\nexport interface Transport {\n  /**\n   * Used to identify the transport\n   */\n  [Symbol.toStringTag]: string\n\n  /**\n   * Used by the isTransport function\n   */\n  [transportSymbol]: true\n\n  /**\n   * Dial a given multiaddr.\n   */\n  dial(ma: Multiaddr, options: DialOptions): Promise<Connection>\n\n  /**\n   * Create transport listeners.\n   */\n  createListener(options: CreateListenerOptions): Listener\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid addresses for the transport\n   */\n  filter: MultiaddrFilter\n}\n\nexport function isTransport (other: any): other is Transport {\n  return other != null && Boolean(other[transportSymbol])\n}\n\n/**\n * Enum Transport Manager Fault Tolerance values\n */\nexport enum FaultTolerance {\n  /**\n   * should be used for failing in any listen circumstance\n   */\n  FATAL_ALL = 0,\n\n  /**\n   * should be used for not failing when not listening\n   */\n  NO_FATAL\n}\n\nexport interface UpgraderOptions {\n  skipEncryption?: boolean\n  skipProtection?: boolean\n  muxerFactory?: StreamMuxerFactory\n\n  /**\n   * The passed MultiaddrConnection has limits place on duration and/or data\n   * transfer amounts so is not expected to be open for very long.\n   */\n  transient?: boolean\n}\n\nexport interface Upgrader {\n  /**\n   * Upgrades an outbound connection on `transport.dial`.\n   */\n  upgradeOutbound(maConn: MultiaddrConnection, opts?: UpgraderOptions): Promise<Connection>\n\n  /**\n   * Upgrades an inbound connection on transport listener.\n   */\n  upgradeInbound(maConn: MultiaddrConnection, opts?: UpgraderOptions): Promise<Connection>\n}\n","/**\n * When this error is thrown it means an operation was aborted,\n * usually in response to the `abort` event being emitted by an\n * AbortSignal.\n */\nexport class AbortError extends Error {\n  public readonly code: string\n  public readonly type: string\n\n  constructor (message: string = 'The operation was aborted') {\n    super(message)\n    this.name = 'AbortError'\n    this.code = AbortError.code\n    this.type = AbortError.type\n  }\n\n  static readonly code = 'ABORT_ERR'\n\n  static readonly type = 'aborted'\n}\n\nexport class CodeError<T extends Record<string, any> = Record<string, never>> extends Error {\n  public readonly props: T\n\n  constructor (\n    message: string,\n    public readonly code: string,\n    props?: T\n  ) {\n    super(message)\n\n    this.name = props?.name ?? 'CodeError'\n    this.props = props ?? {} as T // eslint-disable-line @typescript-eslint/consistent-type-assertions\n  }\n}\n\nexport class AggregateCodeError<T extends Record<string, any> = Record<string, never>> extends AggregateError {\n  public readonly props: T\n\n  constructor (\n    errors: Error[],\n    message: string,\n    public readonly code: string,\n    props?: T\n  ) {\n    super(errors, message)\n\n    this.name = props?.name ?? 'AggregateCodeError'\n    this.props = props ?? {} as T // eslint-disable-line @typescript-eslint/consistent-type-assertions\n  }\n}\n\nexport class UnexpectedPeerError extends Error {\n  public code: string\n\n  constructor (message = 'Unexpected Peer') {\n    super(message)\n    this.name = 'UnexpectedPeerError'\n    this.code = UnexpectedPeerError.code\n  }\n\n  static readonly code = 'ERR_UNEXPECTED_PEER'\n}\n\nexport class InvalidCryptoExchangeError extends Error {\n  public code: string\n\n  constructor (message = 'Invalid crypto exchange') {\n    super(message)\n    this.name = 'InvalidCryptoExchangeError'\n    this.code = InvalidCryptoExchangeError.code\n  }\n\n  static readonly code = 'ERR_INVALID_CRYPTO_EXCHANGE'\n}\n\nexport class InvalidCryptoTransmissionError extends Error {\n  public code: string\n\n  constructor (message = 'Invalid crypto transmission') {\n    super(message)\n    this.name = 'InvalidCryptoTransmissionError'\n    this.code = InvalidCryptoTransmissionError.code\n  }\n\n  static readonly code = 'ERR_INVALID_CRYPTO_TRANSMISSION'\n}\n\n// Error codes\n\nexport const ERR_TIMEOUT = 'ERR_TIMEOUT'\nexport const ERR_INVALID_PARAMETERS = 'ERR_INVALID_PARAMETERS'\nexport const ERR_NOT_FOUND = 'ERR_NOT_FOUND'\nexport const ERR_INVALID_MESSAGE = 'ERR_INVALID_MESSAGE'\n","import { setMaxListeners as nodeSetMaxListeners } from 'events'\n\n// create a setMaxListeners that doesn't break browser usage\nexport const setMaxListeners: typeof nodeSetMaxListeners = (n, ...eventTargets) => {\n  try {\n    nodeSetMaxListeners(n, ...eventTargets)\n  } catch {\n    // swallow error, gulp\n  }\n}\n","import { setMaxListeners } from './events.js'\n\nexport interface EventCallback<EventType> { (evt: EventType): void }\nexport interface EventObject<EventType> { handleEvent: EventCallback<EventType> }\nexport type EventHandler<EventType> = EventCallback<EventType> | EventObject<EventType>\n\ninterface Listener {\n  once: boolean\n  callback: any\n}\n\n/**\n * Adds types to the EventTarget class. Hopefully this won't be necessary forever.\n *\n * https://github.com/microsoft/TypeScript/issues/28357\n * https://github.com/microsoft/TypeScript/issues/43477\n * https://github.com/microsoft/TypeScript/issues/299\n * etc\n */\nexport interface TypedEventTarget <EventMap extends Record<string, any>> extends EventTarget {\n  addEventListener<K extends keyof EventMap>(type: K, listener: EventHandler<EventMap[K]> | null, options?: boolean | AddEventListenerOptions): void\n\n  listenerCount (type: string): number\n\n  removeEventListener<K extends keyof EventMap>(type: K, listener?: EventHandler<EventMap[K]> | null, options?: boolean | EventListenerOptions): void\n\n  removeEventListener (type: string, listener?: EventHandler<Event>, options?: boolean | EventListenerOptions): void\n\n  safeDispatchEvent<Detail>(type: keyof EventMap, detail: CustomEventInit<Detail>): boolean\n}\n\n/**\n * An implementation of a typed event target\n * etc\n */\nexport class TypedEventEmitter<EventMap extends Record<string, any>> extends EventTarget implements TypedEventTarget<EventMap> {\n  #listeners = new Map<any, Listener[]>()\n\n  constructor () {\n    super()\n\n    // silence MaxListenersExceededWarning warning on Node.js, this is a red\n    // herring almost all of the time\n    setMaxListeners(Infinity, this)\n  }\n\n  listenerCount (type: string): number {\n    const listeners = this.#listeners.get(type)\n\n    if (listeners == null) {\n      return 0\n    }\n\n    return listeners.length\n  }\n\n  addEventListener<K extends keyof EventMap>(type: K, listener: EventHandler<EventMap[K]> | null, options?: boolean | AddEventListenerOptions): void\n  addEventListener (type: string, listener: EventHandler<Event>, options?: boolean | AddEventListenerOptions): void {\n    super.addEventListener(type, listener, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      list = []\n      this.#listeners.set(type, list)\n    }\n\n    list.push({\n      callback: listener,\n      once: (options !== true && options !== false && options?.once) ?? false\n    })\n  }\n\n  removeEventListener<K extends keyof EventMap>(type: K, listener?: EventHandler<EventMap[K]> | null, options?: boolean | EventListenerOptions): void\n  removeEventListener (type: string, listener?: EventHandler<Event>, options?: boolean | EventListenerOptions): void {\n    super.removeEventListener(type.toString(), listener ?? null, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      return\n    }\n\n    list = list.filter(({ callback }) => callback !== listener)\n    this.#listeners.set(type, list)\n  }\n\n  dispatchEvent (event: Event): boolean {\n    const result = super.dispatchEvent(event)\n\n    let list = this.#listeners.get(event.type)\n\n    if (list == null) {\n      return result\n    }\n\n    list = list.filter(({ once }) => !once)\n    this.#listeners.set(event.type, list)\n\n    return result\n  }\n\n  safeDispatchEvent<Detail>(type: keyof EventMap, detail: CustomEventInit<Detail> = {}): boolean {\n    return this.dispatchEvent(new CustomEvent<Detail>(type as string, detail))\n  }\n}\n\n/**\n * CustomEvent is a standard event but it's not supported by node.\n *\n * Remove this when https://github.com/nodejs/node/issues/40678 is closed.\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n */\nclass CustomEventPolyfill<T = any> extends Event {\n  /** Returns any custom data event was created with. Typically used for synthetic events. */\n  public detail: T\n\n  constructor (message: string, data?: EventInit & { detail: T }) {\n    super(message, data)\n    // @ts-expect-error could be undefined\n    this.detail = data?.detail\n  }\n}\n\nexport const CustomEvent = globalThis.CustomEvent ?? CustomEventPolyfill\n","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\n\nimport { CodeError } from '@libp2p/interface'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { CID } from 'multiformats/cid'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { bytesToMultiaddrParts, stringToMultiaddrParts, type MultiaddrParts, tuplesToBytes } from './codec.js'\nimport { getProtocol, names } from './protocols-table.js'\nimport { isMultiaddr, multiaddr, resolvers } from './index.js'\nimport type { MultiaddrInput, Multiaddr as MultiaddrInterface, MultiaddrObject, Protocol, StringTuple, Tuple, NodeAddress, ResolveOptions } from './index.js'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\nexport const symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr')\n\nconst DNS_CODES = [\n  getProtocol('dns').code,\n  getProtocol('dns4').code,\n  getProtocol('dns6').code,\n  getProtocol('dnsaddr').code\n]\n\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nexport class Multiaddr implements MultiaddrInterface {\n  public bytes: Uint8Array\n  #string: string\n  #tuples: Tuple[]\n  #stringTuples: StringTuple[]\n  #path: string | null\n\n  [symbol]: boolean = true\n\n  constructor (addr?: MultiaddrInput) {\n    // default\n    if (addr == null) {\n      addr = ''\n    }\n\n    let parts: MultiaddrParts\n    if (addr instanceof Uint8Array) {\n      parts = bytesToMultiaddrParts(addr)\n    } else if (typeof addr === 'string') {\n      if (addr.length > 0 && addr.charAt(0) !== '/') {\n        throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n      }\n      parts = stringToMultiaddrParts(addr)\n    } else if (isMultiaddr(addr)) { // Multiaddr\n      parts = bytesToMultiaddrParts(addr.bytes)\n    } else {\n      throw new Error('addr must be a string, Buffer, or another Multiaddr')\n    }\n\n    this.bytes = parts.bytes\n    this.#string = parts.string\n    this.#tuples = parts.tuples\n    this.#stringTuples = parts.stringTuples\n    this.#path = parts.path\n  }\n\n  toString (): string {\n    return this.#string\n  }\n\n  toJSON (): string {\n    return this.toString()\n  }\n\n  toOptions (): MultiaddrObject {\n    let family: 4 | 6 | undefined\n    let transport: string | undefined\n    let host: string | undefined\n    let port: number | undefined\n    let zone = ''\n\n    const tcp = getProtocol('tcp')\n    const udp = getProtocol('udp')\n    const ip4 = getProtocol('ip4')\n    const ip6 = getProtocol('ip6')\n    const dns6 = getProtocol('dns6')\n    const ip6zone = getProtocol('ip6zone')\n\n    for (const [code, value] of this.stringTuples()) {\n      if (code === ip6zone.code) {\n        zone = `%${value ?? ''}`\n      }\n\n      // default to https when protocol & port are omitted from DNS addrs\n      if (DNS_CODES.includes(code)) {\n        transport = tcp.name\n        port = 443\n        host = `${value ?? ''}${zone}`\n        family = code === dns6.code ? 6 : 4\n      }\n\n      if (code === tcp.code || code === udp.code) {\n        transport = getProtocol(code).name\n        port = parseInt(value ?? '')\n      }\n\n      if (code === ip4.code || code === ip6.code) {\n        transport = getProtocol(code).name\n        host = `${value ?? ''}${zone}`\n        family = code === ip6.code ? 6 : 4\n      }\n    }\n\n    if (family == null || transport == null || host == null || port == null) {\n      throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".')\n    }\n\n    const opts: MultiaddrObject = {\n      family,\n      host,\n      transport,\n      port\n    }\n\n    return opts\n  }\n\n  protos (): Protocol[] {\n    return this.#tuples.map(([code]) => Object.assign({}, getProtocol(code)))\n  }\n\n  protoCodes (): number[] {\n    return this.#tuples.map(([code]) => code)\n  }\n\n  protoNames (): string[] {\n    return this.#tuples.map(([code]) => getProtocol(code).name)\n  }\n\n  tuples (): Array<[number, Uint8Array?]> {\n    return this.#tuples\n  }\n\n  stringTuples (): Array<[number, string?]> {\n    return this.#stringTuples\n  }\n\n  encapsulate (addr: MultiaddrInput): Multiaddr {\n    addr = new Multiaddr(addr)\n    return new Multiaddr(this.toString() + addr.toString())\n  }\n\n  decapsulate (addr: Multiaddr | string): Multiaddr {\n    const addrString = addr.toString()\n    const s = this.toString()\n    const i = s.lastIndexOf(addrString)\n    if (i < 0) {\n      throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`)\n    }\n    return new Multiaddr(s.slice(0, i))\n  }\n\n  decapsulateCode (code: number): Multiaddr {\n    const tuples = this.tuples()\n    for (let i = tuples.length - 1; i >= 0; i--) {\n      if (tuples[i][0] === code) {\n        return new Multiaddr(tuplesToBytes(tuples.slice(0, i)))\n      }\n    }\n    return this\n  }\n\n  getPeerId (): string | null {\n    try {\n      let tuples: Array<[number, string | undefined]> = []\n\n      this.stringTuples().forEach(([code, name]) => {\n        if (code === names.p2p.code) {\n          tuples.push([code, name])\n        }\n\n        // if this is a p2p-circuit address, return the target peer id if present\n        // not the peer id of the relay\n        if (code === names['p2p-circuit'].code) {\n          tuples = []\n        }\n      })\n\n      // Get the last ipfs tuple ['p2p', 'peerid string']\n      const tuple = tuples.pop()\n      if (tuple?.[1] != null) {\n        const peerIdStr = tuple[1]\n\n        // peer id is base58btc encoded string but not multibase encoded so add the `z`\n        // prefix so we can validate that it is correctly encoded\n        if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n          return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc')\n        }\n\n        // try to parse peer id as CID\n        return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc')\n      }\n\n      return null\n    } catch (e) {\n      return null\n    }\n  }\n\n  getPath (): string | null {\n    return this.#path\n  }\n\n  equals (addr: { bytes: Uint8Array }): boolean {\n    return uint8ArrayEquals(this.bytes, addr.bytes)\n  }\n\n  async resolve (options?: ResolveOptions): Promise<MultiaddrInterface[]> {\n    const resolvableProto = this.protos().find((p) => p.resolvable)\n\n    // Multiaddr is not resolvable?\n    if (resolvableProto == null) {\n      return [this]\n    }\n\n    const resolver = resolvers.get(resolvableProto.name)\n    if (resolver == null) {\n      throw new CodeError(`no available resolver for ${resolvableProto.name}`, 'ERR_NO_AVAILABLE_RESOLVER')\n    }\n\n    const result = await resolver(this, options)\n\n    return result.map(str => multiaddr(str))\n  }\n\n  nodeAddress (): NodeAddress {\n    const options = this.toOptions()\n\n    if (options.transport !== 'tcp' && options.transport !== 'udp') {\n      throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`)\n    }\n\n    return {\n      family: options.family,\n      address: options.host,\n      port: options.port\n    }\n  }\n\n  isThinWaistAddress (addr?: Multiaddr): boolean {\n    const protos = (addr ?? this).protos()\n\n    if (protos.length !== 2) {\n      return false\n    }\n\n    if (protos[0].code !== 4 && protos[0].code !== 41) {\n      return false\n    }\n    if (protos[1].code !== 6 && protos[1].code !== 273) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string\n   * https://nodejs.org/api/util.html#utilinspectcustom\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n   * ```\n   */\n  [inspect] (): string {\n    return `Multiaddr(${this.#string})`\n  }\n}\n","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals (a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { Buffer } from 'node:buffer'\nimport bases, { type SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString (array: Uint8Array, encoding: SupportedEncodings = 'utf8'): string {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8')\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n","import { bases } from 'multiformats/basics'\nimport type { MultibaseCodec } from 'multiformats'\nimport { allocUnsafe } from '#alloc'\n\nfunction createCodec (name: string, prefix: string, encode: (buf: Uint8Array) => string, decode: (str: string) => Uint8Array): MultibaseCodec<any> {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = allocUnsafe(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\nexport type SupportedEncodings = 'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof typeof bases\n\nconst BASES: Record<SupportedEncodings, MultibaseCodec<any>> = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii,\n  binary: ascii,\n\n  ...bases\n}\n\nexport default BASES\n","import { Buffer } from 'node:buffer'\nimport { asUint8Array } from '#util/as-uint8array'\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc (size: number = 0): Uint8Array {\n  return asUint8Array(Buffer.alloc(size))\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe (size: number = 0): Uint8Array {\n  return asUint8Array(Buffer.allocUnsafe(size))\n}\n","/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array (buf: Uint8Array): Uint8Array {\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n","/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst N1 = Math.pow(2, 7)\nconst N2 = Math.pow(2, 14)\nconst N3 = Math.pow(2, 21)\nconst N4 = Math.pow(2, 28)\nconst N5 = Math.pow(2, 35)\nconst N6 = Math.pow(2, 42)\nconst N7 = Math.pow(2, 49)\n\n/** Most significant bit of a byte */\nconst MSB = 0x80\n/** Rest of the bits in a byte */\nconst REST = 0x7f\n\nexport function encodingLength (value: number): number {\n  if (value < N1) {\n    return 1\n  }\n\n  if (value < N2) {\n    return 2\n  }\n\n  if (value < N3) {\n    return 3\n  }\n\n  if (value < N4) {\n    return 4\n  }\n\n  if (value < N5) {\n    return 5\n  }\n\n  if (value < N6) {\n    return 6\n  }\n\n  if (value < N7) {\n    return 7\n  }\n\n  if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n    throw new RangeError('Could not encode varint')\n  }\n\n  return 8\n}\n\nexport function encodeUint8Array (value: number, buf: Uint8Array, offset: number = 0): Uint8Array {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 7: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 6: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 5: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 4: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 3: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 2: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 1: {\n      buf[offset++] = (value & 0xFF)\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function encodeUint8ArrayList (value: number, buf: Uint8ArrayList, offset: number = 0): Uint8ArrayList {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 7: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 6: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 5: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 4: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 3: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 2: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 1: {\n      buf.set(offset++, (value & 0xFF))\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function decodeUint8Array (buf: Uint8Array, offset: number): number {\n  let b = buf[offset]\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 1]\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 2]\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 3]\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 4]\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 5]\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 6]\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 7]\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function decodeUint8ArrayList (buf: Uint8ArrayList, offset: number): number {\n  let b = buf.get(offset)\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 1)\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 2)\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 3)\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 4)\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 5)\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 6)\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 7)\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function encode (value: number): Uint8Array\nexport function encode (value: number, buf: Uint8Array, offset?: number): Uint8Array\nexport function encode (value: number, buf: Uint8ArrayList, offset?: number): Uint8ArrayList\nexport function encode <T extends Uint8Array | Uint8ArrayList = Uint8Array> (value: number, buf?: T, offset: number = 0): T {\n  if (buf == null) {\n    buf = allocUnsafe(encodingLength(value)) as T\n  }\n  if (buf instanceof Uint8Array) {\n    return encodeUint8Array(value, buf, offset) as T\n  } else {\n    return encodeUint8ArrayList(value, buf, offset) as T\n  }\n}\n\nexport function decode (buf: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n  if (buf instanceof Uint8Array) {\n    return decodeUint8Array(buf, offset)\n  } else {\n    return decodeUint8ArrayList(buf, offset)\n  }\n}\n","import { Buffer } from 'node:buffer'\nimport { asUint8Array } from '#util/as-uint8array'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nexport function concat (arrays: Uint8Array[], length?: number): Uint8Array {\n  return asUint8Array(Buffer.concat(arrays, length))\n}\n",null,null,"import { parseIP } from \"@chainsafe/is-ip/parse\";\nimport { allFF, deepEqual } from \"./util.js\";\n\nexport const IPv4Len = 4;\nexport const IPv6Len = 16;\n\nexport const maxIPv6Octet = parseInt(\"0xFFFF\", 16);\nexport const ipv4Prefix = new Uint8Array([\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,\n]);\n\nexport interface IpNetRaw {\n  network: Uint8Array;\n  mask: Uint8Array;\n}\n\nexport function maskIp(ip: Uint8Array, mask: Uint8Array): Uint8Array {\n  if (mask.length === IPv6Len && ip.length === IPv4Len && allFF(mask, 0, 11)) {\n    mask = mask.slice(12);\n  }\n  if (\n    mask.length === IPv4Len &&\n    ip.length === IPv6Len &&\n    deepEqual(ip, ipv4Prefix, 0, 11)\n  ) {\n    ip = ip.slice(12);\n  }\n  const n = ip.length;\n  if (n != mask.length) {\n    throw new Error(\"Failed to mask ip\");\n  }\n  const out = new Uint8Array(n);\n  for (let i = 0; i < n; i++) {\n    out[i] = ip[i] & mask[i];\n  }\n  return out;\n}\n\nexport function containsIp(\n  net: IpNetRaw,\n  ip: Uint8Array | number[] | string\n): boolean {\n  if (typeof ip === \"string\") {\n    ip = parseIP(ip)!;\n  }\n  if (ip == null) throw new Error(\"Invalid ip\");\n  if (ip.length !== net.network.length) {\n    return false;\n  }\n  for (let i = 0; i < ip.length; i++) {\n    if ((net.network[i] & net.mask[i]) !== (ip[i] & net.mask[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function iPv4FromIPv6(ip: Uint8Array): Uint8Array {\n  if (!isIPv4mappedIPv6(ip)) {\n    throw new Error(\"Must have 0xffff prefix\");\n  }\n  return ip.slice(12);\n}\n\nexport function isIPv4mappedIPv6(ip: Uint8Array | number[]): boolean {\n  return deepEqual(ip, ipv4Prefix, 0, 11);\n}\n","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\n\nimport { IpNet } from '@chainsafe/netmask'\nimport { base32 } from 'multiformats/bases/base32'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { bases } from 'multiformats/basics'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport * as varint from 'uint8-varint'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport * as ip from './ip.js'\nimport { getProtocol } from './protocols-table.js'\nimport type { Multiaddr } from './index.js'\n\nconst ip4Protocol = getProtocol('ip4')\nconst ip6Protocol = getProtocol('ip6')\nconst ipcidrProtocol = getProtocol('ipcidr')\n\n/**\n * converts (serializes) addresses\n */\nexport function convert (proto: string, a: string): Uint8Array\nexport function convert (proto: string, a: Uint8Array): string\nexport function convert (proto: string, a: string | Uint8Array): Uint8Array | string {\n  if (a instanceof Uint8Array) {\n    return convertToString(proto, a)\n  } else {\n    return convertToBytes(proto, a)\n  }\n}\n\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString (proto: number | string, buf: Uint8Array): string {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n    case 42: // ipv6zone\n      return bytes2str(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf).toString()\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 449: // sni\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    case 466: // certhash\n      return bytes2mb(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nexport function convertToBytes (proto: string | number, str: string): Uint8Array {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n    case 42: // ipv6zone\n      return str2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 449: // sni\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    case 466: // certhash\n      return mb2bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\nexport function convertToIpNet (multiaddr: Multiaddr): IpNet {\n  let mask: string | undefined\n  let addr: string | undefined\n  multiaddr.stringTuples().forEach(([code, value]) => {\n    if (code === ip4Protocol.code || code === ip6Protocol.code) {\n      addr = value\n    }\n    if (code === ipcidrProtocol.code) {\n      mask = value\n    }\n  })\n  if (mask == null || addr == null) {\n    throw new Error('Invalid multiaddr')\n  }\n  return new IpNet(addr, mask)\n}\n\nconst decoders = Object.values(bases).map((c) => c.decoder)\nconst anybaseDecoder = (function () {\n  let acc = decoders[0].or(decoders[1])\n  decoders.slice(2).forEach((d) => (acc = acc.or(d)))\n  return acc\n})()\n\nfunction ip2bytes (ipString: string): Uint8Array {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBytes(ipString)\n}\n\nfunction bytes2ip (ipBuff: Uint8Array): string {\n  const ipString = ip.toString(ipBuff, 0, ipBuff.length)\n  if (ipString == null) {\n    throw new Error('ipBuff is required')\n  }\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\nfunction port2bytes (port: number): Uint8Array {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\nfunction bytes2port (buf: Uint8Array): number {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(buf.byteOffset)\n}\n\nfunction str2bytes (str: string): Uint8Array {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\nfunction bytes2str (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.encodingLength(size))\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\nfunction mh2bytes (hash: string): Uint8Array {\n  let mh\n\n  if (hash[0] === 'Q' || hash[0] === '1') {\n    mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes\n  } else {\n    mh = CID.parse(hash).multihash.bytes\n  }\n\n  // the address is a varint prefixed multihash string representation\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\nfunction mb2bytes (mbstr: string): Uint8Array {\n  const mb = anybaseDecoder.decode(mbstr)\n  const size = Uint8Array.from(varint.encode(mb.length))\n  return uint8ArrayConcat([size, mb], size.length + mb.length)\n}\nfunction bytes2mb (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  const hash = buf.slice(varint.encodingLength(size))\n\n  if (hash.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return 'u' + uint8ArrayToString(hash, 'base64url')\n}\n\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.encodingLength(size))\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\nfunction onion2bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 16) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`)\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction onion32bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 56) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`)\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode(`b${addr[0]}`)\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction bytes2onion (buf: Uint8Array): string {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return `${addr}:${port}`\n}\n","import { Buffer } from 'node:buffer'\nimport bases, { type SupportedEncodings } from './util/bases.js'\nimport { asUint8Array } from '#util/as-uint8array'\n\nexport type { SupportedEncodings }\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString (string: string, encoding: SupportedEncodings = 'utf8'): Uint8Array {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return asUint8Array(Buffer.from(string, 'utf-8'))\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n",null,"import { isIPv4, isIPv6 } from '@chainsafe/is-ip'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nexport { isIP } from '@chainsafe/is-ip'\nexport const isV4 = isIPv4\nexport const isV6 = isIPv6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip: string): Uint8Array {\n  let offset = 0\n  ip = ip.toString().trim()\n\n  if (isV4(ip)) {\n    const bytes = new Uint8Array(offset + 4)\n\n    ip.split(/\\./g).forEach((byte) => {\n      bytes[offset++] = parseInt(byte, 10) & 0xff\n    })\n\n    return bytes\n  }\n\n  if (isV6(ip)) {\n    const sections = ip.split(':', 8)\n\n    let i\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = isV4(sections[i])\n      let v4Buffer: Uint8Array | undefined\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i])\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\n      }\n\n      if (v4Buffer != null && ++i < 8) {\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv: [number, number, ...string[]] = [i, 1]\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    const bytes = new Uint8Array(offset + 16)\n\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16)\n      bytes[offset++] = (word >> 8) & 0xff\n      bytes[offset++] = word & 0xff\n    }\n\n    return bytes\n  }\n\n  throw new Error('invalid ip address')\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf: Uint8Array, offset: number = 0, length?: number): string {\n  offset = ~~offset\n  length = length ?? (buf.length - offset)\n\n  const view = new DataView(buf.buffer)\n\n  if (length === 4) {\n    const result = []\n\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buf[offset + i])\n    }\n\n    return result.join('.')\n  }\n\n  if (length === 16) {\n    const result = []\n\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(view.getUint16(offset + i).toString(16))\n    }\n\n    return result.join(':')\n      .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n      .replace(/:{3,4}/, '::')\n  }\n\n  return ''\n}\n","import type { Protocol } from './index.js'\n\nconst V = -1\nexport const names: Record<string, Protocol> = {}\nexport const codes: Record<number, Protocol> = {}\n\nexport const table: Array<[number, number, string, boolean?, boolean?]> = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [43, 8, 'ipcidr'],\n  [53, V, 'dns', true],\n  [54, V, 'dns4', true],\n  [55, V, 'dns6', true],\n  [56, V, 'dnsaddr', true],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [280, 0, 'webrtc-direct'],\n  [281, 0, 'webrtc'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, true],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [448, 0, 'tls'],\n  [449, V, 'sni'],\n  [460, 0, 'quic'],\n  [461, 0, 'quic-v1'],\n  [465, 0, 'webtransport'],\n  [466, V, 'certhash'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\n// populate tables\ntable.forEach(row => {\n  const proto = createProtocol(...row)\n  codes[proto.code] = proto\n  names[proto.name] = proto\n})\n\nexport function createProtocol (code: number, size: number, name: string, resolvable?: any, path?: any): Protocol {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol (proto: number | string): Protocol {\n  if (typeof proto === 'number') {\n    if (codes[proto] != null) {\n      return codes[proto]\n    }\n\n    throw new Error(`no protocol with code: ${proto}`)\n  } else if (typeof proto === 'string') {\n    if (names[proto] != null) {\n      return names[proto]\n    }\n\n    throw new Error(`no protocol with name: ${proto}`)\n  }\n\n  throw new Error(`invalid protocol id type: ${typeof proto}`)\n}\n","import * as varint from 'uint8-varint'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { convertToBytes, convertToString } from './convert.js'\nimport { getProtocol } from './protocols-table.js'\nimport type { StringTuple, Tuple, Protocol } from './index.js'\n\nexport interface MultiaddrParts {\n  bytes: Uint8Array\n  string: string\n  tuples: Tuple[]\n  stringTuples: StringTuple[]\n  path: string | null\n}\n\nexport function stringToMultiaddrParts (str: string): MultiaddrParts {\n  str = cleanPath(str)\n  const tuples: Tuple[] = []\n  const stringTuples: StringTuple[] = []\n  let path: string | null = null\n\n  const parts = str.split('/').slice(1)\n  if (parts.length === 1 && parts[0] === '') {\n    return {\n      bytes: new Uint8Array(),\n      string: '/',\n      tuples: [],\n      stringTuples: [],\n      path: null\n    }\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = getProtocol(part)\n\n    if (proto.size === 0) {\n      tuples.push([proto.code])\n      stringTuples.push([proto.code])\n      // eslint-disable-next-line no-continue\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path === true) {\n      // should we need to check each path part to see if it's a proto?\n      // This would allow for other protocols to be added after a unix path,\n      // however it would have issues if the path had a protocol name in the path\n      path = cleanPath(parts.slice(p).join('/'))\n      tuples.push([proto.code, convertToBytes(proto.code, path)])\n      stringTuples.push([proto.code, path])\n      break\n    }\n\n    const bytes = convertToBytes(proto.code, parts[p])\n    tuples.push([proto.code, bytes])\n    stringTuples.push([proto.code, convertToString(proto.code, bytes)])\n  }\n\n  return {\n    string: stringTuplesToString(stringTuples),\n    bytes: tuplesToBytes(tuples),\n    tuples,\n    stringTuples,\n    path\n  }\n}\n\nexport function bytesToMultiaddrParts (bytes: Uint8Array): MultiaddrParts {\n  const tuples: Tuple[] = []\n  const stringTuples: StringTuple[] = []\n  let path: string | null = null\n\n  let i = 0\n  while (i < bytes.length) {\n    const code = varint.decode(bytes, i)\n    const n = varint.encodingLength(code)\n\n    const p = getProtocol(code)\n\n    const size = sizeForAddr(p, bytes.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      stringTuples.push([code])\n      i += n\n      // eslint-disable-next-line no-continue\n      continue\n    }\n\n    const addr = bytes.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > bytes.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(bytes, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n    const stringAddr = convertToString(code, addr)\n    stringTuples.push([code, stringAddr])\n    if (p.path === true) {\n      // should we need to check each path part to see if it's a proto?\n      // This would allow for other protocols to be added after a unix path,\n      // however it would have issues if the path had a protocol name in the path\n      path = stringAddr\n      break\n    }\n  }\n\n  return {\n    bytes: Uint8Array.from(bytes),\n    string: stringTuplesToString(stringTuples),\n    tuples,\n    stringTuples,\n    path\n  }\n}\n\n/**\n * [[str name, str addr]... ] -> string\n */\nfunction stringTuplesToString (tuples: StringTuple[]): string {\n  const parts: string[] = []\n  tuples.map((tup) => {\n    const proto = getProtocol(tup[0])\n    parts.push(proto.name)\n    if (tup.length > 1 && tup[1] != null) {\n      parts.push(tup[1])\n    }\n    return null\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes (tuples: Tuple[]): Uint8Array {\n  return uint8ArrayConcat(tuples.map((tup) => {\n    const proto = getProtocol(tup[0])\n    let buf = Uint8Array.from(varint.encode(proto.code))\n\n    if (tup.length > 1 && tup[1] != null) {\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  }))\n}\n\n/**\n * For the passed address, return the serialized size\n */\nfunction sizeForAddr (p: Protocol, addr: Uint8Array | number[]): number {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr instanceof Uint8Array ? addr : Uint8Array.from(addr))\n    return size + varint.encodingLength(size)\n  }\n}\n\nexport function bytesToTuples (buf: Uint8Array): Tuple[] {\n  const tuples: Array<[number, Uint8Array?]> = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.encodingLength(code)\n\n    const p = getProtocol(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      // eslint-disable-next-line no-continue\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\nexport function cleanPath (str: string): string {\n  return '/' + str.trim().split('/').filter((a) => a).join('/')\n}\n\nexport function ParseError (str: string): Error {\n  return new Error('Error parsing address: ' + str)\n}\n","/**\n * @packageDocumentation\n *\n * A standard way to represent addresses that\n *\n * - support any standard network protocol\n * - are self-describing\n * - have a binary packed format\n * - have a nice string representation\n * - encapsulate well\n *\n * @example\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n * const addr =  multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * const addr = multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * addr.bytes\n * // <Uint8Array 04 7f 00 00 01 11 04 d2>\n *\n * addr.toString()\n * // '/ip4/127.0.0.1/udp/1234'\n *\n * addr.protos()\n * // [\n * //   {code: 4, name: 'ip4', size: 32},\n * //   {code: 273, name: 'udp', size: 16}\n * // ]\n *\n * // gives you an object that is friendly with what Node.js core modules expect for addresses\n * addr.nodeAddress()\n * // {\n * //   family: 4,\n * //   port: 1234,\n * //   address: \"127.0.0.1\"\n * // }\n *\n * addr.encapsulate('/sctp/5678')\n * // Multiaddr(/ip4/127.0.0.1/udp/1234/sctp/5678)\n * ```\n *\n * ## Resolving DNSADDR addresses\n *\n * [DNSADDR](https://github.com/multiformats/multiaddr/blob/master/protocols/DNSADDR.md) is a spec that allows storing a TXT DNS record that contains a Multiaddr.\n *\n * To resolve DNSADDR addresses, call the `.resolve()` function the multiaddr, optionally passing a `DNS` resolver.\n *\n * DNSADDR addresses can resolve to multiple multiaddrs, since there is no limit to the number of TXT records that can be stored.\n *\n * @example Resolving DNSADDR Multiaddrs\n *\n * ```TypeScript\n * import { multiaddr, resolvers } from '@multiformats/multiaddr'\n * import { dnsaddr } from '@multiformats/multiaddr/resolvers'\n *\n * resolvers.set('dnsaddr', dnsaddr)\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n *\n * // resolve with a 5s timeout\n * const resolved = await ma.resolve({\n *   signal: AbortSignal.timeout(5000)\n * })\n *\n * console.info(await ma.resolve(resolved)\n * // [Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...')...]\n * ```\n *\n * @example Using a custom DNS resolver to resolve DNSADDR Multiaddrs\n *\n * See the docs for [@multiformats/dns](https://www.npmjs.com/package/@multiformats/dns) for a full breakdown of how to specify multiple resolvers or resolvers that can be used for specific TLDs.\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { dns } from '@multiformats/dns'\n * import { dnsJsonOverHttps } from '@multiformats/dns/resolvers'\n *\n * const resolver = dns({\n *   '.': dnsJsonOverHttps('https://cloudflare-dns.com/dns-query')\n * })\n *\n * const ma = multiaddr('/dnsaddr/bootstrap.libp2p.io')\n * const resolved = await ma.resolve({\n *  dns: resolver\n * })\n *\n * console.info(resolved)\n * // [Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...'), Multiaddr('/ip4/147.75...')...]\n * ```\n */\n\nimport { Multiaddr as MultiaddrClass, symbol } from './multiaddr.js'\nimport { getProtocol } from './protocols-table.js'\nimport type { Resolver } from './resolvers/index.js'\nimport type { DNS } from '@multiformats/dns'\n\n/**\n * Protocols are present in the protocol table\n */\nexport interface Protocol {\n  code: number\n  size: number\n  name: string\n  resolvable?: boolean | undefined\n  path?: boolean | undefined\n}\n\n/**\n * A plain JavaScript object representation of a {@link Multiaddr}\n */\nexport interface MultiaddrObject {\n  family: 4 | 6\n  host: string\n  transport: string\n  port: number\n}\n\n/**\n * A NodeAddress is an IPv4/IPv6 address/TCP port combination\n */\nexport interface NodeAddress {\n  family: 4 | 6\n  address: string\n  port: number\n}\n\n/**\n * These types can be parsed into a {@link Multiaddr} object\n */\nexport type MultiaddrInput = string | Multiaddr | Uint8Array | null\n\n/**\n * A code/value pair\n */\nexport type Tuple = [number, Uint8Array?]\n\n/**\n * A code/value pair with the value as a string\n */\nexport type StringTuple = [number, string?]\n\n/**\n * Allows aborting long-lived operations\n */\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map<string, Resolver>()\n\nexport type { Resolver }\n\nexport { MultiaddrFilter } from './filter/multiaddr-filter.js'\n\nexport interface ResolveOptions extends AbortOptions {\n  /**\n   * An optional DNS resolver\n   */\n  dns?: DNS\n\n  /**\n   * When resolving DNSADDR Multiaddrs that resolve to other DNSADDR Multiaddrs,\n   * limit how many times we will recursively resolve them.\n   *\n   * @default 32\n   */\n  maxRecursiveDepth?: number\n}\n\nexport interface Multiaddr {\n  bytes: Uint8Array\n\n  /**\n   * Returns Multiaddr as a String\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toString(): string\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * JSON.stringify(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toJSON(): string\n\n  /**\n   * Returns Multiaddr as a convinient options object to be used with net.createConnection\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n   * // { family: 4, host: '127.0.0.1', transport: 'tcp', port: 4001 }\n   * ```\n   */\n  toOptions(): MultiaddrObject\n\n  /**\n   * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n   * left-to-right order. Each object contains the protocol code, protocol name,\n   * and the size of its address space in bits.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n   * // [ { code: 4, size: 32, name: 'ip4' },\n   * //   { code: 6, size: 16, name: 'tcp' } ]\n   * ```\n   */\n  protos(): Protocol[]\n\n  /**\n   * Returns the codes of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n   * // [ 4, 6 ]\n   * ```\n   */\n  protoCodes(): number[]\n\n  /**\n   * Returns the names of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n   * // [ 'ip4', 'tcp' ]\n   * ```\n   */\n  protoNames(): string[]\n\n  /**\n   * Returns a tuple of parts\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').tuples()\n   * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n   * ```\n   */\n  tuples(): Tuple[]\n\n  /**\n   * Returns a tuple of string/number parts\n   * - tuples[][0] = code of protocol\n   * - tuples[][1] = contents of address\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').stringTuples()\n   * // [ [ 4, '127.0.0.1' ], [ 6, '4001' ] ]\n   * ```\n   */\n  stringTuples(): StringTuple[]\n\n  /**\n   * Encapsulates a Multiaddr in another Multiaddr\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh3.toString()\n   * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n   * ```\n   *\n   * @param {MultiaddrInput} addr - Multiaddr to add into this Multiaddr\n   */\n  encapsulate(addr: MultiaddrInput): Multiaddr\n\n  /**\n   * Decapsulates a Multiaddr from another Multiaddr\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh3.decapsulate(mh2).toString()\n   * // '/ip4/8.8.8.8/tcp/1080'\n   * ```\n   *\n   * @param {Multiaddr | string} addr - Multiaddr to remove from this Multiaddr\n   */\n  decapsulate(addr: Multiaddr | string): Multiaddr\n\n  /**\n   * A more reliable version of `decapsulate` if you are targeting a\n   * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n   * will be removed from the `Multiaddr`, and a new instance will be returned.\n   * If the code is not present, the original `Multiaddr` is returned.\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const addr = multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n   * // Multiaddr(/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC)\n   *\n   * addr.decapsulateCode(421).toString()\n   * // '/ip4/0.0.0.0/tcp/8080'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n   * // '/ip4/127.0.0.1/tcp/8080'\n   * ```\n   */\n  decapsulateCode(code: number): Multiaddr\n\n  /**\n   * Extract the peerId if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string)\n   *\n   * // should return QmValidBase58string or null if the id is missing or invalid\n   * const peerId = mh1.getPeerId()\n   * ```\n   */\n  getPeerId(): string | null\n\n  /**\n   * Extract the path if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock)\n   *\n   * // should return utf8 string or null if the id is missing or invalid\n   * const path = mh1.getPath()\n   * ```\n   */\n  getPath(): string | null\n\n  /**\n   * Checks if two Multiaddrs are the same\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh1.equals(mh1)\n   * // true\n   *\n   * mh1.equals(mh2)\n   * // false\n   * ```\n   */\n  equals(addr: { bytes: Uint8Array }): boolean\n\n  /**\n   * Resolve multiaddr if containing resolvable hostname.\n   *\n   * @example\n   * ```js\n   * import { multiaddr, resolvers } from '@multiformats/multiaddr'\n   *\n   * resolvers.set('dnsaddr', resolverFunction)\n   * const mh1 = multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\n   * const resolvedMultiaddrs = await mh1.resolve()\n   * // [\n   * //   Multiaddr(/ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb),\n   * //   Multiaddr(/ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb),\n   * //   Multiaddr(/ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb)\n   * // ]\n   * ```\n   */\n  resolve(options?: ResolveOptions): Promise<Multiaddr[]>\n\n  /**\n   * Gets a Multiaddrs node-friendly address object. Note that protocol information\n   * is left out: in Node (and most network systems) the protocol is unknowable\n   * given only the address.\n   *\n   * Has to be a ThinWaist Address, otherwise throws error\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n   * // {family: 4, address: '127.0.0.1', port: 4001}\n   * ```\n   */\n  nodeAddress(): NodeAddress\n\n  /**\n   * Returns if a Multiaddr is a Thin Waist address or not.\n   *\n   * Thin Waist is if a Multiaddr adheres to the standard combination of:\n   *\n   * `{IPv4, IPv6}/{TCP, UDP}`\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   * const mh2 = multiaddr('/ip4/192.168.2.1/tcp/5001')\n   * // Multiaddr(/ip4/192.168.2.1/tcp/5001)\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001)\n   * const mh4 = multiaddr('/ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a)\n   * mh1.isThinWaistAddress()\n   * // true\n   * mh2.isThinWaistAddress()\n   * // true\n   * mh3.isThinWaistAddress()\n   * // false\n   * mh4.isThinWaistAddress()\n   * // false\n   * ```\n   */\n  isThinWaistAddress(addr?: Multiaddr): boolean\n}\n\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress (addr: NodeAddress, transport: string): Multiaddr {\n  if (addr == null) {\n    throw new Error('requires node address object')\n  }\n  if (transport == null) {\n    throw new Error('requires transport protocol')\n  }\n  let ip: string | undefined\n  let host = addr.address\n  switch (addr.family) {\n    case 4:\n      ip = 'ip4'\n      break\n    case 6:\n      ip = 'ip6'\n\n      if (host.includes('%')) {\n        const parts = host.split('%')\n\n        if (parts.length !== 2) {\n          throw Error('Multiple ip6 zones in multiaddr')\n        }\n\n        host = parts[0]\n        const zone = parts[1]\n        ip = `/ip6zone/${zone}/ip6`\n      }\n      break\n    default:\n      throw Error('Invalid addr family, should be 4 or 6.')\n  }\n  return new MultiaddrClass('/' + [ip, host, transport, addr.port].join('/'))\n}\n\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName (addr: Multiaddr): boolean {\n  if (!isMultiaddr(addr)) {\n    return false\n  }\n\n  // if a part of the multiaddr is resolvable, then return true\n  return addr.protos().some((proto) => proto.resolvable)\n}\n\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr (value: any): value is Multiaddr {\n  return Boolean(value?.[symbol])\n}\n\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr (addr?: MultiaddrInput): Multiaddr {\n  return new MultiaddrClass(addr)\n}\n\nexport { getProtocol as protocols }\n","import { multiaddr } from '@multiformats/multiaddr'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface MatchesFunction { (a: string | Uint8Array | Multiaddr): boolean }\nexport interface PartialMatchesFunction { (protos: string[]): boolean | string[] | null }\n\nexport interface Mafmt {\n  toString: () => string\n  input?: Array<(Mafmt | (() => Mafmt))>\n  matches: MatchesFunction\n  partialMatch: PartialMatchesFunction\n}\n\n/*\n * Valid combinations\n */\nexport const DNS4 = base('dns4')\nexport const DNS6 = base('dns6')\nexport const DNSADDR = base('dnsaddr')\nexport const DNS = or(\n  base('dns'),\n  DNSADDR,\n  DNS4,\n  DNS6\n)\n\nexport const IP = or(base('ip4'), base('ip6'))\nexport const TCP = or(\n  and(IP, base('tcp')),\n  and(DNS, base('tcp'))\n)\nexport const UDP = and(IP, base('udp'))\nexport const UTP = and(UDP, base('utp'))\n\nexport const QUIC = and(UDP, base('quic'))\nexport const QUICV1 = and(UDP, base('quic-v1'))\n\nconst _WebSockets = or(\n  and(TCP, base('ws')),\n  and(DNS, base('ws'))\n)\n\nexport const WebSockets = or(\n  and(_WebSockets, base('p2p')),\n  _WebSockets\n)\n\nconst _WebSocketsSecure = or(\n  and(TCP, base('wss')),\n  and(DNS, base('wss')),\n  and(TCP, base('tls'), base('ws')),\n  and(DNS, base('tls'), base('ws'))\n)\n\nexport const WebSocketsSecure = or(\n  and(_WebSocketsSecure, base('p2p')),\n  _WebSocketsSecure\n)\n\nexport const HTTP = or(\n  and(TCP, base('http')),\n  and(IP, base('http')),\n  and(DNS, base('http'))\n)\n\nexport const HTTPS = or(\n  and(TCP, base('https')),\n  and(IP, base('https')),\n  and(DNS, base('https'))\n)\n\nconst _WebRTCDirect = and(UDP, base('webrtc-direct'), base('certhash'))\nexport const WebRTCDirect = or(\n  and(_WebRTCDirect, base('p2p')),\n  _WebRTCDirect\n)\n\nconst _WebTransport = and(QUICV1, base('webtransport'), base('certhash'), base('certhash'))\nexport const WebTransport = or(\n  and(_WebTransport, base('p2p')),\n  _WebTransport\n)\n\n/**\n * @deprecated\n */\nexport const P2PWebRTCStar = or(\n  and(WebSockets, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSockets, base('p2p-webrtc-star')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'))\n)\n\nexport const WebSocketStar = or(\n  and(WebSockets, base('p2p-websocket-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')),\n  and(WebSockets, base('p2p-websocket-star')),\n  and(WebSocketsSecure, base('p2p-websocket-star'))\n)\n\n/**\n * @deprecated\n */\nexport const P2PWebRTCDirect = or(\n  and(HTTP, base('p2p-webrtc-direct'), base('p2p')),\n  and(HTTPS, base('p2p-webrtc-direct'), base('p2p')),\n  and(HTTP, base('p2p-webrtc-direct')),\n  and(HTTPS, base('p2p-webrtc-direct'))\n)\n\nexport const Reliable = or(\n  _WebSockets,\n  _WebSocketsSecure,\n  HTTP,\n  HTTPS,\n  P2PWebRTCStar,\n  P2PWebRTCDirect,\n  TCP,\n  UTP,\n  QUIC,\n  DNS,\n  WebRTCDirect,\n  WebTransport\n)\n\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nexport const Stardust = or(\n  and(Reliable, base('p2p-stardust'), base('p2p')),\n  and(Reliable, base('p2p-stardust'))\n)\n\nconst _P2P = or(\n  and(Reliable, base('p2p')),\n  P2PWebRTCStar,\n  P2PWebRTCDirect,\n  WebRTCDirect,\n  WebTransport,\n  base('p2p')\n)\n\nconst _Circuit = or(\n  and(_P2P, base('p2p-circuit'), _P2P),\n  and(_P2P, base('p2p-circuit')),\n  and(base('p2p-circuit'), _P2P),\n  and(Reliable, base('p2p-circuit')),\n  and(base('p2p-circuit'), Reliable),\n  base('p2p-circuit')\n)\n\nconst CircuitRecursive = (): Mafmt => or(\n  and(_Circuit, CircuitRecursive),\n  _Circuit\n)\n\nexport const Circuit = CircuitRecursive()\n\nexport const P2P = or(\n  and(Circuit, _P2P, Circuit),\n  and(_P2P, Circuit),\n  and(Circuit, _P2P),\n  Circuit,\n  _P2P\n)\n\nexport const IPFS = P2P\n\nexport const WebRTC = or(\n  and(Circuit, base('webrtc'), base('p2p')),\n  and(Circuit, base('webrtc')),\n  and(Reliable, base('webrtc'), base('p2p')),\n  and(Reliable, base('webrtc')),\n  base('webrtc')\n)\n\n/*\n * Validation funcs\n */\n\nfunction makeMatchesFunction (partialMatch: PartialMatchesFunction): (a: string | Uint8Array | Multiaddr) => boolean {\n  function matches (a: string | Uint8Array | Multiaddr): boolean {\n    let ma\n\n    try {\n      ma = multiaddr(a)\n    } catch (err: any) { // catch error\n      return false // also if it's invalid it's probably not matching as well so return false\n    }\n\n    const out = partialMatch(ma.protoNames())\n    if (out === null) {\n      return false\n    }\n\n    if (out === true || out === false) {\n      return out\n    }\n\n    return out.length === 0\n  }\n\n  return matches\n}\n\nfunction and (...args: Array<Mafmt | (() => Mafmt)>): Mafmt {\n  function partialMatch (a: string[]): boolean | string[] | null {\n    if (a.length < args.length) {\n      return null\n    }\n\n    let out: boolean | string[] | null = a\n\n    args.some((arg) => {\n      out = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n\n      if (Array.isArray(out)) {\n        a = out\n      }\n\n      if (out === null) {\n        return true\n      }\n\n      return false\n    })\n\n    return out\n  }\n\n  return {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch\n  }\n}\n\nfunction or (...args: Array<Mafmt | (() => Mafmt)>): Mafmt {\n  function partialMatch (a: string[]): boolean | string[] | null {\n    let out = null\n    args.some((arg) => {\n      const res = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n      if (res != null) {\n        out = res\n        return true\n      }\n      return false\n    })\n\n    return out\n  }\n\n  const result = {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch\n  }\n\n  return result\n}\n\nfunction base (n: string): Mafmt {\n  const name = n\n\n  function matches (a: string | Uint8Array | Multiaddr): boolean {\n    let ma: Multiaddr\n\n    try {\n      ma = multiaddr(a)\n    } catch (err: any) { // catch error\n      return false // also if it's invalid it's probably not matching as well so return false\n    }\n\n    const pnames = ma.protoNames()\n    if (pnames.length === 1 && pnames[0] === name) {\n      return true\n    }\n    return false\n  }\n\n  function partialMatch (protos: string[]): boolean | string[] | null {\n    if (protos.length === 0) {\n      return null\n    }\n\n    if (protos[0] === name) {\n      return protos.slice(1)\n    }\n    return null\n  }\n\n  return {\n    toString: function () { return name },\n    matches,\n    partialMatch\n  }\n}\n","// p2p multi-address code\nexport const CODE_P2P = 421\nexport const CODE_CIRCUIT = 290\nexport const CODE_UNIX = 400\n\n// Time to wait for a connection to close gracefully before destroying it manually\nexport const CLOSE_TIMEOUT = 500\n\n// Close the socket if there is no activity after this long in ms\nexport const SOCKET_TIMEOUT = 5 * 60000 // 5 mins\n","import net from 'net'\nimport { CodeError, TypedEventEmitter } from '@libp2p/interface'\nimport { CODE_P2P } from './constants.js'\nimport { toMultiaddrConnection } from './socket-to-conn.js'\nimport {\n  getMultiaddrs,\n  multiaddrToNetConfig,\n  type NetConfig\n} from './utils.js'\nimport type { TCPCreateListenerOptions } from './index.js'\nimport type { ComponentLogger, Logger, LoggerOptions, MultiaddrConnection, Connection, CounterGroup, MetricGroup, Metrics, Listener, ListenerEvents, Upgrader } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\n/**\n * Attempts to close the given maConn. If a failure occurs, it will be logged\n */\nasync function attemptClose (maConn: MultiaddrConnection, options: LoggerOptions): Promise<void> {\n  try {\n    await maConn.close()\n  } catch (err: any) {\n    options.log.error('an error occurred closing the connection', err)\n    maConn.abort(err)\n  }\n}\n\nexport interface CloseServerOnMaxConnectionsOpts {\n  /**\n   * Server listens once connection count is less than `listenBelow`\n   */\n  listenBelow: number\n\n  /**\n   * Close server once connection count is greater than or equal to `closeAbove`\n   */\n  closeAbove: number\n\n  /**\n   * Invoked when there was an error listening on a socket\n   */\n  onListenError?(err: Error): void\n}\n\ninterface Context extends TCPCreateListenerOptions {\n  handler?(conn: Connection): void\n  upgrader: Upgrader\n  socketInactivityTimeout?: number\n  socketCloseTimeout?: number\n  maxConnections?: number\n  backlog?: number\n  metrics?: Metrics\n  closeServerOnMaxConnections?: CloseServerOnMaxConnectionsOpts\n  logger: ComponentLogger\n}\n\nexport interface TCPListenerMetrics {\n  status: MetricGroup\n  errors: CounterGroup\n  events: CounterGroup\n}\n\nenum TCPListenerStatusCode {\n  /**\n   * When server object is initialized but we don't know the listening address\n   * yet or the server object is stopped manually, can be resumed only by\n   * calling listen()\n   **/\n  INACTIVE = 0,\n  ACTIVE = 1,\n  /* During the connection limits */\n  PAUSED = 2,\n}\n\ntype Status = { code: TCPListenerStatusCode.INACTIVE } | {\n  code: Exclude<TCPListenerStatusCode, TCPListenerStatusCode.INACTIVE>\n  listeningAddr: Multiaddr\n  peerId: string | null\n  netConfig: NetConfig\n}\n\nexport class TCPListener extends TypedEventEmitter<ListenerEvents> implements Listener {\n  private readonly server: net.Server\n  /** Keep track of open connections to destroy in case of timeout */\n  private readonly connections = new Set<MultiaddrConnection>()\n  private status: Status = { code: TCPListenerStatusCode.INACTIVE }\n  private metrics?: TCPListenerMetrics\n  private addr: string\n  private readonly log: Logger\n\n  constructor (private readonly context: Context) {\n    super()\n\n    context.keepAlive = context.keepAlive ?? true\n    context.noDelay = context.noDelay ?? true\n\n    this.log = context.logger.forComponent('libp2p:tcp:listener')\n    this.addr = 'unknown'\n    this.server = net.createServer(context, this.onSocket.bind(this))\n\n    // https://nodejs.org/api/net.html#servermaxconnections\n    // If set reject connections when the server's connection count gets high\n    // Useful to prevent too resource exhaustion via many open connections on\n    // high bursts of activity\n    if (context.maxConnections !== undefined) {\n      this.server.maxConnections = context.maxConnections\n    }\n\n    if (context.closeServerOnMaxConnections != null) {\n      // Sanity check options\n      if (context.closeServerOnMaxConnections.closeAbove < context.closeServerOnMaxConnections.listenBelow) {\n        throw new CodeError('closeAbove must be >= listenBelow', 'ERR_CONNECTION_LIMITS')\n      }\n    }\n\n    this.server\n      .on('listening', () => {\n        if (context.metrics != null) {\n          // we are listening, register metrics for our port\n          const address = this.server.address()\n\n          if (address == null) {\n            this.addr = 'unknown'\n          } else if (typeof address === 'string') {\n            // unix socket\n            this.addr = address\n          } else {\n            this.addr = `${address.address}:${address.port}`\n          }\n\n          context.metrics?.registerMetricGroup('libp2p_tcp_inbound_connections_total', {\n            label: 'address',\n            help: 'Current active connections in TCP listener',\n            calculate: () => {\n              return {\n                [this.addr]: this.connections.size\n              }\n            }\n          })\n\n          this.metrics = {\n            status: context.metrics.registerMetricGroup('libp2p_tcp_listener_status_info', {\n              label: 'address',\n              help: 'Current status of the TCP listener socket'\n            }),\n            errors: context.metrics.registerMetricGroup('libp2p_tcp_listener_errors_total', {\n              label: 'address',\n              help: 'Total count of TCP listener errors by type'\n            }),\n            events: context.metrics.registerMetricGroup('libp2p_tcp_listener_events_total', {\n              label: 'address',\n              help: 'Total count of TCP listener events by type'\n            })\n          }\n\n          this.metrics?.status.update({\n            [this.addr]: TCPListenerStatusCode.ACTIVE\n          })\n        }\n\n        this.safeDispatchEvent('listening')\n      })\n      .on('error', err => {\n        this.metrics?.errors.increment({ [`${this.addr} listen_error`]: true })\n        this.safeDispatchEvent('error', { detail: err })\n      })\n      .on('close', () => {\n        this.metrics?.status.update({\n          [this.addr]: this.status.code\n        })\n\n        // If this event is emitted, the transport manager will remove the\n        // listener from it's cache in the meanwhile if the connections are\n        // dropped then listener will start listening again and the transport\n        // manager will not be able to close the server\n        if (this.status.code !== TCPListenerStatusCode.PAUSED) {\n          this.safeDispatchEvent('close')\n        }\n      })\n  }\n\n  private onSocket (socket: net.Socket): void {\n    if (this.status.code !== TCPListenerStatusCode.ACTIVE) {\n      throw new CodeError('Server is not listening yet', 'ERR_SERVER_NOT_RUNNING')\n    }\n    // Avoid uncaught errors caused by unstable connections\n    socket.on('error', err => {\n      this.log('socket error', err)\n      this.metrics?.events.increment({ [`${this.addr} error`]: true })\n    })\n\n    let maConn: MultiaddrConnection\n    try {\n      maConn = toMultiaddrConnection(socket, {\n        listeningAddr: this.status.listeningAddr,\n        socketInactivityTimeout: this.context.socketInactivityTimeout,\n        socketCloseTimeout: this.context.socketCloseTimeout,\n        metrics: this.metrics?.events,\n        metricPrefix: `${this.addr} `,\n        logger: this.context.logger\n      })\n    } catch (err) {\n      this.log.error('inbound connection failed', err)\n      this.metrics?.errors.increment({ [`${this.addr} inbound_to_connection`]: true })\n      return\n    }\n\n    this.log('new inbound connection %s', maConn.remoteAddr)\n\n    try {\n      this.context.upgrader.upgradeInbound(maConn)\n        .then((conn) => {\n          this.log('inbound connection upgraded %s', maConn.remoteAddr)\n          this.connections.add(maConn)\n\n          socket.once('close', () => {\n            this.connections.delete(maConn)\n\n            if (\n              this.context.closeServerOnMaxConnections != null &&\n              this.connections.size < this.context.closeServerOnMaxConnections.listenBelow\n            ) {\n              // The most likely case of error is if the port taken by this\n              // application is bound by another process during the time the\n              // server if closed. In that case there's not much we can do.\n              // resume() will be called again every time a connection is\n              // dropped, which acts as an eventual retry mechanism.\n              // onListenError allows the consumer act on this.\n              this.resume().catch(e => {\n                this.log.error('error attempting to listen server once connection count under limit', e)\n                this.context.closeServerOnMaxConnections?.onListenError?.(e as Error)\n              })\n            }\n          })\n\n          if (this.context.handler != null) {\n            this.context.handler(conn)\n          }\n\n          if (\n            this.context.closeServerOnMaxConnections != null &&\n            this.connections.size >= this.context.closeServerOnMaxConnections.closeAbove\n          ) {\n            this.pause(false).catch(e => {\n              this.log.error('error attempting to close server once connection count over limit', e)\n            })\n          }\n\n          this.safeDispatchEvent('connection', { detail: conn })\n        })\n        .catch(async err => {\n          this.log.error('inbound connection failed', err)\n          this.metrics?.errors.increment({ [`${this.addr} inbound_upgrade`]: true })\n\n          await attemptClose(maConn, {\n            log: this.log\n          })\n        })\n        .catch(err => {\n          this.log.error('closing inbound connection failed', err)\n        })\n    } catch (err) {\n      this.log.error('inbound connection failed', err)\n\n      attemptClose(maConn, {\n        log: this.log\n      })\n        .catch(err => {\n          this.log.error('closing inbound connection failed', err)\n          this.metrics?.errors.increment({ [`${this.addr} inbound_closing_failed`]: true })\n        })\n    }\n  }\n\n  getAddrs (): Multiaddr[] {\n    if (this.status.code === TCPListenerStatusCode.INACTIVE) {\n      return []\n    }\n\n    let addrs: Multiaddr[] = []\n    const address = this.server.address()\n    const { listeningAddr, peerId } = this.status\n\n    if (address == null) {\n      return []\n    }\n\n    if (typeof address === 'string') {\n      addrs = [listeningAddr]\n    } else {\n      try {\n        // Because TCP will only return the IPv6 version\n        // we need to capture from the passed multiaddr\n        if (listeningAddr.toString().startsWith('/ip4')) {\n          addrs = addrs.concat(getMultiaddrs('ip4', address.address, address.port))\n        } else if (address.family === 'IPv6') {\n          addrs = addrs.concat(getMultiaddrs('ip6', address.address, address.port))\n        }\n      } catch (err) {\n        this.log.error('could not turn %s:%s into multiaddr', address.address, address.port, err)\n      }\n    }\n\n    return addrs.map(ma => peerId != null ? ma.encapsulate(`/p2p/${peerId}`) : ma)\n  }\n\n  async listen (ma: Multiaddr): Promise<void> {\n    if (this.status.code === TCPListenerStatusCode.ACTIVE || this.status.code === TCPListenerStatusCode.PAUSED) {\n      throw new CodeError('server is already listening', 'ERR_SERVER_ALREADY_LISTENING')\n    }\n\n    const peerId = ma.getPeerId()\n    const listeningAddr = peerId == null ? ma.decapsulateCode(CODE_P2P) : ma\n    const { backlog } = this.context\n\n    try {\n      this.status = {\n        code: TCPListenerStatusCode.ACTIVE,\n        listeningAddr,\n        peerId,\n        netConfig: multiaddrToNetConfig(listeningAddr, { backlog })\n      }\n\n      await this.resume()\n    } catch (err) {\n      this.status = { code: TCPListenerStatusCode.INACTIVE }\n      throw err\n    }\n  }\n\n  async close (): Promise<void> {\n    const err = new CodeError('Listener is closing', 'ERR_LISTENER_CLOSING')\n\n    // synchronously close each connection\n    this.connections.forEach(conn => {\n      conn.abort(err)\n    })\n\n    // shut down the server socket, permanently\n    await this.pause(true)\n  }\n\n  /**\n   * Can resume a stopped or start an inert server\n   */\n  private async resume (): Promise<void> {\n    if (this.server.listening || this.status.code === TCPListenerStatusCode.INACTIVE) {\n      return\n    }\n\n    const netConfig = this.status.netConfig\n\n    await new Promise<void>((resolve, reject) => {\n      // NOTE: 'listening' event is only fired on success. Any error such as\n      // port already bound, is emitted via 'error'\n      this.server.once('error', reject)\n      this.server.listen(netConfig, resolve)\n    })\n\n    this.status = { ...this.status, code: TCPListenerStatusCode.ACTIVE }\n    this.log('listening on %s', this.server.address())\n  }\n\n  private async pause (permanent: boolean): Promise<void> {\n    if (!this.server.listening && this.status.code === TCPListenerStatusCode.PAUSED && permanent) {\n      this.status = { code: TCPListenerStatusCode.INACTIVE }\n      return\n    }\n\n    if (!this.server.listening || this.status.code !== TCPListenerStatusCode.ACTIVE) {\n      return\n    }\n\n    this.log('closing server on %s', this.server.address())\n\n    // NodeJS implementation tracks listening status with `this._handle` property.\n    // - Server.close() sets this._handle to null immediately. If this._handle is null, ERR_SERVER_NOT_RUNNING is thrown\n    // - Server.listening returns `this._handle !== null` https://github.com/nodejs/node/blob/386d761943bb1b217fba27d6b80b658c23009e60/lib/net.js#L1675\n    // - Server.listen() if `this._handle !== null` throws ERR_SERVER_ALREADY_LISTEN\n    //\n    // NOTE: Both listen and close are technically not async actions, so it's not necessary to track\n    // states 'pending-close' or 'pending-listen'\n\n    // From docs https://nodejs.org/api/net.html#serverclosecallback\n    // Stops the server from accepting new connections and keeps existing connections.\n    // 'close' event is emitted only emitted when all connections are ended.\n    // The optional callback will be called once the 'close' event occurs.\n\n    // We need to set this status before closing server, so other procedures are aware\n    // during the time the server is closing\n    this.status = permanent ? { code: TCPListenerStatusCode.INACTIVE } : { ...this.status, code: TCPListenerStatusCode.PAUSED }\n\n    await new Promise<void>((resolve, reject) => {\n      this.server.close(err => {\n        if (err != null) {\n          reject(err)\n          return\n        }\n\n        resolve()\n      })\n    })\n  }\n}\n","import { isIPv4, isIPv6 } from '@chainsafe/is-ip'\nimport { CodeError } from '@libp2p/interface'\nimport { type Multiaddr, multiaddr } from '@multiformats/multiaddr'\n\nexport const Errors = {\n  ERR_INVALID_IP_PARAMETER: 'ERR_INVALID_IP_PARAMETER',\n  ERR_INVALID_PORT_PARAMETER: 'ERR_INVALID_PORT_PARAMETER',\n  ERR_INVALID_IP: 'ERR_INVALID_IP'\n}\n\n/**\n * Transform an IP, Port pair into a multiaddr\n */\nexport function ipPortToMultiaddr (ip: string, port: number | string): Multiaddr {\n  if (typeof ip !== 'string') {\n    throw new CodeError(`invalid ip provided: ${ip}`, Errors.ERR_INVALID_IP_PARAMETER) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n  }\n\n  if (typeof port === 'string') {\n    port = parseInt(port)\n  }\n\n  if (isNaN(port)) {\n    throw new CodeError(`invalid port provided: ${port}`, Errors.ERR_INVALID_PORT_PARAMETER)\n  }\n\n  if (isIPv4(ip)) {\n    return multiaddr(`/ip4/${ip}/tcp/${port}`)\n  }\n\n  if (isIPv6(ip)) {\n    return multiaddr(`/ip6/${ip}/tcp/${port}`)\n  }\n\n  throw new CodeError(`invalid ip:port for creating a multiaddr: ${ip}:${port}`, Errors.ERR_INVALID_IP)\n}\n","import type { Readable } from 'node:stream'\n\n/**\n * Convert a Node.js [`Readable`](https://nodejs.org/dist/latest/docs/api/stream.html#class-streamreadable)\n * stream or a browser [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream)\n * to an [iterable source](https://achingbrain.github.io/it-stream-types/types/Source.html).\n */\nexport function source <T = Uint8Array> (readable: Readable | ReadableStream<T>): AsyncGenerator<T> {\n  // Browser ReadableStream\n  if (isReadableStream(readable)) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n\n          if (done) {\n            return\n          }\n\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isNodeStream<T>(readable)) {\n    return readable\n  }\n\n  throw new Error('unknown stream')\n}\n\nfunction isNodeStream <T = any> (obj?: any): obj is AsyncGenerator<T> {\n  return obj[Symbol.asyncIterator] != null\n}\n\nfunction isReadableStream (obj?: any): obj is ReadableStream {\n  return typeof obj?.getReader === 'function'\n}\n","import type { Sink, Source } from 'it-stream-types'\nimport type { Writable } from 'node:stream'\n\n/**\n * Convert a Node.js [`Writable`](https://nodejs.org/dist/latest/docs/api/stream.html#class-streamwritable)\n * stream to a [sink](https://achingbrain.github.io/it-stream-types/interfaces/Sink.html).\n */\nexport function sink <T> (writable: Writable): Sink<Source<T>, Promise<void>> {\n  return async (source: Source<T>): Promise<void> => {\n    const maybeEndSource = async (): Promise<void> => {\n      if (isAsyncGenerator(source)) {\n        await source.return(undefined)\n      }\n    }\n\n    let error: Error | undefined\n    let errCb: ((err: Error) => void) | undefined\n    const errorHandler = (err: Error): void => {\n      error = err\n\n      // When the writable errors, try to end the source to exit iteration early\n      maybeEndSource()\n        .catch(err => {\n          err = new AggregateError([\n            error,\n            err\n          ], 'The Writable emitted an error, additionally an error occurred while ending the Source')\n        })\n        .finally(() => {\n          errCb?.(err)\n        })\n    }\n\n    let closeCb: (() => void) | undefined\n    let closed = false\n    const closeHandler = (): void => {\n      closed = true\n      closeCb?.()\n    }\n\n    let finishCb: (() => void) | undefined\n    let finished = false\n    const finishHandler = (): void => {\n      finished = true\n      finishCb?.()\n    }\n\n    let drainCb: (() => void) | undefined\n    const drainHandler = (): void => {\n      drainCb?.()\n    }\n\n    const waitForDrainOrClose = async (): Promise<void> => {\n      return new Promise<void>((resolve, reject) => {\n        closeCb = drainCb = resolve\n        errCb = reject\n\n        writable.once('drain', drainHandler)\n      })\n    }\n\n    const waitForDone = async (): Promise<void> => {\n      // Immediately try to end the source\n      await maybeEndSource()\n\n      return new Promise<void>((resolve, reject) => {\n        if (closed || finished || (error != null)) {\n          resolve()\n          return\n        }\n\n        finishCb = closeCb = resolve\n        errCb = reject\n      })\n    }\n\n    const cleanup = (): void => {\n      writable.removeListener('error', errorHandler)\n      writable.removeListener('close', closeHandler)\n      writable.removeListener('finish', finishHandler)\n      writable.removeListener('drain', drainHandler)\n    }\n\n    writable.once('error', errorHandler)\n    writable.once('close', closeHandler)\n    writable.once('finish', finishHandler)\n\n    try {\n      for await (const value of source) {\n        if (!writable.writable || writable.destroyed || (error != null)) {\n          break\n        }\n\n        if (!writable.write(value as any)) {\n          await waitForDrainOrClose()\n        }\n      }\n    } catch (err: any) {\n      // error is set by stream error handler so only destroy stream if source\n      // threw\n      if (error == null) {\n        writable.destroy(err)\n      }\n\n      // could we be obscuring an error here?\n      error = err\n    }\n\n    try {\n      // We're done writing, end everything (n.b. stream may be destroyed at this\n      // point but then this is a no-op)\n      if (writable.writable) {\n        writable.end()\n      }\n\n      // Wait until we close or finish. This supports halfClosed streams\n      await waitForDone()\n\n      // Notify the user an error occurred\n      if (error != null) throw error\n    } finally {\n      // Clean up listeners\n      cleanup()\n    }\n  }\n}\n\nfunction isAsyncGenerator <T = any> (obj?: any): obj is AsyncGenerator<T> {\n  return obj.return != null\n}\n","import { sink } from './sink.js'\nimport { source } from './source.js'\nimport type { Source, Duplex as ItDuplex } from 'it-stream-types'\nimport type { Duplex } from 'node:stream'\n\n/**\n * Convert a Node.js [`Duplex`](https://nodejs.org/dist/latest/docs/api/stream.html#class-streamduplex)\n * stream to a [duplex iterable](https://achingbrain.github.io/it-stream-types/interfaces/Duplex.html).\n */\nexport function duplex <TSource = Uint8Array, TSink = TSource> (duplex: Duplex): ItDuplex<AsyncGenerator<TSource>, Source<TSink>, Promise<void>> {\n  return {\n    sink: sink(duplex),\n    source: source(duplex)\n  }\n}\n","import os from 'os'\nimport path from 'path'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { ListenOptions, IpcSocketConnectOpts, TcpSocketConnectOpts } from 'net'\n\nconst ProtoFamily = { ip4: 'IPv4', ip6: 'IPv6' }\n\nexport type NetConfig = ListenOptions | (IpcSocketConnectOpts & TcpSocketConnectOpts)\n\nexport function multiaddrToNetConfig (addr: Multiaddr, config: NetConfig = {}): NetConfig {\n  const listenPath = addr.getPath()\n\n  // unix socket listening\n  if (listenPath != null) {\n    if (os.platform() === 'win32') {\n      // Use named pipes on Windows systems.\n      return { path: path.join('\\\\\\\\.\\\\pipe\\\\', listenPath) }\n    } else {\n      return { path: listenPath }\n    }\n  }\n\n  // tcp listening\n  return { ...config, ...addr.toOptions() }\n}\n\nexport function getMultiaddrs (proto: 'ip4' | 'ip6', ip: string, port: number): Multiaddr[] {\n  const toMa = (ip: string): Multiaddr => multiaddr(`/${proto}/${ip}/tcp/${port}`)\n  return (isAnyAddr(ip) ? getNetworkAddrs(ProtoFamily[proto]) : [ip]).map(toMa)\n}\n\nexport function isAnyAddr (ip: string): boolean {\n  return ['0.0.0.0', '::'].includes(ip)\n}\n\nconst networks = os.networkInterfaces()\n\nfunction getNetworkAddrs (family: string): string[] {\n  const addresses: string[] = []\n\n  for (const [, netAddrs] of Object.entries(networks)) {\n    if (netAddrs != null) {\n      for (const netAddr of netAddrs) {\n        if (netAddr.family === family) {\n          addresses.push(netAddr.address)\n        }\n      }\n    }\n  }\n\n  return addresses\n}\n","import { CodeError } from '@libp2p/interface'\nimport { ipPortToMultiaddr as toMultiaddr } from '@libp2p/utils/ip-port-to-multiaddr'\nimport { duplex } from 'stream-to-it'\nimport { CLOSE_TIMEOUT, SOCKET_TIMEOUT } from './constants.js'\nimport { multiaddrToNetConfig } from './utils.js'\nimport type { ComponentLogger, MultiaddrConnection, CounterGroup } from '@libp2p/interface'\nimport type { AbortOptions, Multiaddr } from '@multiformats/multiaddr'\nimport type { Socket } from 'net'\n\ninterface ToConnectionOptions {\n  listeningAddr?: Multiaddr\n  remoteAddr?: Multiaddr\n  localAddr?: Multiaddr\n  socketInactivityTimeout?: number\n  socketCloseTimeout?: number\n  metrics?: CounterGroup\n  metricPrefix?: string\n  logger: ComponentLogger\n}\n\n/**\n * Convert a socket into a MultiaddrConnection\n * https://github.com/libp2p/interface-transport#multiaddrconnection\n */\nexport const toMultiaddrConnection = (socket: Socket, options: ToConnectionOptions): MultiaddrConnection => {\n  let closePromise: Promise<void> | null = null\n  const log = options.logger.forComponent('libp2p:tcp:socket')\n  const metrics = options.metrics\n  const metricPrefix = options.metricPrefix ?? ''\n  const inactivityTimeout = options.socketInactivityTimeout ?? SOCKET_TIMEOUT\n  const closeTimeout = options.socketCloseTimeout ?? CLOSE_TIMEOUT\n\n  // Check if we are connected on a unix path\n  if (options.listeningAddr?.getPath() != null) {\n    options.remoteAddr = options.listeningAddr\n  }\n\n  if (options.remoteAddr?.getPath() != null) {\n    options.localAddr = options.remoteAddr\n  }\n\n  let remoteAddr: Multiaddr\n\n  if (options.remoteAddr != null) {\n    remoteAddr = options.remoteAddr\n  } else {\n    if (socket.remoteAddress == null || socket.remotePort == null) {\n      // this can be undefined if the socket is destroyed (for example, if the client disconnected)\n      // https://nodejs.org/dist/latest-v16.x/docs/api/net.html#socketremoteaddress\n      throw new CodeError('Could not determine remote address or port', 'ERR_NO_REMOTE_ADDRESS')\n    }\n\n    remoteAddr = toMultiaddr(socket.remoteAddress, socket.remotePort)\n  }\n\n  const lOpts = multiaddrToNetConfig(remoteAddr)\n  const lOptsStr = lOpts.path ?? `${lOpts.host ?? ''}:${lOpts.port ?? ''}`\n  const { sink, source } = duplex(socket)\n\n  // by default there is no timeout\n  // https://nodejs.org/dist/latest-v16.x/docs/api/net.html#socketsettimeouttimeout-callback\n  socket.setTimeout(inactivityTimeout, () => {\n    log('%s socket read timeout', lOptsStr)\n    metrics?.increment({ [`${metricPrefix}timeout`]: true })\n\n    // only destroy with an error if the remote has not sent the FIN message\n    let err: Error | undefined\n    if (socket.readable) {\n      err = new CodeError('Socket read timeout', 'ERR_SOCKET_READ_TIMEOUT')\n    }\n\n    // if the socket times out due to inactivity we must manually close the connection\n    // https://nodejs.org/dist/latest-v16.x/docs/api/net.html#event-timeout\n    socket.destroy(err)\n  })\n\n  socket.once('close', () => {\n    log('%s socket close', lOptsStr)\n    metrics?.increment({ [`${metricPrefix}close`]: true })\n\n    // In instances where `close` was not explicitly called,\n    // such as an iterable stream ending, ensure we have set the close\n    // timeline\n    if (maConn.timeline.close == null) {\n      maConn.timeline.close = Date.now()\n    }\n  })\n\n  socket.once('end', () => {\n    // the remote sent a FIN packet which means no more data will be sent\n    // https://nodejs.org/dist/latest-v16.x/docs/api/net.html#event-end\n    log('%s socket end', lOptsStr)\n    metrics?.increment({ [`${metricPrefix}end`]: true })\n  })\n\n  const maConn: MultiaddrConnection = {\n    async sink (source) {\n      try {\n        await sink((async function * () {\n          for await (const buf of source) {\n            if (buf instanceof Uint8Array) {\n              yield buf\n            } else {\n              yield buf.subarray()\n            }\n          }\n        })())\n      } catch (err: any) {\n        // If aborted we can safely ignore\n        if (err.type !== 'aborted') {\n          // If the source errored the socket will already have been destroyed by\n          // duplex(). If the socket errored it will already be\n          // destroyed. There's nothing to do here except log the error & return.\n          log.error('%s error in sink', lOptsStr, err)\n        }\n      }\n\n      // we have finished writing, send the FIN message\n      socket.end()\n    },\n\n    source,\n\n    // If the remote address was passed, use it - it may have the peer ID encapsulated\n    remoteAddr,\n\n    timeline: { open: Date.now() },\n\n    async close (options: AbortOptions = {}) {\n      if (socket.destroyed) {\n        log('The %s socket is destroyed', lOptsStr)\n        return\n      }\n\n      if (closePromise != null) {\n        log('The %s socket is closed or closing', lOptsStr)\n        return closePromise\n      }\n\n      if (options.signal == null) {\n        const signal = AbortSignal.timeout(closeTimeout)\n\n        options = {\n          ...options,\n          signal\n        }\n      }\n\n      const abortSignalListener = (): void => {\n        socket.destroy(new CodeError('Destroying socket after timeout', 'ERR_CLOSE_TIMEOUT'))\n      }\n\n      options.signal?.addEventListener('abort', abortSignalListener)\n\n      try {\n        log('%s closing socket', lOptsStr)\n        closePromise = new Promise<void>((resolve, reject) => {\n          socket.once('close', () => {\n            // socket completely closed\n            log('%s socket closed', lOptsStr)\n\n            resolve()\n          })\n          socket.once('error', (err: Error) => {\n            log('%s socket error', lOptsStr, err)\n\n            // error closing socket\n            if (maConn.timeline.close == null) {\n              maConn.timeline.close = Date.now()\n            }\n            if (!socket.destroyed) {\n              reject(err)\n            }\n            // if socket is destroyed, 'closed' event will be emitted later to resolve the promise\n          })\n\n          // shorten inactivity timeout\n          socket.setTimeout(closeTimeout)\n\n          // close writable end of the socket\n          socket.end()\n\n          if (socket.writableLength > 0) {\n            // there are outgoing bytes waiting to be sent\n            socket.once('drain', () => {\n              log('%s socket drained', lOptsStr)\n\n              // all bytes have been sent we can destroy the socket (maybe) before the timeout\n              socket.destroy()\n            })\n          } else {\n            // nothing to send, destroy immediately, no need for the timeout\n            socket.destroy()\n          }\n        })\n\n        await closePromise\n      } catch (err: any) {\n        this.abort(err)\n      } finally {\n        options.signal?.removeEventListener('abort', abortSignalListener)\n      }\n    },\n\n    abort: (err: Error) => {\n      log('%s socket abort due to error', lOptsStr, err)\n\n      // the abortSignalListener may already destroyed the socket with an error\n      if (!socket.destroyed) {\n        socket.destroy(err)\n      }\n\n      if (maConn.timeline.close == null) {\n        maConn.timeline.close = Date.now()\n      }\n    },\n\n    log\n  }\n\n  return maConn\n}\n","/**\n * @packageDocumentation\n *\n * An implementation of a peer id\n *\n * @example\n *\n * ```TypeScript\n * import { peerIdFromString } from '@libp2p/peer-id'\n * const peer = peerIdFromString('k51qzi5uqu5dkwkqm42v9j9kqcam2jiuvloi16g72i4i4amoo2m8u3ol3mqu6s')\n *\n * console.log(peer.toCID()) // CID(bafzaa...)\n * console.log(peer.toString()) // \"12D3K...\"\n * ```\n */\n\nimport { CodeError } from '@libp2p/interface'\nimport { type Ed25519PeerId, type PeerIdType, type RSAPeerId, type Secp256k1PeerId, peerIdSymbol, type PeerId } from '@libp2p/interface'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { bases } from 'multiformats/basics'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { identity } from 'multiformats/hashes/identity'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport type { MultibaseDecoder } from 'multiformats/bases/interface'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nconst baseDecoder = Object\n  .values(bases)\n  .map(codec => codec.decoder)\n  // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n  .reduce((acc, curr) => acc.or(curr), bases.identity.decoder)\n\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72\n\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37\n\ninterface PeerIdInit {\n  type: PeerIdType\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface RSAPeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n  publicKey?: Uint8Array\n}\n\ninterface Ed25519PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface Secp256k1PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\nclass PeerIdImpl {\n  public type: PeerIdType\n  public readonly multihash: MultihashDigest\n  public readonly privateKey?: Uint8Array\n  public readonly publicKey?: Uint8Array\n  private string?: string\n\n  constructor (init: PeerIdInit) {\n    this.type = init.type\n    this.multihash = init.multihash\n    this.privateKey = init.privateKey\n\n    // mark string cache as non-enumerable\n    Object.defineProperty(this, 'string', {\n      enumerable: false,\n      writable: true\n    })\n  }\n\n  get [Symbol.toStringTag] (): string {\n    return `PeerId(${this.toString()})`\n  }\n\n  readonly [peerIdSymbol] = true\n\n  toString (): string {\n    if (this.string == null) {\n      this.string = base58btc.encode(this.multihash.bytes).slice(1)\n    }\n\n    return this.string\n  }\n\n  // return self-describing String representation\n  // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n  toCID (): CID {\n    return CID.createV1(LIBP2P_KEY_CODE, this.multihash)\n  }\n\n  toBytes (): Uint8Array {\n    return this.multihash.bytes\n  }\n\n  /**\n   * Returns Multiaddr as a JSON string\n   */\n  toJSON (): string {\n    return this.toString()\n  }\n\n  /**\n   * Checks the equality of `this` peer against a given PeerId\n   */\n  equals (id?: PeerId | Uint8Array | string): boolean {\n    if (id == null) {\n      return false\n    }\n\n    if (id instanceof Uint8Array) {\n      return uint8ArrayEquals(this.multihash.bytes, id)\n    } else if (typeof id === 'string') {\n      return peerIdFromString(id).equals(this as PeerId)\n    } else if (id?.multihash?.bytes != null) {\n      return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes)\n    } else {\n      throw new Error('not valid Id')\n    }\n  }\n\n  /**\n   * Returns PeerId as a human-readable string\n   * https://nodejs.org/api/util.html#utilinspectcustom\n   *\n   * @example\n   * ```TypeScript\n   * import { peerIdFromString } from '@libp2p/peer-id'\n   *\n   * console.info(peerIdFromString('QmFoo'))\n   * // 'PeerId(QmFoo)'\n   * ```\n   */\n  [inspect] (): string {\n    return `PeerId(${this.toString()})`\n  }\n}\n\nclass RSAPeerIdImpl extends PeerIdImpl implements RSAPeerId {\n  public readonly type = 'RSA'\n  public readonly publicKey?: Uint8Array\n\n  constructor (init: RSAPeerIdInit) {\n    super({ ...init, type: 'RSA' })\n\n    this.publicKey = init.publicKey\n  }\n}\n\nclass Ed25519PeerIdImpl extends PeerIdImpl implements Ed25519PeerId {\n  public readonly type = 'Ed25519'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Ed25519PeerIdInit) {\n    super({ ...init, type: 'Ed25519' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nclass Secp256k1PeerIdImpl extends PeerIdImpl implements Secp256k1PeerId {\n  public readonly type = 'secp256k1'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Secp256k1PeerIdInit) {\n    super({ ...init, type: 'secp256k1' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nexport function createPeerId (init: PeerIdInit): PeerId {\n  if (init.type === 'RSA') {\n    return new RSAPeerIdImpl(init)\n  }\n\n  if (init.type === 'Ed25519') {\n    return new Ed25519PeerIdImpl(init)\n  }\n\n  if (init.type === 'secp256k1') {\n    return new Secp256k1PeerIdImpl(init)\n  }\n\n  throw new CodeError('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"', 'ERR_INVALID_PARAMETERS')\n}\n\nexport function peerIdFromPeerId (other: any): PeerId {\n  if (other.type === 'RSA') {\n    return new RSAPeerIdImpl(other)\n  }\n\n  if (other.type === 'Ed25519') {\n    return new Ed25519PeerIdImpl(other)\n  }\n\n  if (other.type === 'secp256k1') {\n    return new Secp256k1PeerIdImpl(other)\n  }\n\n  throw new CodeError('Not a PeerId', 'ERR_INVALID_PARAMETERS')\n}\n\nexport function peerIdFromString (str: string, decoder?: MultibaseDecoder<any>): PeerId {\n  decoder = decoder ?? baseDecoder\n\n  if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n    // identity hash ed25519/secp256k1 key or sha2-256 hash of\n    // rsa public key - base58btc encoded either way\n    const multihash = Digest.decode(base58btc.decode(`z${str}`))\n\n    if (str.startsWith('12D')) {\n      return new Ed25519PeerIdImpl({ multihash })\n    } else if (str.startsWith('16U')) {\n      return new Secp256k1PeerIdImpl({ multihash })\n    } else {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  }\n\n  return peerIdFromBytes(baseDecoder.decode(str))\n}\n\nexport function peerIdFromBytes (buf: Uint8Array): PeerId {\n  try {\n    const multihash = Digest.decode(buf)\n\n    if (multihash.code === identity.code) {\n      if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash })\n      } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash })\n      }\n    }\n\n    if (multihash.code === sha256.code) {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  } catch {\n    return peerIdFromCID(CID.decode(buf))\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\nexport function peerIdFromCID (cid: CID): PeerId {\n  if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n    throw new Error('Supplied PeerID CID is invalid')\n  }\n\n  const multihash = cid.multihash\n\n  if (multihash.code === sha256.code) {\n    return new RSAPeerIdImpl({ multihash: cid.multihash })\n  } else if (multihash.code === identity.code) {\n    if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n      return new Ed25519PeerIdImpl({ multihash: cid.multihash })\n    } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n      return new Secp256k1PeerIdImpl({ multihash: cid.multihash })\n    }\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys (publicKey: Uint8Array, privateKey?: Uint8Array): Promise<PeerId> {\n  if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n    return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n    return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey })\n}\n","/**\n * @packageDocumentation\n *\n * The configured bootstrap peers will be discovered after the configured timeout. This will ensure there are some peers in the peer store for the node to use to discover other peers.\n *\n * They will be tagged with a tag with the name `'bootstrap'` tag, the value `50` and it will expire after two minutes which means the nodes connections may be closed if the maximum number of connections is reached.\n *\n * Clients that need constant connections to bootstrap nodes (e.g. browsers) can set the TTL to `Infinity`.\n *\n * @example Configuring a list of bootstrap nodes\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { bootstrap } from '@libp2p/bootstrap'\n *\n * const libp2p = await createLibp2p({\n *   peerDiscovery: [\n *     bootstrap({\n *       list: [\n *         // a list of bootstrap peer multiaddrs to connect to on node startup\n *         '/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ',\n *         '/dnsaddr/bootstrap.libp2p.io/ipfs/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n *         '/dnsaddr/bootstrap.libp2p.io/ipfs/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa'\n *       ]\n *     })\n *   ]\n * })\n *\n * libp2p.addEventListener('peer:discovery', (evt) => {\n *   console.log('found peer: ', evt.detail.toString())\n * })\n * ```\n */\n\nimport { TypedEventEmitter, peerDiscoverySymbol } from '@libp2p/interface'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport { P2P } from '@multiformats/mafmt'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport type { ComponentLogger, Logger, PeerDiscovery, PeerDiscoveryEvents, PeerInfo, PeerStore, Startable } from '@libp2p/interface'\n\nconst DEFAULT_BOOTSTRAP_TAG_NAME = 'bootstrap'\nconst DEFAULT_BOOTSTRAP_TAG_VALUE = 50\nconst DEFAULT_BOOTSTRAP_TAG_TTL = 120000\nconst DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT = 1000\n\nexport interface BootstrapInit {\n  /**\n   * The list of peer addresses in multi-address format\n   */\n  list: string[]\n\n  /**\n   * How long to wait before discovering bootstrap nodes\n   */\n  timeout?: number\n\n  /**\n   * Tag a bootstrap peer with this name before \"discovering\" it (default: 'bootstrap')\n   */\n  tagName?: string\n\n  /**\n   * The bootstrap peer tag will have this value (default: 50)\n   */\n  tagValue?: number\n\n  /**\n   * Cause the bootstrap peer tag to be removed after this number of ms (default: 2 minutes)\n   */\n  tagTTL?: number\n}\n\nexport interface BootstrapComponents {\n  peerStore: PeerStore\n  logger: ComponentLogger\n}\n\n/**\n * Emits 'peer' events on a regular interval for each peer in the provided list.\n */\nclass Bootstrap extends TypedEventEmitter<PeerDiscoveryEvents> implements PeerDiscovery, Startable {\n  static tag = 'bootstrap'\n\n  private readonly log: Logger\n  private timer?: ReturnType<typeof setTimeout>\n  private readonly list: PeerInfo[]\n  private readonly timeout: number\n  private readonly components: BootstrapComponents\n  private readonly _init: BootstrapInit\n\n  constructor (components: BootstrapComponents, options: BootstrapInit = { list: [] }) {\n    if (options.list == null || options.list.length === 0) {\n      throw new Error('Bootstrap requires a list of peer addresses')\n    }\n    super()\n\n    this.components = components\n    this.log = components.logger.forComponent('libp2p:bootstrap')\n    this.timeout = options.timeout ?? DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT\n    this.list = []\n\n    for (const candidate of options.list) {\n      if (!P2P.matches(candidate)) {\n        this.log.error('Invalid multiaddr')\n        continue\n      }\n\n      const ma = multiaddr(candidate)\n      const peerIdStr = ma.getPeerId()\n\n      if (peerIdStr == null) {\n        this.log.error('Invalid bootstrap multiaddr without peer id')\n        continue\n      }\n\n      const peerData: PeerInfo = {\n        id: peerIdFromString(peerIdStr),\n        multiaddrs: [ma]\n      }\n\n      this.list.push(peerData)\n    }\n\n    this._init = options\n  }\n\n  readonly [peerDiscoverySymbol] = this\n\n  readonly [Symbol.toStringTag] = '@libp2p/bootstrap'\n\n  isStarted (): boolean {\n    return Boolean(this.timer)\n  }\n\n  /**\n   * Start emitting events\n   */\n  start (): void {\n    if (this.isStarted()) {\n      return\n    }\n\n    this.log('Starting bootstrap node discovery, discovering peers after %s ms', this.timeout)\n    this.timer = setTimeout(() => {\n      void this._discoverBootstrapPeers()\n        .catch(err => {\n          this.log.error(err)\n        })\n    }, this.timeout)\n  }\n\n  /**\n   * Emit each address in the list as a PeerInfo\n   */\n  async _discoverBootstrapPeers (): Promise<void> {\n    if (this.timer == null) {\n      return\n    }\n\n    for (const peerData of this.list) {\n      await this.components.peerStore.merge(peerData.id, {\n        tags: {\n          [this._init.tagName ?? DEFAULT_BOOTSTRAP_TAG_NAME]: {\n            value: this._init.tagValue ?? DEFAULT_BOOTSTRAP_TAG_VALUE,\n            ttl: this._init.tagTTL ?? DEFAULT_BOOTSTRAP_TAG_TTL\n          }\n        }\n      })\n\n      // check we are still running\n      if (this.timer == null) {\n        return\n      }\n\n      this.safeDispatchEvent('peer', { detail: peerData })\n    }\n  }\n\n  /**\n   * Stop emitting events\n   */\n  stop (): void {\n    if (this.timer != null) {\n      clearTimeout(this.timer)\n    }\n\n    this.timer = undefined\n  }\n}\n\nexport function bootstrap (init: BootstrapInit): (components: BootstrapComponents) => PeerDiscovery {\n  return (components: BootstrapComponents) => new Bootstrap(components, init)\n}\n","/**\n * @packageDocumentation\n *\n * **Supported Key Types**\n *\n * The {@link generateKeyPair}, {@link marshalPublicKey}, and {@link marshalPrivateKey} functions accept a string `type` argument.\n *\n * Currently the `'RSA'`, `'ed25519'`, and `secp256k1` types are supported, although ed25519 and secp256k1 keys support only signing and verification of messages.\n *\n * For encryption / decryption support, RSA keys should be used.\n */\n\nimport { CodeError } from '@libp2p/interface'\nimport * as Ed25519 from './ed25519-class.js'\nimport generateEphemeralKeyPair from './ephemeral-keys.js'\nimport { importer } from './importer.js'\nimport { keyStretcher } from './key-stretcher.js'\nimport * as keysPBM from './keys.js'\nimport * as RSA from './rsa-class.js'\nimport { importFromPem } from './rsa-utils.js'\nimport * as Secp256k1 from './secp256k1-class.js'\nimport type { PrivateKey, PublicKey } from '@libp2p/interface'\n\nexport { keyStretcher }\nexport { generateEphemeralKeyPair }\nexport { keysPBM }\n\nexport type KeyTypes = 'RSA' | 'Ed25519' | 'secp256k1'\n\nexport { RsaPrivateKey, RsaPublicKey, MAX_RSA_KEY_SIZE } from './rsa-class.js'\nexport { Ed25519PrivateKey, Ed25519PublicKey } from './ed25519-class.js'\nexport { Secp256k1PrivateKey, Secp256k1PublicKey } from './secp256k1-class.js'\nexport type { JWKKeyPair } from './interface.js'\n\nexport const supportedKeys = {\n  rsa: RSA,\n  ed25519: Ed25519,\n  secp256k1: Secp256k1\n}\n\nfunction unsupportedKey (type: string): CodeError<Record<string, never>> {\n  const supported = Object.keys(supportedKeys).join(' / ')\n  return new CodeError(`invalid or unsupported key type ${type}. Must be ${supported}`, 'ERR_UNSUPPORTED_KEY_TYPE')\n}\n\nfunction typeToKey (type: string): typeof RSA | typeof Ed25519 | typeof Secp256k1 {\n  type = type.toLowerCase()\n\n  if (type === 'rsa' || type === 'ed25519' || type === 'secp256k1') {\n    return supportedKeys[type]\n  }\n\n  throw unsupportedKey(type)\n}\n\n/**\n * Generates a keypair of the given type and bitsize\n *\n * @param type\n * @param bits -  Minimum of 1024\n */\nexport async function generateKeyPair (type: KeyTypes, bits?: number): Promise<PrivateKey> {\n  return typeToKey(type).generateKeyPair(bits ?? 2048)\n}\n\n/**\n * Generates a keypair of the given type and bitsize.\n *\n * Seed is a 32 byte uint8array\n */\nexport async function generateKeyPairFromSeed (type: KeyTypes, seed: Uint8Array, bits?: number): Promise<PrivateKey> {\n  if (type.toLowerCase() !== 'ed25519') {\n    throw new CodeError('Seed key derivation is unimplemented for RSA or secp256k1', 'ERR_UNSUPPORTED_KEY_DERIVATION_TYPE')\n  }\n\n  return Ed25519.generateKeyPairFromSeed(seed)\n}\n\n/**\n * Converts a protobuf serialized public key into its representative object\n */\nexport function unmarshalPublicKey (buf: Uint8Array): PublicKey {\n  const decoded = keysPBM.PublicKey.decode(buf)\n  const data = decoded.Data ?? new Uint8Array()\n\n  switch (decoded.Type) {\n    case keysPBM.KeyType.RSA:\n      return supportedKeys.rsa.unmarshalRsaPublicKey(data)\n    case keysPBM.KeyType.Ed25519:\n      return supportedKeys.ed25519.unmarshalEd25519PublicKey(data)\n    case keysPBM.KeyType.Secp256k1:\n      return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(data)\n    default:\n      throw unsupportedKey(decoded.Type ?? 'unknown')\n  }\n}\n\n/**\n * Converts a public key object into a protobuf serialized public key\n */\nexport function marshalPublicKey (key: { bytes: Uint8Array }, type?: string): Uint8Array {\n  type = (type ?? 'rsa').toLowerCase()\n  typeToKey(type) // check type\n  return key.bytes\n}\n\n/**\n * Converts a protobuf serialized private key into its representative object\n */\nexport async function unmarshalPrivateKey (buf: Uint8Array): Promise<PrivateKey> {\n  const decoded = keysPBM.PrivateKey.decode(buf)\n  const data = decoded.Data ?? new Uint8Array()\n\n  switch (decoded.Type) {\n    case keysPBM.KeyType.RSA:\n      return supportedKeys.rsa.unmarshalRsaPrivateKey(data)\n    case keysPBM.KeyType.Ed25519:\n      return supportedKeys.ed25519.unmarshalEd25519PrivateKey(data)\n    case keysPBM.KeyType.Secp256k1:\n      return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(data)\n    default:\n      throw unsupportedKey(decoded.Type ?? 'RSA')\n  }\n}\n\n/**\n * Converts a private key object into a protobuf serialized private key\n */\nexport function marshalPrivateKey (key: { bytes: Uint8Array }, type?: string): Uint8Array {\n  type = (type ?? 'rsa').toLowerCase()\n  typeToKey(type) // check type\n  return key.bytes\n}\n\n/**\n * Converts an exported private key into its representative object.\n *\n * Supported formats are 'pem' (RSA only) and 'libp2p-key'.\n */\nexport async function importKey (encryptedKey: string, password: string): Promise<PrivateKey> {\n  try {\n    const key = await importer(encryptedKey, password)\n    return await unmarshalPrivateKey(key)\n  } catch (_) {\n    // Ignore and try the old pem decrypt\n  }\n\n  if (!encryptedKey.includes('BEGIN')) {\n    throw new CodeError('Encrypted key was not a libp2p-key or a PEM file', 'ERR_INVALID_IMPORT_FORMAT')\n  }\n\n  return importFromPem(encryptedKey, password)\n}\n","import { CodeError } from '@libp2p/interface'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { identity } from 'multiformats/hashes/identity'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { isPromise } from '../util.js'\nimport * as crypto from './ed25519.js'\nimport { exporter } from './exporter.js'\nimport * as pbm from './keys.js'\nimport type { Multibase } from 'multiformats'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class Ed25519PublicKey {\n  private readonly _key: Uint8Array\n\n  constructor (key: Uint8Array) {\n    this._key = ensureKey(key, crypto.publicKeyLength)\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array): boolean {\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal (): Uint8Array {\n    return this._key\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PublicKey.encode({\n      Type: pbm.KeyType.Ed25519,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n}\n\nexport class Ed25519PrivateKey {\n  private readonly _key: Uint8Array\n  private readonly _publicKey: Uint8Array\n\n  // key       - 64 byte Uint8Array containing private key\n  // publicKey - 32 byte Uint8Array containing public key\n  constructor (key: Uint8Array, publicKey: Uint8Array) {\n    this._key = ensureKey(key, crypto.privateKeyLength)\n    this._publicKey = ensureKey(publicKey, crypto.publicKeyLength)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList): Uint8Array {\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public (): Ed25519PublicKey {\n    return new Ed25519PublicKey(this._publicKey)\n  }\n\n  marshal (): Uint8Array {\n    return this._key\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PrivateKey.encode({\n      Type: pbm.KeyType.Ed25519,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash (): Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n    let bytes: Uint8Array\n\n    if (isPromise(p)) {\n      ({ bytes } = await p)\n    } else {\n      bytes = p.bytes\n    }\n\n    return bytes\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the identity multihash containing its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   *\n   * @returns {Promise<string>}\n   */\n  async id (): Promise<string> {\n    const encoding = identity.digest(this.public.bytes)\n    return base58btc.encode(encoding.bytes).substring(1)\n  }\n\n  /**\n   * Exports the key into a password protected `format`\n   */\n  async export (password: string, format = 'libp2p-key'): Promise<Multibase<'m'>> {\n    if (format === 'libp2p-key') {\n      return exporter(this.bytes, password)\n    } else {\n      throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nexport function unmarshalEd25519PrivateKey (bytes: Uint8Array): Ed25519PrivateKey {\n  // Try the old, redundant public key version\n  if (bytes.length > crypto.privateKeyLength) {\n    bytes = ensureKey(bytes, crypto.privateKeyLength + crypto.publicKeyLength)\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength)\n    const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length)\n    return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes)\n  }\n\n  bytes = ensureKey(bytes, crypto.privateKeyLength)\n  const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength)\n  const publicKeyBytes = bytes.subarray(crypto.publicKeyLength)\n  return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes)\n}\n\nexport function unmarshalEd25519PublicKey (bytes: Uint8Array): Ed25519PublicKey {\n  bytes = ensureKey(bytes, crypto.publicKeyLength)\n  return new Ed25519PublicKey(bytes)\n}\n\nexport async function generateKeyPair (): Promise<Ed25519PrivateKey> {\n  const { privateKey, publicKey } = crypto.generateKey()\n  return new Ed25519PrivateKey(privateKey, publicKey)\n}\n\nexport async function generateKeyPairFromSeed (seed: Uint8Array): Promise<Ed25519PrivateKey> {\n  const { privateKey, publicKey } = crypto.generateKeyFromSeed(seed)\n  return new Ed25519PrivateKey(privateKey, publicKey)\n}\n\nfunction ensureKey (key: Uint8Array, length: number): Uint8Array {\n  key = Uint8Array.from(key ?? [])\n  if (key.length !== length) {\n    throw new CodeError(`Key must be a Uint8Array of length ${length}, got ${key.length}`, 'ERR_INVALID_KEY_TYPE')\n  }\n  return key\n}\n","import { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nexport function base64urlToBuffer (str: string, len?: number): Uint8Array {\n  let buf = uint8ArrayFromString(str, 'base64urlpad')\n\n  if (len != null) {\n    if (buf.length > len) throw new Error('byte array longer than desired length')\n    buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf])\n  }\n\n  return buf\n}\n\nexport function isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  if (thing == null) {\n    return false\n  }\n\n  return typeof thing.then === 'function' &&\n    typeof thing.catch === 'function' &&\n    typeof thing.finally === 'function'\n}\n","import crypto from 'crypto'\nimport { concat as uint8arrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8arrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8arrayToString } from 'uint8arrays/to-string'\nimport type { Uint8ArrayKeyPair } from './interface.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst keypair = crypto.generateKeyPairSync\n\nconst PUBLIC_KEY_BYTE_LENGTH = 32\nconst PRIVATE_KEY_BYTE_LENGTH = 64 // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32\nconst SIGNATURE_BYTE_LENGTH = 64\n\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength }\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength }\n\nfunction derivePublicKey (privateKey: Uint8Array): Uint8Array {\n  const keyObject = crypto.createPrivateKey({\n    format: 'jwk',\n    key: {\n      crv: 'Ed25519',\n      x: '',\n      d: uint8arrayToString(privateKey, 'base64url'),\n      kty: 'OKP'\n    }\n  })\n  const jwk = keyObject.export({\n    format: 'jwk'\n  })\n\n  if (jwk.x == null || jwk.x === '') {\n    throw new Error('Could not export JWK public key')\n  }\n\n  return uint8arrayFromString(jwk.x, 'base64url')\n}\n\nexport function generateKey (): Uint8ArrayKeyPair {\n  const key = keypair('ed25519', {\n    publicKeyEncoding: { type: 'spki', format: 'jwk' },\n    privateKeyEncoding: { type: 'pkcs8', format: 'jwk' }\n  })\n\n  // @ts-expect-error node types are missing jwk as a format\n  const privateKeyRaw = uint8arrayFromString(key.privateKey.d, 'base64url')\n  // @ts-expect-error node types are missing jwk as a format\n  const publicKeyRaw = uint8arrayFromString(key.privateKey.x, 'base64url')\n\n  return {\n    privateKey: uint8arrayConcat([privateKeyRaw, publicKeyRaw], privateKeyRaw.byteLength + publicKeyRaw.byteLength),\n    publicKey: publicKeyRaw\n  }\n}\n\n/**\n * Generate keypair from a 32 byte uint8array\n */\nexport function generateKeyFromSeed (seed: Uint8Array): Uint8ArrayKeyPair {\n  if (seed.length !== KEYS_BYTE_LENGTH) {\n    throw new TypeError('\"seed\" must be 32 bytes in length.')\n  } else if (!(seed instanceof Uint8Array)) {\n    throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.')\n  }\n\n  // based on node forges algorithm, the seed is used directly as private key\n  const publicKeyRaw = derivePublicKey(seed)\n\n  return {\n    privateKey: uint8arrayConcat([seed, publicKeyRaw], seed.byteLength + publicKeyRaw.byteLength),\n    publicKey: publicKeyRaw\n  }\n}\n\nexport function hashAndSign (key: Uint8Array, msg: Uint8Array | Uint8ArrayList): Buffer {\n  if (!(key instanceof Uint8Array)) {\n    throw new TypeError('\"key\" must be a node.js Buffer, or Uint8Array.')\n  }\n\n  let privateKey: Uint8Array\n  let publicKey: Uint8Array\n\n  if (key.byteLength === PRIVATE_KEY_BYTE_LENGTH) {\n    privateKey = key.subarray(0, 32)\n    publicKey = key.subarray(32)\n  } else if (key.byteLength === KEYS_BYTE_LENGTH) {\n    privateKey = key.subarray(0, 32)\n    publicKey = derivePublicKey(privateKey)\n  } else {\n    throw new TypeError('\"key\" must be 64 or 32 bytes in length.')\n  }\n\n  const obj = crypto.createPrivateKey({\n    format: 'jwk',\n    key: {\n      crv: 'Ed25519',\n      d: uint8arrayToString(privateKey, 'base64url'),\n      x: uint8arrayToString(publicKey, 'base64url'),\n      kty: 'OKP'\n    }\n  })\n\n  return crypto.sign(null, msg instanceof Uint8Array ? msg : msg.subarray(), obj)\n}\n\nexport function hashAndVerify (key: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): boolean {\n  if (key.byteLength !== PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError('\"key\" must be 32 bytes in length.')\n  } else if (!(key instanceof Uint8Array)) {\n    throw new TypeError('\"key\" must be a node.js Buffer, or Uint8Array.')\n  }\n\n  if (sig.byteLength !== SIGNATURE_BYTE_LENGTH) {\n    throw new TypeError('\"sig\" must be 64 bytes in length.')\n  } else if (!(sig instanceof Uint8Array)) {\n    throw new TypeError('\"sig\" must be a node.js Buffer, or Uint8Array.')\n  }\n\n  const obj = crypto.createPublicKey({\n    format: 'jwk',\n    key: {\n      crv: 'Ed25519',\n      x: uint8arrayToString(key, 'base64url'),\n      kty: 'OKP'\n    }\n  })\n\n  return crypto.verify(null, msg instanceof Uint8Array ? msg : msg.subarray(), obj, sig)\n}\n","import { base64 } from 'multiformats/bases/base64'\nimport * as ciphers from '../ciphers/aes-gcm.js'\nimport type { Multibase } from 'multiformats'\n\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\nexport async function exporter (privateKey: Uint8Array, password: string): Promise<Multibase<'m'>> {\n  const cipher = ciphers.create()\n  const encryptedKey = await cipher.encrypt(privateKey, password)\n  return base64.encode(encryptedKey)\n}\n","import crypto from 'crypto'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport type { CreateOptions, AESCipher } from './interface.js'\n\n// Based off of code from https://github.com/luke-park/SecureCompatibleEncryptionExamples\n\nexport function create (opts?: CreateOptions): AESCipher {\n  const algorithm = opts?.algorithm ?? 'aes-128-gcm'\n  const keyLength = opts?.keyLength ?? 16\n  const nonceLength = opts?.nonceLength ?? 12\n  const digest = opts?.digest ?? 'sha256'\n  const saltLength = opts?.saltLength ?? 16\n  const iterations = opts?.iterations ?? 32767\n  const algorithmTagLength = opts?.algorithmTagLength ?? 16\n\n  function encryptWithKey (data: Uint8Array, key: Uint8Array): Uint8Array {\n    const nonce = crypto.randomBytes(nonceLength)\n\n    // Create the cipher instance.\n    const cipher = crypto.createCipheriv(algorithm, key, nonce)\n\n    // Encrypt and prepend nonce.\n    const ciphertext = uint8ArrayConcat([cipher.update(data), cipher.final()])\n\n    // @ts-expect-error getAuthTag is not a function\n    return uint8ArrayConcat([nonce, ciphertext, cipher.getAuthTag()])\n  }\n\n  /**\n   * Uses the provided password to derive a pbkdf2 key. The key\n   * will then be used to encrypt the data.\n   */\n  async function encrypt (data: Uint8Array, password: string | Uint8Array): Promise<Uint8Array> {\n    // Generate a 128-bit salt using a CSPRNG.\n    const salt = crypto.randomBytes(saltLength)\n\n    if (typeof password === 'string') {\n      password = uint8ArrayFromString(password)\n    }\n\n    // Derive a key using PBKDF2.\n    const key = crypto.pbkdf2Sync(password, salt, iterations, keyLength, digest)\n\n    // Encrypt and prepend salt.\n    return uint8ArrayConcat([salt, encryptWithKey(Uint8Array.from(data), key)])\n  }\n\n  /**\n   * Decrypts the given cipher text with the provided key. The `key` should\n   * be a cryptographically safe key and not a plaintext password. To use\n   * a plaintext password, use `decrypt`. The options used to create\n   * this decryption cipher must be the same as those used to create\n   * the encryption cipher.\n   */\n  function decryptWithKey (ciphertextAndNonce: Uint8Array, key: Uint8Array): Uint8Array {\n    // Create Uint8Arrays of nonce, ciphertext and tag.\n    const nonce = ciphertextAndNonce.subarray(0, nonceLength)\n    const ciphertext = ciphertextAndNonce.subarray(nonceLength, ciphertextAndNonce.length - algorithmTagLength)\n    const tag = ciphertextAndNonce.subarray(ciphertext.length + nonceLength)\n\n    // Create the cipher instance.\n    const cipher = crypto.createDecipheriv(algorithm, key, nonce)\n\n    // Decrypt and return result.\n    // @ts-expect-error getAuthTag is not a function\n    cipher.setAuthTag(tag)\n    return uint8ArrayConcat([cipher.update(ciphertext), cipher.final()])\n  }\n\n  /**\n   * Uses the provided password to derive a pbkdf2 key. The key\n   * will then be used to decrypt the data. The options used to create\n   * this decryption cipher must be the same as those used to create\n   * the encryption cipher.\n   *\n   * @param {Uint8Array} data - The data to decrypt\n   * @param {string|Uint8Array} password - A plain password\n   */\n  async function decrypt (data: Uint8Array, password: string | Uint8Array): Promise<Uint8Array> {\n    // Create Uint8Arrays of salt and ciphertextAndNonce.\n    const salt = data.subarray(0, saltLength)\n    const ciphertextAndNonce = data.subarray(saltLength)\n\n    if (typeof password === 'string') {\n      password = uint8ArrayFromString(password)\n    }\n\n    // Derive the key using PBKDF2.\n    const key = crypto.pbkdf2Sync(password, salt, iterations, keyLength, digest)\n\n    // Decrypt and return result.\n    return decryptWithKey(ciphertextAndNonce, key)\n  }\n\n  const cipher: AESCipher = {\n    encrypt,\n    decrypt\n  }\n\n  return cipher\n}\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport enum KeyType {\n  RSA = 'RSA',\n  Ed25519 = 'Ed25519',\n  Secp256k1 = 'Secp256k1'\n}\n\nenum __KeyTypeValues {\n  RSA = 0,\n  Ed25519 = 1,\n  Secp256k1 = 2\n}\n\nexport namespace KeyType {\n  export const codec = (): Codec<KeyType> => {\n    return enumeration<KeyType>(__KeyTypeValues)\n  }\n}\nexport interface PublicKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PublicKey {\n  let _codec: Codec<PublicKey>\n\n  export const codec = (): Codec<PublicKey> => {\n    if (_codec == null) {\n      _codec = message<PublicKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            case 2:\n              obj.Data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PublicKey>): Uint8Array => {\n    return encodeMessage(obj, PublicKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PublicKey => {\n    return decodeMessage(buf, PublicKey.codec())\n  }\n}\n\nexport interface PrivateKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PrivateKey {\n  let _codec: Codec<PrivateKey>\n\n  export const codec = (): Codec<PrivateKey> => {\n    if (_codec == null) {\n      _codec = message<PrivateKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            case 2:\n              obj.Data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PrivateKey>): Uint8Array => {\n    return encodeMessage(obj, PrivateKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PrivateKey => {\n    return decodeMessage(buf, PrivateKey.codec())\n  }\n}\n","const f32 = new Float32Array([-0])\nconst f8b = new Uint8Array(f32.buffer)\n\n/**\n * Writes a 32 bit float to a buffer using little endian byte order\n */\nexport function writeFloatLE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[0]\n  buf[pos + 1] = f8b[1]\n  buf[pos + 2] = f8b[2]\n  buf[pos + 3] = f8b[3]\n}\n\n/**\n * Writes a 32 bit float to a buffer using big endian byte order\n */\nexport function writeFloatBE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[3]\n  buf[pos + 1] = f8b[2]\n  buf[pos + 2] = f8b[1]\n  buf[pos + 3] = f8b[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using little endian byte order\n */\nexport function readFloatLE (buf: Uint8Array, pos: number): number {\n  f8b[0] = buf[pos]\n  f8b[1] = buf[pos + 1]\n  f8b[2] = buf[pos + 2]\n  f8b[3] = buf[pos + 3]\n  return f32[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using big endian byte order\n */\nexport function readFloatBE (buf: Uint8Array, pos: number): number {\n  f8b[3] = buf[pos]\n  f8b[2] = buf[pos + 1]\n  f8b[1] = buf[pos + 2]\n  f8b[0] = buf[pos + 3]\n  return f32[0]\n}\n\nconst f64 = new Float64Array([-0])\nconst d8b = new Uint8Array(f64.buffer)\n\n/**\n * Writes a 64 bit double to a buffer using little endian byte order\n */\nexport function writeDoubleLE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[0]\n  buf[pos + 1] = d8b[1]\n  buf[pos + 2] = d8b[2]\n  buf[pos + 3] = d8b[3]\n  buf[pos + 4] = d8b[4]\n  buf[pos + 5] = d8b[5]\n  buf[pos + 6] = d8b[6]\n  buf[pos + 7] = d8b[7]\n}\n\n/**\n * Writes a 64 bit double to a buffer using big endian byte order\n */\nexport function writeDoubleBE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[7]\n  buf[pos + 1] = d8b[6]\n  buf[pos + 2] = d8b[5]\n  buf[pos + 3] = d8b[4]\n  buf[pos + 4] = d8b[3]\n  buf[pos + 5] = d8b[2]\n  buf[pos + 6] = d8b[1]\n  buf[pos + 7] = d8b[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using little endian byte order\n */\nexport function readDoubleLE (buf: Uint8Array, pos: number): number {\n  d8b[0] = buf[pos]\n  d8b[1] = buf[pos + 1]\n  d8b[2] = buf[pos + 2]\n  d8b[3] = buf[pos + 3]\n  d8b[4] = buf[pos + 4]\n  d8b[5] = buf[pos + 5]\n  d8b[6] = buf[pos + 6]\n  d8b[7] = buf[pos + 7]\n  return f64[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using big endian byte order\n */\nexport function readDoubleBE (buf: Uint8Array, pos: number): number {\n  d8b[7] = buf[pos]\n  d8b[6] = buf[pos + 1]\n  d8b[5] = buf[pos + 2]\n  d8b[4] = buf[pos + 3]\n  d8b[3] = buf[pos + 4]\n  d8b[2] = buf[pos + 5]\n  d8b[1] = buf[pos + 6]\n  d8b[0] = buf[pos + 7]\n  return f64[0]\n}\n","// the largest BigInt we can safely downcast to a Number\nconst MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER)\nconst MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER)\n\n/**\n * Constructs new long bits.\n *\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @function Object() { [native code] }\n * @param {number} lo - Low 32 bits, unsigned\n * @param {number} hi - High 32 bits, unsigned\n */\nexport class LongBits {\n  public lo: number\n  public hi: number\n\n  constructor (lo: number, hi: number) {\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits\n     */\n    this.lo = lo | 0\n\n    /**\n     * High bits\n     */\n    this.hi = hi | 0\n  }\n\n  /**\n   * Converts this long bits to a possibly unsafe JavaScript number\n   */\n  toNumber (unsigned: boolean = false): number {\n    if (!unsigned && (this.hi >>> 31) > 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(lo + hi * 4294967296)\n    }\n    return this.lo + this.hi * 4294967296\n  }\n\n  /**\n   * Converts this long bits to a bigint\n   */\n  toBigInt (unsigned: boolean = false): bigint {\n    if (unsigned) {\n      return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n    }\n\n    if ((this.hi >>> 31) !== 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(BigInt(lo) + (BigInt(hi) << 32n))\n    }\n\n    return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n  }\n\n  /**\n   * Converts this long bits to a string\n   */\n  toString (unsigned: boolean = false): string {\n    return this.toBigInt(unsigned).toString()\n  }\n\n  /**\n   * Zig-zag encodes this long bits\n   */\n  zzEncode (): this {\n    const mask = this.hi >> 31\n    this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\n    this.lo = (this.lo << 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Zig-zag decodes this long bits\n   */\n  zzDecode (): this {\n    const mask = -(this.lo & 1)\n    this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\n    this.hi = (this.hi >>> 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Calculates the length of this longbits when encoded as a varint.\n   */\n  length (): number {\n    const part0 = this.lo\n    const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0\n    const part2 = this.hi >>> 24\n    return part2 === 0\n      ? part1 === 0\n        ? part0 < 16384\n          ? part0 < 128 ? 1 : 2\n          : part0 < 2097152 ? 3 : 4\n        : part1 < 16384\n          ? part1 < 128 ? 5 : 6\n          : part1 < 2097152 ? 7 : 8\n      : part2 < 128 ? 9 : 10\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromBigInt (value: bigint): LongBits {\n    if (value === 0n) {\n      return zero\n    }\n\n    if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {\n      return this.fromNumber(Number(value))\n    }\n\n    const negative = value < 0n\n\n    if (negative) {\n      value = -value\n    }\n\n    let hi = value >> 32n\n    let lo = value - (hi << 32n)\n\n    if (negative) {\n      hi = ~hi | 0n\n      lo = ~lo | 0n\n\n      if (++lo > TWO_32) {\n        lo = 0n\n        if (++hi > TWO_32) { hi = 0n }\n      }\n    }\n\n    return new LongBits(Number(lo), Number(hi))\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromNumber (value: number): LongBits {\n    if (value === 0) { return zero }\n    const sign = value < 0\n    if (sign) { value = -value }\n    let lo = value >>> 0\n    let hi = (value - lo) / 4294967296 >>> 0\n    if (sign) {\n      hi = ~hi >>> 0\n      lo = ~lo >>> 0\n      if (++lo > 4294967295) {\n        lo = 0\n        if (++hi > 4294967295) { hi = 0 }\n      }\n    }\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Constructs new long bits from a number, long or string\n   */\n  static from (value: bigint | number | string | { low: number, high: number }): LongBits {\n    if (typeof value === 'number') {\n      return LongBits.fromNumber(value)\n    }\n    if (typeof value === 'bigint') {\n      return LongBits.fromBigInt(value)\n    }\n    if (typeof value === 'string') {\n      return LongBits.fromBigInt(BigInt(value))\n    }\n    return value.low != null || value.high != null ? new LongBits(value.low >>> 0, value.high >>> 0) : zero\n  }\n}\n\nconst zero = new LongBits(0, 0)\nzero.toBigInt = function () { return 0n }\nzero.zzEncode = zero.zzDecode = function () { return this }\nzero.length = function () { return 1 }\n\nconst TWO_32 = 4294967296n\n","/**\n * Calculates the UTF8 byte length of a string\n */\nexport function length (string: string): number {\n  let len = 0\n  let c = 0\n  for (let i = 0; i < string.length; ++i) {\n    c = string.charCodeAt(i)\n\n    if (c < 128) {\n      len += 1\n    } else if (c < 2048) {\n      len += 2\n    } else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i\n      len += 4\n    } else {\n      len += 3\n    }\n  }\n\n  return len\n}\n\n/**\n * Reads UTF8 bytes as a string\n */\nexport function read (buffer: Uint8Array, start: number, end: number): string {\n  const len = end - start\n\n  if (len < 1) {\n    return ''\n  }\n\n  let parts: string[] | undefined\n  const chunk: number[] = []\n  let i = 0 // char offset\n  let t: number // temporary\n\n  while (start < end) {\n    t = buffer[start++]\n\n    if (t < 128) {\n      chunk[i++] = t\n    } else if (t > 191 && t < 224) {\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63\n    } else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000\n      chunk[i++] = 0xD800 + (t >> 10)\n      chunk[i++] = 0xDC00 + (t & 1023)\n    } else {\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63\n    }\n\n    if (i > 8191) {\n      (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk))\n      i = 0\n    }\n  }\n\n  if (parts != null) {\n    if (i > 0) {\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))\n    }\n\n    return parts.join('')\n  }\n\n  return String.fromCharCode.apply(String, chunk.slice(0, i))\n}\n\n/**\n * Writes a string as UTF8 bytes\n */\nexport function write (string: string, buffer: Uint8Array, offset: number): number {\n  const start = offset\n  let c1 // character 1\n  let c2 // character 2\n\n  for (let i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i)\n\n    if (c1 < 128) {\n      buffer[offset++] = c1\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192\n      buffer[offset++] = c1 & 63 | 128\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF)\n      ++i\n      buffer[offset++] = c1 >> 18 | 240\n      buffer[offset++] = c1 >> 12 & 63 | 128\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    } else {\n      buffer[offset++] = c1 >> 12 | 224\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    }\n  }\n\n  return offset - start\n}\n","import { decodeUint8Array, encodingLength } from 'uint8-varint'\nimport { readFloatLE, readDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport * as utf8 from './utf8.js'\nimport type { Reader } from '../index.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/* istanbul ignore next */\nfunction indexOutOfRange (reader: Reader, writeLength?: number): RangeError {\n  return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`)\n}\n\nfunction readFixed32End (buf: Uint8Array, end: number): number { // note that this uses `end`, not `pos`\n  return (buf[end - 4] |\n        buf[end - 3] << 8 |\n        buf[end - 2] << 16 |\n        buf[end - 1] << 24) >>> 0\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n */\nexport class Uint8ArrayReader implements Reader {\n  public buf: Uint8Array\n  public pos: number\n  public len: number\n\n  public _slice = Uint8Array.prototype.subarray\n\n  constructor (buffer: Uint8Array) {\n    /**\n     * Read buffer\n     */\n    this.buf = buffer\n\n    /**\n     * Read buffer position\n     */\n    this.pos = 0\n\n    /**\n     * Read buffer length\n     */\n    this.len = buffer.length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value\n   */\n  uint32 (): number {\n    let value = 4294967295\n\n    value = (this.buf[this.pos] & 127) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value\n\n    if ((this.pos += 5) > this.len) {\n      this.pos = this.len\n      throw indexOutOfRange(this, 10)\n    }\n\n    return value\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value\n   */\n  int32 (): number {\n    return this.uint32() | 0\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 32 bit value\n   */\n  sint32 (): number {\n    const value = this.uint32()\n    return value >>> 1 ^ -(value & 1) | 0\n  }\n\n  /**\n   * Reads a varint as a boolean\n   */\n  bool (): boolean {\n    return this.uint32() !== 0\n  }\n\n  /**\n   * Reads fixed 32 bits as an unsigned 32 bit integer\n   */\n  fixed32 (): number {\n    if (this.pos + 4 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const res = readFixed32End(this.buf, this.pos += 4)\n\n    return res\n  }\n\n  /**\n   * Reads fixed 32 bits as a signed 32 bit integer\n   */\n  sfixed32 (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const res = readFixed32End(this.buf, this.pos += 4) | 0\n\n    return res\n  }\n\n  /**\n   * Reads a float (32 bit) as a number\n   */\n  float (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const value = readFloatLE(this.buf, this.pos)\n    this.pos += 4\n    return value\n  }\n\n  /**\n   * Reads a double (64 bit float) as a number\n   */\n  double (): number {\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const value = readDoubleLE(this.buf, this.pos)\n    this.pos += 8\n    return value\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint\n   */\n  bytes (): Uint8Array {\n    const length = this.uint32()\n    const start = this.pos\n    const end = this.pos + length\n\n    /* istanbul ignore if */\n    if (end > this.len) {\n      throw indexOutOfRange(this, length)\n    }\n\n    this.pos += length\n\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n      ? new Uint8Array(0)\n      : this.buf.subarray(start, end)\n  }\n\n  /**\n   * Reads a string preceded by its byte length as a varint\n   */\n  string (): string {\n    const bytes = this.bytes()\n    return utf8.read(bytes, 0, bytes.length)\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint\n   */\n  skip (length?: number): this {\n    if (typeof length === 'number') {\n      /* istanbul ignore if */\n      if (this.pos + length > this.len) { throw indexOutOfRange(this, length) }\n      this.pos += length\n    } else {\n      do {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n      } while ((this.buf[this.pos++] & 128) !== 0)\n    }\n    return this\n  }\n\n  /**\n   * Skips the next element of the specified wire type\n   */\n  skipType (wireType: number): this {\n    switch (wireType) {\n      case 0:\n        this.skip()\n        break\n      case 1:\n        this.skip(8)\n        break\n      case 2:\n        this.skip(this.uint32())\n        break\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType)\n        }\n        break\n      case 5:\n        this.skip(4)\n        break\n\n        /* istanbul ignore next */\n      default:\n        throw Error(`invalid wire type ${wireType} at offset ${this.pos}`)\n    }\n    return this\n  }\n\n  private readLongVarint (): LongBits {\n    // tends to deopt with local vars for octet etc.\n    const bits = new LongBits(0, 0)\n    let i = 0\n    if (this.len - this.pos > 4) { // fast route (lo)\n      for (; i < 4; ++i) {\n        // 1st..4th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 5th\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0\n      if (this.buf[this.pos++] < 128) { return bits }\n      i = 0\n    } else {\n      for (; i < 3; ++i) {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) { throw indexOutOfRange(this) }\n        // 1st..3th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 4th\n      bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0\n      return bits\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n      for (; i < 5; ++i) {\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    } else {\n      for (; i < 5; ++i) {\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    }\n\n    throw Error('invalid varint encoding')\n  }\n\n  private readFixed64 (): LongBits {\n    if (this.pos + 8 > this.len) {\n      throw indexOutOfRange(this, 8)\n    }\n\n    const lo = readFixed32End(this.buf, this.pos += 4)\n    const hi = readFixed32End(this.buf, this.pos += 4)\n\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64 (): bigint {\n    return this.readLongVarint().toBigInt()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  int64Number (): number {\n    return this.readLongVarint().toNumber()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a string\n   */\n  int64String (): string {\n    return this.readLongVarint().toString()\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64 (): bigint {\n    return this.readLongVarint().toBigInt(true)\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  uint64Number (): number {\n    const value = decodeUint8Array(this.buf, this.pos)\n    this.pos += encodingLength(value)\n    return value\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a string\n   */\n  uint64String (): string {\n    return this.readLongVarint().toString(true)\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64 (): bigint {\n    return this.readLongVarint().zzDecode().toBigInt()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * possibly unsafe JavaScript number\n   */\n  sint64Number (): number {\n    return this.readLongVarint().zzDecode().toNumber()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * string\n   */\n  sint64String (): string {\n    return this.readLongVarint().zzDecode().toString()\n  }\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a possibly unsafe JavaScript number\n   */\n  fixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a string\n   */\n  fixed64String (): string {\n    return this.readFixed64().toString()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe\n   * JavaScript number\n   */\n  sfixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a string\n   */\n  sfixed64String (): string {\n    return this.readFixed64().toString()\n  }\n}\n\nexport function createReader (buf: Uint8Array | Uint8ArrayList): Reader {\n  return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray())\n}\n","import { createReader } from './utils/reader.js'\nimport type { Codec, DecodeOptions } from './codec.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport function decodeMessage <T> (buf: Uint8Array | Uint8ArrayList, codec: Pick<Codec<T>, 'decode'>, opts?: DecodeOptions<T>): T {\n  const reader = createReader(buf)\n\n  return codec.decode(reader, undefined, opts)\n}\n","import { allocUnsafe } from 'uint8arrays/alloc'\n\n/**\n * A general purpose buffer pool\n */\nexport default function pool (size?: number): (size: number) => Uint8Array {\n  const SIZE = size ?? 8192\n  const MAX = SIZE >>> 1\n  let slab: Uint8Array\n  let offset = SIZE\n  return function poolAlloc (size: number) {\n    if (size < 1 || size > MAX) {\n      return allocUnsafe(size)\n    }\n\n    if (offset + size > SIZE) {\n      slab = allocUnsafe(SIZE)\n      offset = 0\n    }\n\n    const buf = slab.subarray(offset, offset += size)\n\n    if ((offset & 7) !== 0) {\n      // align to 32 bit\n      offset = (offset | 7) + 1\n    }\n\n    return buf\n  }\n}\n","import { encodeUint8Array, encodingLength } from 'uint8-varint'\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { writeFloatLE, writeDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport pool from './pool.js'\nimport * as utf8 from './utf8.js'\nimport type { Writer } from '../index.js'\n\ninterface WriterOperation<T> {\n  (val: T, buf: Uint8Array, pos: number): any\n}\n\n/**\n * Constructs a new writer operation instance.\n *\n * @classdesc Scheduled writer operation\n */\nclass Op<T> {\n  /**\n   * Function to call\n   */\n  public fn: WriterOperation<T>\n\n  /**\n   * Value byte length\n   */\n  public len: number\n\n  /**\n   * Next operation\n   */\n  public next?: Op<any>\n\n  /**\n   * Value to write\n   */\n  public val: T\n\n  constructor (fn: WriterOperation<T>, len: number, val: T) {\n    this.fn = fn\n    this.len = len\n    this.next = undefined\n    this.val = val // type varies\n  }\n}\n\n/* istanbul ignore next */\nfunction noop (): void {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance\n */\nclass State {\n  /**\n   * Current head\n   */\n  public head: Op<any>\n\n  /**\n   * Current tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Current buffer length\n   */\n  public len: number\n\n  /**\n   * Next state\n   */\n  public next?: State\n\n  constructor (writer: Uint8ArrayWriter) {\n    this.head = writer.head\n    this.tail = writer.tail\n    this.len = writer.len\n    this.next = writer.states\n  }\n}\n\nconst bufferPool = pool()\n\n/**\n * Allocates a buffer of the specified size\n */\nfunction alloc (size: number): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return allocUnsafe(size)\n  }\n\n  return bufferPool(size)\n}\n\n/**\n * When a value is written, the writer calculates its byte length and puts it into a linked\n * list of operations to perform when finish() is called. This both allows us to allocate\n * buffers of the exact required size and reduces the amount of work we have to do compared\n * to first calculating over objects and then encoding over objects. In our case, the encoding\n * part is just a linked list walk calling operations with already prepared values.\n */\nclass Uint8ArrayWriter implements Writer {\n  /**\n   * Current length\n   */\n  public len: number\n\n  /**\n   * Operations head\n   */\n  public head: Op<any>\n\n  /**\n   * Operations tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Linked forked states\n   */\n  public states?: any\n\n  constructor () {\n    this.len = 0\n    this.head = new Op(noop, 0, 0)\n    this.tail = this.head\n    this.states = null\n  }\n\n  /**\n   * Pushes a new operation to the queue\n   */\n  _push (fn: WriterOperation<any>, len: number, val: any): this {\n    this.tail = this.tail.next = new Op(fn, len, val)\n    this.len += len\n\n    return this\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as a varint\n   */\n  uint32 (value: number): this {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n      (value = value >>> 0) <\n                128\n        ? 1\n        : value < 16384\n          ? 2\n          : value < 2097152\n            ? 3\n            : value < 268435456\n              ? 4\n              : 5,\n      value)).len\n    return this\n  }\n\n  /**\n   * Writes a signed 32 bit value as a varint`\n   */\n  int32 (value: number): this {\n    return value < 0\n      ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n      : this.uint32(value)\n  }\n\n  /**\n   * Writes a 32 bit value as a varint, zig-zag encoded\n   */\n  sint32 (value: number): this {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64Number (value: number): this {\n    return this._push(encodeUint8Array, encodingLength(value), value)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64String (value: string): this {\n    return this.uint64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64 (value: bigint): this {\n    return this.uint64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64Number (value: number): this {\n    return this.uint64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64String (value: string): this {\n    return this.uint64String(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64Number (value: number): this {\n    const bits = LongBits.fromNumber(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64String (value: string): this {\n    return this.sint64(BigInt(value))\n  }\n\n  /**\n   * Writes a boolish value as a varint\n   */\n  bool (value: boolean): this {\n    return this._push(writeByte, 1, value ? 1 : 0)\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as fixed 32 bits\n   */\n  fixed32 (value: number): this {\n    return this._push(writeFixed32, 4, value >>> 0)\n  }\n\n  /**\n   * Writes a signed 32 bit value as fixed 32 bits\n   */\n  sfixed32 (value: number): this {\n    return this.fixed32(value)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64Number (value: number): this {\n    const bits = LongBits.fromNumber(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64String (value: string): this {\n    return this.fixed64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64 (value: bigint): this {\n    return this.fixed64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64Number (value: number): this {\n    return this.fixed64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64String (value: string): this {\n    return this.fixed64String(value)\n  }\n\n  /**\n   * Writes a float (32 bit)\n   */\n  float (value: number): this {\n    return this._push(writeFloatLE, 4, value)\n  }\n\n  /**\n   * Writes a double (64 bit float).\n   *\n   * @function\n   * @param {number} value - Value to write\n   * @returns {Writer} `this`\n   */\n  double (value: number): this {\n    return this._push(writeDoubleLE, 8, value)\n  }\n\n  /**\n   * Writes a sequence of bytes\n   */\n  bytes (value: Uint8Array): this {\n    const len = value.length >>> 0\n\n    if (len === 0) {\n      return this._push(writeByte, 1, 0)\n    }\n\n    return this.uint32(len)._push(writeBytes, len, value)\n  }\n\n  /**\n   * Writes a string\n   */\n  string (value: string): this {\n    const len = utf8.length(value)\n    return len !== 0\n      ? this.uint32(len)._push(utf8.write, len, value)\n      : this._push(writeByte, 1, 0)\n  }\n\n  /**\n   * Forks this writer's state by pushing it to a stack.\n   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n   */\n  fork (): this {\n    this.states = new State(this)\n    this.head = this.tail = new Op(noop, 0, 0)\n    this.len = 0\n    return this\n  }\n\n  /**\n   * Resets this instance to the last state\n   */\n  reset (): this {\n    if (this.states != null) {\n      this.head = this.states.head\n      this.tail = this.states.tail\n      this.len = this.states.len\n      this.states = this.states.next\n    } else {\n      this.head = this.tail = new Op(noop, 0, 0)\n      this.len = 0\n    }\n    return this\n  }\n\n  /**\n   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n   */\n  ldelim (): this {\n    const head = this.head\n    const tail = this.tail\n    const len = this.len\n    this.reset().uint32(len)\n    if (len !== 0) {\n      this.tail.next = head.next // skip noop\n      this.tail = tail\n      this.len += len\n    }\n    return this\n  }\n\n  /**\n   * Finishes the write operation\n   */\n  finish (): Uint8Array {\n    let head = this.head.next // skip noop\n    const buf = alloc(this.len)\n    let pos = 0\n    while (head != null) {\n      head.fn(head.val, buf, pos)\n      pos += head.len\n      head = head.next\n    }\n    // this.head = this.tail = null;\n    return buf\n  }\n}\n\nfunction writeByte (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n}\n\nfunction writeVarint32 (val: number, buf: Uint8Array, pos: number): void {\n  while (val > 127) {\n    buf[pos++] = val & 127 | 128\n    val >>>= 7\n  }\n  buf[pos] = val\n}\n\n/**\n * Constructs a new varint writer operation instance.\n *\n * @classdesc Scheduled varint writer operation\n */\nclass VarintOp extends Op<number> {\n  public next?: Op<any>\n\n  constructor (len: number, val: number) {\n    super(writeVarint32, len, val)\n    this.next = undefined\n  }\n}\n\nfunction writeVarint64 (val: LongBits, buf: Uint8Array, pos: number): void {\n  while (val.hi !== 0) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\n    val.hi >>>= 7\n  }\n  while (val.lo > 127) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = val.lo >>> 7\n  }\n  buf[pos++] = val.lo\n}\n\nfunction writeFixed32 (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n  buf[pos + 1] = val >>> 8 & 255\n  buf[pos + 2] = val >>> 16 & 255\n  buf[pos + 3] = val >>> 24\n}\n\nfunction writeBytes (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos)\n}\n\nif (globalThis.Buffer != null) {\n  Uint8ArrayWriter.prototype.bytes = function (value: Uint8Array) {\n    const len = value.length >>> 0\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeBytesBuffer, len, value)\n    }\n\n    return this\n  }\n\n  Uint8ArrayWriter.prototype.string = function (value: string) {\n    const len = globalThis.Buffer.byteLength(value)\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeStringBuffer, len, value)\n    }\n\n    return this\n  }\n}\n\nfunction writeBytesBuffer (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos) // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n  // also works for plain array values\n}\n\nfunction writeStringBuffer (val: string, buf: Uint8Array, pos: number): void {\n  if (val.length < 40) {\n    // plain js is faster for short strings (probably due to redundant assertions)\n    utf8.write(val, buf, pos)\n    // @ts-expect-error buf isn't a Uint8Array?\n  } else if (buf.utf8Write != null) {\n    // @ts-expect-error buf isn't a Uint8Array?\n    buf.utf8Write(val, pos)\n  } else {\n    buf.set(uint8ArrayFromString(val), pos)\n  }\n}\n\n/**\n * Creates a new writer\n */\nexport function createWriter (): Writer {\n  return new Uint8ArrayWriter()\n}\n","import { createWriter } from './utils/writer.js'\nimport type { Codec } from './codec.js'\n\nexport function encodeMessage <T> (message: Partial<T>, codec: Pick<Codec<T>, 'encode'>): Uint8Array {\n  const w = createWriter()\n\n  codec.encode(message, w, {\n    lengthDelimited: false\n  })\n\n  return w.finish()\n}\n","import type { Writer, Reader } from './index.js'\n\n// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport enum CODEC_TYPES {\n  VARINT = 0,\n  BIT64,\n  LENGTH_DELIMITED,\n  START_GROUP,\n  END_GROUP,\n  BIT32\n}\n\nexport interface EncodeOptions {\n  lengthDelimited?: boolean\n  writeDefaults?: boolean\n}\n\nexport interface EncodeFunction<T> {\n  (value: Partial<T>, writer: Writer, opts?: EncodeOptions): void\n}\n\n// protobuf types that contain multiple values\ntype CollectionTypes = any[] | Map<any, any>\n\n// protobuf types that are not collections or messages\ntype PrimitiveTypes = boolean | number | string | bigint | Uint8Array\n\n// recursive array/map field length limits\ntype CollectionLimits <T> = {\n  [K in keyof T]: T[K] extends CollectionTypes ? number :\n    T[K] extends PrimitiveTypes ? never : Limits<T[K]>\n}\n\n// recursive array member array/map field length limits\ntype ArrayElementLimits <T> = {\n  [K in keyof T as `${string & K}$`]: T[K] extends Array<infer ElementType> ?\n      (ElementType extends PrimitiveTypes ? never : Limits<ElementType>) :\n      (T[K] extends PrimitiveTypes ? never : Limits<T[K]>)\n}\n\n// recursive map value array/map field length limits\ntype MapValueLimits <T> = {\n  [K in keyof T as `${string & K}$value`]: T[K] extends Map<any, infer MapValueType> ?\n      (MapValueType extends PrimitiveTypes ? never : Limits<MapValueType>) :\n      (T[K] extends PrimitiveTypes ? never : Limits<T[K]>)\n}\n\n// union of collection and array elements\ntype Limits<T> = Partial<CollectionLimits<T> & ArrayElementLimits<T> & MapValueLimits<T>>\n\nexport interface DecodeOptions<T> {\n  /**\n   * Runtime-specified limits for lengths of repeated/map fields\n   */\n  limits?: Limits<T>\n}\n\nexport interface DecodeFunction<T> {\n  (reader: Reader, length?: number, opts?: DecodeOptions<T>): T\n}\n\nexport interface Codec<T> {\n  name: string\n  type: CODEC_TYPES\n  encode: EncodeFunction<T>\n  decode: DecodeFunction<T>\n}\n\nexport function createCodec <T> (name: string, type: CODEC_TYPES, encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T> {\n  return {\n    name,\n    type,\n    encode,\n    decode\n  }\n}\n","import { createCodec, CODEC_TYPES } from '../codec.js'\nimport type { DecodeFunction, EncodeFunction, Codec } from '../codec.js'\n\nexport function enumeration <T> (v: any): Codec<T> {\n  function findValue (val: string | number): number {\n    // Use the reverse mapping to look up the enum key for the stored value\n    // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n    if (v[val.toString()] == null) {\n      throw new Error('Invalid enum value')\n    }\n\n    return v[val]\n  }\n\n  const encode: EncodeFunction<number | string> = function enumEncode (val, writer) {\n    const enumValue = findValue(val)\n\n    writer.int32(enumValue)\n  }\n\n  const decode: DecodeFunction<number | string> = function enumDecode (reader) {\n    const val = reader.int32()\n\n    return findValue(val)\n  }\n\n  // @ts-expect-error yeah yeah\n  return createCodec('enum', CODEC_TYPES.VARINT, encode, decode)\n}\n","import { createCodec, CODEC_TYPES, type EncodeFunction, type DecodeFunction, type Codec } from '../codec.js'\n\nexport interface Factory<A, T> {\n  new (obj: A): T\n}\n\nexport function message <T> (encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T> {\n  return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode)\n}\n","/**\n * @packageDocumentation\n *\n * This module contains serialization/deserialization code used when encoding/decoding protobufs.\n *\n * It should be declared as a dependency of your project:\n *\n * ```console\n * npm i protons-runtime\n * ```\n */\n\nimport type { Codec } from './codec.js'\n\nexport interface FieldDef {\n  name: string\n  codec: Codec<any>\n  optional?: true\n  repeats?: true\n  packed?: true\n}\n\nexport {\n  decodeMessage\n} from './decode.js'\n\nexport {\n  encodeMessage\n} from './encode.js'\n\nexport { enumeration } from './codecs/enum.js'\nexport { message } from './codecs/message.js'\nexport { createReader as reader } from './utils/reader.js'\nexport { createWriter as writer } from './utils/writer.js'\nexport type { Codec, EncodeOptions, DecodeOptions } from './codec.js'\n\nexport interface Writer {\n  /**\n   * Current length\n   */\n  len: number\n\n  /**\n   * Writes an unsigned 32 bit value as a varint\n   */\n  uint32(value: number): this\n\n  /**\n   * Writes a signed 32 bit value as a varint`\n   */\n  int32(value: number): this\n\n  /**\n   * Writes a 32 bit value as a varint, zig-zag encoded\n   */\n  sint32(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64(value: bigint): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64Number(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64String(value: string): this\n\n  /**\n   * Writes a boolish value as a varint\n   */\n  bool(value: boolean): this\n\n  /**\n   * Writes an unsigned 32 bit value as fixed 32 bits\n   */\n  fixed32(value: number): this\n\n  /**\n   * Writes a signed 32 bit value as fixed 32 bits\n   */\n  sfixed32(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64(value: bigint): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64Number(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64String(value: string): this\n\n  /**\n   * Writes a float (32 bit)\n   */\n  float(value: number): this\n\n  /**\n   * Writes a double (64 bit float)\n   */\n  double(value: number): this\n\n  /**\n   * Writes a sequence of bytes\n   */\n  bytes(value: Uint8Array): this\n\n  /**\n   * Writes a string\n   */\n  string(value: string): this\n\n  /**\n   * Forks this writer's state by pushing it to a stack.\n   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n   */\n  fork(): this\n\n  /**\n   * Resets this instance to the last state.\n   */\n  reset(): this\n\n  /**\n   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n   */\n  ldelim(): this\n\n  /**\n   * Finishes the write operation\n   */\n  finish(): Uint8Array\n}\n\nexport interface Reader {\n  /**\n   * Read buffer\n   */\n  buf: Uint8Array\n\n  /**\n   * Read buffer position\n   */\n  pos: number\n\n  /**\n   * Read buffer length\n   */\n  len: number\n\n  /**\n   * Reads a varint as an unsigned 32 bit value\n   */\n  uint32(): number\n\n  /**\n   * Reads a varint as a signed 32 bit value\n   */\n  int32(): number\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 32 bit value\n   */\n  sint32(): number\n\n  /**\n   * Reads a varint as a boolean\n   */\n  bool(): boolean\n\n  /**\n   * Reads fixed 32 bits as an unsigned 32 bit integer\n   */\n  fixed32(): number\n\n  /**\n   * Reads fixed 32 bits as a signed 32 bit integer\n   */\n  sfixed32(): number\n\n  /**\n   * Reads a float (32 bit) as a number\n   */\n  float(): number\n\n  /**\n   * Reads a double (64 bit float) as a number\n   */\n  double(): number\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint\n   */\n  bytes(): Uint8Array\n\n  /**\n   * Reads a string preceded by its byte length as a varint\n   */\n  string(): string\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varints`\n   */\n  skip(length?: number): void\n\n  /**\n   * Skips the next element of the specified wire type\n   */\n  skipType(wireType: number): void\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64(): bigint\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64Number(): number\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64String(): string\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64(): bigint\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64Number(): number\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64String(): string\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64(): bigint\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64Number(): number\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64String(): string\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64(): bigint\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64Number(): number\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64String(): string\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64(): bigint\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64Number(): number\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64String(): string\n}\n\nexport class CodeError extends Error {\n  public code: string\n\n  constructor (message: string, code: string, options?: ErrorOptions) {\n    super(message, options)\n\n    this.code = code\n  }\n}\n","import crypto from 'crypto'\nimport { CodeError } from '@libp2p/interface'\nimport type { ECDHKey, ECDHKeyPair } from './interface.js'\n\nconst curves = {\n  'P-256': 'prime256v1',\n  'P-384': 'secp384r1',\n  'P-521': 'secp521r1'\n}\n\nconst curveTypes = Object.keys(curves)\nconst names = curveTypes.join(' / ')\n\n/**\n * Generates an ephemeral public key and returns a function that will compute the shared secret key.\n *\n * Focuses only on ECDH now, but can be made more general in the future.\n */\nexport async function generateEphmeralKeyPair (curve: string): Promise<ECDHKey> {\n  if (curve !== 'P-256' && curve !== 'P-384' && curve !== 'P-521') {\n    throw new CodeError(`Unknown curve: ${curve}. Must be ${names}`, 'ERR_INVALID_CURVE')\n  }\n\n  const ecdh = crypto.createECDH(curves[curve])\n  ecdh.generateKeys()\n\n  return {\n    key: ecdh.getPublicKey() as Uint8Array,\n\n    async genSharedKey (theirPub: Uint8Array, forcePrivate?: ECDHKeyPair): Promise<Uint8Array> {\n      if (forcePrivate != null) {\n        ecdh.setPrivateKey(forcePrivate.private)\n      }\n\n      return ecdh.computeSecret(theirPub)\n    }\n  }\n}\n","import { generateEphmeralKeyPair } from './ecdh.js'\n\n/**\n * Generates an ephemeral public key and returns a function that will compute\n * the shared secret key.\n *\n * Focuses only on ECDH now, but can be made more general in the future.\n */\nexport default generateEphmeralKeyPair\n","import { base64 } from 'multiformats/bases/base64'\nimport * as ciphers from '../ciphers/aes-gcm.js'\n\n/**\n * Attempts to decrypt a base64 encoded PrivateKey string\n * with the given password. The privateKey must have been exported\n * using the same password and underlying cipher (aes-gcm)\n */\nexport async function importer (privateKey: string, password: string): Promise<Uint8Array> {\n  const encryptedKey = base64.decode(privateKey)\n  const cipher = ciphers.create()\n  return cipher.decrypt(encryptedKey, password)\n}\n","/**\n * @packageDocumentation\n *\n * Exposes an interface to the Keyed-Hash Message Authentication Code (HMAC) as defined in U.S. Federal Information Processing Standards Publication 198. An HMAC is a cryptographic hash that uses a key to sign a message. The receiver verifies the hash by recomputing it using the same key.\n *\n * @example\n *\n * ```TypeScript\n * import { create } from '@libp2p/hmac'\n *\n * const hash = 'SHA1' // 'SHA256' || 'SHA512'\n * const hmac = await crypto.hmac.create(hash, uint8ArrayFromString('secret'))\n * const sig = await hmac.digest(uint8ArrayFromString('hello world'))\n * console.log(sig)\n * ```\n */\n\nimport crypto from 'crypto'\nimport lengths from './lengths.js'\n\nexport interface HMAC {\n  digest(data: Uint8Array): Promise<Uint8Array>\n  length: number\n}\n\nexport async function create (hash: 'SHA1' | 'SHA256' | 'SHA512', secret: Uint8Array): Promise<HMAC> {\n  const res = {\n    async digest (data: Uint8Array) {\n      const hmac = crypto.createHmac(hash.toLowerCase(), secret)\n      hmac.update(data)\n      return hmac.digest()\n    },\n    length: lengths[hash]\n  }\n\n  return res\n}\n","export default {\n  SHA1: 20,\n  SHA256: 32,\n  SHA512: 64\n}\n","import { CodeError } from '@libp2p/interface'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport * as hmac from '../hmac/index.js'\nimport type { EnhancedKey, EnhancedKeyPair } from './interface.js'\n\nconst cipherMap = {\n  'AES-128': {\n    ivSize: 16,\n    keySize: 16\n  },\n  'AES-256': {\n    ivSize: 16,\n    keySize: 32\n  },\n  Blowfish: {\n    ivSize: 8,\n    keySize: 32\n  }\n}\n\n/**\n * Generates a set of keys for each party by stretching the shared key.\n * (myIV, theirIV, myCipherKey, theirCipherKey, myMACKey, theirMACKey)\n */\nexport async function keyStretcher (cipherType: 'AES-128' | 'AES-256' | 'Blowfish', hash: 'SHA1' | 'SHA256' | 'SHA512', secret: Uint8Array): Promise<EnhancedKeyPair> {\n  const cipher = cipherMap[cipherType]\n\n  if (cipher == null) {\n    const allowed = Object.keys(cipherMap).join(' / ')\n    throw new CodeError(`unknown cipher type '${cipherType}'. Must be ${allowed}`, 'ERR_INVALID_CIPHER_TYPE')\n  }\n\n  if (hash == null) {\n    throw new CodeError('missing hash type', 'ERR_MISSING_HASH_TYPE')\n  }\n\n  const cipherKeySize = cipher.keySize\n  const ivSize = cipher.ivSize\n  const hmacKeySize = 20\n  const seed = uint8ArrayFromString('key expansion')\n  const resultLength = 2 * (ivSize + cipherKeySize + hmacKeySize)\n\n  const m = await hmac.create(hash, secret)\n  let a = await m.digest(seed)\n\n  const result = []\n  let j = 0\n\n  while (j < resultLength) {\n    const b = await m.digest(uint8ArrayConcat([a, seed]))\n    let todo = b.length\n\n    if (j + todo > resultLength) {\n      todo = resultLength - j\n    }\n\n    result.push(b)\n    j += todo\n    a = await m.digest(a)\n  }\n\n  const half = resultLength / 2\n  const resultBuffer = uint8ArrayConcat(result)\n  const r1 = resultBuffer.subarray(0, half)\n  const r2 = resultBuffer.subarray(half, resultLength)\n\n  const createKey = (res: Uint8Array): EnhancedKey => ({\n    iv: res.subarray(0, ivSize),\n    cipherKey: res.subarray(ivSize, ivSize + cipherKeySize),\n    macKey: res.subarray(ivSize + cipherKeySize)\n  })\n\n  return {\n    k1: createKey(r1),\n    k2: createKey(r2)\n  }\n}\n","import { CodeError } from '@libp2p/interface'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { isPromise } from '../util.js'\nimport { exporter } from './exporter.js'\nimport * as pbm from './keys.js'\nimport * as crypto from './rsa.js'\nimport type { Multibase } from 'multiformats'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport const MAX_RSA_KEY_SIZE = 8192\n\nexport class RsaPublicKey {\n  private readonly _key: JsonWebKey\n\n  constructor (key: JsonWebKey) {\n    this._key = key\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array): boolean | Promise<boolean> {\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal (): Uint8Array {\n    return crypto.utils.jwkToPkix(this._key)\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PublicKey.encode({\n      Type: pbm.KeyType.RSA,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean | boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n}\n\nexport class RsaPrivateKey {\n  private readonly _key: JsonWebKey\n  private readonly _publicKey: JsonWebKey\n\n  constructor (key: JsonWebKey, publicKey: JsonWebKey) {\n    this._key = key\n    this._publicKey = publicKey\n  }\n\n  genSecret (): Uint8Array {\n    return crypto.getRandomValues(16)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList): Uint8Array | Promise<Uint8Array> {\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public (): RsaPublicKey {\n    if (this._publicKey == null) {\n      throw new CodeError('public key not provided', 'ERR_PUBKEY_NOT_PROVIDED')\n    }\n\n    return new RsaPublicKey(this._publicKey)\n  }\n\n  marshal (): Uint8Array {\n    return crypto.utils.jwkToPkcs1(this._key)\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PrivateKey.encode({\n      Type: pbm.KeyType.RSA,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   */\n  async id (): Promise<string> {\n    const hash = await this.public.hash()\n    return uint8ArrayToString(hash, 'base58btc')\n  }\n\n  /**\n   * Exports the key as libp2p-key - a aes-gcm encrypted value with the key\n   * derived from the password.\n   *\n   * To export it as a password protected PEM file, please use the `exportPEM`\n   * function from `@libp2p/rsa`.\n   */\n  async export (password: string, format = 'pkcs-8'): Promise<Multibase<'m'>> {\n    if (format === 'pkcs-8') {\n      return crypto.utils.exportToPem(this, password)\n    } else if (format === 'libp2p-key') {\n      return exporter(this.bytes, password)\n    } else {\n      throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nexport async function unmarshalRsaPrivateKey (bytes: Uint8Array): Promise<RsaPrivateKey> {\n  const jwk = crypto.utils.pkcs1ToJwk(bytes)\n\n  if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  const keys = await crypto.unmarshalPrivateKey(jwk)\n\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n\nexport function unmarshalRsaPublicKey (bytes: Uint8Array): RsaPublicKey {\n  const jwk = crypto.utils.pkixToJwk(bytes)\n\n  if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  return new RsaPublicKey(jwk)\n}\n\nexport async function fromJwk (jwk: JsonWebKey): Promise<RsaPrivateKey> {\n  if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  const keys = await crypto.unmarshalPrivateKey(jwk)\n\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n\nexport async function generateKeyPair (bits: number): Promise<RsaPrivateKey> {\n  if (bits > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  const keys = await crypto.generateKey(bits)\n\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n","import crypto from 'crypto'\nimport { promisify } from 'util'\nimport { CodeError } from '@libp2p/interface'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport randomBytes from '../random-bytes.js'\nimport * as utils from './rsa-utils.js'\nimport type { JWKKeyPair } from './interface.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst keypair = promisify(crypto.generateKeyPair)\n\nexport { utils }\n\nexport async function generateKey (bits: number): Promise<JWKKeyPair> {\n  // @ts-expect-error node types are missing jwk as a format\n  const key = await keypair('rsa', {\n    modulusLength: bits,\n    publicKeyEncoding: { type: 'pkcs1', format: 'jwk' },\n    privateKeyEncoding: { type: 'pkcs1', format: 'jwk' }\n  })\n\n  return {\n    // @ts-expect-error node types are missing jwk as a format\n    privateKey: key.privateKey,\n    // @ts-expect-error node types are missing jwk as a format\n    publicKey: key.publicKey\n  }\n}\n\n// Takes a jwk key\nexport async function unmarshalPrivateKey (key: JsonWebKey): Promise<JWKKeyPair> {\n  if (key == null) {\n    throw new CodeError('Missing key parameter', 'ERR_MISSING_KEY')\n  }\n  return {\n    privateKey: key,\n    publicKey: {\n      kty: key.kty,\n      n: key.n,\n      e: key.e\n    }\n  }\n}\n\nexport { randomBytes as getRandomValues }\n\nexport async function hashAndSign (key: JsonWebKey, msg: Uint8Array | Uint8ArrayList): Promise<Uint8Array> {\n  const hash = crypto.createSign('RSA-SHA256')\n\n  if (msg instanceof Uint8Array) {\n    hash.update(msg)\n  } else {\n    for (const buf of msg) {\n      hash.update(buf)\n    }\n  }\n\n  // @ts-expect-error node types are missing jwk as a format\n  return hash.sign({ format: 'jwk', key })\n}\n\nexport async function hashAndVerify (key: JsonWebKey, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): Promise<boolean> {\n  const hash = crypto.createVerify('RSA-SHA256')\n\n  if (msg instanceof Uint8Array) {\n    hash.update(msg)\n  } else {\n    for (const buf of msg) {\n      hash.update(buf)\n    }\n  }\n\n  // @ts-expect-error node types are missing jwk as a format\n  return hash.verify({ format: 'jwk', key }, sig)\n}\n\nexport function keySize (jwk: JsonWebKey): number {\n  if (jwk.kty !== 'RSA') {\n    throw new CodeError('invalid key type', 'ERR_INVALID_KEY_TYPE')\n  } else if (jwk.n == null) {\n    throw new CodeError('invalid key modulus', 'ERR_INVALID_KEY_MODULUS')\n  }\n  const modulus = uint8ArrayFromString(jwk.n, 'base64url')\n  return modulus.length * 8\n}\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto =\n  nc && typeof nc === 'object' && 'webcrypto' in nc ? (nc.webcrypto as any) : undefined;\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { CodeError } from '@libp2p/interface'\nimport { randomBytes as randB } from '@noble/hashes/utils'\n\n/**\n * Generates a Uint8Array with length `number` populated by random bytes\n */\nexport default function randomBytes (length: number): Uint8Array {\n  if (isNaN(length) || length <= 0) {\n    throw new CodeError('random bytes length must be a Number bigger than 0', 'ERR_INVALID_LENGTH')\n  }\n  return randB(length)\n}\n","import { CodeError } from '@libp2p/interface'\nimport { pbkdf2Async } from '@noble/hashes/pbkdf2'\nimport { sha512 } from '@noble/hashes/sha512'\nimport * as asn1js from 'asn1js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport randomBytes from '../random-bytes.js'\nimport webcrypto from '../webcrypto.js'\nimport { type RsaPrivateKey, unmarshalRsaPrivateKey } from './rsa-class.js'\n\n/**\n * Convert a PKCS#1 in ASN1 DER format to a JWK key\n */\nexport function pkcs1ToJwk (bytes: Uint8Array): JsonWebKey {\n  const { result } = asn1js.fromBER(bytes)\n\n  // @ts-expect-error this looks fragile but DER is a canonical format so we are\n  // safe to have deeply property chains like this\n  const values: asn1js.Integer[] = result.valueBlock.value\n\n  const key = {\n    n: uint8ArrayToString(bnToBuf(values[1].toBigInt()), 'base64url'),\n    e: uint8ArrayToString(bnToBuf(values[2].toBigInt()), 'base64url'),\n    d: uint8ArrayToString(bnToBuf(values[3].toBigInt()), 'base64url'),\n    p: uint8ArrayToString(bnToBuf(values[4].toBigInt()), 'base64url'),\n    q: uint8ArrayToString(bnToBuf(values[5].toBigInt()), 'base64url'),\n    dp: uint8ArrayToString(bnToBuf(values[6].toBigInt()), 'base64url'),\n    dq: uint8ArrayToString(bnToBuf(values[7].toBigInt()), 'base64url'),\n    qi: uint8ArrayToString(bnToBuf(values[8].toBigInt()), 'base64url'),\n    kty: 'RSA',\n    alg: 'RS256'\n  }\n\n  return key\n}\n\n/**\n * Convert a JWK key into PKCS#1 in ASN1 DER format\n */\nexport function jwkToPkcs1 (jwk: JsonWebKey): Uint8Array {\n  if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n    throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS')\n  }\n\n  const root = new asn1js.Sequence({\n    value: [\n      new asn1js.Integer({ value: 0 }),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.d, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.p, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.q, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dp, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dq, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.qi, 'base64url')))\n    ]\n  })\n\n  const der = root.toBER()\n\n  return new Uint8Array(der, 0, der.byteLength)\n}\n\n/**\n * Convert a PKCIX in ASN1 DER format to a JWK key\n */\nexport function pkixToJwk (bytes: Uint8Array): JsonWebKey {\n  const { result } = asn1js.fromBER(bytes)\n\n  // @ts-expect-error this looks fragile but DER is a canonical format so we are\n  // safe to have deeply property chains like this\n  const values: asn1js.Integer[] = result.valueBlock.value[1].valueBlock.value[0].valueBlock.value\n\n  return {\n    kty: 'RSA',\n    n: uint8ArrayToString(bnToBuf(values[0].toBigInt()), 'base64url'),\n    e: uint8ArrayToString(bnToBuf(values[1].toBigInt()), 'base64url')\n  }\n}\n\n/**\n * Convert a JWK key to PKCIX in ASN1 DER format\n */\nexport function jwkToPkix (jwk: JsonWebKey): Uint8Array {\n  if (jwk.n == null || jwk.e == null) {\n    throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS')\n  }\n\n  const root = new asn1js.Sequence({\n    value: [\n      new asn1js.Sequence({\n        value: [\n          // rsaEncryption\n          new asn1js.ObjectIdentifier({\n            value: '1.2.840.113549.1.1.1'\n          }),\n          new asn1js.Null()\n        ]\n      }),\n      // this appears to be a bug in asn1js.js - this should really be a Sequence\n      // and not a BitString but it generates the same bytes as node-forge so 🤷‍♂️\n      new asn1js.BitString({\n        valueHex: new asn1js.Sequence({\n          value: [\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url')))\n          ]\n        }).toBER()\n      })\n    ]\n  })\n\n  const der = root.toBER()\n\n  return new Uint8Array(der, 0, der.byteLength)\n}\n\nfunction bnToBuf (bn: bigint): Uint8Array {\n  let hex = bn.toString(16)\n\n  if (hex.length % 2 > 0) {\n    hex = `0${hex}`\n  }\n\n  const len = hex.length / 2\n  const u8 = new Uint8Array(len)\n\n  let i = 0\n  let j = 0\n\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16)\n    i += 1\n    j += 2\n  }\n\n  return u8\n}\n\nfunction bufToBn (u8: Uint8Array): bigint {\n  const hex: string[] = []\n\n  u8.forEach(function (i) {\n    let h = i.toString(16)\n\n    if (h.length % 2 > 0) {\n      h = `0${h}`\n    }\n\n    hex.push(h)\n  })\n\n  return BigInt('0x' + hex.join(''))\n}\n\nconst SALT_LENGTH = 16\nconst KEY_SIZE = 32\nconst ITERATIONS = 10000\n\nexport async function exportToPem (privateKey: RsaPrivateKey, password: string): Promise<string> {\n  const crypto = webcrypto.get()\n\n  // PrivateKeyInfo\n  const keyWrapper = new asn1js.Sequence({\n    value: [\n      // version (0)\n      new asn1js.Integer({ value: 0 }),\n\n      // privateKeyAlgorithm\n      new asn1js.Sequence({\n        value: [\n        // rsaEncryption OID\n          new asn1js.ObjectIdentifier({\n            value: '1.2.840.113549.1.1.1'\n          }),\n          new asn1js.Null()\n        ]\n      }),\n\n      // PrivateKey\n      new asn1js.OctetString({\n        valueHex: privateKey.marshal()\n      })\n    ]\n  })\n\n  const keyBuf = keyWrapper.toBER()\n  const keyArr = new Uint8Array(keyBuf, 0, keyBuf.byteLength)\n  const salt = randomBytes(SALT_LENGTH)\n\n  const encryptionKey = await pbkdf2Async(\n    sha512,\n    password,\n    salt, {\n      c: ITERATIONS,\n      dkLen: KEY_SIZE\n    }\n  )\n\n  const iv = randomBytes(16)\n  const cryptoKey = await crypto.subtle.importKey('raw', encryptionKey, 'AES-CBC', false, ['encrypt'])\n  const encrypted = await crypto.subtle.encrypt({\n    name: 'AES-CBC',\n    iv\n  }, cryptoKey, keyArr)\n\n  const pbkdf2Params = new asn1js.Sequence({\n    value: [\n      // salt\n      new asn1js.OctetString({ valueHex: salt }),\n\n      // iteration count\n      new asn1js.Integer({ value: ITERATIONS }),\n\n      // key length\n      new asn1js.Integer({ value: KEY_SIZE }),\n\n      // AlgorithmIdentifier\n      new asn1js.Sequence({\n        value: [\n          // hmacWithSHA512\n          new asn1js.ObjectIdentifier({ value: '1.2.840.113549.2.11' }),\n          new asn1js.Null()\n        ]\n      })\n    ]\n  })\n\n  const encryptionAlgorithm = new asn1js.Sequence({\n    value: [\n      // pkcs5PBES2\n      new asn1js.ObjectIdentifier({\n        value: '1.2.840.113549.1.5.13'\n      }),\n      new asn1js.Sequence({\n        value: [\n          // keyDerivationFunc\n          new asn1js.Sequence({\n            value: [\n              // pkcs5PBKDF2\n              new asn1js.ObjectIdentifier({\n                value: '1.2.840.113549.1.5.12'\n              }),\n              // PBKDF2-params\n              pbkdf2Params\n            ]\n          }),\n\n          // encryptionScheme\n          new asn1js.Sequence({\n            value: [\n              // aes256-CBC\n              new asn1js.ObjectIdentifier({\n                value: '2.16.840.1.101.3.4.1.42'\n              }),\n              // iv\n              new asn1js.OctetString({\n                valueHex: iv\n              })\n            ]\n          })\n        ]\n      })\n    ]\n  })\n\n  const finalWrapper = new asn1js.Sequence({\n    value: [\n      encryptionAlgorithm,\n      new asn1js.OctetString({ valueHex: encrypted })\n    ]\n  })\n\n  const finalWrapperBuf = finalWrapper.toBER()\n  const finalWrapperArr = new Uint8Array(finalWrapperBuf, 0, finalWrapperBuf.byteLength)\n\n  return [\n    '-----BEGIN ENCRYPTED PRIVATE KEY-----',\n    ...uint8ArrayToString(finalWrapperArr, 'base64pad').split(/(.{64})/).filter(Boolean),\n    '-----END ENCRYPTED PRIVATE KEY-----'\n  ].join('\\n')\n}\n\nexport async function importFromPem (pem: string, password: string): Promise<RsaPrivateKey> {\n  const crypto = webcrypto.get()\n  let plaintext: Uint8Array\n\n  if (pem.includes('-----BEGIN ENCRYPTED PRIVATE KEY-----')) {\n    const key = uint8ArrayFromString(\n      pem\n        .replace('-----BEGIN ENCRYPTED PRIVATE KEY-----', '')\n        .replace('-----END ENCRYPTED PRIVATE KEY-----', '')\n        .replace(/\\n/g, '')\n        .trim(),\n      'base64pad'\n    )\n\n    const { result } = asn1js.fromBER(key)\n\n    const {\n      iv,\n      salt,\n      iterations,\n      keySize,\n      cipherText\n    } = findEncryptedPEMData(result)\n\n    const encryptionKey = await pbkdf2Async(\n      sha512,\n      password,\n      salt, {\n        c: iterations,\n        dkLen: keySize\n      }\n    )\n\n    const cryptoKey = await crypto.subtle.importKey('raw', encryptionKey, 'AES-CBC', false, ['decrypt'])\n    const decrypted = toUint8Array(await crypto.subtle.decrypt({\n      name: 'AES-CBC',\n      iv\n    }, cryptoKey, cipherText))\n\n    const { result: decryptedResult } = asn1js.fromBER(decrypted)\n    plaintext = findPEMData(decryptedResult)\n  } else if (pem.includes('-----BEGIN PRIVATE KEY-----')) {\n    const key = uint8ArrayFromString(\n      pem\n        .replace('-----BEGIN PRIVATE KEY-----', '')\n        .replace('-----END PRIVATE KEY-----', '')\n        .replace(/\\n/g, '')\n        .trim(),\n      'base64pad'\n    )\n\n    const { result } = asn1js.fromBER(key)\n\n    plaintext = findPEMData(result)\n  } else {\n    throw new CodeError('Could not parse private key from PEM data', 'ERR_INVALID_PARAMETERS')\n  }\n\n  return unmarshalRsaPrivateKey(plaintext)\n}\n\nfunction findEncryptedPEMData (root: any): { cipherText: Uint8Array, iv: Uint8Array, salt: Uint8Array, iterations: number, keySize: number } {\n  const encryptionAlgorithm = root.valueBlock.value[0]\n  const scheme = encryptionAlgorithm.valueBlock.value[0].toString()\n\n  if (scheme !== 'OBJECT IDENTIFIER : 1.2.840.113549.1.5.13') {\n    throw new CodeError('Only pkcs5PBES2 encrypted private keys are supported', 'ERR_INVALID_PARAMS')\n  }\n\n  const keyDerivationFunc = encryptionAlgorithm.valueBlock.value[1].valueBlock.value[0]\n  const keyDerivationFuncName = keyDerivationFunc.valueBlock.value[0].toString()\n\n  if (keyDerivationFuncName !== 'OBJECT IDENTIFIER : 1.2.840.113549.1.5.12') {\n    throw new CodeError('Only pkcs5PBKDF2 key derivation functions are supported', 'ERR_INVALID_PARAMS')\n  }\n\n  const pbkdf2Params = keyDerivationFunc.valueBlock.value[1]\n\n  const salt = toUint8Array(pbkdf2Params.valueBlock.value[0].getValue())\n\n  let iterations = ITERATIONS\n  let keySize = KEY_SIZE\n\n  if (pbkdf2Params.valueBlock.value.length === 3) {\n    iterations = Number((pbkdf2Params.valueBlock.value[1] as asn1js.Integer).toBigInt())\n    keySize = Number((pbkdf2Params.valueBlock.value[2]).toBigInt())\n  } else if (pbkdf2Params.valueBlock.value.length === 2) {\n    throw new CodeError('Could not derive key size and iterations from PEM file - please use @libp2p/rsa to re-import your key', 'ERR_INVALID_PARAMS')\n  }\n\n  const encryptionScheme = encryptionAlgorithm.valueBlock.value[1].valueBlock.value[1]\n  const encryptionSchemeName = encryptionScheme.valueBlock.value[0].toString()\n\n  if (encryptionSchemeName === 'OBJECT IDENTIFIER : 1.2.840.113549.3.7') {\n    // des-EDE3-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 1.3.14.3.2.7') {\n    // des-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.2') {\n    // aes128-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.22') {\n    // aes192-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.42') {\n    // aes256-CBC\n  } else {\n    throw new CodeError('Only AES-CBC encryption schemes are supported', 'ERR_INVALID_PARAMS')\n  }\n\n  const iv = toUint8Array(encryptionScheme.valueBlock.value[1].getValue())\n\n  return {\n    cipherText: toUint8Array(root.valueBlock.value[1].getValue()),\n    salt,\n    iterations,\n    keySize,\n    iv\n  }\n}\n\nfunction findPEMData (seq: any): Uint8Array {\n  return toUint8Array(seq.valueBlock.value[2].getValue())\n}\n\nfunction toUint8Array (buf: ArrayBuffer): Uint8Array {\n  return new Uint8Array(buf, 0, buf.byteLength)\n}\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n","/*!\n * MIT License\n * \n * Copyright (c) 2017-2022 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport { BufferSourceConverter, Convert, assign, combine, isEqual };\n","/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n","/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\r\n    if (typeof BigInt === \"undefined\") {\r\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\r\n    }\r\n}\r\nfunction concat(buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retView = new Uint8Array(outputLength);\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retView.buffer;\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof Uint8Array)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\nclass ViewWriter {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n    write(buf) {\r\n        this.items.push(buf);\r\n    }\r\n    final() {\r\n        return concat(this.items);\r\n    }\r\n}\n\nconst powers2 = [new Uint8Array([1])];\r\nconst digitsString = \"0123456789\";\r\nconst NAME = \"name\";\r\nconst VALUE_HEX_VIEW = \"valueHexView\";\r\nconst IS_HEX_ONLY = \"isHexOnly\";\r\nconst ID_BLOCK = \"idBlock\";\r\nconst TAG_CLASS = \"tagClass\";\r\nconst TAG_NUMBER = \"tagNumber\";\r\nconst IS_CONSTRUCTED = \"isConstructed\";\r\nconst FROM_BER = \"fromBER\";\r\nconst TO_BER = \"toBER\";\r\nconst LOCAL = \"local\";\r\nconst EMPTY_STRING = \"\";\r\nconst EMPTY_BUFFER = new ArrayBuffer(0);\r\nconst EMPTY_VIEW = new Uint8Array(0);\r\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\r\nconst OCTET_STRING_NAME = \"OCTET STRING\";\r\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\r\n    var _a;\r\n    return _a = class Some extends BaseClass {\r\n            constructor(...args) {\r\n                var _a;\r\n                super(...args);\r\n                const params = args[0] || {};\r\n                this.isHexOnly = (_a = params.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\r\n            }\r\n            get valueHex() {\r\n                return this.valueHexView.slice().buffer;\r\n            }\r\n            set valueHex(value) {\r\n                this.valueHexView = new Uint8Array(value);\r\n            }\r\n            fromBER(inputBuffer, inputOffset, inputLength) {\r\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n                    return -1;\r\n                }\r\n                const endLength = inputOffset + inputLength;\r\n                this.valueHexView = view.subarray(inputOffset, endLength);\r\n                if (!this.valueHexView.length) {\r\n                    this.warnings.push(\"Zero buffer length\");\r\n                    return inputOffset;\r\n                }\r\n                this.blockLength = inputLength;\r\n                return endLength;\r\n            }\r\n            toBER(sizeOnly = false) {\r\n                if (!this.isHexOnly) {\r\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\r\n                    return EMPTY_BUFFER;\r\n                }\r\n                if (sizeOnly) {\r\n                    return new ArrayBuffer(this.valueHexView.byteLength);\r\n                }\r\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\r\n                    ? this.valueHexView.buffer\r\n                    : this.valueHexView.slice().buffer;\r\n            }\r\n            toJSON() {\r\n                return {\r\n                    ...super.toJSON(),\r\n                    isHexOnly: this.isHexOnly,\r\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\r\n                };\r\n            }\r\n        },\r\n        _a.NAME = \"hexBlock\",\r\n        _a;\r\n}\n\nclass LocalBaseBlock {\r\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\r\n        this.blockLength = blockLength;\r\n        this.error = error;\r\n        this.warnings = warnings;\r\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\r\n    }\r\n    static blockName() {\r\n        return this.NAME;\r\n    }\r\n    get valueBeforeDecode() {\r\n        return this.valueBeforeDecodeView.slice().buffer;\r\n    }\r\n    set valueBeforeDecode(value) {\r\n        this.valueBeforeDecodeView = new Uint8Array(value);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            blockName: this.constructor.NAME,\r\n            blockLength: this.blockLength,\r\n            error: this.error,\r\n            warnings: this.warnings,\r\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\r\n        };\r\n    }\r\n}\r\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n}\r\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ idBlock = {}, } = {}) {\r\n        var _a, _b, _c, _d;\r\n        super();\r\n        if (idBlock) {\r\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n            this.valueHexView = idBlock.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex) : EMPTY_VIEW;\r\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\r\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\r\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\r\n        }\r\n        else {\r\n            this.tagClass = -1;\r\n            this.tagNumber = -1;\r\n            this.isConstructed = false;\r\n        }\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let firstOctet = 0;\r\n        switch (this.tagClass) {\r\n            case 1:\r\n                firstOctet |= 0x00;\r\n                break;\r\n            case 2:\r\n                firstOctet |= 0x40;\r\n                break;\r\n            case 3:\r\n                firstOctet |= 0x80;\r\n                break;\r\n            case 4:\r\n                firstOctet |= 0xC0;\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return EMPTY_BUFFER;\r\n        }\r\n        if (this.isConstructed)\r\n            firstOctet |= 0x20;\r\n        if (this.tagNumber < 31 && !this.isHexOnly) {\r\n            const retView = new Uint8Array(1);\r\n            if (!sizeOnly) {\r\n                let number = this.tagNumber;\r\n                number &= 0x1F;\r\n                firstOctet |= number;\r\n                retView[0] = firstOctet;\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        if (!this.isHexOnly) {\r\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const size = encodedBuf.byteLength;\r\n            const retView = new Uint8Array(size + 1);\r\n            retView[0] = (firstOctet | 0x1F);\r\n            if (!sizeOnly) {\r\n                for (let i = 0; i < (size - 1); i++)\r\n                    retView[i + 1] = encodedView[i] | 0x80;\r\n                retView[size] = encodedView[size - 1];\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\r\n        retView[0] = (firstOctet | 0x1F);\r\n        if (!sizeOnly) {\r\n            const curView = this.valueHexView;\r\n            for (let i = 0; i < (curView.length - 1); i++)\r\n                retView[i + 1] = curView[i] | 0x80;\r\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        const tagClassMask = intBuffer[0] & 0xC0;\r\n        switch (tagClassMask) {\r\n            case 0x00:\r\n                this.tagClass = (1);\r\n                break;\r\n            case 0x40:\r\n                this.tagClass = (2);\r\n                break;\r\n            case 0x80:\r\n                this.tagClass = (3);\r\n                break;\r\n            case 0xC0:\r\n                this.tagClass = (4);\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return -1;\r\n        }\r\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\r\n        this.isHexOnly = false;\r\n        const tagNumberMask = intBuffer[0] & 0x1F;\r\n        if (tagNumberMask !== 0x1F) {\r\n            this.tagNumber = (tagNumberMask);\r\n            this.blockLength = 1;\r\n        }\r\n        else {\r\n            let count = 1;\r\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\r\n            let tagNumberBufferMaxLength = 255;\r\n            while (intBuffer[count] & 0x80) {\r\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n                count++;\r\n                if (count >= intBuffer.length) {\r\n                    this.error = \"End of input reached before message was fully decoded\";\r\n                    return -1;\r\n                }\r\n                if (count === tagNumberBufferMaxLength) {\r\n                    tagNumberBufferMaxLength += 255;\r\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\r\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\r\n                        tempBufferView[i] = intTagNumberBuffer[i];\r\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\r\n                }\r\n            }\r\n            this.blockLength = (count + 1);\r\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n            const tempBufferView = new Uint8Array(count);\r\n            for (let i = 0; i < count; i++)\r\n                tempBufferView[i] = intTagNumberBuffer[i];\r\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\r\n            intTagNumberBuffer.set(tempBufferView);\r\n            if (this.blockLength <= 9)\r\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\r\n            else {\r\n                this.isHexOnly = true;\r\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\r\n            }\r\n        }\r\n        if (((this.tagClass === 1)) &&\r\n            (this.isConstructed)) {\r\n            switch (this.tagNumber) {\r\n                case 1:\r\n                case 2:\r\n                case 5:\r\n                case 6:\r\n                case 9:\r\n                case 13:\r\n                case 14:\r\n                case 23:\r\n                case 24:\r\n                case 31:\r\n                case 32:\r\n                case 33:\r\n                case 34:\r\n                    this.error = \"Constructed encoding used for primitive type\";\r\n                    return -1;\r\n            }\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            tagClass: this.tagClass,\r\n            tagNumber: this.tagNumber,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\r\n    constructor({ lenBlock = {}, } = {}) {\r\n        var _a, _b, _c;\r\n        super();\r\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\r\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\r\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        if (intBuffer[0] === 0xFF) {\r\n            this.error = \"Length block 0xFF is reserved by standard\";\r\n            return -1;\r\n        }\r\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\r\n        if (this.isIndefiniteForm) {\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\r\n        if (this.longFormUsed === false) {\r\n            this.length = (intBuffer[0]);\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        const count = intBuffer[0] & 0x7F;\r\n        if (count > 8) {\r\n            this.error = \"Too big integer\";\r\n            return -1;\r\n        }\r\n        if ((count + 1) > intBuffer.length) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        const lenOffset = inputOffset + 1;\r\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\r\n        if (lengthBufferView[count - 1] === 0x00)\r\n            this.warnings.push(\"Needlessly long encoded length\");\r\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\r\n        if (this.longFormUsed && (this.length <= 127))\r\n            this.warnings.push(\"Unnecessary usage of long length form\");\r\n        this.blockLength = count + 1;\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let retBuf;\r\n        let retView;\r\n        if (this.length > 127)\r\n            this.longFormUsed = true;\r\n        if (this.isIndefiniteForm) {\r\n            retBuf = new ArrayBuffer(1);\r\n            if (sizeOnly === false) {\r\n                retView = new Uint8Array(retBuf);\r\n                retView[0] = 0x80;\r\n            }\r\n            return retBuf;\r\n        }\r\n        if (this.longFormUsed) {\r\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\r\n            if (encodedBuf.byteLength > 127) {\r\n                this.error = \"Too big length\";\r\n                return (EMPTY_BUFFER);\r\n            }\r\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\r\n            if (sizeOnly)\r\n                return retBuf;\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = encodedBuf.byteLength | 0x80;\r\n            for (let i = 0; i < encodedBuf.byteLength; i++)\r\n                retView[i + 1] = encodedView[i];\r\n            return retBuf;\r\n        }\r\n        retBuf = new ArrayBuffer(1);\r\n        if (sizeOnly === false) {\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = this.length;\r\n        }\r\n        return retBuf;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            longFormUsed: this.longFormUsed,\r\n            length: this.length,\r\n        };\r\n    }\r\n}\r\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\r\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\r\n        super(parameters);\r\n        this.name = name;\r\n        this.optional = optional;\r\n        if (primitiveSchema) {\r\n            this.primitiveSchema = primitiveSchema;\r\n        }\r\n        this.idBlock = new LocalIdentificationBlock(parameters);\r\n        this.lenBlock = new LocalLengthBlock(parameters);\r\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        if (!writer) {\r\n            prepareIndefiniteForm(this);\r\n        }\r\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\r\n        _writer.write(idBlockBuf);\r\n        if (this.lenBlock.isIndefiniteForm) {\r\n            _writer.write(new Uint8Array([0x80]).buffer);\r\n            this.valueBlock.toBER(sizeOnly, _writer);\r\n            _writer.write(new ArrayBuffer(2));\r\n        }\r\n        else {\r\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\r\n            this.lenBlock.length = valueBlockBuf.byteLength;\r\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\r\n            _writer.write(lenBlockBuf);\r\n            _writer.write(valueBlockBuf);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            idBlock: this.idBlock.toJSON(),\r\n            lenBlock: this.lenBlock.toJSON(),\r\n            valueBlock: this.valueBlock.toJSON(),\r\n            name: this.name,\r\n            optional: this.optional,\r\n        };\r\n        if (this.primitiveSchema)\r\n            object.primitiveSchema = this.primitiveSchema.toJSON();\r\n        return object;\r\n    }\r\n    toString(encoding = \"ascii\") {\r\n        if (encoding === \"ascii\") {\r\n            return this.onAsciiEncoding();\r\n        }\r\n        return pvtsutils.Convert.ToHex(this.toBER());\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`;\r\n    }\r\n    isEqual(other) {\r\n        if (this === other) {\r\n            return true;\r\n        }\r\n        if (!(other instanceof this.constructor)) {\r\n            return false;\r\n        }\r\n        const thisRaw = this.toBER();\r\n        const otherRaw = other.toBER();\r\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\r\n    }\r\n}\r\nBaseBlock.NAME = \"BaseBlock\";\r\nfunction prepareIndefiniteForm(baseBlock) {\r\n    if (baseBlock instanceof typeStore.Constructed) {\r\n        for (const value of baseBlock.valueBlock.value) {\r\n            if (prepareIndefiniteForm(value)) {\r\n                baseBlock.lenBlock.isIndefiniteForm = true;\r\n            }\r\n        }\r\n    }\r\n    return !!baseBlock.lenBlock.isIndefiniteForm;\r\n}\n\nclass BaseStringBlock extends BaseBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\r\n        super(parameters, stringValueBlockType);\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        this.fromBuffer(this.valueBlock.valueHexView);\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\r\n    }\r\n}\r\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ isHexOnly = true, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = isHexOnly;\r\n    }\r\n}\r\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\r\nclass Primitive extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalPrimitiveValueBlock);\r\n        this.idBlock.isConstructed = false;\r\n    }\r\n}\r\n_a$w = Primitive;\r\n(() => {\r\n    typeStore.Primitive = _a$w;\r\n})();\r\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\r\n    if (inputObject instanceof newType) {\r\n        return inputObject;\r\n    }\r\n    const newObject = new newType();\r\n    newObject.idBlock = inputObject.idBlock;\r\n    newObject.lenBlock = inputObject.lenBlock;\r\n    newObject.warnings = inputObject.warnings;\r\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\r\n    return newObject;\r\n}\r\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\r\n    const incomingOffset = inputOffset;\r\n    let returnObject = new BaseBlock({}, ValueBlock);\r\n    const baseBlock = new LocalBaseBlock();\r\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\r\n        returnObject.error = baseBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\r\n    if (!intBuffer.length) {\r\n        returnObject.error = \"Zero buffer length\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.idBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.idBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.idBlock.blockLength;\r\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.lenBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.lenBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.lenBlock.blockLength;\r\n    if (!returnObject.idBlock.isConstructed &&\r\n        returnObject.lenBlock.isIndefiniteForm) {\r\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let newASN1Type = BaseBlock;\r\n    switch (returnObject.idBlock.tagClass) {\r\n        case 1:\r\n            if ((returnObject.idBlock.tagNumber >= 37) &&\r\n                (returnObject.idBlock.isHexOnly === false)) {\r\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\r\n                return {\r\n                    offset: -1,\r\n                    result: returnObject\r\n                };\r\n            }\r\n            switch (returnObject.idBlock.tagNumber) {\r\n                case 0:\r\n                    if ((returnObject.idBlock.isConstructed) &&\r\n                        (returnObject.lenBlock.length > 0)) {\r\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\r\n                        return {\r\n                            offset: -1,\r\n                            result: returnObject\r\n                        };\r\n                    }\r\n                    newASN1Type = typeStore.EndOfContent;\r\n                    break;\r\n                case 1:\r\n                    newASN1Type = typeStore.Boolean;\r\n                    break;\r\n                case 2:\r\n                    newASN1Type = typeStore.Integer;\r\n                    break;\r\n                case 3:\r\n                    newASN1Type = typeStore.BitString;\r\n                    break;\r\n                case 4:\r\n                    newASN1Type = typeStore.OctetString;\r\n                    break;\r\n                case 5:\r\n                    newASN1Type = typeStore.Null;\r\n                    break;\r\n                case 6:\r\n                    newASN1Type = typeStore.ObjectIdentifier;\r\n                    break;\r\n                case 10:\r\n                    newASN1Type = typeStore.Enumerated;\r\n                    break;\r\n                case 12:\r\n                    newASN1Type = typeStore.Utf8String;\r\n                    break;\r\n                case 13:\r\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\r\n                    break;\r\n                case 14:\r\n                    newASN1Type = typeStore.TIME;\r\n                    break;\r\n                case 15:\r\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\r\n                    return {\r\n                        offset: -1,\r\n                        result: returnObject\r\n                    };\r\n                case 16:\r\n                    newASN1Type = typeStore.Sequence;\r\n                    break;\r\n                case 17:\r\n                    newASN1Type = typeStore.Set;\r\n                    break;\r\n                case 18:\r\n                    newASN1Type = typeStore.NumericString;\r\n                    break;\r\n                case 19:\r\n                    newASN1Type = typeStore.PrintableString;\r\n                    break;\r\n                case 20:\r\n                    newASN1Type = typeStore.TeletexString;\r\n                    break;\r\n                case 21:\r\n                    newASN1Type = typeStore.VideotexString;\r\n                    break;\r\n                case 22:\r\n                    newASN1Type = typeStore.IA5String;\r\n                    break;\r\n                case 23:\r\n                    newASN1Type = typeStore.UTCTime;\r\n                    break;\r\n                case 24:\r\n                    newASN1Type = typeStore.GeneralizedTime;\r\n                    break;\r\n                case 25:\r\n                    newASN1Type = typeStore.GraphicString;\r\n                    break;\r\n                case 26:\r\n                    newASN1Type = typeStore.VisibleString;\r\n                    break;\r\n                case 27:\r\n                    newASN1Type = typeStore.GeneralString;\r\n                    break;\r\n                case 28:\r\n                    newASN1Type = typeStore.UniversalString;\r\n                    break;\r\n                case 29:\r\n                    newASN1Type = typeStore.CharacterString;\r\n                    break;\r\n                case 30:\r\n                    newASN1Type = typeStore.BmpString;\r\n                    break;\r\n                case 31:\r\n                    newASN1Type = typeStore.DATE;\r\n                    break;\r\n                case 32:\r\n                    newASN1Type = typeStore.TimeOfDay;\r\n                    break;\r\n                case 33:\r\n                    newASN1Type = typeStore.DateTime;\r\n                    break;\r\n                case 34:\r\n                    newASN1Type = typeStore.Duration;\r\n                    break;\r\n                default: {\r\n                    const newObject = returnObject.idBlock.isConstructed\r\n                        ? new typeStore.Constructed()\r\n                        : new typeStore.Primitive();\r\n                    newObject.idBlock = returnObject.idBlock;\r\n                    newObject.lenBlock = returnObject.lenBlock;\r\n                    newObject.warnings = returnObject.warnings;\r\n                    returnObject = newObject;\r\n                }\r\n            }\r\n            break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        default: {\r\n            newASN1Type = returnObject.idBlock.isConstructed\r\n                ? typeStore.Constructed\r\n                : typeStore.Primitive;\r\n        }\r\n    }\r\n    returnObject = localChangeType(returnObject, newASN1Type);\r\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\r\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\r\n    return {\r\n        offset: resultOffset,\r\n        result: returnObject\r\n    };\r\n}\r\nfunction fromBER(inputBuffer) {\r\n    if (!inputBuffer.byteLength) {\r\n        const result = new BaseBlock({}, ValueBlock);\r\n        result.error = \"Input buffer has zero length\";\r\n        return {\r\n            offset: -1,\r\n            result\r\n        };\r\n    }\r\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\r\n}\n\nfunction checkLen(indefiniteLength, length) {\r\n    if (indefiniteLength) {\r\n        return 1;\r\n    }\r\n    return length;\r\n}\r\nclass LocalConstructedValueBlock extends ValueBlock {\r\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.isIndefiniteForm = isIndefiniteForm;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (this.valueBeforeDecodeView.length === 0) {\r\n            this.warnings.push(\"Zero buffer length\");\r\n            return inputOffset;\r\n        }\r\n        let currentOffset = inputOffset;\r\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\r\n            const returnObject = localFromBER(view, currentOffset, inputLength);\r\n            if (returnObject.offset === -1) {\r\n                this.error = returnObject.result.error;\r\n                this.warnings.concat(returnObject.result.warnings);\r\n                return -1;\r\n            }\r\n            currentOffset = returnObject.offset;\r\n            this.blockLength += returnObject.result.blockLength;\r\n            inputLength -= returnObject.result.blockLength;\r\n            this.value.push(returnObject.result);\r\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.isIndefiniteForm) {\r\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\r\n                this.value.pop();\r\n            }\r\n            else {\r\n                this.warnings.push(\"No EndOfContent block encoded\");\r\n            }\r\n        }\r\n        return currentOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            this.value[i].toBER(sizeOnly, _writer);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            value: [],\r\n        };\r\n        for (const value of this.value) {\r\n            object.value.push(value.toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\r\nclass Constructed extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalConstructedValueBlock);\r\n        this.idBlock.isConstructed = true;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        const values = [];\r\n        for (const value of this.valueBlock.value) {\r\n            values.push(value.toString(\"ascii\").split(\"\\n\").map(o => `  ${o}`).join(\"\\n\"));\r\n        }\r\n        const blockName = this.idBlock.tagClass === 3\r\n            ? `[${this.idBlock.tagNumber}]`\r\n            : this.constructor.NAME;\r\n        return values.length\r\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\r\n            : `${blockName} :`;\r\n    }\r\n}\r\n_a$v = Constructed;\r\n(() => {\r\n    typeStore.Constructed = _a$v;\r\n})();\r\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        return inputOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return EMPTY_BUFFER;\r\n    }\r\n}\r\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\r\nclass EndOfContent extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalEndOfContentValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 0;\r\n    }\r\n}\r\n_a$u = EndOfContent;\r\n(() => {\r\n    typeStore.EndOfContent = _a$u;\r\n})();\r\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\r\nclass Null extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, ValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 5;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (this.lenBlock.length > 0)\r\n            this.warnings.push(\"Non-zero length of value block for Null type\");\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        this.blockLength += inputLength;\r\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\r\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n            return -1;\r\n        }\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuf = new ArrayBuffer(2);\r\n        if (!sizeOnly) {\r\n            const retView = new Uint8Array(retBuf);\r\n            retView[0] = 0x05;\r\n            retView[1] = 0x00;\r\n        }\r\n        if (writer) {\r\n            writer.write(retBuf);\r\n        }\r\n        return retBuf;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME}`;\r\n    }\r\n}\r\n_a$t = Null;\r\n(() => {\r\n    typeStore.Null = _a$t;\r\n})();\r\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        if (parameters.valueHex) {\r\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\r\n        }\r\n        else {\r\n            this.valueHexView = new Uint8Array(1);\r\n        }\r\n        if (value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    get value() {\r\n        for (const octet of this.valueHexView) {\r\n            if (octet > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    set value(value) {\r\n        this.valueHexView[0] = value ? 0xFF : 0x00;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (inputLength > 1)\r\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\r\n        this.isHexOnly = true;\r\n        pvutils.utilDecodeTC.call(this);\r\n        this.blockLength = inputLength;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER() {\r\n        return this.valueHexView.slice();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\r\nclass Boolean extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalBooleanValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 1;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.getValue}`;\r\n    }\r\n}\r\n_a$s = Boolean;\r\n(() => {\r\n    typeStore.Boolean = _a$s;\r\n})();\r\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isConstructed = isConstructed;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = 0;\r\n        if (this.isConstructed) {\r\n            this.isHexOnly = false;\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (let i = 0; i < this.value.length; i++) {\r\n                const currentBlockName = this.value[i].constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== OCTET_STRING_NAME) {\r\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\r\n                    return -1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.isHexOnly = true;\r\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n            this.blockLength = inputLength;\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed)\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.byteLength)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\r\nclass OctetString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalOctetStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 4;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        if (inputLength === 0) {\r\n            if (this.idBlock.error.length === 0)\r\n                this.blockLength += this.idBlock.blockLength;\r\n            if (this.lenBlock.error.length === 0)\r\n                this.blockLength += this.lenBlock.blockLength;\r\n            return inputOffset;\r\n        }\r\n        if (!this.valueBlock.isConstructed) {\r\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\r\n                        this.valueBlock.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueHexView)}`;\r\n    }\r\n    getValue() {\r\n        if (!this.idBlock.isConstructed) {\r\n            return this.valueBlock.valueHexView.slice().buffer;\r\n        }\r\n        const array = [];\r\n        for (const content of this.valueBlock.value) {\r\n            if (content instanceof OctetString) {\r\n                array.push(content.valueBlock.valueHexView);\r\n            }\r\n        }\r\n        return pvtsutils.BufferSourceConverter.concat(array);\r\n    }\r\n}\r\n_a$r = OctetString;\r\n(() => {\r\n    typeStore.OctetString = _a$r;\r\n})();\r\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.unusedBits = unusedBits;\r\n        this.isConstructed = isConstructed;\r\n        this.blockLength = this.valueHexView.byteLength;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        let resultOffset = -1;\r\n        if (this.isConstructed) {\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (const value of this.value) {\r\n                const currentBlockName = value.constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== BIT_STRING_NAME) {\r\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\r\n                    return -1;\r\n                }\r\n                const valueBlock = value.valueBlock;\r\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\r\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\r\n                    return -1;\r\n                }\r\n                this.unusedBits = valueBlock.unusedBits;\r\n            }\r\n            return resultOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.unusedBits = intBuffer[0];\r\n        if (this.unusedBits > 7) {\r\n            this.error = \"Unused bits for BitString must be in range 0-7\";\r\n            return -1;\r\n        }\r\n        if (!this.unusedBits) {\r\n            const buf = intBuffer.subarray(1);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\r\n                        this.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.valueHexView = intBuffer.subarray(1);\r\n        this.blockLength = intBuffer.length;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed) {\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        }\r\n        if (sizeOnly) {\r\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\r\n        }\r\n        if (!this.valueHexView.byteLength) {\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.length + 1);\r\n        retView[0] = this.unusedBits;\r\n        retView.set(this.valueHexView, 1);\r\n        return retView.buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            unusedBits: this.unusedBits,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\r\nclass BitString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalBitStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 3;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        else {\r\n            const bits = [];\r\n            const valueHex = this.valueBlock.valueHexView;\r\n            for (const byte of valueHex) {\r\n                bits.push(byte.toString(2).padStart(8, \"0\"));\r\n            }\r\n            const bitsStr = bits.join(\"\");\r\n            return `${this.constructor.NAME} : ${bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits)}`;\r\n        }\r\n    }\r\n}\r\n_a$q = BitString;\r\n(() => {\r\n    typeStore.BitString = _a$q;\r\n})();\r\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\r\nfunction viewAdd(first, second) {\r\n    const c = new Uint8Array([0]);\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    let firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value = 0;\r\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\r\n    let counter = 0;\r\n    for (let i = max; i >= 0; i--, counter++) {\r\n        switch (true) {\r\n            case (counter < secondViewCopy.length):\r\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\r\n                break;\r\n            default:\r\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\r\n        }\r\n        c[0] = value / 10;\r\n        switch (true) {\r\n            case (counter >= firstViewCopy.length):\r\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\r\n                break;\r\n            default:\r\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\r\n        }\r\n    }\r\n    if (c[0] > 0)\r\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\r\n    return firstViewCopy;\r\n}\r\nfunction power2(n) {\r\n    if (n >= powers2.length) {\r\n        for (let p = powers2.length; p <= n; p++) {\r\n            const c = new Uint8Array([0]);\r\n            let digits = (powers2[p - 1]).slice(0);\r\n            for (let i = (digits.length - 1); i >= 0; i--) {\r\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\r\n                c[0] = newValue[0] / 10;\r\n                digits[i] = newValue[0] % 10;\r\n            }\r\n            if (c[0] > 0)\r\n                digits = pvutils.utilConcatView(c, digits);\r\n            powers2.push(digits);\r\n        }\r\n    }\r\n    return powers2[n];\r\n}\r\nfunction viewSub(first, second) {\r\n    let b = 0;\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    const firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value;\r\n    let counter = 0;\r\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\r\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\r\n        switch (true) {\r\n            case (value < 0):\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n                break;\r\n            default:\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n        }\r\n    }\r\n    if (b > 0) {\r\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\r\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\r\n            if (value < 0) {\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n            }\r\n            else {\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return firstViewCopy.slice();\r\n}\r\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        this._valueDec = 0;\r\n        if (parameters.valueHex) {\r\n            this.setValueHex();\r\n        }\r\n        if (value !== undefined) {\r\n            this.valueDec = value;\r\n        }\r\n    }\r\n    setValueHex() {\r\n        if (this.valueHexView.length >= 4) {\r\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\r\n            this.isHexOnly = true;\r\n            this._valueDec = 0;\r\n        }\r\n        else {\r\n            this.isHexOnly = false;\r\n            if (this.valueHexView.length > 0) {\r\n                this._valueDec = pvutils.utilDecodeTC.call(this);\r\n            }\r\n        }\r\n    }\r\n    set valueDec(v) {\r\n        this._valueDec = v;\r\n        this.isHexOnly = false;\r\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\r\n    }\r\n    get valueDec() {\r\n        return this._valueDec;\r\n    }\r\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\r\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (offset === -1)\r\n            return offset;\r\n        const view = this.valueHexView;\r\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\r\n            this.valueHexView = view.subarray(1);\r\n        }\r\n        else {\r\n            if (expectedLength !== 0) {\r\n                if (view.length < expectedLength) {\r\n                    if ((expectedLength - view.length) > 1)\r\n                        expectedLength = view.length + 1;\r\n                    this.valueHexView = view.subarray(expectedLength - view.length);\r\n                }\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n    toDER(sizeOnly = false) {\r\n        const view = this.valueHexView;\r\n        switch (true) {\r\n            case ((view[0] & 0x80) !== 0):\r\n                {\r\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\r\n                    updatedView[0] = 0x00;\r\n                    updatedView.set(view, 1);\r\n                    this.valueHexView = updatedView;\r\n                }\r\n                break;\r\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\r\n                {\r\n                    this.valueHexView = this.valueHexView.subarray(1);\r\n                }\r\n                break;\r\n        }\r\n        return this.toBER(sizeOnly);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (resultOffset === -1) {\r\n            return resultOffset;\r\n        }\r\n        this.setValueHex();\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.length)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n    toString() {\r\n        const firstBit = (this.valueHexView.length * 8) - 1;\r\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\r\n        let bitNumber = 0;\r\n        let currentByte;\r\n        const asn1View = this.valueHexView;\r\n        let result = \"\";\r\n        let flag = false;\r\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\r\n            currentByte = asn1View[byteNumber];\r\n            for (let i = 0; i < 8; i++) {\r\n                if ((currentByte & 1) === 1) {\r\n                    switch (bitNumber) {\r\n                        case firstBit:\r\n                            digits = viewSub(power2(bitNumber), digits);\r\n                            result = \"-\";\r\n                            break;\r\n                        default:\r\n                            digits = viewAdd(digits, power2(bitNumber));\r\n                    }\r\n                }\r\n                bitNumber++;\r\n                currentByte >>= 1;\r\n            }\r\n        }\r\n        for (let i = 0; i < digits.length; i++) {\r\n            if (digits[i])\r\n                flag = true;\r\n            if (flag)\r\n                result += digitsString.charAt(digits[i]);\r\n        }\r\n        if (flag === false)\r\n            result += digitsString.charAt(0);\r\n        return result;\r\n    }\r\n}\r\n_a$p = LocalIntegerValueBlock;\r\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\r\n(() => {\r\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\r\n        set: function (v) {\r\n            this.valueHexView = new Uint8Array(v);\r\n            this.setValueHex();\r\n        },\r\n        get: function () {\r\n            return this.valueHexView.slice().buffer;\r\n        },\r\n    });\r\n})();\n\nvar _a$o;\r\nclass Integer extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalIntegerValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 2;\r\n    }\r\n    toBigInt() {\r\n        assertBigInt();\r\n        return BigInt(this.valueBlock.toString());\r\n    }\r\n    static fromBigInt(value) {\r\n        assertBigInt();\r\n        const bigIntValue = BigInt(value);\r\n        const writer = new ViewWriter();\r\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\r\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\r\n        if (bigIntValue < 0) {\r\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\r\n            first[0] |= 0x80;\r\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\r\n            const secondInt = firstInt + bigIntValue;\r\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\r\n            second[0] |= 0x80;\r\n            writer.write(second);\r\n        }\r\n        else {\r\n            if (view[0] & 0x80) {\r\n                writer.write(new Uint8Array([0]));\r\n            }\r\n            writer.write(view);\r\n        }\r\n        const res = new Integer({\r\n            valueHex: writer.final(),\r\n        });\r\n        return res;\r\n    }\r\n    convertToDER() {\r\n        const integer = new Integer({ valueHex: this.valueBlock.valueHexView });\r\n        integer.valueBlock.toDER();\r\n        return integer;\r\n    }\r\n    convertFromDER() {\r\n        return new Integer({\r\n            valueHex: this.valueBlock.valueHexView[0] === 0\r\n                ? this.valueBlock.valueHexView.subarray(1)\r\n                : this.valueBlock.valueHexView,\r\n        });\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\r\n    }\r\n}\r\n_a$o = Integer;\r\n(() => {\r\n    typeStore.Integer = _a$o;\r\n})();\r\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\r\nclass Enumerated extends Integer {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 10;\r\n    }\r\n}\r\n_a$n = Enumerated;\r\n(() => {\r\n    typeStore.Enumerated = _a$n;\r\n})();\r\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n        this.isFirstSid = isFirstSid;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++) {\r\n            tempView[i] = this.valueHexView[i];\r\n        }\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    set valueBigInt(value) {\r\n        assertBigInt();\r\n        let bits = BigInt(value).toString(2);\r\n        while (bits.length % 7) {\r\n            bits = \"0\" + bits;\r\n        }\r\n        const bytes = new Uint8Array(bits.length / 7);\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\r\n        }\r\n        this.fromBER(bytes.buffer, 0, bytes.length);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            if (this.isFirstSid) {\r\n                let sidValue = this.valueDec;\r\n                if (this.valueDec <= 39)\r\n                    result = \"0.\";\r\n                else {\r\n                    if (this.valueDec <= 79) {\r\n                        result = \"1.\";\r\n                        sidValue -= 40;\r\n                    }\r\n                    else {\r\n                        result = \"2.\";\r\n                        sidValue -= 80;\r\n                    }\r\n                }\r\n                result += sidValue.toString();\r\n            }\r\n            else\r\n                result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n            isFirstSid: this.isFirstSid,\r\n        };\r\n    }\r\n}\r\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            if (this.value.length === 0)\r\n                sidBlock.isFirstSid = true;\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        let flag = false;\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            if (flag) {\r\n                const sidBlock = this.value[0];\r\n                let plus = 0;\r\n                switch (sidBlock.valueDec) {\r\n                    case 0:\r\n                        break;\r\n                    case 1:\r\n                        plus = 40;\r\n                        break;\r\n                    case 2:\r\n                        plus = 80;\r\n                        break;\r\n                    default:\r\n                        this.value = [];\r\n                        return;\r\n                }\r\n                const parsedSID = parseInt(sid, 10);\r\n                if (isNaN(parsedSID))\r\n                    return;\r\n                sidBlock.valueDec = parsedSID + plus;\r\n                flag = false;\r\n            }\r\n            else {\r\n                const sidBlock = new LocalSidValueBlock();\r\n                if (sid > Number.MAX_SAFE_INTEGER) {\r\n                    assertBigInt();\r\n                    const sidValue = BigInt(sid);\r\n                    sidBlock.valueBigInt = sidValue;\r\n                }\r\n                else {\r\n                    sidBlock.valueDec = parseInt(sid, 10);\r\n                    if (isNaN(sidBlock.valueDec))\r\n                        return;\r\n                }\r\n                if (!this.value.length) {\r\n                    sidBlock.isFirstSid = true;\r\n                    flag = true;\r\n                }\r\n                this.value.push(sidBlock);\r\n            }\r\n        } while (pos2 !== -1);\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                if (this.value[i].isFirstSid)\r\n                    result = `2.{${sidStr} - 80}`;\r\n                else\r\n                    result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\r\nclass ObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 6;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$m = ObjectIdentifier;\r\n(() => {\r\n    typeStore.ObjectIdentifier = _a$m;\r\n})();\r\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ valueDec = 0, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (inputLength === 0)\r\n            return inputOffset;\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\r\n            return -1;\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++)\r\n            tempView[i] = this.valueHexView[i];\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n}\r\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            sidBlock.valueDec = parseInt(sid, 10);\r\n            if (isNaN(sidBlock.valueDec))\r\n                return true;\r\n            this.value.push(sidBlock);\r\n        } while (pos2 !== -1);\r\n        return true;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++)\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        return object;\r\n    }\r\n}\r\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\r\nclass RelativeObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 13;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$l = RelativeObjectIdentifier;\r\n(() => {\r\n    typeStore.RelativeObjectIdentifier = _a$l;\r\n})();\r\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\r\nclass Sequence extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 16;\r\n    }\r\n}\r\n_a$k = Sequence;\r\n(() => {\r\n    typeStore.Sequence = _a$k;\r\n})();\r\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\r\nclass Set extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 17;\r\n    }\r\n}\r\n_a$j = Set;\r\n(() => {\r\n    typeStore.Set = _a$j;\r\n})();\r\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = true;\r\n        this.value = EMPTY_STRING;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\r\n}\r\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters, LocalSimpleStringValueBlock);\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLen = inputString.length;\r\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\r\n        for (let i = 0; i < strLen; i++)\r\n            view[i] = inputString.charCodeAt(i);\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        try {\r\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\r\n        }\r\n        catch (ex) {\r\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\r\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\r\n        }\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\r\nclass Utf8String extends LocalUtf8StringValueBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 12;\r\n    }\r\n}\r\n_a$i = Utf8String;\r\n(() => {\r\n    typeStore.Utf8String = _a$i;\r\n})();\r\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.value = inputString;\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\r\n    }\r\n}\r\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\r\nclass BmpString extends LocalBmpStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 30;\r\n    }\r\n}\r\n_a$h = BmpString;\r\n(() => {\r\n    typeStore.BmpString = _a$h;\r\n})();\r\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\r\n        const valueView = new Uint8Array(copyBuffer);\r\n        for (let i = 0; i < valueView.length; i += 4) {\r\n            valueView[i] = valueView[i + 3];\r\n            valueView[i + 1] = valueView[i + 2];\r\n            valueView[i + 2] = 0x00;\r\n            valueView[i + 3] = 0x00;\r\n        }\r\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLength = inputString.length;\r\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\r\n        for (let i = 0; i < strLength; i++) {\r\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\r\n            const codeView = new Uint8Array(codeBuf);\r\n            if (codeView.length > 4)\r\n                continue;\r\n            const dif = 4 - codeView.length;\r\n            for (let j = (codeView.length - 1); j >= 0; j--)\r\n                valueHexView[i * 4 + j + dif] = codeView[j];\r\n        }\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\r\nclass UniversalString extends LocalUniversalStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 28;\r\n    }\r\n}\r\n_a$g = UniversalString;\r\n(() => {\r\n    typeStore.UniversalString = _a$g;\r\n})();\r\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\r\nclass NumericString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 18;\r\n    }\r\n}\r\n_a$f = NumericString;\r\n(() => {\r\n    typeStore.NumericString = _a$f;\r\n})();\r\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\r\nclass PrintableString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 19;\r\n    }\r\n}\r\n_a$e = PrintableString;\r\n(() => {\r\n    typeStore.PrintableString = _a$e;\r\n})();\r\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\r\nclass TeletexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 20;\r\n    }\r\n}\r\n_a$d = TeletexString;\r\n(() => {\r\n    typeStore.TeletexString = _a$d;\r\n})();\r\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\r\nclass VideotexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 21;\r\n    }\r\n}\r\n_a$c = VideotexString;\r\n(() => {\r\n    typeStore.VideotexString = _a$c;\r\n})();\r\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\r\nclass IA5String extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 22;\r\n    }\r\n}\r\n_a$b = IA5String;\r\n(() => {\r\n    typeStore.IA5String = _a$b;\r\n})();\r\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\r\nclass GraphicString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 25;\r\n    }\r\n}\r\n_a$a = GraphicString;\r\n(() => {\r\n    typeStore.GraphicString = _a$a;\r\n})();\r\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\r\nclass VisibleString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 26;\r\n    }\r\n}\r\n_a$9 = VisibleString;\r\n(() => {\r\n    typeStore.VisibleString = _a$9;\r\n})();\r\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\r\nclass GeneralString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 27;\r\n    }\r\n}\r\n_a$8 = GeneralString;\r\n(() => {\r\n    typeStore.GeneralString = _a$8;\r\n})();\r\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\r\nclass CharacterString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 29;\r\n    }\r\n}\r\n_a$7 = CharacterString;\r\n(() => {\r\n    typeStore.CharacterString = _a$7;\r\n})();\r\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\r\nclass UTCTime extends VisibleString {\r\n    constructor({ value, valueDate, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.year = 0;\r\n        this.month = 0;\r\n        this.day = 0;\r\n        this.hour = 0;\r\n        this.minute = 0;\r\n        this.second = 0;\r\n        if (value) {\r\n            this.fromString(value);\r\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\r\n            for (let i = 0; i < value.length; i++)\r\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\r\n        }\r\n        if (valueDate) {\r\n            this.fromDate(valueDate);\r\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\r\n        }\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 23;\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\r\n    }\r\n    toBuffer() {\r\n        const str = this.toString();\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new Uint8Array(buffer);\r\n        for (let i = 0; i < str.length; i++)\r\n            view[i] = str.charCodeAt(i);\r\n        return buffer;\r\n    }\r\n    fromDate(inputDate) {\r\n        this.year = inputDate.getUTCFullYear();\r\n        this.month = inputDate.getUTCMonth() + 1;\r\n        this.day = inputDate.getUTCDate();\r\n        this.hour = inputDate.getUTCHours();\r\n        this.minute = inputDate.getUTCMinutes();\r\n        this.second = inputDate.getUTCSeconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\r\n    }\r\n    fromString(inputString) {\r\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\r\n        const parserArray = parser.exec(inputString);\r\n        if (parserArray === null) {\r\n            this.error = \"Wrong input string for conversion\";\r\n            return;\r\n        }\r\n        const year = parseInt(parserArray[1], 10);\r\n        if (year >= 50)\r\n            this.year = 1900 + year;\r\n        else\r\n            this.year = 2000 + year;\r\n        this.month = parseInt(parserArray[2], 10);\r\n        this.day = parseInt(parserArray[3], 10);\r\n        this.hour = parseInt(parserArray[4], 10);\r\n        this.minute = parseInt(parserArray[5], 10);\r\n        this.second = parseInt(parserArray[6], 10);\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = new Array(7);\r\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\r\n            outputArray[1] = pvutils.padNumber(this.month, 2);\r\n            outputArray[2] = pvutils.padNumber(this.day, 2);\r\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\r\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\r\n            outputArray[5] = pvutils.padNumber(this.second, 2);\r\n            outputArray[6] = \"Z\";\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            year: this.year,\r\n            month: this.month,\r\n            day: this.day,\r\n            hour: this.hour,\r\n            minute: this.minute,\r\n            second: this.second,\r\n        };\r\n    }\r\n}\r\n_a$6 = UTCTime;\r\n(() => {\r\n    typeStore.UTCTime = _a$6;\r\n})();\r\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\r\nclass GeneralizedTime extends UTCTime {\r\n    constructor(parameters = {}) {\r\n        var _b;\r\n        super(parameters);\r\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 24;\r\n    }\r\n    fromDate(inputDate) {\r\n        super.fromDate(inputDate);\r\n        this.millisecond = inputDate.getUTCMilliseconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)));\r\n    }\r\n    fromString(inputString) {\r\n        let isUTC = false;\r\n        let timeString = \"\";\r\n        let dateTimeString = \"\";\r\n        let fractionPart = 0;\r\n        let parser;\r\n        let hourDifference = 0;\r\n        let minuteDifference = 0;\r\n        if (inputString[inputString.length - 1] === \"Z\") {\r\n            timeString = inputString.substring(0, inputString.length - 1);\r\n            isUTC = true;\r\n        }\r\n        else {\r\n            const number = new Number(inputString[inputString.length - 1]);\r\n            if (isNaN(number.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            timeString = inputString;\r\n        }\r\n        if (isUTC) {\r\n            if (timeString.indexOf(\"+\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            if (timeString.indexOf(\"-\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        else {\r\n            let multiplier = 1;\r\n            let differencePosition = timeString.indexOf(\"+\");\r\n            let differenceString = \"\";\r\n            if (differencePosition === -1) {\r\n                differencePosition = timeString.indexOf(\"-\");\r\n                multiplier = -1;\r\n            }\r\n            if (differencePosition !== -1) {\r\n                differenceString = timeString.substring(differencePosition + 1);\r\n                timeString = timeString.substring(0, differencePosition);\r\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                let number = parseInt(differenceString.substring(0, 2), 10);\r\n                if (isNaN(number.valueOf()))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                hourDifference = multiplier * number;\r\n                if (differenceString.length === 4) {\r\n                    number = parseInt(differenceString.substring(2, 4), 10);\r\n                    if (isNaN(number.valueOf()))\r\n                        throw new Error(\"Wrong input string for conversion\");\r\n                    minuteDifference = multiplier * number;\r\n                }\r\n            }\r\n        }\r\n        let fractionPointPosition = timeString.indexOf(\".\");\r\n        if (fractionPointPosition === -1)\r\n            fractionPointPosition = timeString.indexOf(\",\");\r\n        if (fractionPointPosition !== -1) {\r\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\r\n            if (isNaN(fractionPartCheck.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            fractionPart = fractionPartCheck.valueOf();\r\n            dateTimeString = timeString.substring(0, fractionPointPosition);\r\n        }\r\n        else\r\n            dateTimeString = timeString;\r\n        switch (true) {\r\n            case (dateTimeString.length === 8):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1)\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                break;\r\n            case (dateTimeString.length === 10):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.minute = Math.floor(fractionResult);\r\n                    fractionResult = 60 * (fractionResult - this.minute);\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 12):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 14):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    const fractionResult = 1000 * fractionPart;\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        const parserArray = parser.exec(dateTimeString);\r\n        if (parserArray === null)\r\n            throw new Error(\"Wrong input string for conversion\");\r\n        for (let j = 1; j < parserArray.length; j++) {\r\n            switch (j) {\r\n                case 1:\r\n                    this.year = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 2:\r\n                    this.month = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 3:\r\n                    this.day = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 4:\r\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\r\n                    break;\r\n                case 5:\r\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\r\n                    break;\r\n                case 6:\r\n                    this.second = parseInt(parserArray[j], 10);\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n            }\r\n        }\r\n        if (isUTC === false) {\r\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\r\n            this.year = tempDate.getUTCFullYear();\r\n            this.month = tempDate.getUTCMonth();\r\n            this.day = tempDate.getUTCDay();\r\n            this.hour = tempDate.getUTCHours();\r\n            this.minute = tempDate.getUTCMinutes();\r\n            this.second = tempDate.getUTCSeconds();\r\n            this.millisecond = tempDate.getUTCMilliseconds();\r\n        }\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = [];\r\n            outputArray.push(pvutils.padNumber(this.year, 4));\r\n            outputArray.push(pvutils.padNumber(this.month, 2));\r\n            outputArray.push(pvutils.padNumber(this.day, 2));\r\n            outputArray.push(pvutils.padNumber(this.hour, 2));\r\n            outputArray.push(pvutils.padNumber(this.minute, 2));\r\n            outputArray.push(pvutils.padNumber(this.second, 2));\r\n            if (this.millisecond !== 0) {\r\n                outputArray.push(\".\");\r\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\r\n            }\r\n            outputArray.push(\"Z\");\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            millisecond: this.millisecond,\r\n        };\r\n    }\r\n}\r\n_a$5 = GeneralizedTime;\r\n(() => {\r\n    typeStore.GeneralizedTime = _a$5;\r\n})();\r\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\r\nclass DATE extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 31;\r\n    }\r\n}\r\n_a$4 = DATE;\r\n(() => {\r\n    typeStore.DATE = _a$4;\r\n})();\r\nDATE.NAME = \"DATE\";\n\nvar _a$3;\r\nclass TimeOfDay extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 32;\r\n    }\r\n}\r\n_a$3 = TimeOfDay;\r\n(() => {\r\n    typeStore.TimeOfDay = _a$3;\r\n})();\r\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\r\nclass DateTime extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 33;\r\n    }\r\n}\r\n_a$2 = DateTime;\r\n(() => {\r\n    typeStore.DateTime = _a$2;\r\n})();\r\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\r\nclass Duration extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 34;\r\n    }\r\n}\r\n_a$1 = Duration;\r\n(() => {\r\n    typeStore.Duration = _a$1;\r\n})();\r\nDuration.NAME = \"Duration\";\n\nvar _a;\r\nclass TIME extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 14;\r\n    }\r\n}\r\n_a = TIME;\r\n(() => {\r\n    typeStore.TIME = _a;\r\n})();\r\nTIME.NAME = \"TIME\";\n\nclass Any {\r\n    constructor({ name = EMPTY_STRING, optional = false, } = {}) {\r\n        this.name = name;\r\n        this.optional = optional;\r\n    }\r\n}\n\nclass Choice extends Any {\r\n    constructor({ value = [], ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n    }\r\n}\n\nclass Repeated extends Any {\r\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.local = local;\r\n    }\r\n}\n\nclass RawData {\r\n    constructor({ data = EMPTY_VIEW } = {}) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\r\n    }\r\n    get data() {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n    set data(value) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const endLength = inputOffset + inputLength;\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\r\n        return endLength;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\r\n    if (inputSchema instanceof Choice) {\r\n        for (let j = 0; j < inputSchema.value.length; j++) {\r\n            const result = compareSchema(root, inputData, inputSchema.value[j]);\r\n            if (result.verified) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n        {\r\n            const _result = {\r\n                verified: false,\r\n                result: {\r\n                    error: \"Wrong values for Choice type\"\r\n                },\r\n            };\r\n            if (inputSchema.hasOwnProperty(NAME))\r\n                _result.name = inputSchema.name;\r\n            return _result;\r\n        }\r\n    }\r\n    if (inputSchema instanceof Any) {\r\n        if (inputSchema.hasOwnProperty(NAME))\r\n            root[inputSchema.name] = inputData;\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if ((root instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong root object\" }\r\n        };\r\n    }\r\n    if ((inputData instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 data\" }\r\n        };\r\n    }\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((ID_BLOCK in inputSchema) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((FROM_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((TO_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    const encodedId = inputSchema.idBlock.toBER(false);\r\n    if (encodedId.byteLength === 0) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\r\n    if (decodedOffset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly) {\r\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\r\n            return {\r\n                verified: false,\r\n                result: { error: \"Wrong ASN.1 schema\" }\r\n            };\r\n        }\r\n        const schemaView = inputSchema.idBlock.valueHexView;\r\n        const asn1View = inputData.idBlock.valueHexView;\r\n        if (schemaView.length !== asn1View.length) {\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < schemaView.length; i++) {\r\n            if (schemaView[i] !== asn1View[1]) {\r\n                return {\r\n                    verified: false,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n    }\r\n    if (inputSchema.name) {\r\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n        if (inputSchema.name)\r\n            root[inputSchema.name] = inputData;\r\n    }\r\n    if (inputSchema instanceof typeStore.Constructed) {\r\n        let admission = 0;\r\n        let result = {\r\n            verified: false,\r\n            result: {\r\n                error: \"Unknown error\",\r\n            }\r\n        };\r\n        let maxLength = inputSchema.valueBlock.value.length;\r\n        if (maxLength > 0) {\r\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                maxLength = inputData.valueBlock.value.length;\r\n            }\r\n        }\r\n        if (maxLength === 0) {\r\n            return {\r\n                verified: true,\r\n                result: root\r\n            };\r\n        }\r\n        if ((inputData.valueBlock.value.length === 0) &&\r\n            (inputSchema.valueBlock.value.length !== 0)) {\r\n            let _optional = true;\r\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\r\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\r\n            if (_optional) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name)\r\n                    delete root[inputSchema.name];\r\n            }\r\n            root.error = \"Inconsistent object length\";\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < maxLength; i++) {\r\n            if ((i - admission) >= inputData.valueBlock.value.length) {\r\n                if (inputSchema.valueBlock.value[i].optional === false) {\r\n                    const _result = {\r\n                        verified: false,\r\n                        result: root\r\n                    };\r\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\r\n                    if (inputSchema.name) {\r\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                        if (inputSchema.name) {\r\n                            delete root[inputSchema.name];\r\n                            _result.name = inputSchema.name;\r\n                        }\r\n                    }\r\n                    return _result;\r\n                }\r\n            }\r\n            else {\r\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[0].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\r\n                        let arrayRoot = {};\r\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\r\n                            arrayRoot = inputData;\r\n                        else\r\n                            arrayRoot = root;\r\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\r\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\r\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\r\n                    }\r\n                }\r\n                else {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[i].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (result.verified === false) {\r\n            const _result = {\r\n                verified: false,\r\n                result: root\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.primitiveSchema &&\r\n        (VALUE_HEX_VIEW in inputData.valueBlock)) {\r\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\r\n        if (asn1.offset === -1) {\r\n            const _result = {\r\n                verified: false,\r\n                result: asn1.result\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\r\n    }\r\n    return {\r\n        verified: true,\r\n        result: root\r\n    };\r\n}\r\nfunction verifySchema(inputBuffer, inputSchema) {\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema type\" }\r\n        };\r\n    }\r\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    if (asn1.offset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: asn1.result\r\n        };\r\n    }\r\n    return compareSchema(asn1.result, asn1.result, inputSchema);\r\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n","/* eslint-env browser */\n\nimport { webcrypto } from 'crypto'\n\n// globalThis `SubtleCrypto` shipped in node.js 19.x, Electron currently uses\n// v18.x so this override file is necessary until Electron updates\nexport default {\n  get (win = globalThis) {\n    return webcrypto\n  }\n}\n","import { CodeError } from '@libp2p/interface'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { isPromise } from '../util.js'\nimport { exporter } from './exporter.js'\nimport * as keysProtobuf from './keys.js'\nimport * as crypto from './secp256k1.js'\nimport type { Multibase } from 'multiformats'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class Secp256k1PublicKey {\n  private readonly _key: Uint8Array\n\n  constructor (key: Uint8Array) {\n    crypto.validatePublicKey(key)\n    this._key = key\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array): boolean {\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal (): Uint8Array {\n    return crypto.compressPublicKey(this._key)\n  }\n\n  get bytes (): Uint8Array {\n    return keysProtobuf.PublicKey.encode({\n      Type: keysProtobuf.KeyType.Secp256k1,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash (): Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n    let bytes: Uint8Array\n\n    if (isPromise(p)) {\n      ({ bytes } = await p)\n    } else {\n      bytes = p.bytes\n    }\n\n    return bytes\n  }\n}\n\nexport class Secp256k1PrivateKey {\n  private readonly _key: Uint8Array\n  private readonly _publicKey: Uint8Array\n\n  constructor (key: Uint8Array, publicKey?: Uint8Array) {\n    this._key = key\n    this._publicKey = publicKey ?? crypto.computePublicKey(key)\n    crypto.validatePrivateKey(this._key)\n    crypto.validatePublicKey(this._publicKey)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList): Uint8Array | Promise<Uint8Array> {\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public (): Secp256k1PublicKey {\n    return new Secp256k1PublicKey(this._publicKey)\n  }\n\n  marshal (): Uint8Array {\n    return this._key\n  }\n\n  get bytes (): Uint8Array {\n    return keysProtobuf.PrivateKey.encode({\n      Type: keysProtobuf.KeyType.Secp256k1,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   */\n  async id (): Promise<string> {\n    const hash = await this.public.hash()\n    return uint8ArrayToString(hash, 'base58btc')\n  }\n\n  /**\n   * Exports the key into a password protected `format`\n   */\n  async export (password: string, format = 'libp2p-key'): Promise<Multibase<'m'>> {\n    if (format === 'libp2p-key') {\n      return exporter(this.bytes, password)\n    } else {\n      throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nexport function unmarshalSecp256k1PrivateKey (bytes: Uint8Array): Secp256k1PrivateKey {\n  return new Secp256k1PrivateKey(bytes)\n}\n\nexport function unmarshalSecp256k1PublicKey (bytes: Uint8Array): Secp256k1PublicKey {\n  return new Secp256k1PublicKey(bytes)\n}\n\nexport async function generateKeyPair (): Promise<Secp256k1PrivateKey> {\n  const privateKeyBytes = crypto.generateKey()\n  return new Secp256k1PrivateKey(privateKeyBytes)\n}\n","import crypto from 'node:crypto'\nimport { CodeError } from '@libp2p/interface'\nimport { secp256k1 as secp } from '@noble/curves/secp256k1'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst PRIVATE_KEY_BYTE_LENGTH = 32\n\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength }\n\nexport function generateKey (): Uint8Array {\n  return secp.utils.randomPrivateKey()\n}\n\n/**\n * Hash and sign message with private key\n */\nexport function hashAndSign (key: Uint8Array, msg: Uint8Array | Uint8ArrayList): Uint8Array {\n  const hash = crypto.createHash('sha256')\n\n  if (msg instanceof Uint8Array) {\n    hash.update(msg)\n  } else {\n    for (const buf of msg) {\n      hash.update(buf)\n    }\n  }\n\n  const digest = hash.digest()\n\n  try {\n    const signature = secp.sign(digest, key)\n    return signature.toDERRawBytes()\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_INPUT')\n  }\n}\n\n/**\n * Hash message and verify signature with public key\n */\nexport function hashAndVerify (key: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): boolean {\n  const hash = crypto.createHash('sha256')\n\n  if (msg instanceof Uint8Array) {\n    hash.update(msg)\n  } else {\n    for (const buf of msg) {\n      hash.update(buf)\n    }\n  }\n\n  const digest = hash.digest()\n\n  try {\n    return secp.verify(sig, digest, key)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_INPUT')\n  }\n}\n\nexport function compressPublicKey (key: Uint8Array): Uint8Array {\n  const point = secp.ProjectivePoint.fromHex(key).toRawBytes(true)\n  return point\n}\n\nexport function decompressPublicKey (key: Uint8Array): Uint8Array {\n  const point = secp.ProjectivePoint.fromHex(key).toRawBytes(false)\n  return point\n}\n\nexport function validatePrivateKey (key: Uint8Array): void {\n  try {\n    secp.getPublicKey(key, true)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY')\n  }\n}\n\nexport function validatePublicKey (key: Uint8Array): void {\n  try {\n    secp.ProjectivePoint.fromHex(key)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_PUBLIC_KEY')\n  }\n}\n\nexport function computePublicKey (privateKey: Uint8Array): Uint8Array {\n  try {\n    return secp.getPublicKey(privateKey, true)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY')\n  }\n}\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean) {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | boolean;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    ut.abytes(data);\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (ut.isBytes(key)) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(\n      readonly px: T,\n      readonly py: T,\n      readonly pz: T\n    ) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y: bigint;\n        try {\n          y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        } catch (sqrtError) {\n          const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n          throw new Error('Point is not on curve' + suffix);\n        }\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(\n      readonly r: bigint,\n      readonly s: bigint,\n      readonly recovery?: number\n    ) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = ut.isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null && ent !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || ut.isBytes(sg)) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","/**\n * @packageDocumentation\n *\n * A class that lets you do operations over a list of Uint8Arrays without\n * copying them.\n *\n * ```js\n * import { Uint8ArrayList } from 'uint8arraylist'\n *\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray()\n * // -> Uint8Array([0, 1, 2, 3, 4, 5])\n *\n * list.consume(3)\n * list.subarray()\n * // -> Uint8Array([3, 4, 5])\n *\n * // you can also iterate over the list\n * for (const buf of list) {\n *   // ..do something with `buf`\n * }\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ## Converting Uint8ArrayLists to Uint8Arrays\n *\n * There are two ways to turn a `Uint8ArrayList` into a `Uint8Array` - `.slice` and `.subarray` and one way to turn a `Uint8ArrayList` into a `Uint8ArrayList` with different contents - `.sublist`.\n *\n * ### slice\n *\n * Slice follows the same semantics as [Uint8Array.slice](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice) in that it creates a new `Uint8Array` and copies bytes into it using an optional offset & length.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.slice(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ### subarray\n *\n * Subarray attempts to follow the same semantics as [Uint8Array.subarray](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray) with one important different - this is a no-copy operation, unless the requested bytes span two internal buffers in which case it is a copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0]) - no-copy\n *\n * list.subarray(2, 5)\n * // -> Uint8Array([2, 3, 4]) - copy\n * ```\n *\n * ### sublist\n *\n * Sublist creates and returns a new `Uint8ArrayList` that shares the underlying buffers with the original so is always a no-copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.sublist(0, 1)\n * // -> Uint8ArrayList([0]) - no-copy\n *\n * list.sublist(2, 5)\n * // -> Uint8ArrayList([2], [3, 4]) - no-copy\n * ```\n *\n * ## Inspiration\n *\n * Borrows liberally from [bl](https://www.npmjs.com/package/bl) but only uses native JS types.\n */\nimport { allocUnsafe, alloc } from 'uint8arrays/alloc'\nimport { concat } from 'uint8arrays/concat'\nimport { equals } from 'uint8arrays/equals'\n\nconst symbol = Symbol.for('@achingbrain/uint8arraylist')\n\nexport type Appendable = Uint8ArrayList | Uint8Array\n\nfunction findBufAndOffset (bufs: Uint8Array[], index: number): { buf: Uint8Array, index: number } {\n  if (index == null || index < 0) {\n    throw new RangeError('index is out of bounds')\n  }\n\n  let offset = 0\n\n  for (const buf of bufs) {\n    const bufEnd = offset + buf.byteLength\n\n    if (index < bufEnd) {\n      return {\n        buf,\n        index: index - offset\n      }\n    }\n\n    offset = bufEnd\n  }\n\n  throw new RangeError('index is out of bounds')\n}\n\n/**\n * Check if object is a CID instance\n *\n * @example\n *\n * ```js\n * import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\n *\n * isUint8ArrayList(true) // false\n * isUint8ArrayList([]) // false\n * isUint8ArrayList(new Uint8ArrayList()) // true\n * ```\n */\nexport function isUint8ArrayList (value: any): value is Uint8ArrayList {\n  return Boolean(value?.[symbol])\n}\n\nexport class Uint8ArrayList implements Iterable<Uint8Array> {\n  private bufs: Uint8Array[]\n  public length: number\n  public readonly [symbol] = true\n\n  constructor (...data: Appendable[]) {\n    this.bufs = []\n    this.length = 0\n\n    if (data.length > 0) {\n      this.appendAll(data)\n    }\n  }\n\n  * [Symbol.iterator] (): Iterator<Uint8Array> {\n    yield * this.bufs\n  }\n\n  get byteLength (): number {\n    return this.length\n  }\n\n  /**\n   * Add one or more `bufs` to the end of this Uint8ArrayList\n   */\n  append (...bufs: Appendable[]): void {\n    this.appendAll(bufs)\n  }\n\n  /**\n   * Add all `bufs` to the end of this Uint8ArrayList\n   */\n  appendAll (bufs: Appendable[]): void {\n    let length = 0\n\n    for (const buf of bufs) {\n      if (buf instanceof Uint8Array) {\n        length += buf.byteLength\n        this.bufs.push(buf)\n      } else if (isUint8ArrayList(buf)) {\n        length += buf.byteLength\n        this.bufs.push(...buf.bufs)\n      } else {\n        throw new Error('Could not append value, must be an Uint8Array or a Uint8ArrayList')\n      }\n    }\n\n    this.length += length\n  }\n\n  /**\n   * Add one or more `bufs` to the start of this Uint8ArrayList\n   */\n  prepend (...bufs: Appendable[]): void {\n    this.prependAll(bufs)\n  }\n\n  /**\n   * Add all `bufs` to the start of this Uint8ArrayList\n   */\n  prependAll (bufs: Appendable[]): void {\n    let length = 0\n\n    for (const buf of bufs.reverse()) {\n      if (buf instanceof Uint8Array) {\n        length += buf.byteLength\n        this.bufs.unshift(buf)\n      } else if (isUint8ArrayList(buf)) {\n        length += buf.byteLength\n        this.bufs.unshift(...buf.bufs)\n      } else {\n        throw new Error('Could not prepend value, must be an Uint8Array or a Uint8ArrayList')\n      }\n    }\n\n    this.length += length\n  }\n\n  /**\n   * Read the value at `index`\n   */\n  get (index: number): number {\n    const res = findBufAndOffset(this.bufs, index)\n\n    return res.buf[res.index]\n  }\n\n  /**\n   * Set the value at `index` to `value`\n   */\n  set (index: number, value: number): void {\n    const res = findBufAndOffset(this.bufs, index)\n\n    res.buf[res.index] = value\n  }\n\n  /**\n   * Copy bytes from `buf` to the index specified by `offset`\n   */\n  write (buf: Appendable, offset: number = 0): void {\n    if (buf instanceof Uint8Array) {\n      for (let i = 0; i < buf.length; i++) {\n        this.set(offset + i, buf[i])\n      }\n    } else if (isUint8ArrayList(buf)) {\n      for (let i = 0; i < buf.length; i++) {\n        this.set(offset + i, buf.get(i))\n      }\n    } else {\n      throw new Error('Could not write value, must be an Uint8Array or a Uint8ArrayList')\n    }\n  }\n\n  /**\n   * Remove bytes from the front of the pool\n   */\n  consume (bytes: number): void {\n    // first, normalize the argument, in accordance with how Buffer does it\n    bytes = Math.trunc(bytes)\n\n    // do nothing if not a positive number\n    if (Number.isNaN(bytes) || bytes <= 0) {\n      return\n    }\n\n    // if consuming all bytes, skip iterating\n    if (bytes === this.byteLength) {\n      this.bufs = []\n      this.length = 0\n      return\n    }\n\n    while (this.bufs.length > 0) {\n      if (bytes >= this.bufs[0].byteLength) {\n        bytes -= this.bufs[0].byteLength\n        this.length -= this.bufs[0].byteLength\n        this.bufs.shift()\n      } else {\n        this.bufs[0] = this.bufs[0].subarray(bytes)\n        this.length -= bytes\n        break\n      }\n    }\n  }\n\n  /**\n   * Extracts a section of an array and returns a new array.\n   *\n   * This is a copy operation as it is with Uint8Arrays and Arrays\n   * - note this is different to the behaviour of Node Buffers.\n   */\n  slice (beginInclusive?: number, endExclusive?: number): Uint8Array {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    return concat(bufs, length)\n  }\n\n  /**\n   * Returns a alloc from the given start and end element index.\n   *\n   * In the best case where the data extracted comes from a single Uint8Array\n   * internally this is a no-copy operation otherwise it is a copy operation.\n   */\n  subarray (beginInclusive?: number, endExclusive?: number): Uint8Array {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    if (bufs.length === 1) {\n      return bufs[0]\n    }\n\n    return concat(bufs, length)\n  }\n\n  /**\n   * Returns a allocList from the given start and end element index.\n   *\n   * This is a no-copy operation.\n   */\n  sublist (beginInclusive?: number, endExclusive?: number): Uint8ArrayList {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    const list = new Uint8ArrayList()\n    list.length = length\n    // don't loop, just set the bufs\n    list.bufs = [...bufs]\n\n    return list\n  }\n\n  private _subList (beginInclusive?: number, endExclusive?: number): { bufs: Uint8Array[], length: number } {\n    beginInclusive = beginInclusive ?? 0\n    endExclusive = endExclusive ?? this.length\n\n    if (beginInclusive < 0) {\n      beginInclusive = this.length + beginInclusive\n    }\n\n    if (endExclusive < 0) {\n      endExclusive = this.length + endExclusive\n    }\n\n    if (beginInclusive < 0 || endExclusive > this.length) {\n      throw new RangeError('index is out of bounds')\n    }\n\n    if (beginInclusive === endExclusive) {\n      return { bufs: [], length: 0 }\n    }\n\n    if (beginInclusive === 0 && endExclusive === this.length) {\n      return { bufs: this.bufs, length: this.length }\n    }\n\n    const bufs: Uint8Array[] = []\n    let offset = 0\n\n    for (let i = 0; i < this.bufs.length; i++) {\n      const buf = this.bufs[i]\n      const bufStart = offset\n      const bufEnd = bufStart + buf.byteLength\n\n      // for next loop\n      offset = bufEnd\n\n      if (beginInclusive >= bufEnd) {\n        // start after this buf\n        continue\n      }\n\n      const sliceStartInBuf = beginInclusive >= bufStart && beginInclusive < bufEnd\n      const sliceEndsInBuf = endExclusive > bufStart && endExclusive <= bufEnd\n\n      if (sliceStartInBuf && sliceEndsInBuf) {\n        // slice is wholly contained within this buffer\n        if (beginInclusive === bufStart && endExclusive === bufEnd) {\n          // requested whole buffer\n          bufs.push(buf)\n          break\n        }\n\n        // requested part of buffer\n        const start = beginInclusive - bufStart\n        bufs.push(buf.subarray(start, start + (endExclusive - beginInclusive)))\n        break\n      }\n\n      if (sliceStartInBuf) {\n        // slice starts in this buffer\n        if (beginInclusive === 0) {\n          // requested whole buffer\n          bufs.push(buf)\n          continue\n        }\n\n        // requested part of buffer\n        bufs.push(buf.subarray(beginInclusive - bufStart))\n        continue\n      }\n\n      if (sliceEndsInBuf) {\n        if (endExclusive === bufEnd) {\n          // requested whole buffer\n          bufs.push(buf)\n          break\n        }\n\n        // requested part of buffer\n        bufs.push(buf.subarray(0, endExclusive - bufStart))\n        break\n      }\n\n      // slice started before this buffer and ends after it\n      bufs.push(buf)\n    }\n\n    return { bufs, length: endExclusive - beginInclusive }\n  }\n\n  indexOf (search: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n    if (!isUint8ArrayList(search) && !(search instanceof Uint8Array)) {\n      throw new TypeError('The \"value\" argument must be a Uint8ArrayList or Uint8Array')\n    }\n\n    const needle = search instanceof Uint8Array ? search : search.subarray()\n\n    offset = Number(offset ?? 0)\n\n    if (isNaN(offset)) {\n      offset = 0\n    }\n\n    if (offset < 0) {\n      offset = this.length + offset\n    }\n\n    if (offset < 0) {\n      offset = 0\n    }\n\n    if (search.length === 0) {\n      return offset > this.length ? this.length : offset\n    }\n\n    // https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm\n    const M: number = needle.byteLength\n\n    if (M === 0) {\n      throw new TypeError('search must be at least 1 byte long')\n    }\n\n    // radix\n    const radix: number = 256\n    const rightmostPositions: Int32Array = new Int32Array(radix)\n\n    // position of the rightmost occurrence of the byte c in the pattern\n    for (let c: number = 0; c < radix; c++) {\n      // -1 for bytes not in pattern\n      rightmostPositions[c] = -1\n    }\n\n    for (let j = 0; j < M; j++) {\n      // rightmost position for bytes in pattern\n      rightmostPositions[needle[j]] = j\n    }\n\n    // Return offset of first match, -1 if no match\n    const right = rightmostPositions\n    const lastIndex = this.byteLength - needle.byteLength\n    const lastPatIndex = needle.byteLength - 1\n    let skip: number\n\n    for (let i = offset; i <= lastIndex; i += skip) {\n      skip = 0\n\n      for (let j = lastPatIndex; j >= 0; j--) {\n        const char: number = this.get(i + j)\n\n        if (needle[j] !== char) {\n          skip = Math.max(1, j - right[char])\n          break\n        }\n      }\n\n      if (skip === 0) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getInt8 (byteOffset: number): number {\n    const buf = this.subarray(byteOffset, byteOffset + 1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt8(0)\n  }\n\n  setInt8 (byteOffset: number, value: number): void {\n    const buf = allocUnsafe(1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt8(0, value)\n\n    this.write(buf, byteOffset)\n  }\n\n  getInt16 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt16(0, littleEndian)\n  }\n\n  setInt16 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt16(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getInt32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt32(0, littleEndian)\n  }\n\n  setInt32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getBigInt64 (byteOffset: number, littleEndian?: boolean): bigint {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getBigInt64(0, littleEndian)\n  }\n\n  setBigInt64 (byteOffset: number, value: bigint, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setBigInt64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint8 (byteOffset: number): number {\n    const buf = this.subarray(byteOffset, byteOffset + 1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint8(0)\n  }\n\n  setUint8 (byteOffset: number, value: number): void {\n    const buf = allocUnsafe(1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint8(0, value)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint16 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint16(0, littleEndian)\n  }\n\n  setUint16 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint16(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint32(0, littleEndian)\n  }\n\n  setUint32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getBigUint64 (byteOffset: number, littleEndian?: boolean): bigint {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getBigUint64(0, littleEndian)\n  }\n\n  setBigUint64 (byteOffset: number, value: bigint, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setBigUint64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getFloat32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getFloat32(0, littleEndian)\n  }\n\n  setFloat32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setFloat32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getFloat64 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getFloat64(0, littleEndian)\n  }\n\n  setFloat64 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setFloat64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  equals (other: any): other is Uint8ArrayList {\n    if (other == null) {\n      return false\n    }\n\n    if (!(other instanceof Uint8ArrayList)) {\n      return false\n    }\n\n    if (other.bufs.length !== this.bufs.length) {\n      return false\n    }\n\n    for (let i = 0; i < this.bufs.length; i++) {\n      if (!equals(this.bufs[i], other.bufs[i])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Create a Uint8ArrayList from a pre-existing list of Uint8Arrays.  Use this\n   * method if you know the total size of all the Uint8Arrays ahead of time.\n   */\n  static fromUint8Arrays (bufs: Uint8Array[], length?: number): Uint8ArrayList {\n    const list = new Uint8ArrayList()\n    list.bufs = bufs\n\n    if (length == null) {\n      length = bufs.reduce((acc, curr) => acc + curr.byteLength, 0)\n    }\n\n    list.length = length\n\n    return list\n  }\n}\n\n/*\nfunction indexOf (needle: Uint8Array, haystack: Uint8Array, offset = 0) {\n  for (let i = offset; i < haystack.byteLength; i++) {\n    for (let j = 0; j < needle.length; j++) {\n      if (haystack[i + j] !== needle[j]) {\n        break\n      }\n\n      if (j === needle.byteLength -1) {\n        return i\n      }\n    }\n\n    if (haystack.byteLength - i < needle.byteLength) {\n      break\n    }\n  }\n\n  return -1\n}\n*/\n","export function isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n","import * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport { isAsyncIterable } from './utils.js'\nimport type { LengthEncoderFunction } from './index.js'\nimport type { Source } from 'it-stream-types'\n\ninterface EncoderOptions {\n  lengthEncoder?: LengthEncoderFunction\n}\n\nconst defaultEncoder: LengthEncoderFunction = (length) => {\n  const lengthLength = varint.encodingLength(length)\n  const lengthBuf = allocUnsafe(lengthLength)\n\n  varint.encode(length, lengthBuf)\n\n  defaultEncoder.bytes = lengthLength\n\n  return lengthBuf\n}\ndefaultEncoder.bytes = 0\n\nexport function encode (source: Iterable<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): Generator<Uint8Array, void, undefined>\nexport function encode (source: Source<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): AsyncGenerator<Uint8Array, void, undefined>\nexport function encode (source: Source<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): Generator<Uint8Array, void, undefined> | AsyncGenerator<Uint8Array, void, undefined> {\n  options = options ?? {}\n\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n\n  function * maybeYield (chunk: Uint8Array | Uint8ArrayList): Generator<Uint8Array, void, undefined> {\n    // length + data\n    const length = encodeLength(chunk.byteLength)\n\n    // yield only Uint8Arrays\n    if (length instanceof Uint8Array) {\n      yield length\n    } else {\n      yield * length\n    }\n\n    // yield only Uint8Arrays\n    if (chunk instanceof Uint8Array) {\n      yield chunk\n    } else {\n      yield * chunk\n    }\n  }\n\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const chunk of source) {\n        yield * maybeYield(chunk)\n      }\n    })()\n  }\n\n  return (function * () {\n    for (const chunk of source) {\n      yield * maybeYield(chunk)\n    }\n  })()\n}\n\nencode.single = (chunk: Uint8ArrayList | Uint8Array, options?: EncoderOptions) => {\n  options = options ?? {}\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n\n  return new Uint8ArrayList(\n    encodeLength(chunk.byteLength),\n    chunk\n  )\n}\n","/* eslint max-depth: [\"error\", 6] */\n\nimport errCode from 'err-code'\nimport * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { isAsyncIterable } from './utils.js'\nimport type { LengthDecoderFunction } from './index.js'\nimport type { Reader } from 'it-reader'\nimport type { Source } from 'it-stream-types'\n\nexport interface ReadState {\n  dataLength: number\n}\n\nexport interface DecoderOptions {\n  lengthDecoder?: LengthDecoderFunction\n  onData?: (data: Uint8ArrayList) => void\n  onLength?: (length: number) => void\n  maxLengthLength?: number\n  maxDataLength?: number\n}\n\nexport interface ReadResult {\n  mode: string\n  chunk?: Uint8ArrayList\n  buffer: Uint8ArrayList\n  state?: ReadState\n  data?: Uint8ArrayList\n}\n\n// Maximum length of the length section of the message\nexport const MAX_LENGTH_LENGTH = 8 // Varint.encode(Number.MAX_SAFE_INTEGER).length\n// Maximum length of the data section of the message\nexport const MAX_DATA_LENGTH = 1024 * 1024 * 4\n\nenum ReadMode {\n  LENGTH,\n  DATA\n}\n\nconst defaultDecoder: LengthDecoderFunction = (buf) => {\n  const length = varint.decode(buf)\n  defaultDecoder.bytes = varint.encodingLength(length)\n\n  return length\n}\ndefaultDecoder.bytes = 0\n\nexport function decode (source: Iterable<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): Generator<Uint8ArrayList, void, unknown>\nexport function decode (source: Source<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): AsyncGenerator<Uint8ArrayList, void, unknown>\nexport function decode (source: Source<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): Generator<Uint8ArrayList, void, unknown> | AsyncGenerator<Uint8ArrayList, void, unknown> {\n  const buffer = new Uint8ArrayList()\n  let mode = ReadMode.LENGTH\n  let dataLength = -1\n\n  const lengthDecoder = options?.lengthDecoder ?? defaultDecoder\n  const maxLengthLength = options?.maxLengthLength ?? MAX_LENGTH_LENGTH\n  const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH\n\n  function * maybeYield (): Generator<Uint8ArrayList> {\n    while (buffer.byteLength > 0) {\n      if (mode === ReadMode.LENGTH) {\n        // read length, ignore errors for short reads\n        try {\n          dataLength = lengthDecoder(buffer)\n\n          if (dataLength < 0) {\n            throw errCode(new Error('invalid message length'), 'ERR_INVALID_MSG_LENGTH')\n          }\n\n          if (dataLength > maxDataLength) {\n            throw errCode(new Error('message length too long'), 'ERR_MSG_DATA_TOO_LONG')\n          }\n\n          const dataLengthLength = lengthDecoder.bytes\n          buffer.consume(dataLengthLength)\n\n          if (options?.onLength != null) {\n            options.onLength(dataLength)\n          }\n\n          mode = ReadMode.DATA\n        } catch (err: any) {\n          if (err instanceof RangeError) {\n            if (buffer.byteLength > maxLengthLength) {\n              throw errCode(new Error('message length length too long'), 'ERR_MSG_LENGTH_TOO_LONG')\n            }\n\n            break\n          }\n\n          throw err\n        }\n      }\n\n      if (mode === ReadMode.DATA) {\n        if (buffer.byteLength < dataLength) {\n          // not enough data, wait for more\n          break\n        }\n\n        const data = buffer.sublist(0, dataLength)\n        buffer.consume(dataLength)\n\n        if (options?.onData != null) {\n          options.onData(data)\n        }\n\n        yield data\n\n        mode = ReadMode.LENGTH\n      }\n    }\n  }\n\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const buf of source) {\n        buffer.append(buf)\n\n        yield * maybeYield()\n      }\n\n      if (buffer.byteLength > 0) {\n        throw errCode(new Error('unexpected end of input'), 'ERR_UNEXPECTED_EOF')\n      }\n    })()\n  }\n\n  return (function * () {\n    for (const buf of source) {\n      buffer.append(buf)\n\n      yield * maybeYield()\n    }\n\n    if (buffer.byteLength > 0) {\n      throw errCode(new Error('unexpected end of input'), 'ERR_UNEXPECTED_EOF')\n    }\n  })()\n}\n\ndecode.fromReader = (reader: Reader, options?: DecoderOptions) => {\n  let byteLength = 1 // Read single byte chunks until the length is known\n\n  const varByteSource = (async function * () {\n    while (true) {\n      try {\n        const { done, value } = await reader.next(byteLength)\n\n        if (done === true) {\n          return\n        }\n\n        if (value != null) {\n          yield value\n        }\n      } catch (err: any) {\n        if (err.code === 'ERR_UNDER_READ') {\n          return { done: true, value: null }\n        }\n        throw err\n      } finally {\n        // Reset the byteLength so we continue to check for varints\n        byteLength = 1\n      }\n    }\n  }())\n\n  /**\n   * Once the length has been parsed, read chunk for that length\n   */\n  const onLength = (l: number): void => { byteLength = l }\n  return decode(varByteSource, {\n    ...(options ?? {}),\n    onLength\n  })\n}\n","export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n","/**\n * An abort error class that extends error\n */\nexport class AbortError extends Error {\n  public type: string\n  public code: string | string\n\n  constructor (message?: string, code?: string) {\n    super(message ?? 'The operation was aborted')\n    this.type = 'aborted'\n    this.name = 'AbortError'\n    this.code = code ?? 'ABORT_ERR'\n  }\n}\n\nexport interface RaceSignalOptions {\n  /**\n   * The message for the error thrown if the signal aborts\n   */\n  errorMessage?: string\n\n  /**\n   * The code for the error thrown if the signal aborts\n   */\n  errorCode?: string\n}\n\n/**\n * Race a promise against an abort signal\n */\nexport async function raceSignal <T> (promise: Promise<T>, signal?: AbortSignal, opts?: RaceSignalOptions): Promise<T> {\n  if (signal == null) {\n    return promise\n  }\n\n  if (signal.aborted) {\n    return Promise.reject(new AbortError(opts?.errorMessage, opts?.errorCode))\n  }\n\n  let listener\n\n  // create the error here so we have more context in the stack trace\n  const error = new AbortError(opts?.errorMessage, opts?.errorCode)\n\n  try {\n    return await Promise.race([\n      promise,\n      new Promise<T>((resolve, reject) => {\n        listener = () => {\n          reject(error)\n        }\n        signal.addEventListener('abort', listener)\n      })\n    ])\n  } finally {\n    if (listener != null) {\n      signal.removeEventListener('abort', listener)\n    }\n  }\n}\n","import deferred, { type DeferredPromise } from 'p-defer'\nimport { raceSignal, type RaceSignalOptions } from 'race-signal'\nimport { type AbortOptions } from './index.js'\n\nexport interface Pushable<T> extends AsyncGenerator<T, void, unknown> {\n  /**\n   * End the iterable after all values in the buffer (if any) have been yielded. If an\n   * error is passed the buffer is cleared immediately and the next iteration will\n   * throw the passed error\n   */\n  end(err?: Error, options?: AbortOptions & RaceSignalOptions): Promise<void>\n\n  /**\n   * Push a value into the iterable. Values are yielded from the iterable in the order\n   * they are pushed. Values not yet consumed from the iterable are buffered.\n   */\n  push(value: T, options?: AbortOptions & RaceSignalOptions): Promise<void>\n}\n\nclass QueuelessPushable <T> implements Pushable<T> {\n  private readNext: DeferredPromise<void>\n  private haveNext: DeferredPromise<void>\n  private ended: boolean\n  private nextResult: IteratorResult<T> | undefined\n\n  constructor () {\n    this.ended = false\n\n    this.readNext = deferred()\n    this.haveNext = deferred()\n  }\n\n  [Symbol.asyncIterator] (): AsyncGenerator<T, void, unknown> {\n    return this\n  }\n\n  async next (): Promise<IteratorResult<T, void>> {\n    if (this.nextResult == null) {\n      // wait for the supplier to push a value\n      await this.haveNext.promise\n    }\n\n    if (this.nextResult == null) {\n      throw new Error('HaveNext promise resolved but nextResult was undefined')\n    }\n\n    const nextResult = this.nextResult\n    this.nextResult = undefined\n\n    // signal to the supplier that we read the value\n    this.readNext.resolve()\n    this.readNext = deferred()\n\n    return nextResult\n  }\n\n  async throw (err?: Error): Promise<IteratorReturnResult<undefined>> {\n    this.ended = true\n\n    if (err != null) {\n      this.haveNext.reject(err)\n    }\n\n    const result: IteratorReturnResult<undefined> = {\n      done: true,\n      value: undefined\n    }\n\n    return result\n  }\n\n  async return (): Promise<IteratorResult<T>> {\n    const result: IteratorReturnResult<undefined> = {\n      done: true,\n      value: undefined\n    }\n\n    await this._push(undefined)\n\n    return result\n  }\n\n  async push (value: T, options?: AbortOptions & RaceSignalOptions): Promise<void> {\n    await this._push(value, options)\n  }\n\n  async end (err?: Error, options?: AbortOptions & RaceSignalOptions): Promise<void> {\n    if (err != null) {\n      await this.throw(err)\n    } else {\n      // abortable return\n      await this._push(undefined, options)\n    }\n  }\n\n  private async _push (value?: T, options?: AbortOptions & RaceSignalOptions): Promise<void> {\n    if (value != null && this.ended) {\n      throw new Error('Cannot push value onto an ended pushable')\n    }\n\n    // already have a value, wait for it to be read\n    if (this.nextResult != null) {\n      await this.readNext.promise\n\n      if (this.nextResult != null) {\n        throw new Error('NeedNext promise resolved but nextResult was not consumed')\n      }\n    }\n\n    if (value != null) {\n      this.nextResult = { done: false, value }\n    } else {\n      this.ended = true\n      this.nextResult = { done: true, value: undefined }\n    }\n\n    // let the consumer know we have a new value\n    this.haveNext.resolve()\n    this.haveNext = deferred()\n\n    // wait for the consumer to have finished processing the value and requested\n    // the next one or for the passed signal to abort the waiting\n    await raceSignal(\n      this.readNext.promise,\n      options?.signal,\n      options\n    )\n  }\n}\n\nexport function pushable <T> (): Pushable<T> {\n  return new QueuelessPushable<T>()\n}\n","/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive bytes over streams.\n *\n * @example\n *\n * ```typescript\n * import { byteStream } from 'it-byte-stream'\n *\n * const stream = byteStream(duplex)\n *\n * // read the next chunk\n * const bytes = await stream.read()\n *\n * // read the next five bytes\n * const fiveBytes = await stream.read(5)\n *\n * // write bytes into the stream\n * await stream.write(Uint8Array.from([0, 1, 2, 3, 4]))\n * ```\n */\n\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { pushable } from './pushable.js'\nimport type { Duplex } from 'it-stream-types'\n\nexport class CodeError extends Error {\n  public readonly code: string\n\n  constructor (message: string, code: string) {\n    super(message)\n    this.code = code\n  }\n}\n\nexport class AbortError extends CodeError {\n  public readonly type: string\n\n  constructor (message: string) {\n    super(message, 'ABORT_ERR')\n    this.type = 'aborted'\n  }\n}\n\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\nexport interface ByteStream <Stream = unknown> {\n  /**\n   * Read a set number of bytes from the stream\n   */\n  read(bytes?: number, options?: AbortOptions): Promise<Uint8ArrayList>\n\n  /**\n   * Write the passed bytes to the stream\n   */\n  write(input: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<void>\n\n  /**\n   * Returns the underlying stream\n   */\n  unwrap(): Stream\n}\n\nexport interface ByteStreamOpts {\n  /**\n   * After the stream is unwrapped, any bytes that have been read from the\n   * incoming stream will be yielded in-order as `Uint8Array`(s).\n   *\n   * To yield a single `Uint8ArrayList` with all unread bytes instead, pass\n   * `false` here.\n   */\n  yieldBytes?: boolean\n}\n\nexport function byteStream <Stream extends Duplex<any, any, any>> (duplex: Stream, opts?: ByteStreamOpts): ByteStream<Stream> {\n  const write = pushable()\n\n  duplex.sink(write).catch(async (err: Error) => {\n    await write.end(err)\n  })\n\n  duplex.sink = async (source: any) => {\n    for await (const buf of source) {\n      await write.push(buf)\n    }\n\n    await write.end()\n  }\n\n  let source = duplex.source\n\n  if (duplex.source[Symbol.iterator] != null) {\n    source = duplex.source[Symbol.iterator]()\n  } else if (duplex.source[Symbol.asyncIterator] != null) {\n    source = duplex.source[Symbol.asyncIterator]()\n  }\n\n  const readBuffer = new Uint8ArrayList()\n\n  const W: ByteStream<Stream> = {\n    read: async (bytes?: number, options?: AbortOptions) => {\n      options?.signal?.throwIfAborted()\n\n      let listener: EventListener | undefined\n\n      const abortPromise = new Promise((resolve, reject) => {\n        listener = () => {\n          reject(new AbortError('Read aborted'))\n        }\n\n        options?.signal?.addEventListener('abort', listener)\n      })\n\n      try {\n        if (bytes == null) {\n          // just read whatever arrives\n          const { done, value } = await Promise.race([\n            source.next(),\n            abortPromise\n          ])\n\n          if (done === true) {\n            return new Uint8ArrayList()\n          }\n\n          return value\n        }\n\n        while (readBuffer.byteLength < bytes) {\n          const { value, done } = await Promise.race([\n            source.next(),\n            abortPromise\n          ])\n\n          if (done === true) {\n            throw new CodeError('unexpected end of input', 'ERR_UNEXPECTED_EOF')\n          }\n\n          readBuffer.append(value)\n        }\n\n        const buf = readBuffer.sublist(0, bytes)\n        readBuffer.consume(bytes)\n\n        return buf\n      } finally {\n        if (listener != null) {\n          options?.signal?.removeEventListener('abort', listener)\n        }\n      }\n    },\n    write: async (data, options?: AbortOptions) => {\n      options?.signal?.throwIfAborted()\n\n      // just write\n      if (data instanceof Uint8Array) {\n        await write.push(data, options)\n      } else {\n        await write.push(data.subarray(), options)\n      }\n    },\n    unwrap: () => {\n      if (readBuffer.byteLength > 0) {\n        const originalStream = duplex.source\n        duplex.source = (async function * () {\n          if (opts?.yieldBytes === false) {\n            yield readBuffer\n          } else {\n            yield * readBuffer\n          }\n\n          yield * originalStream\n        }())\n      }\n\n      return duplex\n    }\n  }\n\n  return W\n}\n","/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive length-prefixed byte arrays over streams.\n *\n * @example\n *\n * ```typescript\n * import { lpStream } from 'it-length-prefixed-stream'\n *\n * const stream = lpStream(duplex)\n *\n * // read the next length-prefixed chunk\n * const bytes = await stream.read()\n *\n * // write a length-prefixed chunk\n * await stream.write(Uint8Array.from([0, 1, 2, 3, 4]))\n *\n * // write several chunks, all individually length-prefixed\n * await stream.writeV([\n *   Uint8Array.from([0, 1, 2, 3, 4]),\n *   Uint8Array.from([5, 6, 7, 8, 9])\n * ])\n * ```\n */\nimport { byteStream, type ByteStreamOpts } from 'it-byte-stream'\nimport * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport type { Duplex } from 'it-stream-types'\n\nclass CodeError extends Error {\n  public readonly code: string\n\n  constructor (message: string, code: string) {\n    super(message)\n    this.code = code\n  }\n}\n\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\nexport interface LengthPrefixedStream <Stream = unknown> {\n  /**\n   * Read the next length-prefixed number of bytes from the stream\n   */\n  read(options?: AbortOptions): Promise<Uint8ArrayList>\n\n  /**\n   * Write the passed bytes to the stream prefixed by their length\n   */\n  write(input: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<void>\n\n  /**\n   * Write passed list of bytes, prefix by their individual lengths to the stream as a single write\n   */\n  writeV(input: Array<Uint8Array | Uint8ArrayList>, options?: AbortOptions): Promise<void>\n\n  /**\n   * Returns the underlying stream\n   */\n  unwrap(): Stream\n}\n\nexport interface LengthPrefixedStreamOpts extends ByteStreamOpts {\n  // encoding opts\n  lengthEncoder (value: number): Uint8ArrayList | Uint8Array\n\n  // decoding opts\n  lengthDecoder (data: Uint8ArrayList): number\n  maxLengthLength: number\n  maxDataLength: number\n}\n\nexport function lpStream <Stream extends Duplex<any, any, any>> (duplex: Stream, opts: Partial<LengthPrefixedStreamOpts> = {}): LengthPrefixedStream<Stream> {\n  const bytes = byteStream(duplex, opts)\n\n  if (opts.maxDataLength != null && opts.maxLengthLength == null) {\n    // if max data length is set but max length length is not, calculate the\n    // max length length needed to encode max data length\n    opts.maxLengthLength = varint.encodingLength(opts.maxDataLength)\n  }\n\n  const decodeLength = opts?.lengthDecoder ?? varint.decode\n  const encodeLength = opts?.lengthEncoder ?? varint.encode\n\n  const W: LengthPrefixedStream<Stream> = {\n    read: async (options?: AbortOptions) => {\n      let dataLength: number = -1\n      const lengthBuffer = new Uint8ArrayList()\n\n      while (true) {\n        // read one byte at a time until we can decode a varint\n        lengthBuffer.append(await bytes.read(1, options))\n\n        try {\n          dataLength = decodeLength(lengthBuffer)\n        } catch (err) {\n          if (err instanceof RangeError) {\n            continue\n          }\n\n          throw err\n        }\n\n        if (opts?.maxLengthLength != null && lengthBuffer.byteLength > opts.maxLengthLength) {\n          throw new CodeError('message length length too long', 'ERR_MSG_LENGTH_TOO_LONG')\n        }\n\n        if (dataLength > -1) {\n          break\n        }\n      }\n\n      if (opts?.maxDataLength != null && dataLength > opts.maxDataLength) {\n        throw new CodeError('message length too long', 'ERR_MSG_DATA_TOO_LONG')\n      }\n\n      return bytes.read(dataLength, options)\n    },\n    write: async (data, options?: AbortOptions) => {\n      // encode, write\n      await bytes.write(new Uint8ArrayList(encodeLength(data.byteLength), data), options)\n    },\n    writeV: async (data, options?: AbortOptions) => {\n      const list = new Uint8ArrayList(\n        ...data.flatMap(buf => ([encodeLength(buf.byteLength), buf]))\n      )\n\n      // encode, write\n      await bytes.write(list, options)\n    },\n    unwrap: () => {\n      return bytes.unwrap()\n    }\n  }\n\n  return W\n}\n","import defer from 'p-defer'\nimport type { Source, Duplex } from 'it-stream-types'\n\n/**\n * A pair of streams where one drains from the other\n */\nexport function pair <T> (): Duplex<AsyncGenerator<T>, Source<T>, Promise<void>> {\n  const deferred = defer<Source<T>>()\n  let piped = false\n\n  return {\n    sink: async source => {\n      if (piped) {\n        throw new Error('already piped')\n      }\n\n      piped = true\n      deferred.resolve(source)\n    },\n    source: (async function * () {\n      const source = await deferred.promise\n\n      yield * source\n    }())\n  }\n}\n","import { pair } from './index.js'\nimport type { Duplex, Source } from 'it-stream-types'\n\n/**\n * Two duplex streams that are attached to each other\n */\nexport function duplexPair <T> (): [Duplex<AsyncGenerator<T>, Source<T>, Promise<void>>, Duplex<AsyncGenerator<T>, Source<T>, Promise<void>>] {\n  const a = pair<T>()\n  const b = pair<T>()\n  return [\n    {\n      source: a.source,\n      sink: b.sink\n    },\n    {\n      source: b.source,\n      sink: a.sink\n    }\n  ]\n}\n","// ported from https://www.npmjs.com/package/fast-fifo\n\nexport interface Next<T> {\n  done?: boolean\n  error?: Error\n  value?: T\n}\n\nclass FixedFIFO<T> {\n  public buffer: Array<Next<T> | undefined>\n  private readonly mask: number\n  private top: number\n  private btm: number\n  public next: FixedFIFO<T> | null\n\n  constructor (hwm: number) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n      throw new Error('Max size for a FixedFIFO should be a power of two')\n    }\n\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data: Next<T>): boolean {\n    if (this.buffer[this.top] !== undefined) {\n      return false\n    }\n\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n\n    return true\n  }\n\n  shift (): Next<T> | undefined {\n    const last = this.buffer[this.btm]\n\n    if (last === undefined) {\n      return undefined\n    }\n\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  isEmpty (): boolean {\n    return this.buffer[this.btm] === undefined\n  }\n}\n\nexport interface FIFOOptions {\n  /**\n   * When the queue reaches this size, it will be split into head/tail parts\n   */\n  splitLimit?: number\n}\n\nexport class FIFO<T> {\n  public size: number\n  private readonly hwm: number\n  private head: FixedFIFO<T>\n  private tail: FixedFIFO<T>\n\n  constructor (options: FIFOOptions = {}) {\n    this.hwm = options.splitLimit ?? 16\n    this.head = new FixedFIFO<T>(this.hwm)\n    this.tail = this.head\n    this.size = 0\n  }\n\n  calculateSize (obj: any): number {\n    if (obj?.byteLength != null) {\n      return obj.byteLength\n    }\n\n    return 1\n  }\n\n  push (val: Next<T>): void {\n    if (val?.value != null) {\n      this.size += this.calculateSize(val.value)\n    }\n\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO<T>(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift (): Next<T> | undefined {\n    let val = this.tail.shift()\n\n    if (val === undefined && (this.tail.next != null)) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      val = this.tail.shift()\n    }\n\n    if (val?.value != null) {\n      this.size -= this.calculateSize(val.value)\n    }\n\n    return val\n  }\n\n  isEmpty (): boolean {\n    return this.head.isEmpty()\n  }\n}\n","/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\n\nimport deferred from 'p-defer'\nimport { FIFO, type Next } from './fifo.js'\n\nexport class AbortError extends Error {\n  type: string\n  code: string\n\n  constructor (message?: string, code?: string) {\n    super(message ?? 'The operation was aborted')\n    this.type = 'aborted'\n    this.code = code ?? 'ABORT_ERR'\n  }\n}\n\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\ninterface BasePushable<T> {\n  /**\n   * End the iterable after all values in the buffer (if any) have been yielded. If an\n   * error is passed the buffer is cleared immediately and the next iteration will\n   * throw the passed error\n   */\n  end(err?: Error): this\n\n  /**\n   * Push a value into the iterable. Values are yielded from the iterable in the order\n   * they are pushed. Values not yet consumed from the iterable are buffered.\n   */\n  push(value: T): this\n\n  /**\n   * Returns a promise that resolves when the underlying queue becomes empty (e.g.\n   * this.readableLength === 0).\n   *\n   * If an AbortSignal is passed as an option and that signal aborts, it only\n   * causes the returned promise to reject - it does not end the pushable.\n   */\n  onEmpty(options?: AbortOptions): Promise<void>\n\n  /**\n   * This property contains the number of bytes (or objects) in the queue ready to be read.\n   *\n   * If `objectMode` is true, this is the number of objects in the queue, if false it's the\n   * total number of bytes in the queue.\n   */\n  readableLength: number\n}\n\n/**\n * An iterable that you can push values into.\n */\nexport interface Pushable<T, R = void, N = unknown> extends AsyncGenerator<T, R, N>, BasePushable<T> {}\n\n/**\n * Similar to `pushable`, except it yields multiple buffered chunks at a time. All values yielded from the iterable will be arrays.\n */\nexport interface PushableV<T, R = void, N = unknown> extends AsyncGenerator<T[], R, N>, BasePushable<T> {}\n\nexport interface Options {\n  /**\n   * A boolean value that means non-`Uint8Array`s will be passed to `.push`, default: `false`\n   */\n  objectMode?: boolean\n\n  /**\n   * A function called after *all* values have been yielded from the iterator (including\n   * buffered values). In the case when the iterator is ended with an error it will be\n   * passed the error as a parameter.\n   */\n  onEnd?(err?: Error): void\n}\n\nexport interface DoneResult { done: true }\nexport interface ValueResult<T> { done: false, value: T }\nexport type NextResult<T> = ValueResult<T> | DoneResult\n\ninterface getNext<T, V = T> { (buffer: FIFO<T>): NextResult<V> }\n\nexport interface ObjectPushableOptions extends Options {\n  objectMode: true\n}\n\nexport interface BytePushableOptions extends Options {\n  objectMode?: false\n}\n\n/**\n * Create a new async iterable. The values yielded from calls to `.next()`\n * or when used in a `for await of`loop are \"pushed\" into the iterable.\n * Returns an async iterable object with additional methods.\n */\nexport function pushable<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): Pushable<T>\nexport function pushable<T> (options: ObjectPushableOptions): Pushable<T>\nexport function pushable<T> (options: Options = {}): Pushable<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T> => {\n    const next: Next<T> | undefined = buffer.shift()\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    if (next.error != null) {\n      throw next.error\n    }\n\n    return {\n      done: next.done === true,\n      // @ts-expect-error if done is false, value will be present\n      value: next.value\n    }\n  }\n\n  return _pushable<T, T, Pushable<T>>(getNext, options)\n}\n\nexport function pushableV<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): PushableV<T>\nexport function pushableV<T> (options: ObjectPushableOptions): PushableV<T>\nexport function pushableV<T> (options: Options = {}): PushableV<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T[]> => {\n    let next: Next<T> | undefined\n    const values: T[] = []\n\n    while (!buffer.isEmpty()) {\n      next = buffer.shift()\n\n      if (next == null) {\n        break\n      }\n\n      if (next.error != null) {\n        throw next.error\n      }\n\n      if (next.done === false) {\n        // @ts-expect-error if done is false value should be pushed\n        values.push(next.value)\n      }\n    }\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    return {\n      done: next.done === true,\n      value: values\n    }\n  }\n\n  return _pushable<T, T[], PushableV<T>>(getNext, options)\n}\n\nfunction _pushable<PushType, ValueType, ReturnType> (getNext: getNext<PushType, ValueType>, options?: Options): ReturnType {\n  options = options ?? {}\n  let onEnd = options.onEnd\n  let buffer = new FIFO<PushType>()\n  let pushable: any\n  let onNext: ((next: Next<PushType>) => ReturnType) | null\n  let ended: boolean\n  let drain = deferred()\n\n  const waitNext = async (): Promise<NextResult<ValueType>> => {\n    try {\n      if (!buffer.isEmpty()) {\n        return getNext(buffer)\n      }\n\n      if (ended) {\n        return { done: true }\n      }\n\n      return await new Promise<NextResult<ValueType>>((resolve, reject) => {\n        onNext = (next: Next<PushType>) => {\n          onNext = null\n          buffer.push(next)\n\n          try {\n            resolve(getNext(buffer))\n          } catch (err) {\n            reject(err)\n          }\n\n          return pushable\n        }\n      })\n    } finally {\n      if (buffer.isEmpty()) {\n        // settle promise in the microtask queue to give consumers a chance to\n        // await after calling .push\n        queueMicrotask(() => {\n          drain.resolve()\n          drain = deferred()\n        })\n      }\n    }\n  }\n\n  const bufferNext = (next: Next<PushType>): ReturnType => {\n    if (onNext != null) {\n      return onNext(next)\n    }\n\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = (err: Error): ReturnType => {\n    buffer = new FIFO()\n\n    if (onNext != null) {\n      return onNext({ error: err })\n    }\n\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = (value: PushType): ReturnType => {\n    if (ended) {\n      return pushable\n    }\n\n    // @ts-expect-error `byteLength` is not declared on PushType\n    if (options?.objectMode !== true && value?.byteLength == null) {\n      throw new Error('objectMode was not true but tried to push non-Uint8Array value')\n    }\n\n    return bufferNext({ done: false, value })\n  }\n  const end = (err?: Error): ReturnType => {\n    if (ended) return pushable\n    ended = true\n\n    return (err != null) ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = (): DoneResult => {\n    buffer = new FIFO()\n    end()\n\n    return { done: true }\n  }\n  const _throw = (err: Error): DoneResult => {\n    end(err)\n\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end,\n    get readableLength (): number {\n      return buffer.size\n    },\n    onEmpty: async (options?: AbortOptions) => {\n      const signal = options?.signal\n      signal?.throwIfAborted()\n\n      if (buffer.isEmpty()) {\n        return\n      }\n\n      let cancel: Promise<void> | undefined\n      let listener: (() => void) | undefined\n\n      if (signal != null) {\n        cancel = new Promise((resolve, reject) => {\n          listener = () => {\n            reject(new AbortError())\n          }\n\n          signal.addEventListener('abort', listener)\n        })\n      }\n\n      try {\n        await Promise.race([\n          drain.promise,\n          cancel\n        ])\n      } finally {\n        if (listener != null && signal != null) {\n          signal?.removeEventListener('abort', listener)\n        }\n      }\n    }\n  }\n\n  if (onEnd == null) {\n    return pushable\n  }\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err: Error) {\n      _pushable.throw(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n\n      if (onEnd != null) {\n        onEnd()\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    push,\n    end (err: Error) {\n      _pushable.end(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return pushable\n    },\n    get readableLength () {\n      return _pushable.readableLength\n    },\n    onEmpty: (opts?: AbortOptions) => {\n      return _pushable.onEmpty(opts)\n    }\n  }\n\n  return pushable\n}\n","/**\n * @packageDocumentation\n *\n * Merge several (async)iterables into one, yield values as they arrive.\n *\n * Nb. sources are iterated over in parallel so the order of emitted items is not guaranteed.\n *\n * @example\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values1 = [0, 1, 2, 3, 4]\n * const values2 = [5, 6, 7, 8, 9]\n *\n * const arr = all(merge(values1, values2))\n *\n * console.info(arr) // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const values1 = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n * const values2 = async function * () {\n *   yield * [5, 6, 7, 8, 9]\n * }\n *\n * const arr = await all(merge(values1(), values2()))\n *\n * console.info(arr) // 0, 1, 5, 6, 2, 3, 4, 7, 8, 9  <- nb. order is not guaranteed\n * ```\n */\n\nimport { pushable } from 'it-pushable'\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n */\nfunction merge <T> (...sources: Array<Iterable<T>>): Generator<T, void, undefined>\nfunction merge <T> (...sources: Array<AsyncIterable<T> | Iterable<T>>): AsyncGenerator<T, void, undefined>\nfunction merge <T> (...sources: Array<AsyncIterable<T> | Iterable<T>>): AsyncGenerator<T, void, undefined> | Generator<T, void, undefined> {\n  const syncSources: Array<Iterable<T>> = []\n\n  for (const source of sources) {\n    if (!isAsyncIterable(source)) {\n      syncSources.push(source)\n    }\n  }\n\n  if (syncSources.length === sources.length) {\n    // all sources are synchronous\n    return (function * () {\n      for (const source of syncSources) {\n        yield * source\n      }\n    })()\n  }\n\n  return (async function * () {\n    const output = pushable<T>({\n      objectMode: true\n    })\n\n    void Promise.resolve().then(async () => {\n      try {\n        await Promise.all(\n          sources.map(async (source) => {\n            for await (const item of source) {\n              output.push(item)\n            }\n          })\n        )\n\n        output.end()\n      } catch (err: any) {\n        output.end(err)\n      }\n    })\n\n    yield * output\n  })()\n}\n\nexport default merge\n","import { pushable } from 'it-pushable'\nimport merge from 'it-merge'\nimport type { Duplex, Transform, Sink } from 'it-stream-types'\n\ninterface SourceFn<A = any> { (): A }\n\ntype PipeSource<A = any> =\n  Iterable<A> |\n  AsyncIterable<A> |\n  SourceFn<A> |\n  Duplex<A, any, any>\n\ntype PipeTransform<A = any, B = any> =\n  Transform<A, B> |\n  Duplex<B, A>\n\ntype PipeSink<A = any, B = any> =\n  Sink<A, B> |\n  Duplex<any, A, B>\n\ntype PipeOutput<A> =\n  A extends Sink<any> ? ReturnType<A> :\n    A extends Duplex<any, any, any> ? ReturnType<A['sink']> :\n      never\n\n// single item pipe output includes pipe source types\ntype SingleItemPipeOutput<A> =\n  A extends Iterable<any> ? A :\n    A extends AsyncIterable<any> ? A :\n      A extends SourceFn ? ReturnType<A> :\n        A extends Duplex<any, any, any> ? A['source'] :\n          PipeOutput<A>\n\ntype PipeFnInput<A> =\n  A extends Iterable<any> ? A :\n    A extends AsyncIterable<any> ? A :\n      A extends SourceFn ? ReturnType<A> :\n        A extends Transform<any, any> ? ReturnType<A> :\n          A extends Duplex<any, any, any> ? A['source'] :\n            never\n\n// one item, just a pass-through\nexport function pipe<\n  A extends PipeSource\n> (\n  source: A\n): SingleItemPipeOutput<A>\n\n// two items, source to sink\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeSink<PipeFnInput<A>>\n> (\n  source: A,\n  sink: B\n): PipeOutput<B>\n\n// three items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeSink<PipeFnInput<B>>\n> (\n  source: A,\n  transform1: B,\n  sink: C\n): PipeOutput<C>\n\n// many items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeSink<PipeFnInput<C>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  sink: D\n): PipeOutput<D>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeSink<PipeFnInput<D>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  sink: E\n): PipeOutput<E>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeSink<PipeFnInput<E>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  sink: F\n): PipeOutput<F>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeSink<PipeFnInput<F>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  sink: G\n): PipeOutput<G>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeSink<PipeFnInput<G>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  sink: H\n): PipeOutput<H>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeSink<PipeFnInput<H>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  sink: I\n): PipeOutput<I>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeSink<PipeFnInput<I>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  sink: J\n): PipeOutput<J>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeTransform<PipeFnInput<I>>,\n  K extends PipeSink<PipeFnInput<J>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  transform9: J,\n  sink: K\n): PipeOutput<K>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeTransform<PipeFnInput<I>>,\n  K extends PipeTransform<PipeFnInput<J>>,\n  L extends PipeSink<PipeFnInput<K>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  transform9: J,\n  transform10: K,\n  sink: L\n): PipeOutput<L>\n\nexport function pipe (first: any, ...rest: any[]): any {\n  if (first == null) {\n    throw new Error('Empty pipeline')\n  }\n\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(first)) {\n    const duplex = first\n    first = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(first) || isAsyncIterable(first)) {\n    const source = first\n    first = () => source\n  }\n\n  const fns = [first, ...rest]\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nexport const rawPipe = (...fns: any): any => {\n  let res\n  while (fns.length > 0) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isAsyncIterable = (obj: any): obj is AsyncIterable<unknown> => {\n  return obj?.[Symbol.asyncIterator] != null\n}\n\nconst isIterable = (obj: any): obj is Iterable<unknown> => {\n  return obj?.[Symbol.iterator] != null\n}\n\nconst isDuplex = (obj: any): obj is Duplex => {\n  if (obj == null) {\n    return false\n  }\n\n  return obj.sink != null && obj.source != null\n}\n\nconst duplexPipelineFn = (duplex: Duplex<any, any, any>) => {\n  return (source: any) => {\n    const p = duplex.sink(source)\n\n    if (p?.then != null) {\n      const stream = pushable<any>({\n        objectMode: true\n      })\n      p.then(() => {\n        stream.end()\n      }, (err: Error) => {\n        stream.end(err)\n      })\n\n      let sourceWrap: () => Iterable<any> | AsyncIterable<any>\n      const source = duplex.source\n\n      if (isAsyncIterable(source)) {\n        sourceWrap = async function * () {\n          yield * source\n          stream.end()\n        }\n      } else if (isIterable(source)) {\n        sourceWrap = function * () {\n          yield * source\n          stream.end()\n        }\n      } else {\n        throw new Error('Unknown duplex source type - must be Iterable or AsyncIterable')\n      }\n\n      return merge(stream, sourceWrap())\n    }\n\n    return duplex.source\n  }\n}\n","export const NOISE_MSG_MAX_LENGTH_BYTES = 65535\nexport const NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG = NOISE_MSG_MAX_LENGTH_BYTES - 16\n\nexport const DUMP_SESSION_KEYS = Boolean(globalThis.process?.env?.DUMP_SESSION_KEYS)\n","import crypto from 'node:crypto'\nimport { newInstance, ChaCha20Poly1305 } from '@chainsafe/as-chacha20poly1305'\nimport { digest } from '@chainsafe/as-sha256'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { isElectronMain } from 'wherearewe'\nimport { pureJsCrypto } from './js.js'\nimport type { ICryptoInterface } from '../crypto.js'\nimport type { KeyPair } from '../types.js'\n\nconst ctx = newInstance()\nconst asImpl = new ChaCha20Poly1305(ctx)\nconst CHACHA_POLY1305 = 'chacha20-poly1305'\nconst PKCS8_PREFIX = Buffer.from([0x30, 0x2e, 0x02, 0x01, 0x00, 0x30, 0x05, 0x06, 0x03, 0x2b, 0x65, 0x6e, 0x04, 0x22, 0x04, 0x20])\nconst X25519_PREFIX = Buffer.from([0x30, 0x2a, 0x30, 0x05, 0x06, 0x03, 0x2b, 0x65, 0x6e, 0x03, 0x21, 0x00])\nconst nodeCrypto: Pick<ICryptoInterface, 'hashSHA256' | 'chaCha20Poly1305Encrypt' | 'chaCha20Poly1305Decrypt'> = {\n  hashSHA256 (data) {\n    const hash = crypto.createHash('sha256')\n\n    if (data instanceof Uint8Array) {\n      return hash.update(data).digest()\n    }\n\n    for (const buf of data) {\n      hash.update(buf)\n    }\n\n    return hash.digest()\n  },\n\n  chaCha20Poly1305Encrypt (plaintext, nonce, ad, k) {\n    const cipher = crypto.createCipheriv(CHACHA_POLY1305, k, nonce, {\n      authTagLength: 16\n    })\n    cipher.setAAD(ad, { plaintextLength: plaintext.byteLength })\n\n    if (plaintext instanceof Uint8Array) {\n      const updated = cipher.update(plaintext)\n      const final = cipher.final()\n      const tag = cipher.getAuthTag()\n\n      return Buffer.concat([updated, final, tag], updated.byteLength + final.byteLength + tag.byteLength)\n    }\n\n    const output = new Uint8ArrayList()\n\n    for (const buf of plaintext) {\n      output.append(cipher.update(buf))\n    }\n\n    const final = cipher.final()\n\n    if (final.byteLength > 0) {\n      output.append(final)\n    }\n\n    output.append(cipher.getAuthTag())\n\n    return output\n  },\n\n  chaCha20Poly1305Decrypt (ciphertext, nonce, ad, k, _dst) {\n    const authTag = ciphertext.subarray(ciphertext.length - 16)\n    const decipher = crypto.createDecipheriv(CHACHA_POLY1305, k, nonce, {\n      authTagLength: 16\n    })\n\n    let text: Uint8Array | Uint8ArrayList\n\n    if (ciphertext instanceof Uint8Array) {\n      text = ciphertext.subarray(0, ciphertext.length - 16)\n    } else {\n      text = ciphertext.sublist(0, ciphertext.length - 16)\n    }\n\n    decipher.setAAD(ad, {\n      plaintextLength: text.byteLength\n    })\n    decipher.setAuthTag(authTag)\n\n    if (text instanceof Uint8Array) {\n      const output = decipher.update(text)\n      const final = decipher.final()\n\n      if (final.byteLength > 0) {\n        return Buffer.concat([output, final], output.byteLength + final.byteLength)\n      }\n\n      return output\n    }\n\n    const output = new Uint8ArrayList()\n\n    for (const buf of text) {\n      output.append(decipher.update(buf))\n    }\n\n    const final = decipher.final()\n\n    if (final.byteLength > 0) {\n      output.append(final)\n    }\n\n    return output\n  }\n}\n\nconst asCrypto: Pick<ICryptoInterface, 'hashSHA256' | 'chaCha20Poly1305Encrypt' | 'chaCha20Poly1305Decrypt'> = {\n  hashSHA256 (data) {\n    return digest(data.subarray())\n  },\n  chaCha20Poly1305Encrypt (plaintext, nonce, ad, k) {\n    return asImpl.seal(k, nonce, plaintext.subarray(), ad)\n  },\n  chaCha20Poly1305Decrypt (ciphertext, nonce, ad, k, dst) {\n    const plaintext = asImpl.open(k, nonce, ciphertext.subarray(), ad, dst)\n    if (!plaintext) {\n      throw new Error('Invalid chacha20poly1305 decryption')\n    }\n    return plaintext\n  }\n}\n\n// benchmarks show that for chacha20poly1305\n// the as implementation is faster for smaller payloads(<1200)\n// and the node implementation is faster for larger payloads\nexport const defaultCrypto: ICryptoInterface = {\n  ...pureJsCrypto,\n  hashSHA256 (data) {\n    return nodeCrypto.hashSHA256(data)\n  },\n  chaCha20Poly1305Encrypt (plaintext, nonce, ad, k) {\n    if (plaintext.byteLength < 1200) {\n      return asCrypto.chaCha20Poly1305Encrypt(plaintext, nonce, ad, k)\n    }\n    return nodeCrypto.chaCha20Poly1305Encrypt(plaintext, nonce, ad, k)\n  },\n  chaCha20Poly1305Decrypt (ciphertext, nonce, ad, k, dst) {\n    if (ciphertext.byteLength < 1200) {\n      return asCrypto.chaCha20Poly1305Decrypt(ciphertext, nonce, ad, k, dst)\n    }\n    return nodeCrypto.chaCha20Poly1305Decrypt(ciphertext, nonce, ad, k, dst)\n  },\n  generateX25519KeyPair (): KeyPair {\n    const { publicKey, privateKey } = crypto.generateKeyPairSync('x25519', {\n      publicKeyEncoding: {\n        type: 'spki',\n        format: 'der'\n      },\n      privateKeyEncoding: {\n        type: 'pkcs8',\n        format: 'der'\n      }\n    })\n\n    return {\n      publicKey: publicKey.subarray(X25519_PREFIX.length),\n      privateKey: privateKey.subarray(PKCS8_PREFIX.length)\n    }\n  },\n  generateX25519KeyPairFromSeed (seed: Uint8Array): KeyPair {\n    const privateKey = crypto.createPrivateKey({\n      key: Buffer.concat([\n        PKCS8_PREFIX,\n        seed\n      ], PKCS8_PREFIX.byteLength + seed.byteLength),\n      type: 'pkcs8',\n      format: 'der'\n    })\n\n    const publicKey = crypto.createPublicKey(privateKey)\n      .export({\n        type: 'spki',\n        format: 'der'\n      }).subarray(X25519_PREFIX.length)\n\n    return {\n      publicKey,\n      privateKey: seed\n    }\n  },\n  generateX25519SharedKey (privateKey: Uint8Array | Uint8ArrayList, publicKey: Uint8Array | Uint8ArrayList): Uint8Array {\n    if (publicKey instanceof Uint8Array) {\n      publicKey = Buffer.concat([\n        X25519_PREFIX,\n        publicKey\n      ], X25519_PREFIX.byteLength + publicKey.byteLength)\n    } else {\n      publicKey = new Uint8ArrayList(X25519_PREFIX, publicKey).subarray()\n    }\n\n    if (privateKey instanceof Uint8Array) {\n      privateKey = Buffer.concat([\n        PKCS8_PREFIX,\n        privateKey\n      ], PKCS8_PREFIX.byteLength + privateKey.byteLength)\n    } else {\n      privateKey = new Uint8ArrayList(PKCS8_PREFIX, privateKey).subarray()\n    }\n\n    return crypto.diffieHellman({\n      publicKey: crypto.createPublicKey({\n        key: Buffer.from(publicKey, publicKey.byteOffset, publicKey.byteLength),\n        type: 'spki',\n        format: 'der'\n      }),\n      privateKey: crypto.createPrivateKey({\n        key: Buffer.from(privateKey, privateKey.byteOffset, privateKey.byteLength),\n        type: 'pkcs8',\n        format: 'der'\n      })\n    })\n  }\n}\n\n// no chacha20-poly1305 in electron https://github.com/electron/electron/issues/24024\nif (isElectronMain) {\n  defaultCrypto.chaCha20Poly1305Encrypt = asCrypto.chaCha20Poly1305Encrypt\n  defaultCrypto.chaCha20Poly1305Decrypt = asCrypto.chaCha20Poly1305Decrypt\n}\n","import detectElectron from 'is-electron'\n\nexport const isEnvWithDom = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\nexport const isElectron = detectElectron()\n\n/**\n * Detects browser main thread  **NOT** web worker or service worker\n */\nexport const isBrowser = isEnvWithDom && !isElectron\nexport const isElectronMain = isElectron && !isEnvWithDom\nexport const isElectronRenderer = isElectron && isEnvWithDom\nexport const isNode = typeof globalThis.process !== 'undefined' && typeof globalThis.process.release !== 'undefined' && globalThis.process.release.name === 'node' && !isElectron\n// @ts-ignore\n// eslint-disable-next-line no-undef\nexport const isWebWorker = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\n\n// defeat bundlers replacing process.env.NODE_ENV with \"development\" or whatever\nexport const isTest = typeof globalThis.process !== 'undefined' && typeof globalThis.process.env !== 'undefined' && globalThis.process.env['NODE' + (() => '_')() + 'ENV'] === 'test'\nexport const isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n","/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr: TypedArray) =>\n  new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  else if (isBytes(data)) data = data.slice();\n  else throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('options must be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport function ensureBytes(b: any, len?: number) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (typeof len === 'number')\n    if (b.length !== len) throw new Error(`Uint8Array length ${len} expected`);\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\nexport type Cipher = {\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\nexport type AsyncCipher = {\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\nexport type CipherWithOutput = Cipher & {\n  encrypt(plaintext: Uint8Array, output?: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array, output?: Uint8Array): Uint8Array;\n};\n\n// Params is outside return type, so it is accessible before calling constructor\n// If function support multiple nonceLength's, we return best one\nexport type CipherParams = { blockSize: number; nonceLength?: number; tagLength?: number };\nexport type CipherCons<T extends any[]> = (key: Uint8Array, ...args: T) => Cipher;\nexport const wrapCipher = <C extends CipherCons<any>, P extends CipherParams>(\n  params: P,\n  c: C\n): C & P => {\n  Object.assign(c, params);\n  return c as C & P;\n};\n\nexport type XorStream = (\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  output?: Uint8Array,\n  counter?: number\n) => Uint8Array;\n\n// Polyfill for Safari 14\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\nexport function u64Lengths(ciphertext: Uint8Array, AAD?: Uint8Array) {\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(ciphertext.length), true);\n  return num;\n}\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// TODO: merge with utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a != null &&\n    typeof a === 'object' &&\n    (a instanceof Uint8Array || a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('hash must be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","import { exists as aexists, output as aoutput } from './_assert.js';\nimport { Input, ensureBytes, toBytes, Hash } from './utils.js';\n\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a: Uint8Array, i: number) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 implements Hash<Poly1305> {\n  readonly blockLen = 16;\n  readonly outputLen = 16;\n  private buffer = new Uint8Array(16);\n  private r = new Uint16Array(10);\n  private h = new Uint16Array(10);\n  private pad = new Uint16Array(8);\n  private pos = 0;\n  protected finished = false;\n\n  constructor(key: Input) {\n    key = toBytes(key);\n    ensureBytes(key, 32);\n    const t0 = u8to16(key, 0);\n    const t1 = u8to16(key, 2);\n    const t2 = u8to16(key, 4);\n    const t3 = u8to16(key, 6);\n    const t4 = u8to16(key, 8);\n    const t5 = u8to16(key, 10);\n    const t6 = u8to16(key, 12);\n    const t7 = u8to16(key, 14);\n\n    // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n    for (let i = 0; i < 8; i++) this.pad[i] = u8to16(key, 16 + 2 * i);\n  }\n\n  private process(data: Uint8Array, offset: number, isLast = false) {\n    const hibit = isLast ? 0 : 1 << 11;\n    const { h, r } = this;\n    const r0 = r[0];\n    const r1 = r[1];\n    const r2 = r[2];\n    const r3 = r[3];\n    const r4 = r[4];\n    const r5 = r[5];\n    const r6 = r[6];\n    const r7 = r[7];\n    const r8 = r[8];\n    const r9 = r[9];\n\n    const t0 = u8to16(data, offset + 0);\n    const t1 = u8to16(data, offset + 2);\n    const t2 = u8to16(data, offset + 4);\n    const t3 = u8to16(data, offset + 6);\n    const t4 = u8to16(data, offset + 8);\n    const t5 = u8to16(data, offset + 10);\n    const t6 = u8to16(data, offset + 12);\n    const t7 = u8to16(data, offset + 14);\n\n    let h0 = h[0] + (t0 & 0x1fff);\n    let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n    let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n    let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n    let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n    let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n    let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n    let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n    let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n    let h9 = h[9] + ((t7 >>> 5) | hibit);\n\n    let c = 0;\n\n    let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n    c = d0 >>> 13;\n    d0 &= 0x1fff;\n    d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n    c += d0 >>> 13;\n    d0 &= 0x1fff;\n\n    let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n    c = d1 >>> 13;\n    d1 &= 0x1fff;\n    d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n    c += d1 >>> 13;\n    d1 &= 0x1fff;\n\n    let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n    c = d2 >>> 13;\n    d2 &= 0x1fff;\n    d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n    c += d2 >>> 13;\n    d2 &= 0x1fff;\n\n    let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n    c = d3 >>> 13;\n    d3 &= 0x1fff;\n    d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n    c += d3 >>> 13;\n    d3 &= 0x1fff;\n\n    let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n    c = d4 >>> 13;\n    d4 &= 0x1fff;\n    d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n    c += d4 >>> 13;\n    d4 &= 0x1fff;\n\n    let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n    c = d5 >>> 13;\n    d5 &= 0x1fff;\n    d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n    c += d5 >>> 13;\n    d5 &= 0x1fff;\n\n    let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n    c = d6 >>> 13;\n    d6 &= 0x1fff;\n    d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n    c += d6 >>> 13;\n    d6 &= 0x1fff;\n\n    let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n    c = d7 >>> 13;\n    d7 &= 0x1fff;\n    d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n    c += d7 >>> 13;\n    d7 &= 0x1fff;\n\n    let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n    c = d8 >>> 13;\n    d8 &= 0x1fff;\n    d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n    c += d8 >>> 13;\n    d8 &= 0x1fff;\n\n    let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n    c = d9 >>> 13;\n    d9 &= 0x1fff;\n    d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n    c += d9 >>> 13;\n    d9 &= 0x1fff;\n\n    c = ((c << 2) + c) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = c >>> 13;\n    d1 += c;\n\n    h[0] = d0;\n    h[1] = d1;\n    h[2] = d2;\n    h[3] = d3;\n    h[4] = d4;\n    h[5] = d5;\n    h[6] = d6;\n    h[7] = d7;\n    h[8] = d8;\n    h[9] = d9;\n  }\n\n  private finalize() {\n    const { h, pad } = this;\n    const g = new Uint16Array(10);\n    let c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    for (let i = 2; i < 10; i++) {\n      h[i] += c;\n      c = h[i] >>> 13;\n      h[i] &= 0x1fff;\n    }\n    h[0] += c * 5;\n    c = h[0] >>> 13;\n    h[0] &= 0x1fff;\n    h[1] += c;\n    c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    h[2] += c;\n\n    g[0] = h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n    for (let i = 1; i < 10; i++) {\n      g[i] = h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n    g[9] -= 1 << 13;\n\n    let mask = (c ^ 1) - 1;\n    for (let i = 0; i < 10; i++) g[i] &= mask;\n    mask = ~mask;\n    for (let i = 0; i < 10; i++) h[i] = (h[i] & mask) | g[i];\n    h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n    h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n    h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n    h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n    h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n    h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n    h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n    h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n\n    let f = h[0] + pad[0];\n    h[0] = f & 0xffff;\n    for (let i = 1; i < 8; i++) {\n      f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n      h[i] = f & 0xffff;\n    }\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input\n      if (take === blockLen) {\n        for (; blockLen <= len - pos; pos += blockLen) this.process(data, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(buffer, 0, false);\n        this.pos = 0;\n      }\n    }\n    return this;\n  }\n  destroy() {\n    this.h.fill(0);\n    this.r.fill(0);\n    this.buffer.fill(0);\n    this.pad.fill(0);\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { buffer, h } = this;\n    let { pos } = this;\n    if (pos) {\n      buffer[pos++] = 1;\n      // buffer.subarray(pos).fill(0);\n      for (; pos < 16; pos++) buffer[pos] = 0;\n      this.process(buffer, 0, true);\n    }\n    this.finalize();\n    let opos = 0;\n    for (let i = 0; i < 8; i++) {\n      out[opos++] = h[i] >>> 0;\n      out[opos++] = h[i] >>> 8;\n    }\n    return out;\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nexport function wrapConstructorWithKey<H extends Hash<H>>(hashCons: (key: Input) => Hash<H>) {\n  const hashC = (msg: Input, key: Input): Uint8Array => hashCons(key).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(32));\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input) => hashCons(key);\n  return hashC;\n}\n\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n","// Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\nimport { number as anumber, bytes as abytes, bool as abool } from './_assert.js';\nimport { XorStream, checkOpts, u32, utf8ToBytes } from './utils.js';\n\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n*/\n\nconst sigma16 = utf8ToBytes('expand 16-byte k');\nconst sigma32 = utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\n\nexport function rotl(a: number, b: number): number {\n  return (a << b) | (a >>> (32 - b));\n}\n\nexport type CipherCoreFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  output: Uint32Array,\n  counter: number,\n  rounds?: number\n) => void;\n\nexport type ExtendNonceFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  input: Uint32Array,\n  output: Uint32Array\n) => void;\n\nexport type CipherOpts = {\n  allowShortKeys?: boolean; // Original salsa / chacha allow 16-byte keys\n  extendNonceFn?: ExtendNonceFn;\n  counterLength?: number;\n  counterRight?: boolean; // right: nonce|counter; left: counter|nonce\n  rounds?: number;\n};\n\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b: Uint8Array) {\n  return b.byteOffset % 4 === 0;\n}\n\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\n\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(\n  core: CipherCoreFn,\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  data: Uint8Array,\n  output: Uint8Array,\n  counter: number,\n  rounds: number\n): void {\n  const len = data.length;\n  const block = new Uint8Array(BLOCK_LEN);\n  const b32 = u32(block);\n  // Make sure that buffers aligned to 4 bytes\n  const isAligned = isAligned32(data) && isAligned32(output);\n  const d32 = isAligned ? u32(data) : U32_EMPTY;\n  const o32 = isAligned ? u32(output) : U32_EMPTY;\n  for (let pos = 0; pos < len; counter++) {\n    core(sigma, key, nonce, b32, counter, rounds);\n    if (counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    const take = Math.min(BLOCK_LEN, len - pos);\n    // aligned to 4 bytes\n    if (isAligned && take === BLOCK_LEN) {\n      const pos32 = pos / 4;\n      if (pos % 4 !== 0) throw new Error('arx: invalid block position');\n      for (let j = 0, posj: number; j < BLOCK_LEN32; j++) {\n        posj = pos32 + j;\n        o32[posj] = d32[posj] ^ b32[j];\n      }\n      pos += BLOCK_LEN;\n      continue;\n    }\n    for (let j = 0, posj; j < take; j++) {\n      posj = pos + j;\n      output[posj] = data[posj] ^ block[j];\n    }\n    pos += take;\n  }\n}\n\nexport function createCipher(core: CipherCoreFn, opts: CipherOpts): XorStream {\n  const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts(\n    { allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 },\n    opts\n  );\n  if (typeof core !== 'function') throw new Error('core must be a function');\n  anumber(counterLength);\n  anumber(rounds);\n  abool(counterRight);\n  abool(allowShortKeys);\n  return (\n    key: Uint8Array,\n    nonce: Uint8Array,\n    data: Uint8Array,\n    output?: Uint8Array,\n    counter = 0\n  ): Uint8Array => {\n    abytes(key);\n    abytes(nonce);\n    abytes(data);\n    const len = data.length;\n    if (!output) output = new Uint8Array(len);\n    abytes(output);\n    anumber(counter);\n    if (counter < 0 || counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    if (output.length < len)\n      throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n    const toClean = [];\n\n    // Key & sigma\n    // key=16 -> sigma16, k=key|key\n    // key=32 -> sigma32, k=key\n    let l = key.length,\n      k: Uint8Array,\n      sigma: Uint32Array;\n    if (l === 32) {\n      k = key.slice();\n      toClean.push(k);\n      sigma = sigma32_32;\n    } else if (l === 16 && allowShortKeys) {\n      k = new Uint8Array(32);\n      k.set(key);\n      k.set(key, 16);\n      sigma = sigma16_32;\n      toClean.push(k);\n    } else {\n      throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n    }\n\n    // Nonce\n    // salsa20:      8   (8-byte counter)\n    // chacha20orig: 8   (8-byte counter)\n    // chacha20:     12  (4-byte counter)\n    // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n    // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n    // Align nonce to 4 bytes\n    if (!isAligned32(nonce)) {\n      nonce = nonce.slice();\n      toClean.push(nonce);\n    }\n\n    const k32 = u32(k);\n    // hsalsa & hchacha: handle extended nonce\n    if (extendNonceFn) {\n      if (nonce.length !== 24) throw new Error(`arx: extended nonce must be 24 bytes`);\n      extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n      nonce = nonce.subarray(16);\n    }\n\n    // Handle nonce counter\n    const nonceNcLen = 16 - counterLength;\n    if (nonceNcLen !== nonce.length)\n      throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n\n    // Pad counter when nonce is 64 bit\n    if (nonceNcLen !== 12) {\n      const nc = new Uint8Array(12);\n      nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n      nonce = nc;\n      toClean.push(nonce);\n    }\n    const n32 = u32(nonce);\n    runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n    while (toClean.length > 0) toClean.pop()!.fill(0);\n    return output;\n  };\n}\n","import {\n  wrapCipher,\n  CipherWithOutput,\n  XorStream,\n  createView,\n  ensureBytes,\n  equalBytes,\n  setBigUint64,\n} from './utils.js';\nimport { poly1305 } from './_poly1305.js';\nimport { createCipher, rotl } from './_arx.js';\n\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(\n  s: Uint32Array, k: Uint32Array, n: Uint32Array, out: Uint32Array, cnt: number, rounds = 20\n): void {\n  let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n      y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n      y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n      y12 = cnt,  y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n  // Save state to temporary variables\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  for (let r = 0; r < rounds; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  // Write output\n  let oi = 0;\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(\n  s: Uint32Array, k: Uint32Array, i: Uint32Array, o32: Uint32Array\n) {\n  let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3],\n      x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3],\n      x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7],\n      x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n  for (let r = 0; r < 20; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  let oi = 0;\n  o32[oi++] = x00; o32[oi++] = x01;\n  o32[oi++] = x02; o32[oi++] = x03;\n  o32[oi++] = x12; o32[oi++] = x13;\n  o32[oi++] = x14; o32[oi++] = x15;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  allowShortKeys: false,\n});\n\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  extendNonceFn: hchacha,\n  allowShortKeys: false,\n});\n\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 8,\n});\n\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 12,\n});\n\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h: ReturnType<typeof poly1305.create>, msg: Uint8Array) => {\n  h.update(msg);\n  const left = msg.length % 16;\n  if (left) h.update(ZEROS16.subarray(left));\n};\n\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(\n  fn: XorStream,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n): Uint8Array {\n  const authKey = fn(key, nonce, ZEROS32);\n  const h = poly1305.create(authKey);\n  if (AAD) updatePadded(h, AAD);\n  updatePadded(h, data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(data.length), true);\n  h.update(num);\n  const res = h.digest();\n  authKey.fill(0);\n  return res;\n}\n\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead =\n  (xorStream: XorStream) =>\n  (key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): CipherWithOutput => {\n    const tagLength = 16;\n    ensureBytes(key, 32);\n    ensureBytes(nonce);\n    return {\n      encrypt: (plaintext: Uint8Array, output?: Uint8Array) => {\n        const plength = plaintext.length;\n        const clength = plength + tagLength;\n        if (output) {\n          ensureBytes(output, clength);\n        } else {\n          output = new Uint8Array(clength);\n        }\n        xorStream(key, nonce, plaintext, output, 1);\n        const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n        output.set(tag, plength); // append tag\n        return output;\n      },\n      decrypt: (ciphertext: Uint8Array, output?: Uint8Array) => {\n        const clength = ciphertext.length;\n        const plength = clength - tagLength;\n        if (clength < tagLength)\n          throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n        if (output) {\n          ensureBytes(output, plength);\n        } else {\n          output = new Uint8Array(plength);\n        }\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = computeTag(xorStream, key, nonce, data, AAD);\n        if (!equalBytes(passedTag, tag)) throw new Error('invalid tag');\n        xorStream(key, nonce, data, output, 1);\n        return output;\n      },\n    };\n  };\n\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 12, tagLength: 16 },\n  _poly1305_aead(chacha20)\n);\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 24, tagLength: 16 },\n  _poly1305_aead(xchacha20)\n);\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, FHash, Hex } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n\n// Edwards curves must declare params a & d.\nexport type CurveType = BasicCurve<bigint> & {\n  a: bigint; // curve param a\n  d: bigint; // curve param d\n  hash: FHash; // Hashing\n  randomBytes: (bytesLength?: number) => Uint8Array; // CSPRNG\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array; // clears bits to get valid field elemtn\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array; // Used for hashing\n  uvRatio?: (u: bigint, v: bigint) => { isValid: boolean; value: bigint }; // Ratio √(u/v)\n  prehash?: FHash; // RFC 8032 pre-hashing of messages to sign() / verify()\n  mapToCurve?: (scalar: bigint[]) => AffinePoint<bigint>; // for hash-to-curve standard\n};\n\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    curve,\n    {\n      hash: 'function',\n      a: 'bigint',\n      d: 'bigint',\n      randomBytes: 'function',\n    },\n    {\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      uvRatio: 'function',\n      mapToCurve: 'function',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...opts } as const);\n}\n\n// Instance of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointType extends Group<ExtPointType> {\n  readonly ex: bigint;\n  readonly ey: bigint;\n  readonly ez: bigint;\n  readonly et: bigint;\n  get x(): bigint;\n  get y(): bigint;\n  assertValidity(): void;\n  multiply(scalar: bigint): ExtPointType;\n  multiplyUnsafe(scalar: bigint): ExtPointType;\n  isSmallOrder(): boolean;\n  isTorsionFree(): boolean;\n  clearCofactor(): ExtPointType;\n  toAffine(iz?: bigint): AffinePoint<bigint>;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n}\n// Static methods of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointConstructor extends GroupConstructor<ExtPointType> {\n  new (x: bigint, y: bigint, z: bigint, t: bigint): ExtPointType;\n  fromAffine(p: AffinePoint<bigint>): ExtPointType;\n  fromHex(hex: Hex): ExtPointType;\n  fromPrivateKey(privateKey: Hex): ExtPointType;\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  sign: (message: Hex, privateKey: Hex, options?: { context?: Hex }) => Uint8Array;\n  verify: (\n    sig: Hex,\n    message: Hex,\n    publicKey: Hex,\n    options?: { context?: Hex; zip215: boolean }\n  ) => boolean;\n  ExtendedPoint: ExtPointConstructor;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    getExtendedPublicKey: (key: Hex) => {\n      head: Uint8Array;\n      prefix: Uint8Array;\n      scalar: bigint;\n      point: ExtPointType;\n      pointBytes: Uint8Array;\n    };\n  };\n};\n\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const {\n    Fp,\n    n: CURVE_ORDER,\n    prehash: prehash,\n    hash: cHash,\n    randomBytes,\n    nByteLength,\n    h: cofactor,\n  } = CURVE;\n  const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n  const modP = Fp.create; // Function overrides\n\n  // sqrt(u/v)\n  const uvRatio =\n    CURVE.uvRatio ||\n    ((u: bigint, v: bigint) => {\n      try {\n        return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n      } catch (e) {\n        return { isValid: false, value: _0n };\n      }\n    });\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes); // NOOP\n  const domain =\n    CURVE.domain ||\n    ((data: Uint8Array, ctx: Uint8Array, phflag: boolean) => {\n      if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n      return data;\n    }); // NOOP\n  const inBig = (n: bigint) => typeof n === 'bigint' && _0n < n; // n in [1..]\n  const inRange = (n: bigint, max: bigint) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n  const in0MaskRange = (n: bigint) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n  function assertInRange(n: bigint, max: bigint) {\n    // n in [1..max-1]\n    if (inRange(n, max)) return n;\n    throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n  }\n  function assertGE0(n: bigint) {\n    // n in [0..CURVE_ORDER-1]\n    return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n  }\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function isPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ExtendedPoint expected');\n  }\n  // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point implements ExtPointType {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    static readonly ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n\n    constructor(\n      readonly ex: bigint,\n      readonly ey: bigint,\n      readonly ez: bigint,\n      readonly et: bigint\n    ) {\n      if (!in0MaskRange(ex)) throw new Error('x required');\n      if (!in0MaskRange(ey)) throw new Error('y required');\n      if (!in0MaskRange(ez)) throw new Error('z required');\n      if (!in0MaskRange(et)) throw new Error('t required');\n    }\n\n    get x(): bigint {\n      return this.toAffine().x;\n    }\n    get y(): bigint {\n      return this.toAffine().y;\n    }\n\n    static fromAffine(p: AffinePoint<bigint>): Point {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const { x, y } = p || {};\n      if (!in0MaskRange(x) || !in0MaskRange(y)) throw new Error('invalid affine point');\n      return new Point(x, y, _1n, modP(x * y));\n    }\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.ez));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n    // Not required for fromHex(), which always creates valid points.\n    // Could be useful for fromAffine().\n    assertValidity(): void {\n      const { a, d } = CURVE;\n      if (this.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n      // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n      // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n      const { ex: X, ey: Y, ez: Z, et: T } = this;\n      const X2 = modP(X * X); // X²\n      const Y2 = modP(Y * Y); // Y²\n      const Z2 = modP(Z * Z); // Z²\n      const Z4 = modP(Z2 * Z2); // Z⁴\n      const aX2 = modP(X2 * a); // aX²\n      const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n      const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n      if (left !== right) throw new Error('bad point: equation left != right (1)');\n      // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n      const XY = modP(X * Y);\n      const ZT = modP(Z * T);\n      if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    }\n\n    // Compare one point to another.\n    equals(other: Point): boolean {\n      isPoint(other);\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2 } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n\n    protected is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    negate(): Point {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n    }\n\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double(): Point {\n      const { a } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other: Point) {\n      isPoint(other);\n      const { a, d } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n      // Faster algo for adding 2 Extended Points when curve's a=-1.\n      // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n      // Cost: 8M + 8add + 2*2.\n      // Note: It does not check whether the `other` point is valid.\n      if (a === BigInt(-1)) {\n        const A = modP((Y1 - X1) * (Y2 + X2));\n        const B = modP((Y1 + X1) * (Y2 - X2));\n        const F = modP(B - A);\n        if (F === _0n) return this.double(); // Same point. Tests say it doesn't affect timing\n        const C = modP(Z1 * _2n * T2);\n        const D = modP(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = modP(E * F);\n        const Y3 = modP(G * H);\n        const T3 = modP(E * H);\n        const Z3 = modP(F * G);\n        return new Point(X3, Y3, Z3, T3);\n      }\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    subtract(other: Point): Point {\n      return this.add(other.negate());\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n    }\n\n    // Constant-time multiplication.\n    multiply(scalar: bigint): Point {\n      const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n      return Point.normalizeZ([p, f])[0];\n    }\n\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    multiplyUnsafe(scalar: bigint): Point {\n      let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n      if (n === _0n) return I;\n      if (this.equals(I) || n === _1n) return this;\n      if (this.equals(G)) return this.wNAF(n).p;\n      return wnaf.unsafeLadder(this, n);\n    }\n\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder(): boolean {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree(): boolean {\n      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n    }\n\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(iz?: bigint): AffinePoint<bigint> {\n      const { ex: x, ey: y, ez: z } = this;\n      const is0 = this.is0();\n      if (iz == null) iz = is0 ? _8n : (Fp.inv(z) as bigint); // 8 was chosen arbitrarily\n      const ax = modP(x * iz);\n      const ay = modP(y * iz);\n      const zz = modP(z * iz);\n      if (is0) return { x: _0n, y: _1n };\n      if (zz !== _1n) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n\n    clearCofactor(): Point {\n      const { h: cofactor } = CURVE;\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    // Converts hash string or Uint8Array to Point.\n    // Uses algo from RFC8032 5.1.3.\n    static fromHex(hex: Hex, zip215 = false): Point {\n      const { d, a } = CURVE;\n      const len = Fp.BYTES;\n      hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n      const normed = hex.slice(); // copy again, we'll manipulate it\n      const lastByte = hex[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = ut.bytesToNumberLE(normed);\n      if (y === _0n) {\n        // y=0 is allowed\n      } else {\n        // RFC8032 prohibits >= p, but ZIP215 doesn't\n        if (zip215) assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n        else assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n      }\n\n      // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n      // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y² - 1\n      const v = modP(d * y2 - a); // v = d y² + 1.\n      let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n      if (!zip215 && x === _0n && isLastByteOdd)\n        // if x=0 and x_0 = 1, fail\n        throw new Error('Point.fromHex: x=0 and x_0=1');\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({ x, y });\n    }\n    static fromPrivateKey(privKey: Hex) {\n      return getExtendedPublicKey(privKey).point;\n    }\n    toRawBytes(): Uint8Array {\n      const { x, y } = this.toAffine();\n      const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n      return bytes; // and use the last byte to encode sign of x\n    }\n    toHex(): string {\n      return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n    }\n  }\n  const { BASE: G, ZERO: I } = Point;\n  const wnaf = wNAF(Point, nByteLength * 8);\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash: Uint8Array): bigint {\n    return modN(ut.bytesToNumberLE(hash));\n  }\n\n  /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n  function getExtendedPublicKey(key: Hex) {\n    const len = nByteLength;\n    key = ensureBytes('private key', key, len);\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    const point = G.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toRawBytes(); // Uint8Array representation\n    return { head, prefix, scalar, point, pointBytes };\n  }\n\n  // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n  function getPublicKey(privKey: Hex): Uint8Array {\n    return getExtendedPublicKey(privKey).pointBytes;\n  }\n\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context: Hex = new Uint8Array(), ...msgs: Uint8Array[]) {\n    const msg = ut.concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n  }\n\n  /** Signs message with privateKey. RFC8032 5.1.6 */\n  function sign(msg: Hex, privKey: Hex, options: { context?: Hex } = {}): Uint8Array {\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = G.multiply(r).toRawBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = modN(r + k * scalar); // S = (r + k * s) mod L\n    assertGE0(s); // 0 <= s < l\n    const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n    return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n  }\n\n  const verifyOpts: { context?: Hex; zip215?: boolean } = VERIFY_DEFAULT;\n  function verify(sig: Hex, msg: Hex, publicKey: Hex, options = verifyOpts): boolean {\n    const { context, zip215 } = options;\n    const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n    sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n\n    const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n    // zip215: true is good for consensus-critical apps and allows points < 2^256\n    // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n    let A, R, SB;\n    try {\n      A = Point.fromHex(publicKey, zip215);\n      R = Point.fromHex(sig.slice(0, len), zip215);\n      SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n    if (!zip215 && A.isSmallOrder()) return false;\n\n    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n  }\n\n  G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n\n  const utils = {\n    getExtendedPublicKey,\n    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n    randomPrivateKey: (): Uint8Array => randomBytes(Fp.BYTES),\n\n    /**\n     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n     * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n     * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n     * @param windowSize 2, 4, 8, 16\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3));\n      return point;\n    },\n  };\n\n  return {\n    CURVE,\n    getPublicKey,\n    sign,\n    verify,\n    ExtendedPoint: Point,\n    utils,\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\ntype Hex = string | Uint8Array;\n\nexport type CurveType = {\n  P: bigint; // finite field prime\n  nByteLength: number;\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array;\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array;\n  a: bigint;\n  montgomeryBits: number;\n  powPminus2?: (x: bigint) => bigint;\n  xyToU?: (x: bigint, y: bigint) => bigint;\n  Gu: bigint;\n  randomBytes?: (bytesLength?: number) => Uint8Array;\n};\nexport type CurveFn = {\n  scalarMult: (scalar: Hex, u: Hex) => Uint8Array;\n  scalarMultBase: (scalar: Hex) => Uint8Array;\n  getSharedSecret: (privateKeyA: Hex, publicKeyB: Hex) => Uint8Array;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  utils: { randomPrivateKey: () => Uint8Array };\n  GuBytes: Uint8Array;\n};\n\nfunction validateOpts(curve: CurveType) {\n  validateObject(\n    curve,\n    {\n      a: 'bigint',\n    },\n    {\n      montgomeryBits: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      powPminus2: 'function',\n      Gu: 'bigint',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...curve } as const);\n}\n\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef);\n  const { P } = CURVE;\n  const modP = (n: bigint) => mod(n, P);\n  const montgomeryBits = CURVE.montgomeryBits;\n  const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n  const fieldLen = CURVE.nByteLength;\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes);\n  const powPminus2 = CURVE.powPminus2 || ((x: bigint) => pow(x, P - BigInt(2), P));\n\n  // cswap from RFC7748. But it is not from RFC7748!\n  /*\n    cswap(swap, x_2, x_3):\n         dummy = mask(swap) AND (x_2 XOR x_3)\n         x_2 = x_2 XOR dummy\n         x_3 = x_3 XOR dummy\n         Return (x_2, x_3)\n  Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n   and x_3, computed, e.g., as mask(swap) = 0 - swap.\n  */\n  function cswap(swap: bigint, x_2: bigint, x_3: bigint): [bigint, bigint] {\n    const dummy = modP(swap * (x_2 - x_3));\n    x_2 = modP(x_2 - dummy);\n    x_3 = modP(x_3 + dummy);\n    return [x_2, x_3];\n  }\n\n  // Accepts 0 as well\n  function assertFieldElement(n: bigint): bigint {\n    if (typeof n === 'bigint' && _0n <= n && n < P) return n;\n    throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n  }\n\n  // x25519 from 4\n  // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n  const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n  /**\n   *\n   * @param pointU u coordinate (x) on Montgomery Curve 25519\n   * @param scalar by which the point would be multiplied\n   * @returns new Point on Montgomery curve\n   */\n  function montgomeryLadder(pointU: bigint, scalar: bigint): bigint {\n    const u = assertFieldElement(pointU);\n    // Section 5: Implementations MUST accept non-canonical values and process them as\n    // if they had been reduced modulo the field prime.\n    const k = assertFieldElement(scalar);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw: [bigint, bigint];\n    for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n      const k_t = (k >> t) & _1n;\n      swap ^= k_t;\n      sw = cswap(swap, x_2, x_3);\n      x_2 = sw[0];\n      x_3 = sw[1];\n      sw = cswap(swap, z_2, z_3);\n      z_2 = sw[0];\n      z_3 = sw[1];\n      swap = k_t;\n\n      const A = x_2 + z_2;\n      const AA = modP(A * A);\n      const B = x_2 - z_2;\n      const BB = modP(B * B);\n      const E = AA - BB;\n      const C = x_3 + z_3;\n      const D = x_3 - z_3;\n      const DA = modP(D * A);\n      const CB = modP(C * B);\n      const dacb = DA + CB;\n      const da_cb = DA - CB;\n      x_3 = modP(dacb * dacb);\n      z_3 = modP(x_1 * modP(da_cb * da_cb));\n      x_2 = modP(AA * BB);\n      z_2 = modP(E * (AA + modP(a24 * E)));\n    }\n    // (x_2, x_3) = cswap(swap, x_2, x_3)\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    // (z_2, z_3) = cswap(swap, z_2, z_3)\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    // z_2^(p - 2)\n    const z2 = powPminus2(z_2);\n    // Return x_2 * (z_2^(p - 2))\n    return modP(x_2 * z2);\n  }\n\n  function encodeUCoordinate(u: bigint): Uint8Array {\n    return numberToBytesLE(modP(u), montgomeryBytes);\n  }\n\n  function decodeUCoordinate(uEnc: Hex): bigint {\n    // Section 5: When receiving such an array, implementations of X25519\n    // MUST mask the most significant bit in the final byte.\n    const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n    if (fieldLen === 32) u[31] &= 127; // 0b0111_1111\n    return bytesToNumberLE(u);\n  }\n  function decodeScalar(n: Hex): bigint {\n    const bytes = ensureBytes('scalar', n);\n    const len = bytes.length;\n    if (len !== montgomeryBytes && len !== fieldLen)\n      throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${len}`);\n    return bytesToNumberLE(adjustScalarBytes(bytes));\n  }\n  function scalarMult(scalar: Hex, u: Hex): Uint8Array {\n    const pointU = decodeUCoordinate(u);\n    const _scalar = decodeScalar(scalar);\n    const pu = montgomeryLadder(pointU, _scalar);\n    // The result was not contributory\n    // https://cr.yp.to/ecdh.html#validate\n    if (pu === _0n) throw new Error('Invalid private or public key received');\n    return encodeUCoordinate(pu);\n  }\n  // Computes public key from private. By doing scalar multiplication of base point.\n  const GuBytes = encodeUCoordinate(CURVE.Gu);\n  function scalarMultBase(scalar: Hex): Uint8Array {\n    return scalarMult(scalar, GuBytes);\n  }\n\n  return {\n    scalarMult,\n    scalarMultBase,\n    getSharedSecret: (privateKey: Hex, publicKey: Hex) => scalarMult(privateKey, publicKey),\n    getPublicKey: (privateKey: Hex): Uint8Array => scalarMultBase(privateKey),\n    utils: { randomPrivateKey: () => CURVE.randomBytes!(CURVE.nByteLength) },\n    GuBytes: GuBytes,\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { ExtPointType, twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport {\n  bytesToHex,\n  bytesToNumberLE,\n  ensureBytes,\n  equalBytes,\n  Hex,\n  numberToBytesLE,\n} from './abstract/utils.js';\nimport { createHasher, htfBasicOpts, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { AffinePoint, Group } from './abstract/curve.js';\n\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\n\nconst ED25519_P = BigInt(\n  '57896044618658097711785492504343953926634992332820282019728792003956564819949'\n);\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n\nfunction ed25519_pow_2_252_3(x: bigint) {\n  const P = ED25519_P;\n  const x2 = (x * x) % P;\n  const b2 = (x2 * x) % P; // x^3, 11\n  const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n  const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n  const b10 = (pow2(b5, _5n, P) * b5) % P;\n  const b20 = (pow2(b10, _10n, P) * b10) % P;\n  const b40 = (pow2(b20, _20n, P) * b20) % P;\n  const b80 = (pow2(b40, _40n, P) * b40) % P;\n  const b160 = (pow2(b80, _80n, P) * b80) % P;\n  const b240 = (pow2(b160, _80n, P) * b80) % P;\n  const b250 = (pow2(b240, _10n, P) * b10) % P;\n  const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return { pow_p_5_8, b2 };\n}\n\nfunction adjustScalarBytes(bytes: Uint8Array): Uint8Array {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n\n// sqrt(u/v)\nfunction uvRatio(u: bigint, v: bigint): { isValid: boolean; value: bigint } {\n  const P = ED25519_P;\n  const v3 = mod(v * v * v, P); // v³\n  const v7 = mod(v3 * v3 * v, P); // v⁷\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx²\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return { isValid: useRoot1 || useRoot2, value: x };\n}\n\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n  '0100000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n  '0000000000000000000000000000000000000000000000000000000000000080',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n\nconst Fp = Field(ED25519_P, undefined, true);\n\nconst ed25519Defaults = {\n  // Param: a\n  a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n  // d is equal to -121665/121666 over finite field.\n  // Negative number is P - number, and division is invert(number, P)\n  d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n  // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n  Fp,\n  // Subgroup order: how many points curve has\n  // 2n**252n + 27742317777372353535851937790883648493n;\n  n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n  // Cofactor\n  h: BigInt(8),\n  // Base point (x, y) aka generator point\n  Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n  Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n  hash: sha512,\n  randomBytes,\n  adjustScalarBytes,\n  // dom2\n  // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n  // Constant-time, u/√v\n  uvRatio,\n} as const;\n\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\n\nfunction ed25519_domain(data: Uint8Array, ctx: Uint8Array, phflag: boolean) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(\n    utf8ToBytes('SigEd25519 no Ed25519 collisions'),\n    new Uint8Array([phflag ? 1 : 0, ctx.length]),\n    ctx,\n    data\n  );\n}\n\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n  prehash: sha512,\n});\n\nexport const x25519 = /* @__PURE__ */ (() =>\n  montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x: bigint): bigint => {\n      const P = ED25519_P;\n      // x^(p-2) aka x^(2^255-21)\n      const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n      return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n  }))();\n\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub: Hex): Uint8Array {\n  const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n  const _1n = BigInt(1);\n  return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv: Uint8Array): Uint8Array {\n  const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n  return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\n\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\n\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u: bigint) {\n  let tv1 = Fp.sqr(u);       //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n);       //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J);  //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd);      //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd);    //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n);       //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2);       //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n);       //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd);     //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3);         //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd);       //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1);       //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3);       //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3);       //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11);         //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd);       //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1);   //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u);     //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2);   //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1);   //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21);         //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd);       //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1);          //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd);       //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3);  //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd(y);         //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\n\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u: bigint) {\n  const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n  // map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n\n  const inv = Fp.invertBatch([xd, yd]); // batch division\n  return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\n\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    ed25519.ExtendedPoint,\n    (scalars: bigint[]) => map_to_curve_elligator2_edwards25519(scalars[0]),\n    {\n      DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n      encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha512,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n\nfunction assertRstPoint(other: unknown) {\n  if (!(other instanceof RistPoint)) throw new Error('RistrettoPoint expected');\n}\n\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt(\n  '25063068953384623474111414158702152701244531502492656460079210482610430750235'\n);\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt(\n  '54469307008909316920995813868745141605393597292927456921205312896311721017578'\n);\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt(\n  '1159843021668779879193775521855586647937357759715417654439879720876111806838'\n);\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt(\n  '40440834346308536858101042469323190826248399146238708352240133220865137265952'\n);\n// Calculates 1/√(number)\nconst invertSqrt = (number: bigint) => uvRatio(_1n, number);\n\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes: Uint8Array) =>\n  ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n\ntype ExtendedPoint = ExtPointType;\n\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0: bigint): ExtendedPoint {\n  const { d } = ed25519.CURVE;\n  const P = ed25519.CURVE.Fp.ORDER;\n  const mod = ed25519.CURVE.Fp.create;\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint implements Group<RistPoint> {\n  static BASE: RistPoint;\n  static ZERO: RistPoint;\n  // Private property to discourage combining ExtendedPoint + RistrettoPoint\n  // Always use Ristretto encoding/decoding instead.\n  constructor(private readonly ep: ExtendedPoint) {}\n\n  static fromAffine(ap: AffinePoint<bigint>) {\n    return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n  }\n\n  /**\n   * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n   * The hash-to-group operation applies Elligator twice and adds the results.\n   * **Note:** this is one-way map, there is no conversion from point to hash.\n   * https://ristretto.group/formulas/elligator.html\n   * @param hex 64-byte output of a hash function\n   */\n  static hashToCurve(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHash', hex, 64);\n    const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new RistPoint(R1.add(R2));\n  }\n\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * https://ristretto.group/formulas/decoding.html\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHex', hex, 32);\n    const { a, d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n    const s = bytes255ToNumberLE(hex);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P)) throw new Error(emsg);\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n) throw new Error(emsg);\n    return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n  }\n\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * https://ristretto.group/formulas/encoding.html\n   */\n  toRawBytes(): Uint8Array {\n    let { ex: x, ey: y, ez: z, et: t } = this.ep;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const u1 = mod(mod(z + y) * mod(z - y)); // 1\n    const u2 = mod(x * y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * t); // 6\n    let D: bigint; // 7\n    if (isNegativeLE(t * zInv, P)) {\n      let _x = mod(y * SQRT_M1);\n      let _y = mod(x * SQRT_M1);\n      x = _x;\n      y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(x * zInv, P)) y = mod(-y); // 9\n    let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return numberToBytesLE(s, 32); // 11\n  }\n\n  toHex(): string {\n    return bytesToHex(this.toRawBytes());\n  }\n\n  toString(): string {\n    return this.toHex();\n  }\n\n  // Compare one point to another.\n  equals(other: RistPoint): boolean {\n    assertRstPoint(other);\n    const { ex: X1, ey: Y1 } = this.ep;\n    const { ex: X2, ey: Y2 } = other.ep;\n    const mod = ed25519.CURVE.Fp.create;\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n\n  add(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.add(other.ep));\n  }\n\n  subtract(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.subtract(other.ep));\n  }\n\n  multiply(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiply(scalar));\n  }\n\n  multiplyUnsafe(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiplyUnsafe(scalar));\n  }\n\n  double(): RistPoint {\n    return new RistPoint(this.ep.double());\n  }\n\n  negate(): RistPoint {\n    return new RistPoint(this.ep.negate());\n  }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n  if (!RistPoint.BASE) RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n  if (!RistPoint.ZERO) RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n  return RistPoint;\n})();\n\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg: Uint8Array, options: htfBasicOpts) => {\n  const d = options.DST;\n  const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n  const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n  const P = RistPoint.hashToCurve(uniform_bytes);\n  return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { CHash, Input, toBytes } from './utils.js';\nimport { hmac } from './hmac.js';\n\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nexport function extract(hash: CHash, ikm: Input, salt?: Input) {\n  assertHash(hash);\n  // NOTE: some libraries treat zero-length array as 'not provided';\n  // we don't, since we have undefined as 'not provided'\n  // https://github.com/RustCrypto/KDFs/issues/15\n  if (salt === undefined) salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n  return hmac(hash, toBytes(salt), toBytes(ikm));\n}\n\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = /* @__PURE__ */ new Uint8Array([0]);\nconst EMPTY_BUFFER = /* @__PURE__ */ new Uint8Array();\n\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nexport function expand(hash: CHash, prk: Input, info?: Input, length: number = 32) {\n  assertHash(hash);\n  assertNumber(length);\n  if (length > 255 * hash.outputLen) throw new Error('Length should be <= 255*HashLen');\n  const blocks = Math.ceil(length / hash.outputLen);\n  if (info === undefined) info = EMPTY_BUFFER;\n  // first L(ength) octets of T\n  const okm = new Uint8Array(blocks * hash.outputLen);\n  // Re-use HMAC instance between blocks\n  const HMAC = hmac.create(hash, prk);\n  const HMACTmp = HMAC._cloneInto();\n  const T = new Uint8Array(HMAC.outputLen);\n  for (let counter = 0; counter < blocks; counter++) {\n    HKDF_COUNTER[0] = counter + 1;\n    // T(0) = empty string (zero length)\n    // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n    HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n      .update(info)\n      .update(HKDF_COUNTER)\n      .digestInto(T);\n    okm.set(T, hash.outputLen * counter);\n    HMAC._cloneInto(HMACTmp);\n  }\n  HMAC.destroy();\n  HMACTmp.destroy();\n  T.fill(0);\n  HKDF_COUNTER.fill(0);\n  return okm.slice(0, length);\n}\n\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nexport const hkdf = (\n  hash: CHash,\n  ikm: Input,\n  salt: Input | undefined,\n  info: Input | undefined,\n  length: number\n) => expand(hash, extract(hash, ikm, salt), info, length);\n","import { chacha20poly1305 } from '@noble/ciphers/chacha'\nimport { x25519 } from '@noble/curves/ed25519'\nimport { extract, expand } from '@noble/hashes/hkdf'\nimport { sha256 } from '@noble/hashes/sha256'\nimport type { ICryptoInterface } from '../crypto.js'\nimport type { KeyPair } from '../types.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport const pureJsCrypto: ICryptoInterface = {\n  hashSHA256 (data: Uint8Array | Uint8ArrayList): Uint8Array {\n    return sha256(data.subarray())\n  },\n\n  getHKDF (ck: Uint8Array, ikm: Uint8Array): [Uint8Array, Uint8Array, Uint8Array] {\n    const prk = extract(sha256, ikm, ck)\n    const okmU8Array = expand(sha256, prk, undefined, 96)\n    const okm = okmU8Array\n\n    const k1 = okm.subarray(0, 32)\n    const k2 = okm.subarray(32, 64)\n    const k3 = okm.subarray(64, 96)\n\n    return [k1, k2, k3]\n  },\n\n  generateX25519KeyPair (): KeyPair {\n    const secretKey = x25519.utils.randomPrivateKey()\n    const publicKey = x25519.getPublicKey(secretKey)\n\n    return {\n      publicKey,\n      privateKey: secretKey\n    }\n  },\n\n  generateX25519KeyPairFromSeed (seed: Uint8Array): KeyPair {\n    const publicKey = x25519.getPublicKey(seed)\n\n    return {\n      publicKey,\n      privateKey: seed\n    }\n  },\n\n  generateX25519SharedKey (privateKey: Uint8Array | Uint8ArrayList, publicKey: Uint8Array | Uint8ArrayList): Uint8Array {\n    return x25519.getSharedSecret(privateKey.subarray(), publicKey.subarray())\n  },\n\n  chaCha20Poly1305Encrypt (plaintext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array): Uint8Array {\n    return chacha20poly1305(k, nonce, ad).encrypt(plaintext.subarray())\n  },\n\n  chaCha20Poly1305Decrypt (ciphertext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array, dst?: Uint8Array): Uint8Array {\n    return chacha20poly1305(k, nonce, ad).decrypt(ciphertext.subarray(), dst)\n  }\n}\n","import type { ICrypto, KeyPair } from './types.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/** Underlying crypto implementation, meant to be overridable */\nexport interface ICryptoInterface {\n  hashSHA256(data: Uint8Array | Uint8ArrayList): Uint8Array\n\n  getHKDF(ck: Uint8Array, ikm: Uint8Array): [Uint8Array, Uint8Array, Uint8Array]\n\n  generateX25519KeyPair(): KeyPair\n  generateX25519KeyPairFromSeed(seed: Uint8Array): KeyPair\n  generateX25519SharedKey(privateKey: Uint8Array | Uint8ArrayList, publicKey: Uint8Array | Uint8ArrayList): Uint8Array\n\n  chaCha20Poly1305Encrypt(plaintext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array): Uint8ArrayList | Uint8Array\n  chaCha20Poly1305Decrypt(ciphertext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array, dst?: Uint8Array): Uint8ArrayList | Uint8Array\n}\n\nexport function wrapCrypto (crypto: ICryptoInterface): ICrypto {\n  return {\n    generateKeypair: crypto.generateX25519KeyPair,\n    dh: (keypair, publicKey) => crypto.generateX25519SharedKey(keypair.privateKey, publicKey).subarray(0, 32),\n    encrypt: crypto.chaCha20Poly1305Encrypt,\n    decrypt: crypto.chaCha20Poly1305Decrypt,\n    hash: crypto.hashSHA256,\n    hkdf: crypto.getHKDF\n  }\n}\n","import { type Uint8ArrayList } from 'uint8arraylist'\nimport { allocUnsafe as uint8ArrayAllocUnsafe } from 'uint8arrays/alloc'\nimport type { LengthDecoderFunction } from 'it-length-prefixed'\n\nexport const uint16BEEncode = (value: number): Uint8Array => {\n  const target = uint8ArrayAllocUnsafe(2)\n  target[0] = value >> 8\n  target[1] = value\n  return target\n}\nuint16BEEncode.bytes = 2\n\nexport const uint16BEDecode: LengthDecoderFunction = (data: Uint8Array | Uint8ArrayList): number => {\n  if (data.length < 2) throw RangeError('Could not decode int16BE')\n\n  if (data instanceof Uint8Array) {\n    let value = 0\n    value += data[0] << 8\n    value += data[1]\n    return value\n  }\n\n  return data.getUint16(0)\n}\nuint16BEDecode.bytes = 2\n","import type { Counter, Metrics } from '@libp2p/interface'\n\nexport type MetricsRegistry = Record<string, Counter>\n\nexport function registerMetrics (metrics: Metrics): MetricsRegistry {\n  return {\n    xxHandshakeSuccesses: metrics.registerCounter(\n      'libp2p_noise_xxhandshake_successes_total', {\n        help: 'Total count of noise xxHandshakes successes_'\n      }),\n\n    xxHandshakeErrors: metrics.registerCounter(\n      'libp2p_noise_xxhandshake_error_total', {\n        help: 'Total count of noise xxHandshakes errors'\n      }),\n\n    encryptedPackets: metrics.registerCounter(\n      'libp2p_noise_encrypted_packets_total', {\n        help: 'Total count of noise encrypted packets successfully'\n      }),\n\n    decryptedPackets: metrics.registerCounter(\n      'libp2p_noise_decrypted_packets_total', {\n        help: 'Total count of noise decrypted packets'\n      }),\n\n    decryptErrors: metrics.registerCounter(\n      'libp2p_noise_decrypt_errors_total', {\n        help: 'Total count of noise decrypt errors'\n      })\n  }\n}\n","import { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { DUMP_SESSION_KEYS } from './constants.js'\nimport type { CipherState } from './protocol.js'\nimport type { KeyPair } from './types.js'\nimport type { Logger } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport function logLocalStaticKeys (s: KeyPair | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (s) {\n    keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${uint8ArrayToString(s.publicKey, 'hex')}`)\n    keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${uint8ArrayToString(s.privateKey, 'hex')}`)\n  } else {\n    keyLogger('Missing local static keys.')\n  }\n}\n\nexport function logLocalEphemeralKeys (e: KeyPair | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (e) {\n    keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${uint8ArrayToString(e.publicKey, 'hex')}`)\n    keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${uint8ArrayToString(e.privateKey, 'hex')}`)\n  } else {\n    keyLogger('Missing local ephemeral keys.')\n  }\n}\n\nexport function logRemoteStaticKey (rs: Uint8Array | Uint8ArrayList | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (rs) {\n    keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${uint8ArrayToString(rs.subarray(), 'hex')}`)\n  } else {\n    keyLogger('Missing remote static public key.')\n  }\n}\n\nexport function logRemoteEphemeralKey (re: Uint8Array | Uint8ArrayList | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (re) {\n    keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${uint8ArrayToString(re.subarray(), 'hex')}`)\n  } else {\n    keyLogger('Missing remote ephemeral keys.')\n  }\n}\n\nexport function logCipherState (cs1: CipherState, cs2: CipherState, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  keyLogger(`CIPHER_STATE_1 ${cs1.n.getUint64()} ${cs1.k && uint8ArrayToString(cs1.k, 'hex')}`)\n  keyLogger(`CIPHER_STATE_2 ${cs2.n.getUint64()} ${cs2.k && uint8ArrayToString(cs2.k, 'hex')}`)\n}\n","import { allocUnsafe } from '#alloc'\nimport { asUint8Array } from '#util/as-uint8array'\n\n/**\n * Returns the xor distance between two arrays\n */\nexport function xor (a: Uint8Array, b: Uint8Array): Uint8Array {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length')\n  }\n\n  const result = allocUnsafe(a.length)\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i]\n  }\n\n  return asUint8Array(result)\n}\n","import { Buffer } from 'node:buffer'\n\n/**\n * Can be used with Array.sort to sort and array with Uint8Array entries\n */\nexport function compare (a: Uint8Array, b: Uint8Array): number {\n  return Buffer.compare(a, b)\n}\n","export class UnexpectedPeerError extends Error {\n  public code: string\n\n  constructor (message = 'Unexpected Peer') {\n    super(message)\n    this.code = UnexpectedPeerError.code\n  }\n\n  static readonly code = 'ERR_UNEXPECTED_PEER'\n}\n\nexport class InvalidCryptoExchangeError extends Error {\n  public code: string\n\n  constructor (message = 'Invalid crypto exchange') {\n    super(message)\n    this.code = InvalidCryptoExchangeError.code\n  }\n\n  static readonly code = 'ERR_INVALID_CRYPTO_EXCHANGE'\n}\n","import { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\n\nexport const MIN_NONCE = 0\n// For performance reasons, the nonce is represented as a JS `number`\n// Although JS `number` can safely represent integers up to 2 ** 53 - 1, we choose to only use\n// 4 bytes to store the data for performance reason.\n// This is a slight deviation from the noise spec, which describes the max nonce as 2 ** 64 - 2\n// The effect is that this implementation will need a new handshake to be performed after fewer messages are exchanged than other implementations with full uint64 nonces.\n// this MAX_NONCE is still a large number of messages, so the practical effect of this is negligible.\nexport const MAX_NONCE = 0xffffffff\n\nconst ERR_MAX_NONCE = 'Cipherstate has reached maximum n, a new handshake must be performed'\n\n/**\n * The nonce is an uint that's increased over time.\n * Maintaining different representations help improve performance.\n */\nexport class Nonce {\n  private n: number\n  private readonly bytes: Uint8Array\n  private readonly view: DataView\n\n  constructor (n = MIN_NONCE) {\n    this.n = n\n    this.bytes = uint8ArrayAlloc(12)\n    this.view = new DataView(this.bytes.buffer, this.bytes.byteOffset, this.bytes.byteLength)\n    this.view.setUint32(4, n, true)\n  }\n\n  increment (): void {\n    this.n++\n    // Even though we're treating the nonce as 8 bytes, RFC7539 specifies 12 bytes for a nonce.\n    this.view.setUint32(4, this.n, true)\n  }\n\n  getBytes (): Uint8Array {\n    return this.bytes\n  }\n\n  getUint64 (): number {\n    return this.n\n  }\n\n  assertValue (): void {\n    if (this.n > MAX_NONCE) {\n      throw new Error(ERR_MAX_NONCE)\n    }\n  }\n}\n","import { Uint8ArrayList } from 'uint8arraylist'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport { InvalidCryptoExchangeError } from './errors.js'\nimport { Nonce } from './nonce.js'\nimport type { ICipherState, ISymmetricState, IHandshakeState, KeyPair, ICrypto } from './types.js'\n\n// Code in this file is a direct translation of a subset of the noise protocol https://noiseprotocol.org/noise.html,\n// agnostic to libp2p's usage of noise\n\nexport const ZEROLEN = uint8ArrayAlloc(0)\n\ninterface ICipherStateWithKey extends ICipherState {\n  k: Uint8Array\n}\n\nexport class CipherState implements ICipherState {\n  public k?: Uint8Array\n  public n: Nonce\n  private readonly crypto: ICrypto\n\n  constructor (crypto: ICrypto, k: Uint8Array | undefined = undefined, n = 0) {\n    this.crypto = crypto\n    this.k = k\n    this.n = new Nonce(n)\n  }\n\n  public hasKey (): this is ICipherStateWithKey {\n    return Boolean(this.k)\n  }\n\n  public encryptWithAd (ad: Uint8Array, plaintext: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    if (!this.hasKey()) {\n      return plaintext\n    }\n\n    this.n.assertValue()\n    const e = this.crypto.encrypt(plaintext, this.n.getBytes(), ad, this.k)\n    this.n.increment()\n\n    return e\n  }\n\n  public decryptWithAd (ad: Uint8Array, ciphertext: Uint8Array | Uint8ArrayList, dst?: Uint8Array): Uint8Array | Uint8ArrayList {\n    if (!this.hasKey()) {\n      return ciphertext\n    }\n\n    this.n.assertValue()\n    const plaintext = this.crypto.decrypt(ciphertext, this.n.getBytes(), ad, this.k, dst)\n    this.n.increment()\n\n    return plaintext\n  }\n}\n\nexport class SymmetricState implements ISymmetricState {\n  public cs: CipherState\n  public ck: Uint8Array\n  public h: Uint8Array\n  private readonly crypto: ICrypto\n\n  constructor (crypto: ICrypto, protocolName: string) {\n    this.crypto = crypto\n\n    const protocolNameBytes = uint8ArrayFromString(protocolName, 'utf-8')\n    this.h = hashProtocolName(crypto, protocolNameBytes)\n\n    this.ck = this.h\n    this.cs = new CipherState(crypto)\n  }\n\n  public mixKey (ikm: Uint8Array): void {\n    const [ck, tempK] = this.crypto.hkdf(this.ck, ikm)\n    this.ck = ck\n    this.cs = new CipherState(this.crypto, tempK)\n  }\n\n  public mixHash (data: Uint8Array | Uint8ArrayList): void {\n    this.h = this.crypto.hash(new Uint8ArrayList(this.h, data))\n  }\n\n  public encryptAndHash (plaintext: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const ciphertext = this.cs.encryptWithAd(this.h, plaintext)\n    this.mixHash(ciphertext)\n    return ciphertext\n  }\n\n  public decryptAndHash (ciphertext: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const plaintext = this.cs.decryptWithAd(this.h, ciphertext)\n    this.mixHash(ciphertext)\n    return plaintext\n  }\n\n  public split (): [CipherState, CipherState] {\n    const [tempK1, tempK2] = this.crypto.hkdf(this.ck, ZEROLEN)\n    return [new CipherState(this.crypto, tempK1), new CipherState(this.crypto, tempK2)]\n  }\n}\n\n// const MESSAGE_PATTERNS = ['e', 's', 'ee', 'es', 'se', 'ss'] as const\n// type MessagePattern = Array<typeof MESSAGE_PATTERNS[number]>\n\nexport interface HandshakeStateInit {\n  crypto: ICrypto\n  protocolName: string\n  initiator: boolean\n  prologue: Uint8Array\n  s?: KeyPair\n  e?: KeyPair\n  rs?: Uint8Array | Uint8ArrayList\n  re?: Uint8Array | Uint8ArrayList\n}\n\nexport abstract class AbstractHandshakeState implements IHandshakeState {\n  public ss: SymmetricState\n  public s?: KeyPair\n  public e?: KeyPair\n  public rs?: Uint8Array | Uint8ArrayList\n  public re?: Uint8Array | Uint8ArrayList\n  public initiator: boolean\n  protected readonly crypto: ICrypto\n\n  constructor (init: HandshakeStateInit) {\n    const { crypto, protocolName, prologue, initiator, s, e, rs, re } = init\n    this.crypto = crypto\n    this.ss = new SymmetricState(crypto, protocolName)\n    this.ss.mixHash(prologue)\n    this.initiator = initiator\n    this.s = s\n    this.e = e\n    this.rs = rs\n    this.re = re\n  }\n\n  protected writeE (): Uint8Array {\n    if (this.e) {\n      throw new Error('ephemeral keypair is already set')\n    }\n    const e = this.crypto.generateKeypair()\n    this.ss.mixHash(e.publicKey)\n    this.e = e\n    return e.publicKey\n  }\n\n  protected writeS (): Uint8Array | Uint8ArrayList {\n    if (!this.s) {\n      throw new Error('static keypair is not set')\n    }\n    return this.ss.encryptAndHash(this.s.publicKey)\n  }\n\n  protected writeEE (): void {\n    if (!this.e) {\n      throw new Error('ephemeral keypair is not set')\n    }\n    if (!this.re) {\n      throw new Error('remote ephemeral public key is not set')\n    }\n    this.ss.mixKey(this.crypto.dh(this.e, this.re))\n  }\n\n  protected writeES (): void {\n    if (this.initiator) {\n      if (!this.e) {\n        throw new Error('ephemeral keypair is not set')\n      }\n      if (!this.rs) {\n        throw new Error('remote static public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.e, this.rs))\n    } else {\n      if (!this.s) {\n        throw new Error('static keypair is not set')\n      }\n      if (!this.re) {\n        throw new Error('remote ephemeral public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.s, this.re))\n    }\n  }\n\n  protected writeSE (): void {\n    if (this.initiator) {\n      if (!this.s) {\n        throw new Error('static keypair is not set')\n      }\n      if (!this.re) {\n        throw new Error('remote ephemeral public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.s, this.re))\n    } else {\n      if (!this.e) {\n        throw new Error('ephemeral keypair is not set')\n      }\n      if (!this.rs) {\n        throw new Error('remote static public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.e, this.rs))\n    }\n  }\n\n  protected readE (message: Uint8ArrayList, offset = 0): void {\n    if (this.re) {\n      throw new Error('remote ephemeral public key is already set')\n    }\n    if (message.byteLength < offset + 32) {\n      throw new Error('message is not long enough')\n    }\n    this.re = message.sublist(offset, offset + 32)\n    this.ss.mixHash(this.re)\n  }\n\n  protected readS (message: Uint8ArrayList, offset = 0): number {\n    if (this.rs) {\n      throw new Error('remote static public key is already set')\n    }\n    const cipherLength = 32 + (this.ss.cs.hasKey() ? 16 : 0)\n    if (message.byteLength < offset + cipherLength) {\n      throw new Error('message is not long enough')\n    }\n    const temp = message.sublist(offset, offset + cipherLength)\n    this.rs = this.ss.decryptAndHash(temp)\n    return cipherLength\n  }\n\n  protected readEE (): void {\n    this.writeEE()\n  }\n\n  protected readES (): void {\n    this.writeES()\n  }\n\n  protected readSE (): void {\n    this.writeSE()\n  }\n}\n\n/**\n * A IHandshakeState that's optimized for the XX pattern\n */\nexport class XXHandshakeState extends AbstractHandshakeState {\n  // e\n  writeMessageA (payload: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    return new Uint8ArrayList(this.writeE(), this.ss.encryptAndHash(payload))\n  }\n\n  // e, ee, s, es\n  writeMessageB (payload: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const e = this.writeE()\n    this.writeEE()\n    const encS = this.writeS()\n    this.writeES()\n\n    return new Uint8ArrayList(e, encS, this.ss.encryptAndHash(payload))\n  }\n\n  // s, se\n  writeMessageC (payload: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const encS = this.writeS()\n    this.writeSE()\n\n    return new Uint8ArrayList(encS, this.ss.encryptAndHash(payload))\n  }\n\n  // e\n  readMessageA (message: Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    try {\n      this.readE(message)\n\n      return this.ss.decryptAndHash(message.sublist(32))\n    } catch (e) {\n      throw new InvalidCryptoExchangeError(`handshake stage 0 validation fail: ${(e as Error).message}`)\n    }\n  }\n\n  // e, ee, s, es\n  readMessageB (message: Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    try {\n      this.readE(message)\n      this.readEE()\n      const consumed = this.readS(message, 32)\n      this.readES()\n\n      return this.ss.decryptAndHash(message.sublist(32 + consumed))\n    } catch (e) {\n      throw new InvalidCryptoExchangeError(`handshake stage 1 validation fail: ${(e as Error).message}`)\n    }\n  }\n\n  // s, se\n  readMessageC (message: Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    try {\n      const consumed = this.readS(message)\n      this.readSE()\n\n      return this.ss.decryptAndHash(message.sublist(consumed))\n    } catch (e) {\n      throw new InvalidCryptoExchangeError(`handshake stage 2 validation fail: ${(e as Error).message}`)\n    }\n  }\n}\n\nfunction hashProtocolName (crypto: ICrypto, protocolName: Uint8Array): Uint8Array {\n  if (protocolName.length <= 32) {\n    const h = uint8ArrayAlloc(32)\n    h.set(protocolName)\n    return h\n  } else {\n    return crypto.hash(protocolName)\n  }\n}\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { type Codec, decodeMessage, encodeMessage, message } from 'protons-runtime'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface NoiseExtensions {\n  webtransportCerthashes: Uint8Array[]\n}\n\nexport namespace NoiseExtensions {\n  let _codec: Codec<NoiseExtensions>\n\n  export const codec = (): Codec<NoiseExtensions> => {\n    if (_codec == null) {\n      _codec = message<NoiseExtensions>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.webtransportCerthashes != null) {\n          for (const value of obj.webtransportCerthashes) {\n            w.uint32(10)\n            w.bytes(value)\n          }\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          webtransportCerthashes: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.webtransportCerthashes.push(reader.bytes())\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<NoiseExtensions>): Uint8Array => {\n    return encodeMessage(obj, NoiseExtensions.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): NoiseExtensions => {\n    return decodeMessage(buf, NoiseExtensions.codec())\n  }\n}\n\nexport interface NoiseHandshakePayload {\n  identityKey: Uint8Array\n  identitySig: Uint8Array\n  extensions?: NoiseExtensions\n}\n\nexport namespace NoiseHandshakePayload {\n  let _codec: Codec<NoiseHandshakePayload>\n\n  export const codec = (): Codec<NoiseHandshakePayload> => {\n    if (_codec == null) {\n      _codec = message<NoiseHandshakePayload>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if ((obj.identityKey != null && obj.identityKey.byteLength > 0)) {\n          w.uint32(10)\n          w.bytes(obj.identityKey)\n        }\n\n        if ((obj.identitySig != null && obj.identitySig.byteLength > 0)) {\n          w.uint32(18)\n          w.bytes(obj.identitySig)\n        }\n\n        if (obj.extensions != null) {\n          w.uint32(34)\n          NoiseExtensions.codec().encode(obj.extensions, w)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          identityKey: uint8ArrayAlloc(0),\n          identitySig: uint8ArrayAlloc(0)\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.identityKey = reader.bytes()\n              break\n            }\n            case 2: {\n              obj.identitySig = reader.bytes()\n              break\n            }\n            case 4: {\n              obj.extensions = NoiseExtensions.codec().decode(reader, reader.uint32())\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<NoiseHandshakePayload>): Uint8Array => {\n    return encodeMessage(obj, NoiseHandshakePayload.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): NoiseHandshakePayload => {\n    return decodeMessage(buf, NoiseHandshakePayload.codec())\n  }\n}\n","import { unmarshalPublicKey } from '@libp2p/crypto/keys'\nimport { type Uint8ArrayList } from 'uint8arraylist'\nimport { equals, toString } from 'uint8arrays'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { UnexpectedPeerError } from './errors.js'\nimport { type NoiseExtensions, NoiseHandshakePayload } from './proto/payload.js'\nimport type { PrivateKey } from '@libp2p/interface'\n\nexport async function createHandshakePayload (\n  privateKey: PrivateKey,\n  staticPublicKey: Uint8Array | Uint8ArrayList,\n  extensions?: NoiseExtensions\n): Promise<Uint8Array | Uint8ArrayList> {\n  const identitySig = await privateKey.sign(getSignaturePayload(staticPublicKey))\n\n  return NoiseHandshakePayload.encode({\n    identityKey: privateKey.public.bytes,\n    identitySig,\n    extensions\n  })\n}\n\nexport async function decodeHandshakePayload (\n  payloadBytes: Uint8Array | Uint8ArrayList,\n  remoteStaticKey?: Uint8Array | Uint8ArrayList,\n  remoteIdentityKey?: Uint8Array | Uint8ArrayList\n): Promise<NoiseHandshakePayload> {\n  try {\n    const payload = NoiseHandshakePayload.decode(payloadBytes)\n    if (remoteIdentityKey) {\n      const remoteIdentityKeyBytes = remoteIdentityKey.subarray()\n      if (!equals(remoteIdentityKeyBytes, payload.identityKey)) {\n        throw new Error(`Payload identity key ${toString(payload.identityKey, 'hex')} does not match expected remote identity key ${toString(remoteIdentityKeyBytes, 'hex')}`)\n      }\n    }\n\n    if (!remoteStaticKey) {\n      throw new Error('Remote static does not exist')\n    }\n\n    const signaturePayload = getSignaturePayload(remoteStaticKey)\n    const publicKey = unmarshalPublicKey(payload.identityKey)\n\n    if (!(await publicKey.verify(signaturePayload, payload.identitySig))) {\n      throw new Error('Invalid payload signature')\n    }\n\n    return payload\n  } catch (e) {\n    throw new UnexpectedPeerError((e as Error).message)\n  }\n}\n\nexport function getSignaturePayload (publicKey: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n  const prefix = uint8ArrayFromString('noise-libp2p-static-key:')\n\n  if (publicKey instanceof Uint8Array) {\n    return uint8ArrayConcat([prefix, publicKey], prefix.length + publicKey.length)\n  }\n\n  publicKey.prepend(prefix)\n\n  return publicKey\n}\n","import {\n  logLocalStaticKeys,\n  logLocalEphemeralKeys,\n  logRemoteEphemeralKey,\n  logRemoteStaticKey,\n  logCipherState\n} from './logger.js'\nimport { ZEROLEN, XXHandshakeState } from './protocol.js'\nimport { createHandshakePayload, decodeHandshakePayload } from './utils.js'\nimport type { HandshakeResult, HandshakeParams } from './types.js'\n\nexport async function performHandshakeInitiator (init: HandshakeParams): Promise<HandshakeResult> {\n  const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init\n\n  const payload = await createHandshakePayload(privateKey, s.publicKey, extensions)\n  const xx = new XXHandshakeState({\n    crypto,\n    protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n    initiator: true,\n    prologue,\n    s\n  })\n\n  logLocalStaticKeys(xx.s, log)\n  log.trace('Stage 0 - Initiator starting to send first message.')\n  await connection.write(xx.writeMessageA(ZEROLEN))\n  log.trace('Stage 0 - Initiator finished sending first message.')\n  logLocalEphemeralKeys(xx.e, log)\n\n  log.trace('Stage 1 - Initiator waiting to receive first message from responder...')\n  const plaintext = xx.readMessageB(await connection.read())\n  log.trace('Stage 1 - Initiator received the message.')\n  logRemoteEphemeralKey(xx.re, log)\n  logRemoteStaticKey(xx.rs, log)\n\n  log.trace(\"Initiator going to check remote's signature...\")\n  const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey)\n  log.trace('All good with the signature!')\n\n  log.trace('Stage 2 - Initiator sending third handshake message.')\n  await connection.write(xx.writeMessageC(payload))\n  log.trace('Stage 2 - Initiator sent message with signed payload.')\n\n  const [cs1, cs2] = xx.ss.split()\n  logCipherState(cs1, cs2, log)\n\n  return {\n    payload: receivedPayload,\n    encrypt: (plaintext) => cs1.encryptWithAd(ZEROLEN, plaintext),\n    decrypt: (ciphertext, dst) => cs2.decryptWithAd(ZEROLEN, ciphertext, dst)\n  }\n}\n\nexport async function performHandshakeResponder (init: HandshakeParams): Promise<HandshakeResult> {\n  const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init\n\n  const payload = await createHandshakePayload(privateKey, s.publicKey, extensions)\n  const xx = new XXHandshakeState({\n    crypto,\n    protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n    initiator: false,\n    prologue,\n    s\n  })\n\n  logLocalStaticKeys(xx.s, log)\n  log.trace('Stage 0 - Responder waiting to receive first message.')\n  xx.readMessageA(await connection.read())\n  log.trace('Stage 0 - Responder received first message.')\n  logRemoteEphemeralKey(xx.re, log)\n\n  log.trace('Stage 1 - Responder sending out first message with signed payload and static key.')\n  await connection.write(xx.writeMessageB(payload))\n  log.trace('Stage 1 - Responder sent the second handshake message with signed payload.')\n  logLocalEphemeralKeys(xx.e, log)\n\n  log.trace('Stage 2 - Responder waiting for third handshake message...')\n  const plaintext = xx.readMessageC(await connection.read())\n  log.trace('Stage 2 - Responder received the message, finished handshake.')\n  const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey)\n\n  const [cs1, cs2] = xx.ss.split()\n  logCipherState(cs1, cs2, log)\n\n  return {\n    payload: receivedPayload,\n    encrypt: (plaintext) => cs2.encryptWithAd(ZEROLEN, plaintext),\n    decrypt: (ciphertext, dst) => cs1.decryptWithAd(ZEROLEN, ciphertext, dst)\n  }\n}\n","import { Uint8ArrayList } from 'uint8arraylist'\nimport { NOISE_MSG_MAX_LENGTH_BYTES, NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG } from './constants.js'\nimport { uint16BEEncode } from './encoder.js'\nimport type { MetricsRegistry } from './metrics.js'\nimport type { HandshakeResult } from './types.js'\nimport type { Transform } from 'it-stream-types'\n\nconst CHACHA_TAG_LENGTH = 16\n\n// Returns generator that encrypts payload from the user\nexport function encryptStream (handshake: HandshakeResult, metrics?: MetricsRegistry): Transform<AsyncGenerator<Uint8Array | Uint8ArrayList>> {\n  return async function * (source) {\n    for await (const chunk of source) {\n      for (let i = 0; i < chunk.length; i += NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG) {\n        let end = i + NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG\n        if (end > chunk.length) {\n          end = chunk.length\n        }\n\n        let data: Uint8Array | Uint8ArrayList\n\n        if (chunk instanceof Uint8Array) {\n          data = handshake.encrypt(chunk.subarray(i, end))\n        } else {\n          data = handshake.encrypt(chunk.sublist(i, end))\n        }\n\n        metrics?.encryptedPackets.increment()\n\n        yield new Uint8ArrayList(uint16BEEncode(data.byteLength), data)\n      }\n    }\n  }\n}\n\n// Decrypt received payload to the user\nexport function decryptStream (handshake: HandshakeResult, metrics?: MetricsRegistry): Transform<AsyncGenerator<Uint8ArrayList>, AsyncGenerator<Uint8Array | Uint8ArrayList>> {\n  return async function * (source) {\n    for await (const chunk of source) {\n      for (let i = 0; i < chunk.length; i += NOISE_MSG_MAX_LENGTH_BYTES) {\n        let end = i + NOISE_MSG_MAX_LENGTH_BYTES\n        if (end > chunk.length) {\n          end = chunk.length\n        }\n\n        if (end - CHACHA_TAG_LENGTH < i) {\n          throw new Error('Invalid chunk')\n        }\n\n        const encrypted = chunk.sublist(i, end)\n        // memory allocation is not cheap so reuse the encrypted Uint8Array\n        // see https://github.com/ChainSafe/js-libp2p-noise/pull/242#issue-1422126164\n        // this is ok because chacha20 reads bytes one by one and don't reread after that\n        // it's also tested in https://github.com/ChainSafe/as-chacha20poly1305/pull/1/files#diff-25252846b58979dcaf4e41d47b3eadd7e4f335e7fb98da6c049b1f9cd011f381R48\n        const dst = chunk.subarray(i, end - CHACHA_TAG_LENGTH)\n        try {\n          const plaintext = handshake.decrypt(encrypted, dst)\n          metrics?.decryptedPackets.increment()\n          yield plaintext\n        } catch (e) {\n          metrics?.decryptErrors.increment()\n          throw e\n        }\n      }\n    }\n  }\n}\n","import { unmarshalPrivateKey } from '@libp2p/crypto/keys'\nimport { type MultiaddrConnection, type SecuredConnection, type PeerId, CodeError, type PrivateKey } from '@libp2p/interface'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { decode } from 'it-length-prefixed'\nimport { lpStream, type LengthPrefixedStream } from 'it-length-prefixed-stream'\nimport { duplexPair } from 'it-pair/duplex'\nimport { pipe } from 'it-pipe'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport { NOISE_MSG_MAX_LENGTH_BYTES } from './constants.js'\nimport { defaultCrypto } from './crypto/index.js'\nimport { wrapCrypto, type ICryptoInterface } from './crypto.js'\nimport { uint16BEDecode, uint16BEEncode } from './encoder.js'\nimport { type MetricsRegistry, registerMetrics } from './metrics.js'\nimport { performHandshakeInitiator, performHandshakeResponder } from './performHandshake.js'\nimport { decryptStream, encryptStream } from './streaming.js'\nimport type { NoiseComponents } from './index.js'\nimport type { NoiseExtensions } from './proto/payload.js'\nimport type { HandshakeResult, ICrypto, INoiseConnection, KeyPair } from './types.js'\nimport type { Duplex } from 'it-stream-types'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface NoiseInit {\n  /**\n   * x25519 private key, reuse for faster handshakes\n   */\n  staticNoiseKey?: Uint8Array\n  extensions?: NoiseExtensions\n  crypto?: ICryptoInterface\n  prologueBytes?: Uint8Array\n}\n\nexport class Noise implements INoiseConnection {\n  public protocol = '/noise'\n  public crypto: ICrypto\n\n  private readonly prologue: Uint8Array\n  private readonly staticKey: KeyPair\n  private readonly extensions?: NoiseExtensions\n  private readonly metrics?: MetricsRegistry\n  private readonly components: NoiseComponents\n\n  constructor (components: NoiseComponents, init: NoiseInit = {}) {\n    const { staticNoiseKey, extensions, crypto, prologueBytes } = init\n    const { metrics } = components\n\n    this.components = components\n    const _crypto = crypto ?? defaultCrypto\n    this.crypto = wrapCrypto(_crypto)\n    this.extensions = extensions\n    this.metrics = metrics ? registerMetrics(metrics) : undefined\n\n    if (staticNoiseKey) {\n      // accepts x25519 private key of length 32\n      this.staticKey = _crypto.generateX25519KeyPairFromSeed(staticNoiseKey)\n    } else {\n      this.staticKey = _crypto.generateX25519KeyPair()\n    }\n    this.prologue = prologueBytes ?? uint8ArrayAlloc(0)\n  }\n\n  /**\n   * Encrypt outgoing data to the remote party (handshake as initiator)\n   *\n   * @param localPeer - PeerId of the receiving peer\n   * @param connection - streaming iterable duplex that will be encrypted\n   * @param remotePeer - PeerId of the remote peer. Used to validate the integrity of the remote peer.\n   */\n  public async secureOutbound <Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (localPeer: PeerId, connection: Stream, remotePeer?: PeerId): Promise<SecuredConnection<Stream, NoiseExtensions>> {\n    const wrappedConnection = lpStream(\n      connection,\n      {\n        lengthEncoder: uint16BEEncode,\n        lengthDecoder: uint16BEDecode,\n        maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n      }\n    )\n\n    if (!localPeer.privateKey) {\n      throw new CodeError('local peerId does not contain private key', 'ERR_NO_PRIVATE_KEY')\n    }\n    const privateKey = await unmarshalPrivateKey(localPeer.privateKey)\n\n    const remoteIdentityKey = remotePeer?.publicKey\n\n    const handshake = await this.performHandshakeInitiator(\n      wrappedConnection,\n      privateKey,\n      remoteIdentityKey\n    )\n    const conn = await this.createSecureConnection(wrappedConnection, handshake)\n\n    connection.source = conn.source\n    connection.sink = conn.sink\n\n    return {\n      conn: connection,\n      remoteExtensions: handshake.payload.extensions,\n      remotePeer: await peerIdFromKeys(handshake.payload.identityKey)\n    }\n  }\n\n  /**\n   * Decrypt incoming data (handshake as responder).\n   *\n   * @param localPeer - PeerId of the receiving peer.\n   * @param connection - streaming iterable duplex that will be encrypted.\n   * @param remotePeer - optional PeerId of the initiating peer, if known. This may only exist during transport upgrades.\n   */\n  public async secureInbound <Stream extends Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>> = MultiaddrConnection> (localPeer: PeerId, connection: Stream, remotePeer?: PeerId): Promise<SecuredConnection<Stream, NoiseExtensions>> {\n    const wrappedConnection = lpStream(\n      connection,\n      {\n        lengthEncoder: uint16BEEncode,\n        lengthDecoder: uint16BEDecode,\n        maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n      }\n    )\n\n    if (!localPeer.privateKey) {\n      throw new CodeError('local peerId does not contain private key', 'ERR_NO_PRIVATE_KEY')\n    }\n    const privateKey = await unmarshalPrivateKey(localPeer.privateKey)\n\n    const remoteIdentityKey = remotePeer?.publicKey\n\n    const handshake = await this.performHandshakeResponder(\n      wrappedConnection,\n      privateKey,\n      remoteIdentityKey\n    )\n    const conn = await this.createSecureConnection(wrappedConnection, handshake)\n\n    connection.source = conn.source\n    connection.sink = conn.sink\n\n    return {\n      conn: connection,\n      remoteExtensions: handshake.payload.extensions,\n      remotePeer: await peerIdFromKeys(handshake.payload.identityKey)\n    }\n  }\n\n  /**\n   * Perform XX handshake as initiator.\n   */\n  private async performHandshakeInitiator (\n    connection: LengthPrefixedStream,\n    // TODO: pass private key in noise constructor via Components\n    privateKey: PrivateKey,\n    remoteIdentityKey?: Uint8Array | Uint8ArrayList\n  ): Promise<HandshakeResult> {\n    let result: HandshakeResult\n    try {\n      result = await performHandshakeInitiator({\n        connection,\n        privateKey,\n        remoteIdentityKey,\n        log: this.components.logger.forComponent('libp2p:noise:xxhandshake'),\n        crypto: this.crypto,\n        prologue: this.prologue,\n        s: this.staticKey,\n        extensions: this.extensions\n      })\n      this.metrics?.xxHandshakeSuccesses.increment()\n    } catch (e: unknown) {\n      this.metrics?.xxHandshakeErrors.increment()\n      throw e\n    }\n\n    return result\n  }\n\n  /**\n   * Perform XX handshake as responder.\n   */\n  private async performHandshakeResponder (\n    connection: LengthPrefixedStream,\n    // TODO: pass private key in noise constructor via Components\n    privateKey: PrivateKey,\n    remoteIdentityKey?: Uint8Array | Uint8ArrayList\n  ): Promise<HandshakeResult> {\n    let result: HandshakeResult\n    try {\n      result = await performHandshakeResponder({\n        connection,\n        privateKey,\n        remoteIdentityKey,\n        log: this.components.logger.forComponent('libp2p:noise:xxhandshake'),\n        crypto: this.crypto,\n        prologue: this.prologue,\n        s: this.staticKey,\n        extensions: this.extensions\n      })\n      this.metrics?.xxHandshakeSuccesses.increment()\n    } catch (e: unknown) {\n      this.metrics?.xxHandshakeErrors.increment()\n      throw e\n    }\n\n    return result\n  }\n\n  private async createSecureConnection (\n    connection: LengthPrefixedStream<Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>>>,\n    handshake: HandshakeResult\n  ): Promise<Duplex<AsyncGenerator<Uint8Array | Uint8ArrayList>>> {\n    // Create encryption box/unbox wrapper\n    const [secure, user] = duplexPair<Uint8Array | Uint8ArrayList>()\n    const network = connection.unwrap()\n\n    await pipe(\n      secure, // write to wrapper\n      encryptStream(handshake, this.metrics), // encrypt data + prefix with message length\n      network, // send to the remote peer\n      (source) => decode(source, { lengthDecoder: uint16BEDecode }), // read message length prefix\n      decryptStream(handshake, this.metrics), // decrypt the incoming data\n      secure // pipe to the wrapper\n    )\n\n    return user\n  }\n}\n","import { Noise } from './noise.js'\nimport type { NoiseInit } from './noise.js'\nimport type { NoiseExtensions } from './proto/payload.js'\nimport type { ComponentLogger, ConnectionEncrypter, Metrics } from '@libp2p/interface'\nexport type { ICryptoInterface } from './crypto.js'\nexport { pureJsCrypto } from './crypto/js.js'\n\nexport interface NoiseComponents {\n  logger: ComponentLogger\n  metrics?: Metrics\n}\n\nexport function noise (init: NoiseInit = {}): (components: NoiseComponents) => ConnectionEncrypter<NoiseExtensions> {\n  return (components: NoiseComponents) => new Noise(components, init)\n}\n","\n// If the passed object is an (async) iterable, then get the iterator\n// If it's probably an iterator already (i.e. has next function) return it\n// else throw\nexport function getIterator <T> (obj: AsyncIterable<T>): AsyncIterator<T>\nexport function getIterator <T> (obj: AsyncIterator<T>): AsyncIterator<T>\nexport function getIterator <T> (obj: Iterable<T>): Iterator<T>\nexport function getIterator <T> (obj: Iterator<T>): Iterator<T>\nexport function getIterator <T> (obj: any): AsyncIterator<T> | Iterator <T>\nexport function getIterator <T> (obj: any): AsyncIterator<T> | Iterator <T> {\n  if (obj != null) {\n    if (typeof obj[Symbol.iterator] === 'function') {\n      return obj[Symbol.iterator]()\n    }\n    if (typeof obj[Symbol.asyncIterator] === 'function') {\n      return obj[Symbol.asyncIterator]()\n    }\n    if (typeof obj.next === 'function') {\n      return obj // probably an iterator\n    }\n  }\n  throw new Error('argument is not an iterator or iterable')\n}\n","// Protocol violation errors\n\nexport const ERR_INVALID_FRAME = 'ERR_INVALID_FRAME'\nexport const ERR_UNREQUESTED_PING = 'ERR_UNREQUESTED_PING'\nexport const ERR_NOT_MATCHING_PING = 'ERR_NOT_MATCHING_PING'\nexport const ERR_STREAM_ALREADY_EXISTS = 'ERR_STREAM_ALREADY_EXISTS'\nexport const ERR_DECODE_INVALID_VERSION = 'ERR_DECODE_INVALID_VERSION'\nexport const ERR_BOTH_CLIENTS = 'ERR_BOTH_CLIENTS'\nexport const ERR_RECV_WINDOW_EXCEEDED = 'ERR_RECV_WINDOW_EXCEEDED'\n\nexport const PROTOCOL_ERRORS = new Set([\n  ERR_INVALID_FRAME,\n  ERR_UNREQUESTED_PING,\n  ERR_NOT_MATCHING_PING,\n  ERR_STREAM_ALREADY_EXISTS,\n  ERR_DECODE_INVALID_VERSION,\n  ERR_BOTH_CLIENTS,\n  ERR_RECV_WINDOW_EXCEEDED\n])\n\n// local errors\n\nexport const ERR_INVALID_CONFIG = 'ERR_INVALID_CONFIG'\nexport const ERR_MUXER_LOCAL_CLOSED = 'ERR_MUXER_LOCAL_CLOSED'\nexport const ERR_MUXER_REMOTE_CLOSED = 'ERR_MUXER_REMOTE_CLOSED'\nexport const ERR_STREAM_RESET = 'ERR_STREAM_RESET'\nexport const ERR_STREAM_ABORT = 'ERR_STREAM_ABORT'\nexport const ERR_MAX_OUTBOUND_STREAMS_EXCEEDED = 'ERROR_MAX_OUTBOUND_STREAMS_EXCEEDED'\nexport const ERR_DECODE_IN_PROGRESS = 'ERR_DECODE_IN_PROGRESS'\n\n/**\n * INITIAL_STREAM_WINDOW is the initial stream window size.\n *\n * Not an implementation choice, this is defined in the specification\n */\nexport const INITIAL_STREAM_WINDOW = 256 * 1024\n\n/**\n * Default max stream window\n */\nexport const MAX_STREAM_WINDOW = 16 * 1024 * 1024\n","import { CodeError } from '@libp2p/interface'\nimport { ERR_INVALID_CONFIG, INITIAL_STREAM_WINDOW, MAX_STREAM_WINDOW } from './constants.js'\n\n// TOOD use config items or delete them\nexport interface Config {\n  /**\n   * Used to do periodic keep alive messages using a ping.\n   */\n  enableKeepAlive: boolean\n\n  /**\n   * How often to perform the keep alive\n   *\n   * measured in milliseconds\n   */\n  keepAliveInterval: number\n\n  /**\n   * Maximum number of concurrent inbound streams that we accept.\n   * If the peer tries to open more streams, those will be reset immediately.\n   */\n  maxInboundStreams: number\n\n  /**\n   * Maximum number of concurrent outbound streams that we accept.\n   * If the application tries to open more streams, the call to `newStream` will throw\n   */\n  maxOutboundStreams: number\n\n  /**\n   * Used to control the initial window size that we allow for a stream.\n   *\n   * measured in bytes\n   */\n  initialStreamWindowSize: number\n\n  /**\n   * Used to control the maximum window size that we allow for a stream.\n   */\n  maxStreamWindowSize: number\n\n  /**\n   * Maximum size of a message that we'll send on a stream.\n   * This ensures that a single stream doesn't hog a connection.\n   */\n  maxMessageSize: number\n}\n\nexport const defaultConfig: Config = {\n  enableKeepAlive: true,\n  keepAliveInterval: 30_000,\n  maxInboundStreams: 1_000,\n  maxOutboundStreams: 1_000,\n  initialStreamWindowSize: INITIAL_STREAM_WINDOW,\n  maxStreamWindowSize: MAX_STREAM_WINDOW,\n  maxMessageSize: 64 * 1024\n}\n\nexport function verifyConfig (config: Config): void {\n  if (config.keepAliveInterval <= 0) {\n    throw new CodeError('keep-alive interval must be positive', ERR_INVALID_CONFIG)\n  }\n  if (config.maxInboundStreams < 0) {\n    throw new CodeError('max inbound streams must be larger or equal 0', ERR_INVALID_CONFIG)\n  }\n  if (config.maxOutboundStreams < 0) {\n    throw new CodeError('max outbound streams must be larger or equal 0', ERR_INVALID_CONFIG)\n  }\n  if (config.initialStreamWindowSize < INITIAL_STREAM_WINDOW) {\n    throw new CodeError('InitialStreamWindowSize must be larger or equal 256 kB', ERR_INVALID_CONFIG)\n  }\n  if (config.maxStreamWindowSize < config.initialStreamWindowSize) {\n    throw new CodeError('MaxStreamWindowSize must be larger than the InitialStreamWindowSize', ERR_INVALID_CONFIG)\n  }\n  if (config.maxStreamWindowSize > 2 ** 32 - 1) {\n    throw new CodeError('MaxStreamWindowSize must be less than equal MAX_UINT32', ERR_INVALID_CONFIG)\n  }\n  if (config.maxMessageSize < 1024) {\n    throw new CodeError('MaxMessageSize must be greater than a kilobyte', ERR_INVALID_CONFIG)\n  }\n}\n","export enum FrameType {\n  /** Used to transmit data. May transmit zero length payloads depending on the flags. */\n  Data = 0x0,\n  /** Used to updated the senders receive window size. This is used to implement per-session flow control. */\n  WindowUpdate = 0x1,\n  /** Used to measure RTT. It can also be used to heart-beat and do keep-alives over TCP. */\n  Ping = 0x2,\n  /** Used to close a session. */\n  GoAway = 0x3,\n}\n\nexport enum Flag {\n  /** Signals the start of a new stream. May be sent with a data or window update message. Also sent with a ping to indicate outbound. */\n  SYN = 0x1,\n  /** Acknowledges the start of a new stream. May be sent with a data or window update message. Also sent with a ping to indicate response. */\n  ACK = 0x2,\n  /** Performs a half-close of a stream. May be sent with a data message or window update. */\n  FIN = 0x4,\n  /** Reset a stream immediately. May be sent with a data or window update message. */\n  RST = 0x8,\n}\n\nconst flagCodes = Object.values(Flag).filter((x) => typeof x !== 'string') as Flag[]\n\nexport const YAMUX_VERSION = 0\n\nexport enum GoAwayCode {\n  NormalTermination = 0x0,\n  ProtocolError = 0x1,\n  InternalError = 0x2,\n}\n\nexport const HEADER_LENGTH = 12\n\nexport interface FrameHeader {\n  /**\n   * The version field is used for future backward compatibility.\n   * At the current time, the field is always set to 0, to indicate the initial version.\n   */\n  version?: number\n  /** The type field is used to switch the frame message type. */\n  type: FrameType\n  /** The flags field is used to provide additional information related to the message type. */\n  flag: number\n  /**\n   * The StreamID field is used to identify the logical stream the frame is addressing.\n   * The client side should use odd ID's, and the server even.\n   * This prevents any collisions. Additionally, the 0 ID is reserved to represent the session.\n   */\n  streamID: number\n  /**\n   * The meaning of the length field depends on the message type:\n   * * Data - provides the length of bytes following the header\n   * * Window update - provides a delta update to the window size\n   * * Ping - Contains an opaque value, echoed back\n   * * Go Away - Contains an error code\n   */\n  length: number\n}\n\nexport function stringifyHeader (header: FrameHeader): string {\n  const flags = flagCodes.filter(f => (header.flag & f) === f).map(f => Flag[f]).join('|')\n  return `streamID=${header.streamID} type=${FrameType[header.type]} flag=${flags} length=${header.length}`\n}\n","import { CodeError } from '@libp2p/interface'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { ERR_DECODE_INVALID_VERSION, ERR_DECODE_IN_PROGRESS } from './constants.js'\nimport { type FrameHeader, FrameType, HEADER_LENGTH, YAMUX_VERSION } from './frame.js'\nimport type { Source } from 'it-stream-types'\n\n// used to bitshift in decoding\n// native bitshift can overflow into a negative number, so we bitshift by multiplying by a power of 2\nconst twoPow24 = 2 ** 24\n\n/**\n * Decode a header from the front of a buffer\n *\n * @param data - Assumed to have enough bytes for a header\n */\nexport function decodeHeader (data: Uint8Array): FrameHeader {\n  if (data[0] !== YAMUX_VERSION) {\n    throw new CodeError('Invalid frame version', ERR_DECODE_INVALID_VERSION)\n  }\n  return {\n    type: data[1],\n    flag: (data[2] << 8) + data[3],\n    streamID: (data[4] * twoPow24) + (data[5] << 16) + (data[6] << 8) + data[7],\n    length: (data[8] * twoPow24) + (data[9] << 16) + (data[10] << 8) + data[11]\n  }\n}\n\n/**\n * Decodes yamux frames from a source\n */\nexport class Decoder {\n  private readonly source: Source<Uint8Array | Uint8ArrayList>\n  /** Buffer for in-progress frames */\n  private readonly buffer: Uint8ArrayList\n  /** Used to sanity check against decoding while in an inconsistent state */\n  private frameInProgress: boolean\n\n  constructor (source: Source<Uint8Array | Uint8ArrayList>) {\n    // Normally, when entering a for-await loop with an iterable/async iterable, the only ways to exit the loop are:\n    // 1. exhaust the iterable\n    // 2. throw an error - slow, undesirable if there's not actually an error\n    // 3. break or return - calls the iterable's `return` method, finalizing the iterable, no more iteration possible\n    //\n    // In this case, we want to enter (and exit) a for-await loop per chunked data frame and continue processing the iterable.\n    // To do this, we strip the `return` method from the iterator and can now `break` early and continue iterating.\n    // Exiting the main for-await is still possible via 1. and 2.\n    this.source = returnlessSource(source)\n    this.buffer = new Uint8ArrayList()\n    this.frameInProgress = false\n  }\n\n  /**\n   * Emits frames from the decoder source.\n   *\n   * Note: If `readData` is emitted, it _must_ be called before the next iteration\n   * Otherwise an error is thrown\n   */\n  async * emitFrames (): AsyncGenerator<{ header: FrameHeader, readData?(): Promise<Uint8ArrayList> }> {\n    for await (const chunk of this.source) {\n      this.buffer.append(chunk)\n\n      // Loop to consume as many bytes from the buffer as possible\n      // Eg: when a single chunk contains several frames\n      while (true) {\n        const header = this.readHeader()\n        if (header === undefined) {\n          break\n        }\n\n        const { type, length } = header\n        if (type === FrameType.Data) {\n          // This is a data frame, the frame body must still be read\n          // `readData` must be called before the next iteration here\n          this.frameInProgress = true\n          yield {\n            header,\n            readData: this.readBytes.bind(this, length)\n          }\n        } else {\n          yield { header }\n        }\n      }\n    }\n  }\n\n  private readHeader (): FrameHeader | undefined {\n    // Sanity check to ensure a header isn't read when another frame is partially decoded\n    // In practice this shouldn't happen\n    if (this.frameInProgress) {\n      throw new CodeError('decoding frame already in progress', ERR_DECODE_IN_PROGRESS)\n    }\n\n    if (this.buffer.length < HEADER_LENGTH) {\n      // not enough data yet\n      return\n    }\n\n    const header = decodeHeader(this.buffer.subarray(0, HEADER_LENGTH))\n    this.buffer.consume(HEADER_LENGTH)\n    return header\n  }\n\n  private async readBytes (length: number): Promise<Uint8ArrayList> {\n    if (this.buffer.length < length) {\n      for await (const chunk of this.source) {\n        this.buffer.append(chunk)\n\n        if (this.buffer.length >= length) {\n          // see note above, the iterator is not `return`ed here\n          break\n        }\n      }\n    }\n\n    const out = this.buffer.sublist(0, length)\n    this.buffer.consume(length)\n\n    // The next frame can now be decoded\n    this.frameInProgress = false\n\n    return out\n  }\n}\n\n/**\n * Strip the `return` method from a `Source`\n */\nexport function returnlessSource<T> (source: Source<T>): Source<T> {\n  if ((source as Iterable<T>)[Symbol.iterator] !== undefined) {\n    const iterator = (source as Iterable<T>)[Symbol.iterator]()\n    iterator.return = undefined\n    return {\n      [Symbol.iterator] () { return iterator }\n    }\n  } else if ((source as AsyncIterable<T>)[Symbol.asyncIterator] !== undefined) {\n    const iterator = (source as AsyncIterable<T>)[Symbol.asyncIterator]()\n    iterator.return = undefined\n    return {\n      [Symbol.asyncIterator] () { return iterator }\n    }\n  } else {\n    throw new Error('a source must be either an iterable or an async iterable')\n  }\n}\n","import { HEADER_LENGTH } from './frame.js'\nimport type { FrameHeader } from './frame.js'\n\nexport function encodeHeader (header: FrameHeader): Uint8Array {\n  const frame = new Uint8Array(HEADER_LENGTH)\n\n  // always assume version 0\n  // frameView.setUint8(0, header.version)\n\n  frame[1] = header.type\n\n  frame[2] = header.flag >>> 8\n  frame[3] = header.flag\n\n  frame[4] = header.streamID >>> 24\n  frame[5] = header.streamID >>> 16\n  frame[6] = header.streamID >>> 8\n  frame[7] = header.streamID\n\n  frame[8] = header.length >>> 24\n  frame[9] = header.length >>> 16\n  frame[10] = header.length >>> 8\n  frame[11] = header.length\n\n  return frame\n}\n","export function isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  if (thing == null) {\n    return false\n  }\n\n  return typeof thing.then === 'function' &&\n    typeof thing.catch === 'function' &&\n    typeof thing.finally === 'function'\n}\n","import { getIterator } from 'get-iterator'\nimport { isPromise } from './is-promise.js'\nimport type { Logger } from '@libp2p/logger'\nimport type { Source } from 'it-stream-types'\n\nexport function closeSource (source: Source<unknown>, log: Logger): void {\n  const res = getIterator(source).return?.()\n\n  if (isPromise(res)) {\n    res.catch(err => {\n      log.error('could not cause iterator to return', err)\n    })\n  }\n}\n","import { CodeError } from '@libp2p/interface'\nimport { type Pushable, pushable } from 'it-pushable'\nimport defer, { type DeferredPromise } from 'p-defer'\nimport pDefer from 'p-defer'\nimport { raceSignal } from 'race-signal'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { closeSource } from './close-source.js'\nimport type { AbortOptions, Direction, ReadStatus, Stream, StreamStatus, StreamTimeline, WriteStatus } from '@libp2p/interface'\nimport type { Logger } from '@libp2p/logger'\nimport type { Source } from 'it-stream-types'\n\nconst ERR_STREAM_RESET = 'ERR_STREAM_RESET'\nconst ERR_SINK_INVALID_STATE = 'ERR_SINK_INVALID_STATE'\nconst DEFAULT_SEND_CLOSE_WRITE_TIMEOUT = 5000\n\nexport interface AbstractStreamInit {\n  /**\n   * A unique identifier for this stream\n   */\n  id: string\n\n  /**\n   * The stream direction\n   */\n  direction: Direction\n\n  /**\n   * A Logger implementation used to log stream-specific information\n   */\n  log: Logger\n\n  /**\n   * User specific stream metadata\n   */\n  metadata?: Record<string, unknown>\n\n  /**\n   * Invoked when the stream ends\n   */\n  onEnd?(err?: Error | undefined): void\n\n  /**\n   * Invoked when the readable end of the stream is closed\n   */\n  onCloseRead?(): void\n\n  /**\n   * Invoked when the writable end of the stream is closed\n   */\n  onCloseWrite?(): void\n\n  /**\n   * Invoked when the stream has been reset by the remote\n   */\n  onReset?(): void\n\n  /**\n   * Invoked when the stream has errored\n   */\n  onAbort?(err: Error): void\n\n  /**\n   * How long to wait in ms for stream data to be written to the underlying\n   * connection when closing the writable end of the stream. (default: 500)\n   */\n  closeTimeout?: number\n\n  /**\n   * After the stream sink has closed, a limit on how long it takes to send\n   * a close-write message to the remote peer.\n   */\n  sendCloseWriteTimeout?: number\n}\n\nfunction isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  if (thing == null) {\n    return false\n  }\n\n  return typeof thing.then === 'function' &&\n    typeof thing.catch === 'function' &&\n    typeof thing.finally === 'function'\n}\n\nexport abstract class AbstractStream implements Stream {\n  public id: string\n  public direction: Direction\n  public timeline: StreamTimeline\n  public protocol?: string\n  public metadata: Record<string, unknown>\n  public source: AsyncGenerator<Uint8ArrayList, void, unknown>\n  public status: StreamStatus\n  public readStatus: ReadStatus\n  public writeStatus: WriteStatus\n  public readonly log: Logger\n\n  private readonly sinkController: AbortController\n  private readonly sinkEnd: DeferredPromise<void>\n  private readonly closed: DeferredPromise<void>\n  private endErr: Error | undefined\n  private readonly streamSource: Pushable<Uint8ArrayList>\n  private readonly onEnd?: (err?: Error | undefined) => void\n  private readonly onCloseRead?: () => void\n  private readonly onCloseWrite?: () => void\n  private readonly onReset?: () => void\n  private readonly onAbort?: (err: Error) => void\n  private readonly sendCloseWriteTimeout: number\n  private sendingData?: DeferredPromise<void>\n\n  constructor (init: AbstractStreamInit) {\n    this.sinkController = new AbortController()\n    this.sinkEnd = defer()\n    this.closed = defer()\n    this.log = init.log\n\n    // stream status\n    this.status = 'open'\n    this.readStatus = 'ready'\n    this.writeStatus = 'ready'\n\n    this.id = init.id\n    this.metadata = init.metadata ?? {}\n    this.direction = init.direction\n    this.timeline = {\n      open: Date.now()\n    }\n    this.sendCloseWriteTimeout = init.sendCloseWriteTimeout ?? DEFAULT_SEND_CLOSE_WRITE_TIMEOUT\n\n    this.onEnd = init.onEnd\n    this.onCloseRead = init?.onCloseRead\n    this.onCloseWrite = init?.onCloseWrite\n    this.onReset = init?.onReset\n    this.onAbort = init?.onAbort\n\n    this.source = this.streamSource = pushable<Uint8ArrayList>({\n      onEnd: (err) => {\n        if (err != null) {\n          this.log.trace('source ended with error', err)\n        } else {\n          this.log.trace('source ended')\n        }\n\n        this.onSourceEnd(err)\n      }\n    })\n\n    // necessary because the libp2p upgrader wraps the sink function\n    this.sink = this.sink.bind(this)\n  }\n\n  async sink (source: Source<Uint8ArrayList | Uint8Array>): Promise<void> {\n    if (this.writeStatus !== 'ready') {\n      throw new CodeError(`writable end state is \"${this.writeStatus}\" not \"ready\"`, ERR_SINK_INVALID_STATE)\n    }\n\n    try {\n      this.writeStatus = 'writing'\n\n      const options: AbortOptions = {\n        signal: this.sinkController.signal\n      }\n\n      if (this.direction === 'outbound') { // If initiator, open a new stream\n        const res = this.sendNewStream(options)\n\n        if (isPromise(res)) {\n          await res\n        }\n      }\n\n      const abortListener = (): void => {\n        closeSource(source, this.log)\n      }\n\n      try {\n        this.sinkController.signal.addEventListener('abort', abortListener)\n\n        this.log.trace('sink reading from source')\n\n        for await (let data of source) {\n          data = data instanceof Uint8Array ? new Uint8ArrayList(data) : data\n\n          const res = this.sendData(data, options)\n\n          if (isPromise(res)) {\n            this.sendingData = pDefer()\n            await res\n            this.sendingData.resolve()\n            this.sendingData = undefined\n          }\n        }\n      } finally {\n        this.sinkController.signal.removeEventListener('abort', abortListener)\n      }\n\n      this.log.trace('sink finished reading from source, write status is \"%s\"', this.writeStatus)\n\n      if (this.writeStatus === 'writing') {\n        this.writeStatus = 'closing'\n\n        this.log.trace('send close write to remote')\n        await this.sendCloseWrite({\n          signal: AbortSignal.timeout(this.sendCloseWriteTimeout)\n        })\n\n        this.writeStatus = 'closed'\n      }\n\n      this.onSinkEnd()\n    } catch (err: any) {\n      this.log.trace('sink ended with error, calling abort with error', err)\n      this.abort(err)\n\n      throw err\n    } finally {\n      this.log.trace('resolve sink end')\n      this.sinkEnd.resolve()\n    }\n  }\n\n  protected onSourceEnd (err?: Error): void {\n    if (this.timeline.closeRead != null) {\n      return\n    }\n\n    this.timeline.closeRead = Date.now()\n    this.readStatus = 'closed'\n\n    if (err != null && this.endErr == null) {\n      this.endErr = err\n    }\n\n    this.onCloseRead?.()\n\n    if (this.timeline.closeWrite != null) {\n      this.log.trace('source and sink ended')\n      this.timeline.close = Date.now()\n\n      if (this.status !== 'aborted' && this.status !== 'reset') {\n        this.status = 'closed'\n      }\n\n      if (this.onEnd != null) {\n        this.onEnd(this.endErr)\n      }\n\n      this.closed.resolve()\n    } else {\n      this.log.trace('source ended, waiting for sink to end')\n    }\n  }\n\n  protected onSinkEnd (err?: Error): void {\n    if (this.timeline.closeWrite != null) {\n      return\n    }\n\n    this.timeline.closeWrite = Date.now()\n    this.writeStatus = 'closed'\n\n    if (err != null && this.endErr == null) {\n      this.endErr = err\n    }\n\n    this.onCloseWrite?.()\n\n    if (this.timeline.closeRead != null) {\n      this.log.trace('sink and source ended')\n      this.timeline.close = Date.now()\n\n      if (this.status !== 'aborted' && this.status !== 'reset') {\n        this.status = 'closed'\n      }\n\n      if (this.onEnd != null) {\n        this.onEnd(this.endErr)\n      }\n\n      this.closed.resolve()\n    } else {\n      this.log.trace('sink ended, waiting for source to end')\n    }\n  }\n\n  // Close for both Reading and Writing\n  async close (options?: AbortOptions): Promise<void> {\n    this.log.trace('closing gracefully')\n\n    this.status = 'closing'\n\n    // wait for read and write ends to close\n    await raceSignal(Promise.all([\n      this.closeWrite(options),\n      this.closeRead(options),\n      this.closed.promise\n    ]), options?.signal)\n\n    this.status = 'closed'\n\n    this.log.trace('closed gracefully')\n  }\n\n  async closeRead (options: AbortOptions = {}): Promise<void> {\n    if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n      return\n    }\n\n    this.log.trace('closing readable end of stream with starting read status \"%s\"', this.readStatus)\n\n    const readStatus = this.readStatus\n    this.readStatus = 'closing'\n\n    if (this.status !== 'reset' && this.status !== 'aborted' && this.timeline.closeRead == null) {\n      this.log.trace('send close read to remote')\n      await this.sendCloseRead(options)\n    }\n\n    if (readStatus === 'ready') {\n      this.log.trace('ending internal source queue with %d queued bytes', this.streamSource.readableLength)\n      this.streamSource.end()\n    }\n\n    this.log.trace('closed readable end of stream')\n  }\n\n  async closeWrite (options: AbortOptions = {}): Promise<void> {\n    if (this.writeStatus === 'closing' || this.writeStatus === 'closed') {\n      return\n    }\n\n    this.log.trace('closing writable end of stream with starting write status \"%s\"', this.writeStatus)\n\n    if (this.writeStatus === 'ready') {\n      this.log.trace('sink was never sunk, sink an empty array')\n\n      await raceSignal(this.sink([]), options.signal)\n    }\n\n    if (this.writeStatus === 'writing') {\n      // try to let sending outgoing data succeed\n      if (this.sendingData != null) {\n        await raceSignal(this.sendingData.promise, options.signal)\n      }\n\n      // stop reading from the source passed to `.sink`\n      this.log.trace('aborting source passed to .sink')\n      this.sinkController.abort()\n      await raceSignal(this.sinkEnd.promise, options.signal)\n    }\n\n    this.writeStatus = 'closed'\n\n    this.log.trace('closed writable end of stream')\n  }\n\n  /**\n   * Close immediately for reading and writing and send a reset message (local\n   * error)\n   */\n  abort (err: Error): void {\n    if (this.status === 'closed' || this.status === 'aborted' || this.status === 'reset') {\n      return\n    }\n\n    this.log('abort with error', err)\n\n    // try to send a reset message\n    this.log('try to send reset to remote')\n    const res = this.sendReset()\n\n    if (isPromise(res)) {\n      res.catch((err) => {\n        this.log.error('error sending reset message', err)\n      })\n    }\n\n    this.status = 'aborted'\n    this.timeline.abort = Date.now()\n    this._closeSinkAndSource(err)\n    this.onAbort?.(err)\n  }\n\n  /**\n   * Receive a reset message - close immediately for reading and writing (remote\n   * error)\n   */\n  reset (): void {\n    if (this.status === 'closed' || this.status === 'aborted' || this.status === 'reset') {\n      return\n    }\n\n    const err = new CodeError('stream reset', ERR_STREAM_RESET)\n\n    this.status = 'reset'\n    this.timeline.reset = Date.now()\n    this._closeSinkAndSource(err)\n    this.onReset?.()\n  }\n\n  _closeSinkAndSource (err?: Error): void {\n    this._closeSink(err)\n    this._closeSource(err)\n  }\n\n  _closeSink (err?: Error): void {\n    // if the sink function is running, cause it to end\n    if (this.writeStatus === 'writing') {\n      this.log.trace('end sink source')\n      this.sinkController.abort()\n    }\n\n    this.onSinkEnd(err)\n  }\n\n  _closeSource (err?: Error): void {\n    // if the source is not ending, end it\n    if (this.readStatus !== 'closing' && this.readStatus !== 'closed') {\n      this.log.trace('ending source with %d bytes to be read by consumer', this.streamSource.readableLength)\n      this.readStatus = 'closing'\n      this.streamSource.end(err)\n    }\n  }\n\n  /**\n   * The remote closed for writing so we should expect to receive no more\n   * messages\n   */\n  remoteCloseWrite (): void {\n    if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n      this.log('received remote close write but local source is already closed')\n      return\n    }\n\n    this.log.trace('remote close write')\n    this._closeSource()\n  }\n\n  /**\n   * The remote closed for reading so we should not send any more\n   * messages\n   */\n  remoteCloseRead (): void {\n    if (this.writeStatus === 'closing' || this.writeStatus === 'closed') {\n      this.log('received remote close read but local sink is already closed')\n      return\n    }\n\n    this.log.trace('remote close read')\n    this._closeSink()\n  }\n\n  /**\n   * The underlying muxer has closed, no more messages can be sent or will\n   * be received, close immediately to free up resources\n   */\n  destroy (): void {\n    if (this.status === 'closed' || this.status === 'aborted' || this.status === 'reset') {\n      this.log('received destroy but we are already closed')\n      return\n    }\n\n    this.log.trace('stream destroyed')\n\n    this._closeSinkAndSource()\n  }\n\n  /**\n   * When an extending class reads data from it's implementation-specific source,\n   * call this method to allow the stream consumer to read the data.\n   */\n  sourcePush (data: Uint8ArrayList): void {\n    this.streamSource.push(data)\n  }\n\n  /**\n   * Returns the amount of unread data - can be used to prevent large amounts of\n   * data building up when the stream consumer is too slow.\n   */\n  sourceReadableLength (): number {\n    return this.streamSource.readableLength\n  }\n\n  /**\n   * Send a message to the remote muxer informing them a new stream is being\n   * opened\n   */\n  abstract sendNewStream (options?: AbortOptions): void | Promise<void>\n\n  /**\n   * Send a data message to the remote muxer\n   */\n  abstract sendData (buf: Uint8ArrayList, options?: AbortOptions): void | Promise<void>\n\n  /**\n   * Send a reset message to the remote muxer\n   */\n  abstract sendReset (options?: AbortOptions): void | Promise<void>\n\n  /**\n   * Send a message to the remote muxer, informing them no more data messages\n   * will be sent by this end of the stream\n   */\n  abstract sendCloseWrite (options?: AbortOptions): void | Promise<void>\n\n  /**\n   * Send a message to the remote muxer, informing them no more data messages\n   * will be read by this end of the stream\n   */\n  abstract sendCloseRead (options?: AbortOptions): void | Promise<void>\n}\n","/**\n * @packageDocumentation\n *\n * Lets you look at the contents of an async iterator and decide what to do\n *\n * @example\n *\n * ```javascript\n * import peekable from 'it-peekable'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const it = peekable(value)\n *\n * const first = it.peek()\n *\n * console.info(first) // 0\n *\n * it.push(first)\n *\n * console.info([...it])\n * // [ 0, 1, 2, 3, 4 ]\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import peekable from 'it-peekable'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const it = peekable(values())\n *\n * const first = await it.peek()\n *\n * console.info(first) // 0\n *\n * it.push(first)\n *\n * console.info(await all(it))\n * // [ 0, 1, 2, 3, 4 ]\n * ```\n */\n\nexport interface Peek <T> {\n  peek(): IteratorResult<T, undefined>\n}\n\nexport interface AsyncPeek <T> {\n  peek(): Promise<IteratorResult<T, undefined>>\n}\n\nexport interface Push <T> {\n  push(value: T): void\n}\n\nexport type Peekable <T> = Iterable<T> & Peek<T> & Push<T> & Iterator<T>\n\nexport type AsyncPeekable <T> = AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>\n\nfunction peekable <T> (iterable: Iterable<T>): Peekable<T>\nfunction peekable <T> (iterable: AsyncIterable<T>): AsyncPeekable<T>\nfunction peekable <T> (iterable: Iterable<T> | AsyncIterable<T>): Peekable<T> | AsyncPeekable<T> {\n  // @ts-expect-error can't use Symbol.asyncIterator to index iterable since it might be Iterable\n  const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n    // @ts-expect-error can't use Symbol.asyncIterator to index iterable since it might be Iterable\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-expect-error can't use Symbol.iterator to index iterable since it might be AsyncIterable\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  const queue: any[] = []\n\n  // @ts-expect-error can't use symbol to index peekable\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value: any) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length > 0) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nexport default peekable\n","/**\n * @packageDocumentation\n *\n * Calls a function for each value in an (async)iterable.\n *\n * The function can be sync or async.\n *\n * Async functions can be awaited on so may slow down processing of the (async)iterable.\n *\n * @example\n *\n * ```javascript\n * import each from 'it-foreach'\n * import drain from 'it-drain'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * // prints 0, 1, 2, 3, 4\n * const arr = drain(\n *   each(values, console.info)\n * )\n * ```\n *\n * Async sources and callbacks must be awaited:\n *\n * ```javascript\n * import each from 'it-foreach'\n * import drain from 'it-drain'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * // prints 0, 1, 2, 3, 4\n * const arr = await drain(\n *   each(values(), console.info)\n * )\n * ```\n */\n\nimport peek from 'it-peekable'\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\nfunction isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  return thing?.then != null\n}\n\n/**\n * Invokes the passed function for each item in an iterable\n */\nfunction forEach <T> (source: Iterable<T>, fn: (thing: T) => Promise<void>): AsyncGenerator<T, void, undefined>\nfunction forEach <T> (source: Iterable<T>, fn: (thing: T) => void): Generator<T, void, undefined>\nfunction forEach <T> (source: Iterable<T> | AsyncIterable<T>, fn: (thing: T) => void | Promise<void>): AsyncGenerator<T, void, undefined>\nfunction forEach <T> (source: Iterable<T> | AsyncIterable<T>, fn: (thing: T) => void | Promise<void>): AsyncGenerator<T, void, undefined> | Generator<T, void, undefined> {\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const val of source) {\n        const res = fn(val)\n\n        if (isPromise(res)) {\n          await res\n        }\n\n        yield val\n      }\n    })()\n  }\n\n  // if fn function returns a promise we have to return an async generator\n  const peekable = peek(source)\n  const { value, done } = peekable.next()\n\n  if (done === true) {\n    return (function * () {}())\n  }\n\n  const res = fn(value)\n\n  if (typeof res?.then === 'function') {\n    return (async function * () {\n      yield value\n\n      for await (const val of peekable) {\n        const res = fn(val)\n\n        if (isPromise(res)) {\n          await res\n        }\n\n        yield val\n      }\n    })()\n  }\n\n  const func = fn as (val: T) => void\n\n  return (function * () {\n    yield value\n\n    for (const val of peekable) {\n      func(val)\n      yield val\n    }\n  })()\n}\n\nexport default forEach\n","import { CodeError } from '@libp2p/interface'\nimport { AbstractStream, type AbstractStreamInit } from '@libp2p/utils/abstract-stream'\nimport each from 'it-foreach'\nimport { ERR_RECV_WINDOW_EXCEEDED, ERR_STREAM_ABORT, INITIAL_STREAM_WINDOW } from './constants.js'\nimport { Flag, type FrameHeader, FrameType, HEADER_LENGTH } from './frame.js'\nimport type { Config } from './config.js'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport enum StreamState {\n  Init,\n  SYNSent,\n  SYNReceived,\n  Established,\n  Finished,\n}\n\nexport interface YamuxStreamInit extends AbstractStreamInit {\n  name?: string\n  sendFrame(header: FrameHeader, body?: Uint8ArrayList): void\n  getRTT(): number\n  config: Config\n  state: StreamState\n}\n\n/** YamuxStream is used to represent a logical stream within a session */\nexport class YamuxStream extends AbstractStream {\n  name?: string\n  state: StreamState\n\n  private readonly config: Config\n  private readonly _id: number\n\n  /** The number of available bytes to send */\n  private sendWindowCapacity: number\n  /** Callback to notify that the sendWindowCapacity has been updated */\n  private sendWindowCapacityUpdate?: () => void\n\n  /** The number of bytes available to receive in a full window */\n  private recvWindow: number\n  /** The number of available bytes to receive */\n  private recvWindowCapacity: number\n\n  /**\n   * An 'epoch' is the time it takes to process and read data\n   *\n   * Used in conjunction with RTT to determine whether to increase the recvWindow\n   */\n  private epochStart: number\n  private readonly getRTT: () => number\n\n  private readonly sendFrame: (header: FrameHeader, body?: Uint8ArrayList) => void\n\n  constructor (init: YamuxStreamInit) {\n    super({\n      ...init,\n      onEnd: (err?: Error) => {\n        this.state = StreamState.Finished\n        init.onEnd?.(err)\n      }\n    })\n\n    this.config = init.config\n    this._id = parseInt(init.id, 10)\n    this.name = init.name\n    this.state = init.state\n    this.sendWindowCapacity = INITIAL_STREAM_WINDOW\n    this.recvWindow = this.config.initialStreamWindowSize\n    this.recvWindowCapacity = this.recvWindow\n    this.epochStart = Date.now()\n    this.getRTT = init.getRTT\n\n    this.sendFrame = init.sendFrame\n\n    this.source = each(this.source, () => {\n      this.sendWindowUpdate()\n    })\n  }\n\n  /**\n   * Send a message to the remote muxer informing them a new stream is being\n   * opened.\n   *\n   * This is a noop for Yamux because the first window update is sent when\n   * .newStream is called on the muxer which opens the stream on the remote.\n   */\n  async sendNewStream (): Promise<void> {\n\n  }\n\n  /**\n   * Send a data message to the remote muxer\n   */\n  async sendData (buf: Uint8ArrayList, options: AbortOptions = {}): Promise<void> {\n    buf = buf.sublist()\n\n    // send in chunks, waiting for window updates\n    while (buf.byteLength !== 0) {\n      // wait for the send window to refill\n      if (this.sendWindowCapacity === 0) {\n        this.log?.trace('wait for send window capacity, status %s', this.status)\n        await this.waitForSendWindowCapacity(options)\n\n        // check we didn't close while waiting for send window capacity\n        if (this.status === 'closed' || this.status === 'aborted' || this.status === 'reset') {\n          this.log?.trace('%s while waiting for send window capacity', this.status)\n          return\n        }\n      }\n\n      // send as much as we can\n      const toSend = Math.min(this.sendWindowCapacity, this.config.maxMessageSize - HEADER_LENGTH, buf.length)\n      const flags = this.getSendFlags()\n\n      this.sendFrame({\n        type: FrameType.Data,\n        flag: flags,\n        streamID: this._id,\n        length: toSend\n      }, buf.sublist(0, toSend))\n\n      this.sendWindowCapacity -= toSend\n\n      buf.consume(toSend)\n    }\n  }\n\n  /**\n   * Send a reset message to the remote muxer\n   */\n  async sendReset (): Promise<void> {\n    this.sendFrame({\n      type: FrameType.WindowUpdate,\n      flag: Flag.RST,\n      streamID: this._id,\n      length: 0\n    })\n  }\n\n  /**\n   * Send a message to the remote muxer, informing them no more data messages\n   * will be sent by this end of the stream\n   */\n  async sendCloseWrite (): Promise<void> {\n    const flags = this.getSendFlags() | Flag.FIN\n    this.sendFrame({\n      type: FrameType.WindowUpdate,\n      flag: flags,\n      streamID: this._id,\n      length: 0\n    })\n  }\n\n  /**\n   * Send a message to the remote muxer, informing them no more data messages\n   * will be read by this end of the stream\n   */\n  async sendCloseRead (): Promise<void> {\n\n  }\n\n  /**\n   * Wait for the send window to be non-zero\n   *\n   * Will throw with ERR_STREAM_ABORT if the stream gets aborted\n   */\n  async waitForSendWindowCapacity (options: AbortOptions = {}): Promise<void> {\n    if (this.sendWindowCapacity > 0) {\n      return\n    }\n\n    let resolve: () => void\n    let reject: (err: Error) => void\n    const abort = (): void => {\n      if (this.status === 'open' || this.status === 'closing') {\n        reject(new CodeError('stream aborted', ERR_STREAM_ABORT))\n      } else {\n        // the stream was closed already, ignore the failure to send\n        resolve()\n      }\n    }\n    options.signal?.addEventListener('abort', abort)\n\n    try {\n      await new Promise<void>((_resolve, _reject) => {\n        this.sendWindowCapacityUpdate = () => {\n          _resolve()\n        }\n        reject = _reject\n        resolve = _resolve\n      })\n    } finally {\n      options.signal?.removeEventListener('abort', abort)\n    }\n  }\n\n  /**\n   * handleWindowUpdate is called when the stream receives a window update frame\n   */\n  handleWindowUpdate (header: FrameHeader): void {\n    this.log?.trace('stream received window update id=%s', this._id)\n    this.processFlags(header.flag)\n\n    // increase send window\n    const available = this.sendWindowCapacity\n    this.sendWindowCapacity += header.length\n    // if the update increments a 0 availability, notify the stream that sending can resume\n    if (available === 0 && header.length > 0) {\n      this.sendWindowCapacityUpdate?.()\n    }\n  }\n\n  /**\n   * handleData is called when the stream receives a data frame\n   */\n  async handleData (header: FrameHeader, readData: () => Promise<Uint8ArrayList>): Promise<void> {\n    this.log?.trace('stream received data id=%s', this._id)\n    this.processFlags(header.flag)\n\n    // check that our recv window is not exceeded\n    if (this.recvWindowCapacity < header.length) {\n      throw new CodeError('receive window exceeded', ERR_RECV_WINDOW_EXCEEDED, { available: this.recvWindowCapacity, recv: header.length })\n    }\n\n    const data = await readData()\n    this.recvWindowCapacity -= header.length\n\n    this.sourcePush(data)\n  }\n\n  /**\n   * processFlags is used to update the state of the stream based on set flags, if any.\n   */\n  private processFlags (flags: number): void {\n    if ((flags & Flag.ACK) === Flag.ACK) {\n      if (this.state === StreamState.SYNSent) {\n        this.state = StreamState.Established\n      }\n    }\n    if ((flags & Flag.FIN) === Flag.FIN) {\n      this.remoteCloseWrite()\n    }\n    if ((flags & Flag.RST) === Flag.RST) {\n      this.reset()\n    }\n  }\n\n  /**\n   * getSendFlags determines any flags that are appropriate\n   * based on the current stream state.\n   *\n   * The state is updated as a side-effect.\n   */\n  private getSendFlags (): number {\n    switch (this.state) {\n      case StreamState.Init:\n        this.state = StreamState.SYNSent\n        return Flag.SYN\n      case StreamState.SYNReceived:\n        this.state = StreamState.Established\n        return Flag.ACK\n      default:\n        return 0\n    }\n  }\n\n  /**\n   * potentially sends a window update enabling further writes to take place.\n   */\n  sendWindowUpdate (): void {\n    // determine the flags if any\n    const flags = this.getSendFlags()\n\n    // If the stream has already been established\n    // and we've processed data within the time it takes for 4 round trips\n    // then we (up to) double the recvWindow\n    const now = Date.now()\n    const rtt = this.getRTT()\n    if (flags === 0 && rtt > -1 && now - this.epochStart < rtt * 4) {\n      // we've already validated that maxStreamWindowSize can't be more than MAX_UINT32\n      this.recvWindow = Math.min(this.recvWindow * 2, this.config.maxStreamWindowSize)\n    }\n\n    if (this.recvWindowCapacity >= this.recvWindow && flags === 0) {\n      // a window update isn't needed\n      return\n    }\n\n    // update the receive window\n    const delta = this.recvWindow - this.recvWindowCapacity\n    this.recvWindowCapacity = this.recvWindow\n\n    // update the epoch start\n    this.epochStart = now\n\n    // send window update\n    this.sendFrame({\n      type: FrameType.WindowUpdate,\n      flag: flags,\n      streamID: this._id,\n      length: delta\n    })\n  }\n}\n","import { CodeError, setMaxListeners } from '@libp2p/interface'\nimport { getIterator } from 'get-iterator'\nimport { pushable, type Pushable } from 'it-pushable'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { type Config, defaultConfig, verifyConfig } from './config.js'\nimport { ERR_BOTH_CLIENTS, ERR_INVALID_FRAME, ERR_MAX_OUTBOUND_STREAMS_EXCEEDED, ERR_MUXER_LOCAL_CLOSED, ERR_MUXER_REMOTE_CLOSED, ERR_NOT_MATCHING_PING, ERR_STREAM_ALREADY_EXISTS, ERR_UNREQUESTED_PING, PROTOCOL_ERRORS } from './constants.js'\nimport { Decoder } from './decode.js'\nimport { encodeHeader } from './encode.js'\nimport { Flag, type FrameHeader, FrameType, GoAwayCode } from './frame.js'\nimport { StreamState, YamuxStream } from './stream.js'\nimport type { YamuxMuxerComponents } from './index.js'\nimport type { AbortOptions, ComponentLogger, Logger, Stream, StreamMuxer, StreamMuxerFactory, StreamMuxerInit } from '@libp2p/interface'\nimport type { Sink, Source } from 'it-stream-types'\n\nconst YAMUX_PROTOCOL_ID = '/yamux/1.0.0'\nconst CLOSE_TIMEOUT = 500\n\nexport interface YamuxMuxerInit extends StreamMuxerInit, Partial<Config> {\n}\n\nexport class Yamux implements StreamMuxerFactory {\n  protocol = YAMUX_PROTOCOL_ID\n  private readonly _components: YamuxMuxerComponents\n  private readonly _init: YamuxMuxerInit\n\n  constructor (components: YamuxMuxerComponents, init: YamuxMuxerInit = {}) {\n    this._components = components\n    this._init = init\n  }\n\n  createStreamMuxer (init?: YamuxMuxerInit): YamuxMuxer {\n    return new YamuxMuxer(this._components, {\n      ...this._init,\n      ...init\n    })\n  }\n}\n\nexport interface CloseOptions extends AbortOptions {\n  reason?: GoAwayCode\n}\n\nexport class YamuxMuxer implements StreamMuxer {\n  protocol = YAMUX_PROTOCOL_ID\n  source: Pushable<Uint8ArrayList | Uint8Array>\n  sink: Sink<Source<Uint8ArrayList | Uint8Array>, Promise<void>>\n\n  private readonly config: Config\n  private readonly log?: Logger\n  private readonly logger: ComponentLogger\n\n  /** Used to close the muxer from either the sink or source */\n  private readonly closeController: AbortController\n\n  /** The next stream id to be used when initiating a new stream */\n  private nextStreamID: number\n  /** Primary stream mapping, streamID => stream */\n  private readonly _streams: Map<number, YamuxStream>\n\n  /** The next ping id to be used when pinging */\n  private nextPingID: number\n  /** Tracking info for the currently active ping */\n  private activePing?: { id: number, promise: Promise<void>, resolve(): void }\n  /** Round trip time */\n  private rtt: number\n\n  /** True if client, false if server */\n  private readonly client: boolean\n\n  private localGoAway?: GoAwayCode\n  private remoteGoAway?: GoAwayCode\n\n  /** Number of tracked inbound streams */\n  private numInboundStreams: number\n  /** Number of tracked outbound streams */\n  private numOutboundStreams: number\n\n  private readonly onIncomingStream?: (stream: Stream) => void\n  private readonly onStreamEnd?: (stream: Stream) => void\n\n  constructor (components: YamuxMuxerComponents, init: YamuxMuxerInit) {\n    this.client = init.direction === 'outbound'\n    this.config = { ...defaultConfig, ...init }\n    this.logger = components.logger\n    this.log = this.logger.forComponent('libp2p:yamux')\n    verifyConfig(this.config)\n\n    this.closeController = new AbortController()\n    setMaxListeners(Infinity, this.closeController.signal)\n\n    this.onIncomingStream = init.onIncomingStream\n    this.onStreamEnd = init.onStreamEnd\n\n    this._streams = new Map()\n\n    this.source = pushable({\n      onEnd: (): void => {\n        this.log?.trace('muxer source ended')\n\n        this._streams.forEach(stream => {\n          stream.destroy()\n        })\n      }\n    })\n\n    this.sink = async (source: Source<Uint8ArrayList | Uint8Array>): Promise<void> => {\n      const shutDownListener = (): void => {\n        const iterator = getIterator(source)\n\n        if (iterator.return != null) {\n          const res = iterator.return()\n\n          if (isPromise(res)) {\n            res.catch(err => {\n              this.log?.('could not cause sink source to return', err)\n            })\n          }\n        }\n      }\n\n      let reason, error\n      try {\n        const decoder = new Decoder(source)\n\n        try {\n          this.closeController.signal.addEventListener('abort', shutDownListener)\n\n          for await (const frame of decoder.emitFrames()) {\n            await this.handleFrame(frame.header, frame.readData)\n          }\n        } finally {\n          this.closeController.signal.removeEventListener('abort', shutDownListener)\n        }\n\n        reason = GoAwayCode.NormalTermination\n      } catch (err: unknown) {\n        // either a protocol or internal error\n        const errCode = (err as { code: string }).code\n        if (PROTOCOL_ERRORS.has(errCode)) {\n          this.log?.error('protocol error in sink', err)\n          reason = GoAwayCode.ProtocolError\n        } else {\n          this.log?.error('internal error in sink', err)\n          reason = GoAwayCode.InternalError\n        }\n\n        error = err as Error\n      }\n\n      this.log?.trace('muxer sink ended')\n\n      if (error != null) {\n        this.abort(error, reason)\n      } else {\n        await this.close({ reason })\n      }\n    }\n\n    this.numInboundStreams = 0\n    this.numOutboundStreams = 0\n\n    // client uses odd streamIDs, server uses even streamIDs\n    this.nextStreamID = this.client ? 1 : 2\n\n    this.nextPingID = 0\n    this.rtt = -1\n\n    this.log?.trace('muxer created')\n\n    if (this.config.enableKeepAlive) {\n      this.keepAliveLoop().catch(e => this.log?.error('keepalive error: %s', e))\n    }\n\n    // send an initial ping to establish RTT\n    this.ping().catch(e => this.log?.error('ping error: %s', e))\n  }\n\n  get streams (): YamuxStream[] {\n    return Array.from(this._streams.values())\n  }\n\n  newStream (name?: string | undefined): YamuxStream {\n    if (this.remoteGoAway !== undefined) {\n      throw new CodeError('muxer closed remotely', ERR_MUXER_REMOTE_CLOSED)\n    }\n    if (this.localGoAway !== undefined) {\n      throw new CodeError('muxer closed locally', ERR_MUXER_LOCAL_CLOSED)\n    }\n\n    const id = this.nextStreamID\n    this.nextStreamID += 2\n\n    // check against our configured maximum number of outbound streams\n    if (this.numOutboundStreams >= this.config.maxOutboundStreams) {\n      throw new CodeError('max outbound streams exceeded', ERR_MAX_OUTBOUND_STREAMS_EXCEEDED)\n    }\n\n    this.log?.trace('new outgoing stream id=%s', id)\n\n    const stream = this._newStream(id, name, StreamState.Init, 'outbound')\n    this._streams.set(id, stream)\n\n    this.numOutboundStreams++\n\n    // send a window update to open the stream on the receiver end\n    stream.sendWindowUpdate()\n\n    return stream\n  }\n\n  /**\n   * Initiate a ping and wait for a response\n   *\n   * Note: only a single ping will be initiated at a time.\n   * If a ping is already in progress, a new ping will not be initiated.\n   *\n   * @returns the round-trip-time in milliseconds\n   */\n  async ping (): Promise<number> {\n    if (this.remoteGoAway !== undefined) {\n      throw new CodeError('muxer closed remotely', ERR_MUXER_REMOTE_CLOSED)\n    }\n    if (this.localGoAway !== undefined) {\n      throw new CodeError('muxer closed locally', ERR_MUXER_LOCAL_CLOSED)\n    }\n\n    // An active ping does not yet exist, handle the process here\n    if (this.activePing === undefined) {\n      // create active ping\n      let _resolve = (): void => {}\n      this.activePing = {\n        id: this.nextPingID++,\n        // this promise awaits resolution or the close controller aborting\n        promise: new Promise<void>((resolve, reject) => {\n          const closed = (): void => {\n            reject(new CodeError('muxer closed locally', ERR_MUXER_LOCAL_CLOSED))\n          }\n          this.closeController.signal.addEventListener('abort', closed, { once: true })\n          _resolve = (): void => {\n            this.closeController.signal.removeEventListener('abort', closed)\n            resolve()\n          }\n        }),\n        resolve: _resolve\n      }\n      // send ping\n      const start = Date.now()\n      this.sendPing(this.activePing.id)\n      // await pong\n      try {\n        await this.activePing.promise\n      } finally {\n        // clean-up active ping\n        delete this.activePing\n      }\n      // update rtt\n      const end = Date.now()\n      this.rtt = end - start\n    } else {\n      // an active ping is already in progress, piggyback off that\n      await this.activePing.promise\n    }\n    return this.rtt\n  }\n\n  /**\n   * Get the ping round trip time\n   *\n   * Note: Will return 0 if no successful ping has yet been completed\n   *\n   * @returns the round-trip-time in milliseconds\n   */\n  getRTT (): number {\n    return this.rtt\n  }\n\n  /**\n   * Close the muxer\n   */\n  async close (options: CloseOptions = {}): Promise<void> {\n    if (this.closeController.signal.aborted) {\n      // already closed\n      return\n    }\n\n    const reason = options?.reason ?? GoAwayCode.NormalTermination\n\n    this.log?.trace('muxer close reason=%s', reason)\n\n    if (options.signal == null) {\n      const signal = AbortSignal.timeout(CLOSE_TIMEOUT)\n      setMaxListeners(Infinity, signal)\n\n      options = {\n        ...options,\n        signal\n      }\n    }\n\n    try {\n      await Promise.all(\n        [...this._streams.values()].map(async s => s.close(options))\n      )\n\n      // send reason to the other side, allow the other side to close gracefully\n      this.sendGoAway(reason)\n\n      this._closeMuxer()\n    } catch (err: any) {\n      this.abort(err)\n    }\n  }\n\n  abort (err: Error, reason?: GoAwayCode): void {\n    if (this.closeController.signal.aborted) {\n      // already closed\n      return\n    }\n\n    reason = reason ?? GoAwayCode.InternalError\n\n    // If reason was provided, use that, otherwise use the presence of `err` to determine the reason\n    this.log?.error('muxer abort reason=%s error=%s', reason, err)\n\n    // Abort all underlying streams\n    for (const stream of this._streams.values()) {\n      stream.abort(err)\n    }\n\n    // send reason to the other side, allow the other side to close gracefully\n    this.sendGoAway(reason)\n\n    this._closeMuxer()\n  }\n\n  isClosed (): boolean {\n    return this.closeController.signal.aborted\n  }\n\n  /**\n   * Called when either the local or remote shuts down the muxer\n   */\n  private _closeMuxer (): void {\n    // stop the sink and any other processes\n    this.closeController.abort()\n\n    // stop the source\n    this.source.end()\n  }\n\n  /** Create a new stream */\n  private _newStream (id: number, name: string | undefined, state: StreamState, direction: 'inbound' | 'outbound'): YamuxStream {\n    if (this._streams.get(id) != null) {\n      throw new CodeError('Stream already exists', ERR_STREAM_ALREADY_EXISTS, { id })\n    }\n\n    const stream = new YamuxStream({\n      id: id.toString(),\n      name,\n      state,\n      direction,\n      sendFrame: this.sendFrame.bind(this),\n      onEnd: () => {\n        this.closeStream(id)\n        this.onStreamEnd?.(stream)\n      },\n      log: this.logger.forComponent(`libp2p:yamux:${direction}:${id}`),\n      config: this.config,\n      getRTT: this.getRTT.bind(this)\n    })\n\n    return stream\n  }\n\n  /**\n   * closeStream is used to close a stream once both sides have\n   * issued a close.\n   */\n  private closeStream (id: number): void {\n    if (this.client === (id % 2 === 0)) {\n      this.numInboundStreams--\n    } else {\n      this.numOutboundStreams--\n    }\n    this._streams.delete(id)\n  }\n\n  private async keepAliveLoop (): Promise<void> {\n    const abortPromise = new Promise((_resolve, reject) => { this.closeController.signal.addEventListener('abort', reject, { once: true }) })\n    this.log?.trace('muxer keepalive enabled interval=%s', this.config.keepAliveInterval)\n    while (true) {\n      let timeoutId\n      try {\n        await Promise.race([\n          abortPromise,\n          new Promise((resolve) => {\n            timeoutId = setTimeout(resolve, this.config.keepAliveInterval)\n          })\n        ])\n        this.ping().catch(e => this.log?.error('ping error: %s', e))\n      } catch (e) {\n        // closed\n        clearInterval(timeoutId)\n        return\n      }\n    }\n  }\n\n  private async handleFrame (header: FrameHeader, readData?: () => Promise<Uint8ArrayList>): Promise<void> {\n    const {\n      streamID,\n      type,\n      length\n    } = header\n    this.log?.trace('received frame %o', header)\n\n    if (streamID === 0) {\n      switch (type) {\n        case FrameType.Ping:\n        { this.handlePing(header); return }\n        case FrameType.GoAway:\n        { this.handleGoAway(length); return }\n        default:\n          // Invalid state\n          throw new CodeError('Invalid frame type', ERR_INVALID_FRAME, { header })\n      }\n    } else {\n      switch (header.type) {\n        case FrameType.Data:\n        case FrameType.WindowUpdate:\n        { await this.handleStreamMessage(header, readData); return }\n        default:\n          // Invalid state\n          throw new CodeError('Invalid frame type', ERR_INVALID_FRAME, { header })\n      }\n    }\n  }\n\n  private handlePing (header: FrameHeader): void {\n    // If the ping  is initiated by the sender, send a response\n    if (header.flag === Flag.SYN) {\n      this.log?.trace('received ping request pingId=%s', header.length)\n      this.sendPing(header.length, Flag.ACK)\n    } else if (header.flag === Flag.ACK) {\n      this.log?.trace('received ping response pingId=%s', header.length)\n      this.handlePingResponse(header.length)\n    } else {\n      // Invalid state\n      throw new CodeError('Invalid frame flag', ERR_INVALID_FRAME, { header })\n    }\n  }\n\n  private handlePingResponse (pingId: number): void {\n    if (this.activePing === undefined) {\n      // this ping was not requested\n      throw new CodeError('ping not requested', ERR_UNREQUESTED_PING)\n    }\n    if (this.activePing.id !== pingId) {\n      // this ping doesn't match our active ping request\n      throw new CodeError('ping doesn\\'t match our id', ERR_NOT_MATCHING_PING)\n    }\n\n    // valid ping response\n    this.activePing.resolve()\n  }\n\n  private handleGoAway (reason: GoAwayCode): void {\n    this.log?.trace('received GoAway reason=%s', GoAwayCode[reason] ?? 'unknown')\n    this.remoteGoAway = reason\n\n    // If the other side is friendly, they would have already closed all streams before sending a GoAway\n    // In case they weren't, reset all streams\n    for (const stream of this._streams.values()) {\n      stream.reset()\n    }\n\n    this._closeMuxer()\n  }\n\n  private async handleStreamMessage (header: FrameHeader, readData?: () => Promise<Uint8ArrayList>): Promise<void> {\n    const { streamID, flag, type } = header\n\n    if ((flag & Flag.SYN) === Flag.SYN) {\n      this.incomingStream(streamID)\n    }\n\n    const stream = this._streams.get(streamID)\n    if (stream === undefined) {\n      if (type === FrameType.Data) {\n        this.log?.('discarding data for stream id=%s', streamID)\n        if (readData === undefined) {\n          throw new Error('unreachable')\n        }\n        await readData()\n      } else {\n        this.log?.('frame for missing stream id=%s', streamID)\n      }\n      return\n    }\n\n    switch (type) {\n      case FrameType.WindowUpdate: {\n        stream.handleWindowUpdate(header); return\n      }\n      case FrameType.Data: {\n        if (readData === undefined) {\n          throw new Error('unreachable')\n        }\n\n        await stream.handleData(header, readData); return\n      }\n      default:\n        throw new Error('unreachable')\n    }\n  }\n\n  private incomingStream (id: number): void {\n    if (this.client !== (id % 2 === 0)) {\n      throw new CodeError('both endpoints are clients', ERR_BOTH_CLIENTS)\n    }\n    if (this._streams.has(id)) {\n      return\n    }\n\n    this.log?.trace('new incoming stream id=%s', id)\n\n    if (this.localGoAway !== undefined) {\n      // reject (reset) immediately if we are doing a go away\n      this.sendFrame({\n        type: FrameType.WindowUpdate,\n        flag: Flag.RST,\n        streamID: id,\n        length: 0\n      }); return\n    }\n\n    // check against our configured maximum number of inbound streams\n    if (this.numInboundStreams >= this.config.maxInboundStreams) {\n      this.log?.('maxIncomingStreams exceeded, forcing stream reset')\n      this.sendFrame({\n        type: FrameType.WindowUpdate,\n        flag: Flag.RST,\n        streamID: id,\n        length: 0\n      }); return\n    }\n\n    // allocate a new stream\n    const stream = this._newStream(id, undefined, StreamState.SYNReceived, 'inbound')\n\n    this.numInboundStreams++\n    // the stream should now be tracked\n    this._streams.set(id, stream)\n\n    this.onIncomingStream?.(stream)\n  }\n\n  private sendFrame (header: FrameHeader, data?: Uint8ArrayList): void {\n    this.log?.trace('sending frame %o', header)\n    if (header.type === FrameType.Data) {\n      if (data === undefined) {\n        throw new CodeError('invalid frame', ERR_INVALID_FRAME)\n      }\n      this.source.push(\n        new Uint8ArrayList(encodeHeader(header), data)\n      )\n    } else {\n      this.source.push(encodeHeader(header))\n    }\n  }\n\n  private sendPing (pingId: number, flag: Flag = Flag.SYN): void {\n    if (flag === Flag.SYN) {\n      this.log?.trace('sending ping request pingId=%s', pingId)\n    } else {\n      this.log?.trace('sending ping response pingId=%s', pingId)\n    }\n    this.sendFrame({\n      type: FrameType.Ping,\n      flag,\n      streamID: 0,\n      length: pingId\n    })\n  }\n\n  private sendGoAway (reason: GoAwayCode = GoAwayCode.NormalTermination): void {\n    this.log?.('sending GoAway reason=%s', GoAwayCode[reason])\n    this.localGoAway = reason\n    this.sendFrame({\n      type: FrameType.GoAway,\n      flag: 0,\n      streamID: 0,\n      length: reason\n    })\n  }\n}\n\nfunction isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  return thing != null && typeof thing.then === 'function'\n}\n","/**\n * @packageDocumentation\n *\n * This module is a JavaScript implementation of [Yamux from Hashicorp](https://github.com/hashicorp/yamux/blob/master/spec.md) designed to be used with [js-libp2p](https://github.com/libp2p/js-libp2p).\n *\n * @example Configure libp2p with Yamux\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { yamux } from '@chainsafe/libp2p-yamux'\n *\n * const node = await createLibp2p({\n *   // ... other options\n *   streamMuxers: [\n *     yamux()\n *   ]\n * })\n * ```\n *\n * @example Using the low-level API\n *\n * ```js\n * import { yamux } from '@chainsafe/libp2p-yamux'\n * import { pipe } from 'it-pipe'\n * import { duplexPair } from 'it-pair/duplex'\n * import all from 'it-all'\n *\n * // Connect two yamux muxers to demo basic stream multiplexing functionality\n *\n * const clientMuxer = yamux({\n *   client: true,\n *   onIncomingStream: stream => {\n *     // echo data on incoming streams\n *     pipe(stream, stream)\n *   },\n *   onStreamEnd: stream => {\n *     // do nothing\n *   }\n * })()\n *\n * const serverMuxer = yamux({\n *   client: false,\n *   onIncomingStream: stream => {\n *     // echo data on incoming streams\n *     pipe(stream, stream)\n *   },\n *   onStreamEnd: stream => {\n *     // do nothing\n *   }\n * })()\n *\n * // `p` is our \"connections\", what we use to connect the two sides\n * // In a real application, a connection is usually to a remote computer\n * const p = duplexPair()\n *\n * // connect the muxers together\n * pipe(p[0], clientMuxer, p[0])\n * pipe(p[1], serverMuxer, p[1])\n *\n * // now either side can open streams\n * const stream0 = clientMuxer.newStream()\n * const stream1 = serverMuxer.newStream()\n *\n * // Send some data to the other side\n * const encoder = new TextEncoder()\n * const data = [encoder.encode('hello'), encoder.encode('world')]\n * pipe(data, stream0)\n *\n * // Receive data back\n * const result = await pipe(stream0, all)\n *\n * // close a stream\n * stream1.close()\n *\n * // close the muxer\n * clientMuxer.close()\n * ```\n */\n\nimport { Yamux } from './muxer.js'\nimport type { YamuxMuxerInit } from './muxer.js'\nimport type { ComponentLogger, StreamMuxerFactory } from '@libp2p/interface'\n\nexport { GoAwayCode, type FrameHeader, type FrameType } from './frame.js'\nexport type { YamuxMuxerInit }\n\nexport interface YamuxMuxerComponents {\n  logger: ComponentLogger\n}\n\nexport function yamux (init: YamuxMuxerInit = {}): (components: YamuxMuxerComponents) => StreamMuxerFactory {\n  return (components) => new Yamux(components, init)\n}\n","// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst clearMethods = new WeakMap();\n\nexport function createDelay({clearTimeout: defaultClear, setTimeout: defaultSet} = {}) {\n\t// We cannot use `async` here as we need the promise identity.\n\treturn (milliseconds, {value, signal} = {}) => {\n\t\t// TODO: Use `signal?.throwIfAborted()` when targeting Node.js 18.\n\t\tif (signal?.aborted) {\n\t\t\treturn Promise.reject(createAbortError());\n\t\t}\n\n\t\tlet timeoutId;\n\t\tlet settle;\n\t\tlet rejectFunction;\n\t\tconst clear = defaultClear ?? clearTimeout;\n\n\t\tconst signalListener = () => {\n\t\t\tclear(timeoutId);\n\t\t\trejectFunction(createAbortError());\n\t\t};\n\n\t\tconst cleanup = () => {\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t\t}\n\t\t};\n\n\t\tconst delayPromise = new Promise((resolve, reject) => {\n\t\t\tsettle = () => {\n\t\t\t\tcleanup();\n\t\t\t\tresolve(value);\n\t\t\t};\n\n\t\t\trejectFunction = reject;\n\t\t\ttimeoutId = (defaultSet ?? setTimeout)(settle, milliseconds);\n\t\t});\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t\t}\n\n\t\tclearMethods.set(delayPromise, () => {\n\t\t\tclear(timeoutId);\n\t\t\ttimeoutId = null;\n\t\t\tsettle();\n\t\t});\n\n\t\treturn delayPromise;\n\t};\n}\n\nconst delay = createDelay();\n\nexport default delay;\n\nexport async function rangeDelay(minimum, maximum, options = {}) {\n\treturn delay(randomInteger(minimum, maximum), options);\n}\n\nexport function clearDelay(promise) {\n\tclearMethods.get(promise)?.();\n}\n","import { CodeError } from '@libp2p/interface'\nimport delay from 'delay'\n\nexport interface RateLimiterInit {\n  /**\n   * Number of points\n   *\n   * @default 4\n   */\n  points?: number\n\n  /**\n   * Per seconds\n   *\n   * @default 1\n   */\n  duration?: number\n\n  /**\n   * Block if consumed more than points in current duration for blockDuration seconds\n   *\n   * @default 0\n   */\n  blockDuration?: number\n\n  /**\n   * Execute allowed actions evenly over duration\n   *\n   * @default false\n   */\n  execEvenly?: boolean\n\n  /**\n   * ms, works with execEvenly=true option\n   *\n   * @default duration * 1000 / points\n   */\n  execEvenlyMinDelayMs?: number\n\n  /**\n   * @default rlflx\n   */\n  keyPrefix?: string\n}\n\nexport interface GetKeySecDurationOptions {\n  customDuration?: number\n}\n\nexport interface RateLimiterResult {\n  remainingPoints: number\n  msBeforeNext: number\n  consumedPoints: number\n  isFirstInDuration: boolean\n}\n\nexport interface RateRecord {\n  value: number\n  expiresAt?: Date\n  timeoutId?: ReturnType<typeof setTimeout>\n}\n\nexport class RateLimiter {\n  public readonly memoryStorage: MemoryStorage\n  protected points: number\n  protected duration: number\n  protected blockDuration: number\n  protected execEvenly: boolean\n  protected execEvenlyMinDelayMs: number\n  protected keyPrefix: string\n\n  constructor (opts: RateLimiterInit = {}) {\n    this.points = opts.points ?? 4\n    this.duration = opts.duration ?? 1\n    this.blockDuration = opts.blockDuration ?? 0\n    this.execEvenly = opts.execEvenly ?? false\n    this.execEvenlyMinDelayMs = opts.execEvenlyMinDelayMs ?? (this.duration * 1000 / this.points)\n    this.keyPrefix = opts.keyPrefix ?? 'rlflx'\n    this.memoryStorage = new MemoryStorage()\n  }\n\n  async consume (key: string, pointsToConsume: number = 1, options: GetKeySecDurationOptions = {}): Promise<RateLimiterResult> {\n    const rlKey = this.getKey(key)\n    const secDuration = this._getKeySecDuration(options)\n    let res = this.memoryStorage.incrby(rlKey, pointsToConsume, secDuration)\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0)\n\n    if (res.consumedPoints > this.points) {\n      // Block only first time when consumed more than points\n      if (this.blockDuration > 0 && res.consumedPoints <= (this.points + pointsToConsume)) {\n        // Block key\n        res = this.memoryStorage.set(rlKey, res.consumedPoints, this.blockDuration)\n      }\n\n      throw new CodeError('Rate limit exceeded', 'ERR_RATE_LIMIT_EXCEEDED', res)\n    } else if (this.execEvenly && res.msBeforeNext > 0 && !res.isFirstInDuration) {\n      // Execute evenly\n      let delayMs = Math.ceil(res.msBeforeNext / (res.remainingPoints + 2))\n      if (delayMs < this.execEvenlyMinDelayMs) {\n        delayMs = res.consumedPoints * this.execEvenlyMinDelayMs\n      }\n\n      await delay(delayMs)\n    }\n\n    return res\n  }\n\n  penalty (key: string, points: number = 1, options: GetKeySecDurationOptions = {}): RateLimiterResult {\n    const rlKey = this.getKey(key)\n    const secDuration = this._getKeySecDuration(options)\n    const res = this.memoryStorage.incrby(rlKey, points, secDuration)\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0)\n\n    return res\n  }\n\n  reward (key: string, points: number = 1, options: GetKeySecDurationOptions = {}): RateLimiterResult {\n    const rlKey = this.getKey(key)\n    const secDuration = this._getKeySecDuration(options)\n    const res = this.memoryStorage.incrby(rlKey, -points, secDuration)\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0)\n\n    return res\n  }\n\n  /**\n   * Block any key for secDuration seconds\n   *\n   * @param key\n   * @param secDuration\n   */\n  block (key: string, secDuration: number): RateLimiterResult {\n    const msDuration = secDuration * 1000\n    const initPoints = this.points + 1\n\n    this.memoryStorage.set(this.getKey(key), initPoints, secDuration)\n\n    return {\n      remainingPoints: 0,\n      msBeforeNext: msDuration === 0 ? -1 : msDuration,\n      consumedPoints: initPoints,\n      isFirstInDuration: false\n    }\n  }\n\n  set (key: string, points: number, secDuration: number = 0): RateLimiterResult {\n    const msDuration = (secDuration >= 0 ? secDuration : this.duration) * 1000\n\n    this.memoryStorage.set(this.getKey(key), points, secDuration)\n\n    return {\n      remainingPoints: 0,\n      msBeforeNext: msDuration === 0 ? -1 : msDuration,\n      consumedPoints: points,\n      isFirstInDuration: false\n    }\n  }\n\n  get (key: string): RateLimiterResult | undefined {\n    const res = this.memoryStorage.get(this.getKey(key))\n\n    if (res != null) {\n      res.remainingPoints = Math.max(this.points - res.consumedPoints, 0)\n    }\n\n    return res\n  }\n\n  delete (key: string): void {\n    this.memoryStorage.delete(this.getKey(key))\n  }\n\n  private _getKeySecDuration (options?: GetKeySecDurationOptions): number {\n    if (options?.customDuration != null && options.customDuration >= 0) {\n      return options.customDuration\n    }\n\n    return this.duration\n  }\n\n  getKey (key: string): string {\n    return this.keyPrefix.length > 0 ? `${this.keyPrefix}:${key}` : key\n  }\n\n  parseKey (rlKey: string): string {\n    return rlKey.substring(this.keyPrefix.length)\n  }\n}\n\nclass MemoryStorage {\n  public readonly storage: Map<string, RateRecord>\n\n  constructor () {\n    this.storage = new Map()\n  }\n\n  incrby (key: string, value: number, durationSec: number): RateLimiterResult {\n    const existing = this.storage.get(key)\n\n    if (existing != null) {\n      const msBeforeExpires = existing.expiresAt != null\n        ? existing.expiresAt.getTime() - new Date().getTime()\n        : -1\n\n      if (existing.expiresAt == null || msBeforeExpires > 0) {\n        // Change value\n        existing.value += value\n\n        return {\n          remainingPoints: 0,\n          msBeforeNext: msBeforeExpires,\n          consumedPoints: existing.value,\n          isFirstInDuration: false\n        }\n      }\n\n      return this.set(key, value, durationSec)\n    }\n\n    return this.set(key, value, durationSec)\n  }\n\n  set (key: string, value: number, durationSec: number): RateLimiterResult {\n    const durationMs = durationSec * 1000\n    const existing = this.storage.get(key)\n\n    if (existing != null) {\n      clearTimeout(existing.timeoutId)\n    }\n\n    const record: RateRecord = {\n      value,\n      expiresAt: durationMs > 0 ? new Date(Date.now() + durationMs) : undefined\n    }\n\n    this.storage.set(key, record)\n\n    if (durationMs > 0) {\n      record.timeoutId = setTimeout(() => {\n        this.storage.delete(key)\n      }, durationMs)\n\n      if (record.timeoutId.unref != null) {\n        record.timeoutId.unref()\n      }\n    }\n\n    return {\n      remainingPoints: 0,\n      msBeforeNext: durationMs === 0 ? -1 : durationMs,\n      consumedPoints: record.value,\n      isFirstInDuration: true\n    }\n  }\n\n  get (key: string): RateLimiterResult | undefined {\n    const existing = this.storage.get(key)\n\n    if (existing != null) {\n      const msBeforeExpires = existing.expiresAt != null\n        ? existing.expiresAt.getTime() - new Date().getTime()\n        : -1\n      return {\n        remainingPoints: 0,\n        msBeforeNext: msBeforeExpires,\n        consumedPoints: existing.value,\n        isFirstInDuration: false\n      }\n    }\n  }\n\n  delete (key: string): boolean {\n    const record = this.storage.get(key)\n\n    if (record != null) {\n      if (record.timeoutId != null) {\n        clearTimeout(record.timeoutId)\n      }\n\n      this.storage.delete(key)\n\n      return true\n    }\n    return false\n  }\n}\n","import type { Uint8ArrayList } from 'uint8arraylist'\n\ntype INITIATOR_NAME = 'NEW_STREAM' | 'MESSAGE' | 'CLOSE' | 'RESET'\ntype RECEIVER_NAME = 'MESSAGE' | 'CLOSE' | 'RESET'\ntype NAME = 'NEW_STREAM' | 'MESSAGE_INITIATOR' | 'CLOSE_INITIATOR' | 'RESET_INITIATOR' | 'MESSAGE_RECEIVER' | 'CLOSE_RECEIVER' | 'RESET_RECEIVER'\ntype CODE = 0 | 1 | 2 | 3 | 4 | 5 | 6\n\nexport enum MessageTypes {\n  NEW_STREAM = 0,\n  MESSAGE_RECEIVER = 1,\n  MESSAGE_INITIATOR = 2,\n  CLOSE_RECEIVER = 3,\n  CLOSE_INITIATOR = 4,\n  RESET_RECEIVER = 5,\n  RESET_INITIATOR = 6\n}\n\nexport const MessageTypeNames: Record<CODE, NAME> = Object.freeze({\n  0: 'NEW_STREAM',\n  1: 'MESSAGE_RECEIVER',\n  2: 'MESSAGE_INITIATOR',\n  3: 'CLOSE_RECEIVER',\n  4: 'CLOSE_INITIATOR',\n  5: 'RESET_RECEIVER',\n  6: 'RESET_INITIATOR'\n})\n\nexport const InitiatorMessageTypes: Record<INITIATOR_NAME, CODE> = Object.freeze({\n  NEW_STREAM: MessageTypes.NEW_STREAM,\n  MESSAGE: MessageTypes.MESSAGE_INITIATOR,\n  CLOSE: MessageTypes.CLOSE_INITIATOR,\n  RESET: MessageTypes.RESET_INITIATOR\n})\n\nexport const ReceiverMessageTypes: Record<RECEIVER_NAME, CODE> = Object.freeze({\n  MESSAGE: MessageTypes.MESSAGE_RECEIVER,\n  CLOSE: MessageTypes.CLOSE_RECEIVER,\n  RESET: MessageTypes.RESET_RECEIVER\n})\n\nexport interface NewStreamMessage {\n  id: number\n  type: MessageTypes.NEW_STREAM\n  data: Uint8ArrayList\n}\n\nexport interface MessageReceiverMessage {\n  id: number\n  type: MessageTypes.MESSAGE_RECEIVER\n  data: Uint8ArrayList\n}\n\nexport interface MessageInitiatorMessage {\n  id: number\n  type: MessageTypes.MESSAGE_INITIATOR\n  data: Uint8ArrayList\n}\n\nexport interface CloseReceiverMessage {\n  id: number\n  type: MessageTypes.CLOSE_RECEIVER\n}\n\nexport interface CloseInitiatorMessage {\n  id: number\n  type: MessageTypes.CLOSE_INITIATOR\n}\n\nexport interface ResetReceiverMessage {\n  id: number\n  type: MessageTypes.RESET_RECEIVER\n}\n\nexport interface ResetInitiatorMessage {\n  id: number\n  type: MessageTypes.RESET_INITIATOR\n}\n\nexport type Message = NewStreamMessage | MessageReceiverMessage | MessageInitiatorMessage | CloseReceiverMessage | CloseInitiatorMessage | ResetReceiverMessage | ResetInitiatorMessage\n","import { Uint8ArrayList } from 'uint8arraylist'\nimport { MessageTypeNames, MessageTypes } from './message-types.js'\nimport type { Message } from './message-types.js'\n\nexport const MAX_MSG_SIZE = 1 << 20 // 1MB\nexport const MAX_MSG_QUEUE_SIZE = 4 << 20 // 4MB\n\ninterface MessageHeader {\n  id: number\n  type: keyof typeof MessageTypeNames\n  offset: number\n  length: number\n}\n\nexport class Decoder {\n  private readonly _buffer: Uint8ArrayList\n  private _headerInfo: MessageHeader | null\n  private readonly _maxMessageSize: number\n  private readonly _maxUnprocessedMessageQueueSize: number\n\n  constructor (maxMessageSize: number = MAX_MSG_SIZE, maxUnprocessedMessageQueueSize: number = MAX_MSG_QUEUE_SIZE) {\n    this._buffer = new Uint8ArrayList()\n    this._headerInfo = null\n    this._maxMessageSize = maxMessageSize\n    this._maxUnprocessedMessageQueueSize = maxUnprocessedMessageQueueSize\n  }\n\n  write (chunk: Uint8Array | Uint8ArrayList): Message[] {\n    if (chunk == null || chunk.length === 0) {\n      return []\n    }\n\n    this._buffer.append(chunk)\n\n    if (this._buffer.byteLength > this._maxUnprocessedMessageQueueSize) {\n      throw Object.assign(new Error('unprocessed message queue size too large!'), { code: 'ERR_MSG_QUEUE_TOO_BIG' })\n    }\n\n    const msgs: Message[] = []\n\n    while (this._buffer.length !== 0) {\n      if (this._headerInfo == null) {\n        try {\n          this._headerInfo = this._decodeHeader(this._buffer)\n        } catch (err: any) {\n          if (err.code === 'ERR_MSG_TOO_BIG') {\n            throw err\n          }\n\n          break // We haven't received enough data yet\n        }\n      }\n\n      const { id, type, length, offset } = this._headerInfo\n      const bufferedDataLength = this._buffer.length - offset\n\n      if (bufferedDataLength < length) {\n        break // not enough data yet\n      }\n\n      const msg: any = {\n        id,\n        type\n      }\n\n      if (type === MessageTypes.NEW_STREAM || type === MessageTypes.MESSAGE_INITIATOR || type === MessageTypes.MESSAGE_RECEIVER) {\n        msg.data = this._buffer.sublist(offset, offset + length)\n      }\n\n      msgs.push(msg)\n\n      this._buffer.consume(offset + length)\n      this._headerInfo = null\n    }\n\n    return msgs\n  }\n\n  /**\n   * Attempts to decode the message header from the buffer\n   */\n  _decodeHeader (data: Uint8ArrayList): MessageHeader {\n    const {\n      value: h,\n      offset\n    } = readVarInt(data)\n    const {\n      value: length,\n      offset: end\n    } = readVarInt(data, offset)\n\n    const type = h & 7\n\n    // @ts-expect-error h is a number not a CODE\n    if (MessageTypeNames[type] == null) {\n      throw new Error(`Invalid type received: ${type}`)\n    }\n\n    // test message type varint + data length\n    if (length > this._maxMessageSize) {\n      throw Object.assign(new Error('message size too large!'), { code: 'ERR_MSG_TOO_BIG' })\n    }\n\n    // @ts-expect-error h is a number not a CODE\n    return { id: h >> 3, type, offset: offset + end, length }\n  }\n}\n\nconst MSB = 0x80\nconst REST = 0x7F\n\nexport interface ReadVarIntResult {\n  value: number\n  offset: number\n}\n\nfunction readVarInt (buf: Uint8ArrayList, offset: number = 0): ReadVarIntResult {\n  let res = 0\n  let shift = 0\n  let counter = offset\n  let b: number\n  const l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      offset = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf.get(counter++)\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  offset = counter - offset\n\n  return {\n    value: res,\n    offset\n  }\n}\n","import * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport { type Message, MessageTypes } from './message-types.js'\nimport type { Source } from 'it-stream-types'\n\nconst POOL_SIZE = 10 * 1024\n\nclass Encoder {\n  private _pool: Uint8Array\n  private _poolOffset: number\n\n  constructor () {\n    this._pool = allocUnsafe(POOL_SIZE)\n    this._poolOffset = 0\n  }\n\n  /**\n   * Encodes the given message and adds it to the passed list\n   */\n  write (msg: Message, list: Uint8ArrayList): void {\n    const pool = this._pool\n    let offset = this._poolOffset\n\n    varint.encode(msg.id << 3 | msg.type, pool, offset)\n    offset += varint.encodingLength(msg.id << 3 | msg.type)\n\n    if ((msg.type === MessageTypes.NEW_STREAM || msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) && msg.data != null) {\n      varint.encode(msg.data.length, pool, offset)\n      offset += varint.encodingLength(msg.data.length)\n    } else {\n      varint.encode(0, pool, offset)\n      offset += varint.encodingLength(0)\n    }\n\n    const header = pool.subarray(this._poolOffset, offset)\n\n    if (POOL_SIZE - offset < 100) {\n      this._pool = allocUnsafe(POOL_SIZE)\n      this._poolOffset = 0\n    } else {\n      this._poolOffset = offset\n    }\n\n    list.append(header)\n\n    if ((msg.type === MessageTypes.NEW_STREAM || msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) && msg.data != null) {\n      list.append(msg.data)\n    }\n  }\n}\n\nconst encoder = new Encoder()\n\n/**\n * Encode and yield one or more messages\n */\nexport async function * encode (source: Source<Message>): AsyncGenerator<Uint8Array | Uint8ArrayList, void, undefined> {\n  for await (const message of source) {\n    const list = new Uint8ArrayList()\n    encoder.write(message, list)\n    yield list\n  }\n}\n","import { AbstractStream, type AbstractStreamInit } from '@libp2p/utils/abstract-stream'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { MAX_MSG_SIZE } from './decode.js'\nimport { InitiatorMessageTypes, ReceiverMessageTypes } from './message-types.js'\nimport type { Message } from './message-types.js'\nimport type { ComponentLogger } from '@libp2p/interface'\n\nexport interface Options {\n  id: number\n  send(msg: Message): Promise<void>\n  name?: string\n  onEnd?(err?: Error): void\n  type?: 'initiator' | 'receiver'\n  maxMsgSize?: number\n  logger: ComponentLogger\n}\n\ninterface MplexStreamInit extends AbstractStreamInit {\n  streamId: number\n  name: string\n  send(msg: Message): Promise<void>\n\n  /**\n   * The maximum allowable data size, any data larger than this will be\n   * chunked and sent in multiple data messages\n   */\n  maxDataSize: number\n}\n\nexport class MplexStream extends AbstractStream {\n  private readonly name: string\n  private readonly streamId: number\n  private readonly send: (msg: Message) => Promise<void>\n  private readonly types: Record<string, number>\n  private readonly maxDataSize: number\n\n  constructor (init: MplexStreamInit) {\n    super(init)\n\n    this.types = init.direction === 'outbound' ? InitiatorMessageTypes : ReceiverMessageTypes\n    this.send = init.send\n    this.name = init.name\n    this.streamId = init.streamId\n    this.maxDataSize = init.maxDataSize\n  }\n\n  async sendNewStream (): Promise<void> {\n    await this.send({ id: this.streamId, type: InitiatorMessageTypes.NEW_STREAM, data: new Uint8ArrayList(uint8ArrayFromString(this.name)) })\n  }\n\n  async sendData (data: Uint8ArrayList): Promise<void> {\n    data = data.sublist()\n\n    while (data.byteLength > 0) {\n      const toSend = Math.min(data.byteLength, this.maxDataSize)\n      await this.send({\n        id: this.streamId,\n        type: this.types.MESSAGE,\n        data: data.sublist(0, toSend)\n      })\n\n      data.consume(toSend)\n    }\n  }\n\n  async sendReset (): Promise<void> {\n    await this.send({ id: this.streamId, type: this.types.RESET })\n  }\n\n  async sendCloseWrite (): Promise<void> {\n    await this.send({ id: this.streamId, type: this.types.CLOSE })\n  }\n\n  async sendCloseRead (): Promise<void> {\n    // mplex does not support close read, only close write\n  }\n}\n\nexport function createStream (options: Options): MplexStream {\n  const { id, name, send, onEnd, type = 'initiator', maxMsgSize = MAX_MSG_SIZE } = options\n\n  return new MplexStream({\n    id: type === 'initiator' ? (`i${id}`) : `r${id}`,\n    streamId: id,\n    name: `${name == null ? id : name}`,\n    direction: type === 'initiator' ? 'outbound' : 'inbound',\n    maxDataSize: maxMsgSize,\n    onEnd,\n    send,\n    log: options.logger.forComponent(`libp2p:mplex:stream:${type}:${id}`)\n  })\n}\n","import { CodeError } from '@libp2p/interface'\nimport { closeSource } from '@libp2p/utils/close-source'\nimport { RateLimiter } from '@libp2p/utils/rate-limiter'\nimport { pipe } from 'it-pipe'\nimport { type Pushable, pushable } from 'it-pushable'\nimport { toString as uint8ArrayToString } from 'uint8arrays'\nimport { Decoder } from './decode.js'\nimport { encode } from './encode.js'\nimport { MessageTypes, MessageTypeNames, type Message } from './message-types.js'\nimport { createStream, type MplexStream } from './stream.js'\nimport type { MplexInit } from './index.js'\nimport type { AbortOptions, ComponentLogger, Logger, Stream, StreamMuxer, StreamMuxerInit } from '@libp2p/interface'\nimport type { Sink, Source } from 'it-stream-types'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION = 1024\nconst MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION = 1024\nconst MAX_STREAM_BUFFER_SIZE = 1024 * 1024 * 4 // 4MB\nconst DISCONNECT_THRESHOLD = 5\nconst CLOSE_TIMEOUT = 500\n\nfunction printMessage (msg: Message): any {\n  const output: any = {\n    ...msg,\n    type: `${MessageTypeNames[msg.type]} (${msg.type})`\n  }\n\n  if (msg.type === MessageTypes.NEW_STREAM) {\n    output.data = uint8ArrayToString(msg.data instanceof Uint8Array ? msg.data : msg.data.subarray())\n  }\n\n  if (msg.type === MessageTypes.MESSAGE_INITIATOR || msg.type === MessageTypes.MESSAGE_RECEIVER) {\n    output.data = uint8ArrayToString(msg.data instanceof Uint8Array ? msg.data : msg.data.subarray(), 'base16')\n  }\n\n  return output\n}\n\nexport interface MplexComponents {\n  logger: ComponentLogger\n}\n\ninterface MplexStreamMuxerInit extends MplexInit, StreamMuxerInit {\n  /**\n   * The default timeout to use in ms when shutting down the muxer.\n   */\n  closeTimeout?: number\n}\n\nexport class MplexStreamMuxer implements StreamMuxer {\n  public protocol = '/mplex/6.7.0'\n\n  public sink: Sink<Source<Uint8ArrayList | Uint8Array>, Promise<void>>\n  public source: AsyncGenerator<Uint8ArrayList | Uint8Array>\n\n  private readonly log: Logger\n  private _streamId: number\n  private readonly _streams: { initiators: Map<number, MplexStream>, receivers: Map<number, MplexStream> }\n  private readonly _init: MplexStreamMuxerInit\n  private readonly _source: Pushable<Message>\n  private readonly closeController: AbortController\n  private readonly rateLimiter: RateLimiter\n  private readonly closeTimeout: number\n  private readonly logger: ComponentLogger\n\n  constructor (components: MplexComponents, init?: MplexStreamMuxerInit) {\n    init = init ?? {}\n\n    this.log = components.logger.forComponent('libp2p:mplex')\n    this.logger = components.logger\n    this._streamId = 0\n    this._streams = {\n      /**\n       * Stream to ids map\n       */\n      initiators: new Map<number, MplexStream>(),\n      /**\n       * Stream to ids map\n       */\n      receivers: new Map<number, MplexStream>()\n    }\n    this._init = init\n    this.closeTimeout = init.closeTimeout ?? CLOSE_TIMEOUT\n\n    /**\n     * An iterable sink\n     */\n    this.sink = this._createSink()\n\n    /**\n     * An iterable source\n     */\n    this._source = pushable<Message>({\n      objectMode: true,\n      onEnd: (): void => {\n        // the source has ended, we can't write any more messages to gracefully\n        // close streams so all we can do is destroy them\n        for (const stream of this._streams.initiators.values()) {\n          stream.destroy()\n        }\n\n        for (const stream of this._streams.receivers.values()) {\n          stream.destroy()\n        }\n      }\n    })\n    this.source = pipe(\n      this._source,\n      source => encode(source)\n    )\n\n    /**\n     * Close controller\n     */\n    this.closeController = new AbortController()\n\n    this.rateLimiter = new RateLimiter({\n      points: init.disconnectThreshold ?? DISCONNECT_THRESHOLD,\n      duration: 1\n    })\n  }\n\n  /**\n   * Returns a Map of streams and their ids\n   */\n  get streams (): Stream[] {\n    // Inbound and Outbound streams may have the same ids, so we need to make those unique\n    const streams: Stream[] = []\n    for (const stream of this._streams.initiators.values()) {\n      streams.push(stream)\n    }\n\n    for (const stream of this._streams.receivers.values()) {\n      streams.push(stream)\n    }\n    return streams\n  }\n\n  /**\n   * Initiate a new stream with the given name. If no name is\n   * provided, the id of the stream will be used.\n   */\n  newStream (name?: string): Stream {\n    if (this.closeController.signal.aborted) {\n      throw new Error('Muxer already closed')\n    }\n    const id = this._streamId++\n    name = name == null ? id.toString() : name.toString()\n    const registry = this._streams.initiators\n    return this._newStream({ id, name, type: 'initiator', registry })\n  }\n\n  /**\n   * Close or abort all tracked streams and stop the muxer\n   */\n  async close (options?: AbortOptions): Promise<void> {\n    if (this.closeController.signal.aborted) {\n      return\n    }\n\n    const signal = options?.signal ?? AbortSignal.timeout(this.closeTimeout)\n\n    try {\n      // try to gracefully close all streams\n      await Promise.all(\n        this.streams.map(async s => s.close({\n          signal\n        }))\n      )\n\n      this._source.end()\n\n      // try to gracefully close the muxer\n      await this._source.onEmpty({\n        signal\n      })\n\n      this.closeController.abort()\n    } catch (err: any) {\n      this.abort(err)\n    }\n  }\n\n  abort (err: Error): void {\n    if (this.closeController.signal.aborted) {\n      return\n    }\n\n    this.streams.forEach(s => { s.abort(err) })\n    this.closeController.abort(err)\n  }\n\n  /**\n   * Called whenever an inbound stream is created\n   */\n  _newReceiverStream (options: { id: number, name: string }): MplexStream {\n    const { id, name } = options\n    const registry = this._streams.receivers\n    return this._newStream({ id, name, type: 'receiver', registry })\n  }\n\n  _newStream (options: { id: number, name: string, type: 'initiator' | 'receiver', registry: Map<number, MplexStream> }): MplexStream {\n    const { id, name, type, registry } = options\n\n    this.log('new %s stream %s', type, id)\n\n    if (type === 'initiator' && this._streams.initiators.size === (this._init.maxOutboundStreams ?? MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION)) {\n      throw new CodeError('Too many outbound streams open', 'ERR_TOO_MANY_OUTBOUND_STREAMS')\n    }\n\n    if (registry.has(id)) {\n      throw new Error(`${type} stream ${id} already exists!`)\n    }\n\n    const send = async (msg: Message): Promise<void> => {\n      if (this.log.enabled) {\n        this.log.trace('%s stream %s send', type, id, printMessage(msg))\n      }\n\n      this._source.push(msg)\n    }\n\n    const onEnd = (): void => {\n      this.log('%s stream with id %s and protocol %s ended', type, id, stream.protocol)\n      registry.delete(id)\n\n      if (this._init.onStreamEnd != null) {\n        this._init.onStreamEnd(stream)\n      }\n    }\n\n    const stream = createStream({ id, name, send, type, onEnd, maxMsgSize: this._init.maxMsgSize, logger: this.logger })\n    registry.set(id, stream)\n    return stream\n  }\n\n  /**\n   * Creates a sink with an abortable source. Incoming messages will\n   * also have their size restricted. All messages will be varint decoded.\n   */\n  _createSink (): Sink<Source<Uint8ArrayList | Uint8Array>, Promise<void>> {\n    const sink: Sink<Source<Uint8ArrayList | Uint8Array>, Promise<void>> = async source => {\n      const abortListener = (): void => {\n        closeSource(source, this.log)\n      }\n\n      this.closeController.signal.addEventListener('abort', abortListener)\n\n      try {\n        const decoder = new Decoder(this._init.maxMsgSize, this._init.maxUnprocessedMessageQueueSize)\n\n        for await (const chunk of source) {\n          for (const msg of decoder.write(chunk)) {\n            await this._handleIncoming(msg)\n          }\n        }\n\n        this._source.end()\n      } catch (err: any) {\n        this.log('error in sink', err)\n        this._source.end(err) // End the source with an error\n      } finally {\n        this.closeController.signal.removeEventListener('abort', abortListener)\n      }\n    }\n\n    return sink\n  }\n\n  async _handleIncoming (message: Message): Promise<void> {\n    const { id, type } = message\n\n    if (this.log.enabled) {\n      this.log.trace('incoming message', printMessage(message))\n    }\n\n    // Create a new stream?\n    if (message.type === MessageTypes.NEW_STREAM) {\n      if (this._streams.receivers.size === (this._init.maxInboundStreams ?? MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION)) {\n        this.log('too many inbound streams open')\n\n        // not going to allow this stream, send the reset message manually\n        // instead of setting it up just to tear it down\n        this._source.push({\n          id,\n          type: MessageTypes.RESET_RECEIVER\n        })\n\n        // if we've hit our stream limit, and the remote keeps trying to open\n        // more new streams, if they are doing this very quickly maybe they\n        // are attacking us and we should close the connection\n        try {\n          await this.rateLimiter.consume('new-stream', 1)\n        } catch {\n          this.log('rate limit hit when opening too many new streams over the inbound stream limit - closing remote connection')\n          // since there's no backpressure in mplex, the only thing we can really do to protect ourselves is close the connection\n          this.abort(new Error('Too many open streams'))\n          return\n        }\n\n        return\n      }\n\n      const stream = this._newReceiverStream({ id, name: uint8ArrayToString(message.data instanceof Uint8Array ? message.data : message.data.subarray()) })\n\n      if (this._init.onIncomingStream != null) {\n        this._init.onIncomingStream(stream)\n      }\n\n      return\n    }\n\n    const list = (type & 1) === 1 ? this._streams.initiators : this._streams.receivers\n    const stream = list.get(id)\n\n    if (stream == null) {\n      this.log('missing stream %s for message type %s', id, MessageTypeNames[type])\n\n      // if the remote keeps sending us messages for streams that have been\n      // closed or were never opened they may be attacking us so if they do\n      // this very quickly all we can do is close the connection\n      try {\n        await this.rateLimiter.consume('missing-stream', 1)\n      } catch {\n        this.log('rate limit hit when receiving messages for streams that do not exist - closing remote connection')\n        // since there's no backpressure in mplex, the only thing we can really do to protect ourselves is close the connection\n        this.abort(new Error('Too many messages for missing streams'))\n        return\n      }\n\n      return\n    }\n\n    const maxBufferSize = this._init.maxStreamBufferSize ?? MAX_STREAM_BUFFER_SIZE\n\n    try {\n      switch (type) {\n        case MessageTypes.MESSAGE_INITIATOR:\n        case MessageTypes.MESSAGE_RECEIVER:\n          if (stream.sourceReadableLength() > maxBufferSize) {\n            // Stream buffer has got too large, reset the stream\n            this._source.push({\n              id: message.id,\n              type: type === MessageTypes.MESSAGE_INITIATOR ? MessageTypes.RESET_RECEIVER : MessageTypes.RESET_INITIATOR\n            })\n\n            // Inform the stream consumer they are not fast enough\n            throw new CodeError('Input buffer full - increase Mplex maxBufferSize to accommodate slow consumers', 'ERR_STREAM_INPUT_BUFFER_FULL')\n          }\n\n          // We got data from the remote, push it into our local stream\n          stream.sourcePush(message.data)\n          break\n        case MessageTypes.CLOSE_INITIATOR:\n        case MessageTypes.CLOSE_RECEIVER:\n          // The remote has stopped writing, so we can stop reading\n          stream.remoteCloseWrite()\n          break\n        case MessageTypes.RESET_INITIATOR:\n        case MessageTypes.RESET_RECEIVER:\n          // The remote has errored, stop reading and writing to the stream immediately\n          stream.reset()\n          break\n        default:\n          this.log('unknown message type %s', type)\n      }\n    } catch (err: any) {\n      this.log.error('error while processing message', err)\n      stream.abort(err)\n    }\n  }\n}\n","/**\n * @packageDocumentation\n *\n * This is a [simple stream multiplexer(https://docs.libp2p.io/concepts/multiplex/mplex/) that has been deprecated.\n *\n * Please use [@chainsafe/libp2p-yamux](https://www.npmjs.com/package/@chainsafe/libp2p-yamux) instead.\n *\n * @example\n *\n * ```TypeScript\n * import { mplex } from '@libp2p/mplex'\n * import { pipe } from 'it-pipe'\n *\n * const factory = mplex()\n *\n * const muxer = factory.createStreamMuxer(components, {\n *   onStream: stream => { // Receive a duplex stream from the remote\n *     // ...receive data from the remote and optionally send data back\n *   },\n *   onStreamEnd: stream => {\n *     // ...handle any tracking you may need of stream closures\n *   }\n * })\n *\n * pipe(conn, muxer, conn) // conn is duplex connection to another peer\n *\n * const stream = muxer.newStream() // Create a new duplex stream to the remote\n *\n * // Use the duplex stream to send some data to the remote...\n * pipe([1, 2, 3], stream)\n * ```\n */\n\nimport { MplexStreamMuxer, type MplexComponents } from './mplex.js'\nimport type { StreamMuxer, StreamMuxerFactory, StreamMuxerInit } from '@libp2p/interface'\n\nexport interface MplexInit {\n  /**\n   * The maximum size of message that can be sent in one go in bytes.\n   * Messages larger than this will be split into multiple smaller\n   * messages. If we receive a message larger than this an error will\n   * be thrown and the connection closed. (default: 1MB)\n   */\n  maxMsgSize?: number\n\n  /**\n   * Constrains the size of the unprocessed message queue buffer.\n   * Before messages are deserialized, the raw bytes are buffered to ensure\n   * we have the complete message to deserialized. If the queue gets longer\n   * than this value an error will be thrown and the connection closed.\n   * (default: 4MB)\n   */\n  maxUnprocessedMessageQueueSize?: number\n\n  /**\n   * The maximum number of multiplexed streams that can be open at any\n   * one time. A request to open more than this will have a stream\n   * reset message sent immediately as a response for the newly opened\n   * stream id (default: 1024)\n   */\n  maxInboundStreams?: number\n\n  /**\n   * The maximum number of multiplexed streams that can be open at any\n   * one time. An attempt to open more than this will throw (default: 1024)\n   */\n  maxOutboundStreams?: number\n\n  /**\n   * Incoming stream messages are buffered until processed by the stream\n   * handler. If the buffer reaches this size in bytes the stream will\n   * be reset (default: 4MB)\n   */\n  maxStreamBufferSize?: number\n\n  /**\n   * When `maxInboundStreams` is hit, if the remote continues try to open\n   * more than this many new multiplexed streams per second the connection\n   * will be closed (default: 5)\n   */\n  disconnectThreshold?: number\n}\n\nclass Mplex implements StreamMuxerFactory {\n  public protocol = '/mplex/6.7.0'\n  private readonly _init: MplexInit\n  private readonly components: MplexComponents\n\n  constructor (components: MplexComponents, init: MplexInit = {}) {\n    this.components = components\n    this._init = init\n  }\n\n  createStreamMuxer (init: StreamMuxerInit = {}): StreamMuxer {\n    return new MplexStreamMuxer(this.components, {\n      ...init,\n      ...this._init\n    })\n  }\n}\n\nexport function mplex (init: MplexInit = {}): (components: MplexComponents) => StreamMuxerFactory {\n  return (components) => new Mplex(components, init)\n}\n","/**\n * @packageDocumentation\n *\n * Generate, import, and export PeerIDs.\n *\n * A Peer ID is the SHA-256 [multihash](https://github.com/multiformats/multihash) of a public key.\n *\n * The public key is a base64 encoded string of a protobuf containing an RSA DER buffer. This uses a node buffer to pass the base64 encoded public key protobuf to the multihash for ID generation.\n *\n * @example\n *\n * ```TypeScript\n * import { createEd25519PeerId } from '@libp2p/peer-id-factory'\n *\n * const peerId = await createEd25519PeerId()\n * console.log(peerId.toString())\n * ```\n *\n * ```bash\n * 12D3KooWRm8J3iL796zPFi2EtGGtUJn58AG67gcqzMFHZnnsTzqD\n * ```\n */\n\nimport { generateKeyPair, marshalPrivateKey, unmarshalPrivateKey, marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys'\nimport { peerIdFromKeys, peerIdFromBytes } from '@libp2p/peer-id'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { PeerIdProto } from './proto.js'\nimport type { PublicKey, PrivateKey, RSAPeerId, Ed25519PeerId, Secp256k1PeerId, PeerId } from '@libp2p/interface'\n\nexport const createEd25519PeerId = async (): Promise<Ed25519PeerId> => {\n  const key = await generateKeyPair('Ed25519')\n  const id = await createFromPrivKey(key)\n\n  if (id.type === 'Ed25519') {\n    return id\n  }\n\n  throw new Error(`Generated unexpected PeerId type \"${id.type}\"`)\n}\n\nexport const createSecp256k1PeerId = async (): Promise<Secp256k1PeerId> => {\n  const key = await generateKeyPair('secp256k1')\n  const id = await createFromPrivKey(key)\n\n  if (id.type === 'secp256k1') {\n    return id\n  }\n\n  throw new Error(`Generated unexpected PeerId type \"${id.type}\"`)\n}\n\nexport const createRSAPeerId = async (opts?: { bits: number }): Promise<RSAPeerId> => {\n  const key = await generateKeyPair('RSA', opts?.bits ?? 2048)\n  const id = await createFromPrivKey(key)\n\n  if (id.type === 'RSA') {\n    return id\n  }\n\n  throw new Error(`Generated unexpected PeerId type \"${id.type}\"`)\n}\n\nexport async function createFromPubKey (publicKey: PublicKey): Promise<PeerId> {\n  return peerIdFromKeys(marshalPublicKey(publicKey))\n}\n\nexport async function createFromPrivKey (privateKey: PrivateKey): Promise<PeerId> {\n  return peerIdFromKeys(marshalPublicKey(privateKey.public), marshalPrivateKey(privateKey))\n}\n\nexport function exportToProtobuf (peerId: RSAPeerId | Ed25519PeerId | Secp256k1PeerId, excludePrivateKey?: boolean): Uint8Array {\n  return PeerIdProto.encode({\n    id: peerId.multihash.bytes,\n    pubKey: peerId.publicKey,\n    privKey: excludePrivateKey === true || peerId.privateKey == null ? undefined : peerId.privateKey\n  })\n}\n\nexport async function createFromProtobuf (buf: Uint8Array): Promise<PeerId> {\n  const {\n    id,\n    privKey,\n    pubKey\n  } = PeerIdProto.decode(buf)\n\n  return createFromParts(\n    id ?? new Uint8Array(0),\n    privKey,\n    pubKey\n  )\n}\n\nexport async function createFromJSON (obj: { id: string, privKey?: string, pubKey?: string }): Promise<PeerId> {\n  return createFromParts(\n    uint8ArrayFromString(obj.id, 'base58btc'),\n    obj.privKey != null ? uint8ArrayFromString(obj.privKey, 'base64pad') : undefined,\n    obj.pubKey != null ? uint8ArrayFromString(obj.pubKey, 'base64pad') : undefined\n  )\n}\n\nasync function createFromParts (multihash: Uint8Array, privKey?: Uint8Array, pubKey?: Uint8Array): Promise<PeerId> {\n  if (privKey != null) {\n    const key = await unmarshalPrivateKey(privKey)\n\n    return createFromPrivKey(key)\n  } else if (pubKey != null) {\n    const key = unmarshalPublicKey(pubKey)\n\n    return createFromPubKey(key)\n  }\n\n  return peerIdFromBytes(multihash)\n}\n","import { isIPv4, isIPv6 } from '@chainsafe/is-ip'\nimport { Netmask } from 'netmask'\n\nconst PRIVATE_IP_RANGES = [\n  '0.0.0.0/8',\n  '10.0.0.0/8',\n  '100.64.0.0/10',\n  '127.0.0.0/8',\n  '169.254.0.0/16',\n  '172.16.0.0/12',\n  '192.0.0.0/24',\n  '192.0.0.0/29',\n  '192.0.0.8/32',\n  '192.0.0.9/32',\n  '192.0.0.10/32',\n  '192.0.0.170/32',\n  '192.0.0.171/32',\n  '192.0.2.0/24',\n  '192.31.196.0/24',\n  '192.52.193.0/24',\n  '192.88.99.0/24',\n  '192.168.0.0/16',\n  '192.175.48.0/24',\n  '198.18.0.0/15',\n  '198.51.100.0/24',\n  '203.0.113.0/24',\n  '240.0.0.0/4',\n  '255.255.255.255/32'\n]\n\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ipRange => new Netmask(ipRange))\n\nfunction ipv4Check (ipAddr: string): boolean {\n  for (const r of NETMASK_RANGES) {\n    if (r.contains(ipAddr)) return true\n  }\n\n  return false\n}\n\nfunction ipv6Check (ipAddr: string): boolean {\n  return /^::$/.test(ipAddr) ||\n    /^::1$/.test(ipAddr) ||\n    /^::f{4}:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ipAddr) ||\n    /^::f{4}:0.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ipAddr) ||\n    /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ipAddr) ||\n    /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n    /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n    /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n    /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n    /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ipAddr) ||\n    /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ipAddr) ||\n    /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ipAddr) ||\n    /^ff([0-9a-fA-F]{2,2}):/i.test(ipAddr)\n}\n\nexport function isPrivateIp (ip: string): boolean | undefined {\n  if (isIPv4(ip)) return ipv4Check(ip)\n  else if (isIPv6(ip)) return ipv6Check(ip)\n  else return undefined\n}\n","/**\n * @packageDocumentation\n *\n * Return the first value in an (async)iterable\n *\n * @example\n *\n * ```javascript\n * import first from 'it-first'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const res = first(values)\n *\n * console.info(res) // 0\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import first from 'it-first'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const res = await first(values())\n *\n * console.info(res) // 0\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`\n */\nfunction first <T> (source: Iterable<T>): T | undefined\nfunction first <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T | undefined>\nfunction first <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T | undefined> | T | undefined {\n  if (isAsyncIterable(source)) {\n    return (async () => {\n      for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n        return entry\n      }\n\n      return undefined\n    })()\n  }\n\n  for (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nexport default first\n","/**\n * @packageDocumentation\n *\n * Convert one value from an (async)iterator into another.\n *\n * @example\n *\n * ```javascript\n * import map from 'it-map'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const result = map(values, (val) => val++)\n *\n * console.info(result) // [1, 2, 3, 4, 5]\n * ```\n *\n * Async sources and transforms must be awaited:\n *\n * ```javascript\n * import map from 'it-map'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const result = await map(values(), async (val) => val++)\n *\n * console.info(result) // [1, 2, 3, 4, 5]\n * ```\n */\n\nimport peek from 'it-peekable'\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function\n */\nfunction map <I, O> (source: Iterable<I>, func: (val: I) => Promise<O>): AsyncGenerator<O, void, undefined>\nfunction map <I, O> (source: Iterable<I>, func: (val: I) => O): Generator<O, void, undefined>\nfunction map <I, O> (source: AsyncIterable<I> | Iterable<I>, func: (val: I) => O | Promise<O>): AsyncGenerator<O, void, undefined>\nfunction map <I, O> (source: AsyncIterable<I> | Iterable<I>, func: (val: I) => O | Promise<O>): AsyncGenerator<O, void, undefined> | Generator<O, void, undefined> {\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const val of source) {\n        yield func(val)\n      }\n    })()\n  }\n\n  // if mapping function returns a promise we have to return an async generator\n  const peekable = peek(source)\n  const { value, done } = peekable.next()\n\n  if (done === true) {\n    return (function * () {}())\n  }\n\n  const res = func(value)\n\n  // @ts-expect-error .then is not present on O\n  if (typeof res.then === 'function') {\n    return (async function * () {\n      yield await res\n\n      for await (const val of peekable) {\n        yield func(val)\n      }\n    })()\n  }\n\n  const fn = func as (val: I) => O\n\n  return (function * () {\n    yield res as O\n\n    for (const val of peekable) {\n      yield fn(val)\n    }\n  })()\n}\n\nexport default map\n","/**\n * @packageDocumentation\n *\n * Takes an (async) iterable that emits promise-returning functions, invokes them in parallel up to the concurrency limit and emits the results as they become available, optionally in the same order as the input\n *\n * @example\n *\n * ```javascript\n * import parallel from 'it-parallel'\n * import all from 'it-all'\n * import delay from 'delay'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const input = [\n *   async () => {\n *     console.info('start 1')\n *     await delay(500)\n *\n *     console.info('end 1')\n *     return 1\n *   },\n *   async () => {\n *     console.info('start 2')\n *     await delay(200)\n *\n *     console.info('end 2')\n *     return 2\n *   },\n *   async () => {\n *     console.info('start 3')\n *     await delay(100)\n *\n *     console.info('end 3')\n *     return 3\n *   }\n * ]\n *\n * const result = await all(parallel(input, {\n *   concurrency: 2\n * }))\n *\n * // output:\n * // start 1\n * // start 2\n * // end 2\n * // start 3\n * // end 3\n * // end 1\n *\n * console.info(result) // [2, 3, 1]\n * ```\n *\n * If order is important, pass `ordered: true` as an option:\n *\n * ```javascript\n * const result = await all(parallel(input, {\n *   concurrency: 2,\n *   ordered: true\n * }))\n *\n * // output:\n * // start 1\n * // start 2\n * // end 2\n * // start 3\n * // end 3\n * // end 1\n *\n * console.info(result) // [1, 2, 3]\n * ```\n */\n\nimport defer from 'p-defer'\n\ninterface Operation<T> {\n  done: boolean\n  ok: boolean\n  err: Error\n  value: T\n}\n\nconst CustomEvent = globalThis.CustomEvent ?? Event\n\nexport interface ParallelOptions {\n  /**\n   * How many jobs to execute in parallel (default: )\n   */\n  concurrency?: number\n  ordered?: boolean\n}\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n */\nexport default async function * parallel <T> (source: Iterable<() => Promise<T>> | AsyncIterable<() => Promise<T>>, options: ParallelOptions = {}): AsyncGenerator<T, void, undefined> {\n  let concurrency = options.concurrency ?? Infinity\n\n  if (concurrency < 1) {\n    concurrency = Infinity\n  }\n\n  const ordered = options.ordered == null ? false : options.ordered\n  const emitter = new EventTarget()\n\n  const ops: Array<Operation<T>> = []\n  let slotAvailable = defer()\n  let resultAvailable = defer()\n  let sourceFinished = false\n  let sourceErr: Error | undefined\n  let opErred = false\n\n  emitter.addEventListener('task-complete', () => {\n    resultAvailable.resolve()\n  })\n\n  void Promise.resolve().then(async () => {\n    try {\n      for await (const task of source) {\n        if (ops.length === concurrency) {\n          slotAvailable = defer()\n          await slotAvailable.promise\n        }\n\n        if (opErred) {\n          break\n        }\n\n        const op: any = {\n          done: false\n        }\n        ops.push(op)\n\n        task()\n          .then(result => {\n            op.done = true\n            op.ok = true\n            op.value = result\n            emitter.dispatchEvent(new CustomEvent('task-complete'))\n          }, err => {\n            op.done = true\n            op.err = err\n            emitter.dispatchEvent(new CustomEvent('task-complete'))\n          })\n      }\n\n      sourceFinished = true\n      emitter.dispatchEvent(new CustomEvent('task-complete'))\n    } catch (err: any) {\n      sourceErr = err\n      emitter.dispatchEvent(new CustomEvent('task-complete'))\n    }\n  })\n\n  function valuesAvailable (): boolean {\n    if (ordered) {\n      return ops[0]?.done\n    }\n\n    return Boolean(ops.find(op => op.done))\n  }\n\n  function * yieldOrderedValues (): Generator<T, void, unknown> {\n    while ((ops.length > 0) && ops[0].done) {\n      const op = ops[0]\n      ops.shift()\n\n      if (op.ok) {\n        yield op.value\n      } else {\n        // allow the source to exit\n        opErred = true\n        slotAvailable.resolve()\n\n        throw op.err\n      }\n\n      slotAvailable.resolve()\n    }\n  }\n\n  function * yieldUnOrderedValues (): Generator<T, void, unknown> {\n    // more values can become available while we wait for `yield`\n    // to return control to this function\n    while (valuesAvailable()) {\n      for (let i = 0; i < ops.length; i++) {\n        if (ops[i].done) {\n          const op = ops[i]\n          ops.splice(i, 1)\n          i--\n\n          if (op.ok) {\n            yield op.value\n          } else {\n            opErred = true\n            slotAvailable.resolve()\n\n            throw op.err\n          }\n\n          slotAvailable.resolve()\n        }\n      }\n    }\n  }\n\n  while (true) {\n    if (!valuesAvailable()) {\n      resultAvailable = defer()\n      await resultAvailable.promise\n    }\n\n    if (sourceErr != null) {\n      // the source threw an error, propagate it\n      throw sourceErr\n    }\n\n    if (ordered) {\n      yield * yieldOrderedValues()\n    } else {\n      yield * yieldUnOrderedValues()\n    }\n\n    if (sourceFinished && ops.length === 0) {\n      // not waiting for any results and no more tasks so we are done\n      break\n    }\n  }\n}\n","/**\n * The prefix to use in the protocol\n */\nexport const PROTOCOL_PREFIX = 'libp2p'\n\n/**\n * The name to use in the protocol\n */\nexport const PROTOCOL_NAME = 'autonat'\n\n/**\n * The version to use in the protocol\n */\nexport const PROTOCOL_VERSION = '1.0.0'\nexport const TIMEOUT = 30000\nexport const STARTUP_DELAY = 5000\nexport const REFRESH_INTERVAL = 60000\nexport const MAX_INBOUND_STREAMS = 1\nexport const MAX_OUTBOUND_STREAMS = 1\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Message {\n  type?: Message.MessageType\n  dial?: Message.Dial\n  dialResponse?: Message.DialResponse\n}\n\nexport namespace Message {\n  export enum MessageType {\n    DIAL = 'DIAL',\n    DIAL_RESPONSE = 'DIAL_RESPONSE'\n  }\n\n  enum __MessageTypeValues {\n    DIAL = 0,\n    DIAL_RESPONSE = 1\n  }\n\n  export namespace MessageType {\n    export const codec = (): Codec<MessageType> => {\n      return enumeration<MessageType>(__MessageTypeValues)\n    }\n  }\n\n  export enum ResponseStatus {\n    OK = 'OK',\n    E_DIAL_ERROR = 'E_DIAL_ERROR',\n    E_DIAL_REFUSED = 'E_DIAL_REFUSED',\n    E_BAD_REQUEST = 'E_BAD_REQUEST',\n    E_INTERNAL_ERROR = 'E_INTERNAL_ERROR'\n  }\n\n  enum __ResponseStatusValues {\n    OK = 0,\n    E_DIAL_ERROR = 100,\n    E_DIAL_REFUSED = 101,\n    E_BAD_REQUEST = 200,\n    E_INTERNAL_ERROR = 300\n  }\n\n  export namespace ResponseStatus {\n    export const codec = (): Codec<ResponseStatus> => {\n      return enumeration<ResponseStatus>(__ResponseStatusValues)\n    }\n  }\n\n  export interface PeerInfo {\n    id?: Uint8Array\n    addrs: Uint8Array[]\n  }\n\n  export namespace PeerInfo {\n    let _codec: Codec<PeerInfo>\n\n    export const codec = (): Codec<PeerInfo> => {\n      if (_codec == null) {\n        _codec = message<PeerInfo>((obj, w, opts = {}) => {\n          if (opts.lengthDelimited !== false) {\n            w.fork()\n          }\n\n          if (obj.id != null) {\n            w.uint32(10)\n            w.bytes(obj.id)\n          }\n\n          if (obj.addrs != null) {\n            for (const value of obj.addrs) {\n              w.uint32(18)\n              w.bytes(value)\n            }\n          }\n\n          if (opts.lengthDelimited !== false) {\n            w.ldelim()\n          }\n        }, (reader, length) => {\n          const obj: any = {\n            addrs: []\n          }\n\n          const end = length == null ? reader.len : reader.pos + length\n\n          while (reader.pos < end) {\n            const tag = reader.uint32()\n\n            switch (tag >>> 3) {\n              case 1:\n                obj.id = reader.bytes()\n                break\n              case 2:\n                obj.addrs.push(reader.bytes())\n                break\n              default:\n                reader.skipType(tag & 7)\n                break\n            }\n          }\n\n          return obj\n        })\n      }\n\n      return _codec\n    }\n\n    export const encode = (obj: Partial<PeerInfo>): Uint8Array => {\n      return encodeMessage(obj, PeerInfo.codec())\n    }\n\n    export const decode = (buf: Uint8Array | Uint8ArrayList): PeerInfo => {\n      return decodeMessage(buf, PeerInfo.codec())\n    }\n  }\n\n  export interface Dial {\n    peer?: Message.PeerInfo\n  }\n\n  export namespace Dial {\n    let _codec: Codec<Dial>\n\n    export const codec = (): Codec<Dial> => {\n      if (_codec == null) {\n        _codec = message<Dial>((obj, w, opts = {}) => {\n          if (opts.lengthDelimited !== false) {\n            w.fork()\n          }\n\n          if (obj.peer != null) {\n            w.uint32(10)\n            Message.PeerInfo.codec().encode(obj.peer, w)\n          }\n\n          if (opts.lengthDelimited !== false) {\n            w.ldelim()\n          }\n        }, (reader, length) => {\n          const obj: any = {}\n\n          const end = length == null ? reader.len : reader.pos + length\n\n          while (reader.pos < end) {\n            const tag = reader.uint32()\n\n            switch (tag >>> 3) {\n              case 1:\n                obj.peer = Message.PeerInfo.codec().decode(reader, reader.uint32())\n                break\n              default:\n                reader.skipType(tag & 7)\n                break\n            }\n          }\n\n          return obj\n        })\n      }\n\n      return _codec\n    }\n\n    export const encode = (obj: Partial<Dial>): Uint8Array => {\n      return encodeMessage(obj, Dial.codec())\n    }\n\n    export const decode = (buf: Uint8Array | Uint8ArrayList): Dial => {\n      return decodeMessage(buf, Dial.codec())\n    }\n  }\n\n  export interface DialResponse {\n    status?: Message.ResponseStatus\n    statusText?: string\n    addr?: Uint8Array\n  }\n\n  export namespace DialResponse {\n    let _codec: Codec<DialResponse>\n\n    export const codec = (): Codec<DialResponse> => {\n      if (_codec == null) {\n        _codec = message<DialResponse>((obj, w, opts = {}) => {\n          if (opts.lengthDelimited !== false) {\n            w.fork()\n          }\n\n          if (obj.status != null) {\n            w.uint32(8)\n            Message.ResponseStatus.codec().encode(obj.status, w)\n          }\n\n          if (obj.statusText != null) {\n            w.uint32(18)\n            w.string(obj.statusText)\n          }\n\n          if (obj.addr != null) {\n            w.uint32(26)\n            w.bytes(obj.addr)\n          }\n\n          if (opts.lengthDelimited !== false) {\n            w.ldelim()\n          }\n        }, (reader, length) => {\n          const obj: any = {}\n\n          const end = length == null ? reader.len : reader.pos + length\n\n          while (reader.pos < end) {\n            const tag = reader.uint32()\n\n            switch (tag >>> 3) {\n              case 1:\n                obj.status = Message.ResponseStatus.codec().decode(reader)\n                break\n              case 2:\n                obj.statusText = reader.string()\n                break\n              case 3:\n                obj.addr = reader.bytes()\n                break\n              default:\n                reader.skipType(tag & 7)\n                break\n            }\n          }\n\n          return obj\n        })\n      }\n\n      return _codec\n    }\n\n    export const encode = (obj: Partial<DialResponse>): Uint8Array => {\n      return encodeMessage(obj, DialResponse.codec())\n    }\n\n    export const decode = (buf: Uint8Array | Uint8ArrayList): DialResponse => {\n      return decodeMessage(buf, DialResponse.codec())\n    }\n  }\n\n  let _codec: Codec<Message>\n\n  export const codec = (): Codec<Message> => {\n    if (_codec == null) {\n      _codec = message<Message>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.type != null) {\n          w.uint32(8)\n          Message.MessageType.codec().encode(obj.type, w)\n        }\n\n        if (obj.dial != null) {\n          w.uint32(18)\n          Message.Dial.codec().encode(obj.dial, w)\n        }\n\n        if (obj.dialResponse != null) {\n          w.uint32(26)\n          Message.DialResponse.codec().encode(obj.dialResponse, w)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.type = Message.MessageType.codec().decode(reader)\n              break\n            case 2:\n              obj.dial = Message.Dial.codec().decode(reader, reader.uint32())\n              break\n            case 3:\n              obj.dialResponse = Message.DialResponse.codec().decode(reader, reader.uint32())\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Message>): Uint8Array => {\n    return encodeMessage(obj, Message.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Message => {\n    return decodeMessage(buf, Message.codec())\n  }\n}\n","import { CodeError, ERR_TIMEOUT, setMaxListeners } from '@libp2p/interface'\nimport { peerIdFromBytes } from '@libp2p/peer-id'\nimport { createEd25519PeerId } from '@libp2p/peer-id-factory'\nimport { isPrivateIp } from '@libp2p/utils/private-ip'\nimport { multiaddr, protocols } from '@multiformats/multiaddr'\nimport first from 'it-first'\nimport * as lp from 'it-length-prefixed'\nimport map from 'it-map'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport {\n  MAX_INBOUND_STREAMS,\n  MAX_OUTBOUND_STREAMS,\n  PROTOCOL_NAME, PROTOCOL_PREFIX, PROTOCOL_VERSION, REFRESH_INTERVAL, STARTUP_DELAY, TIMEOUT\n} from './constants.js'\nimport { Message } from './pb/index.js'\nimport type { AutoNATComponents, AutoNATServiceInit } from './index.js'\nimport type { Logger, Connection, PeerId, PeerInfo, Startable } from '@libp2p/interface'\nimport type { IncomingStreamData } from '@libp2p/interface-internal'\n\n// if more than 3 peers manage to dial us on what we believe to be our external\n// IP then we are convinced that it is, in fact, our external IP\n// https://github.com/libp2p/specs/blob/master/autonat/README.md#autonat-protocol\nconst REQUIRED_SUCCESSFUL_DIALS = 4\n\nexport class AutoNATService implements Startable {\n  private readonly components: AutoNATComponents\n  private readonly startupDelay: number\n  private readonly refreshInterval: number\n  private readonly protocol: string\n  private readonly timeout: number\n  private readonly maxInboundStreams: number\n  private readonly maxOutboundStreams: number\n  private verifyAddressTimeout?: ReturnType<typeof setTimeout>\n  private started: boolean\n  private readonly log: Logger\n\n  constructor (components: AutoNATComponents, init: AutoNATServiceInit) {\n    this.components = components\n    this.log = components.logger.forComponent('libp2p:autonat')\n    this.started = false\n    this.protocol = `/${init.protocolPrefix ?? PROTOCOL_PREFIX}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`\n    this.timeout = init.timeout ?? TIMEOUT\n    this.maxInboundStreams = init.maxInboundStreams ?? MAX_INBOUND_STREAMS\n    this.maxOutboundStreams = init.maxOutboundStreams ?? MAX_OUTBOUND_STREAMS\n    this.startupDelay = init.startupDelay ?? STARTUP_DELAY\n    this.refreshInterval = init.refreshInterval ?? REFRESH_INTERVAL\n    this._verifyExternalAddresses = this._verifyExternalAddresses.bind(this)\n  }\n\n  isStarted (): boolean {\n    return this.started\n  }\n\n  async start (): Promise<void> {\n    if (this.started) {\n      return\n    }\n\n    await this.components.registrar.handle(this.protocol, (data) => {\n      void this.handleIncomingAutonatStream(data)\n        .catch(err => {\n          this.log.error('error handling incoming autonat stream', err)\n        })\n    }, {\n      maxInboundStreams: this.maxInboundStreams,\n      maxOutboundStreams: this.maxOutboundStreams\n    })\n\n    this.verifyAddressTimeout = setTimeout(this._verifyExternalAddresses, this.startupDelay)\n\n    this.started = true\n  }\n\n  async stop (): Promise<void> {\n    await this.components.registrar.unhandle(this.protocol)\n    clearTimeout(this.verifyAddressTimeout)\n\n    this.started = false\n  }\n\n  /**\n   * Handle an incoming AutoNAT request\n   */\n  async handleIncomingAutonatStream (data: IncomingStreamData): Promise<void> {\n    const signal = AbortSignal.timeout(this.timeout)\n\n    const onAbort = (): void => {\n      data.stream.abort(new CodeError('handleIncomingAutonatStream timeout', ERR_TIMEOUT))\n    }\n\n    signal.addEventListener('abort', onAbort, { once: true })\n\n    // this controller may be used while dialing lots of peers so prevent MaxListenersExceededWarning\n    // appearing in the console\n    setMaxListeners(Infinity, signal)\n\n    const ourHosts = this.components.addressManager.getAddresses()\n      .map(ma => ma.toOptions().host)\n\n    try {\n      const self = this\n\n      await pipe(\n        data.stream,\n        (source) => lp.decode(source),\n        async function * (stream) {\n          const buf = await first(stream)\n\n          if (buf == null) {\n            self.log('no message received')\n            yield Message.encode({\n              type: Message.MessageType.DIAL_RESPONSE,\n              dialResponse: {\n                status: Message.ResponseStatus.E_BAD_REQUEST,\n                statusText: 'No message was sent'\n              }\n            })\n\n            return\n          }\n\n          let request: Message\n\n          try {\n            request = Message.decode(buf)\n          } catch (err) {\n            self.log.error('could not decode message', err)\n\n            yield Message.encode({\n              type: Message.MessageType.DIAL_RESPONSE,\n              dialResponse: {\n                status: Message.ResponseStatus.E_BAD_REQUEST,\n                statusText: 'Could not decode message'\n              }\n            })\n\n            return\n          }\n\n          const dialRequest = request.dial\n\n          if (dialRequest == null) {\n            self.log.error('dial was missing from message')\n\n            yield Message.encode({\n              type: Message.MessageType.DIAL_RESPONSE,\n              dialResponse: {\n                status: Message.ResponseStatus.E_BAD_REQUEST,\n                statusText: 'No Dial message found in message'\n              }\n            })\n\n            return\n          }\n\n          let peerId: PeerId\n          const peer = dialRequest.peer\n\n          if (peer == null || peer.id == null) {\n            self.log.error('PeerId missing from message')\n\n            yield Message.encode({\n              type: Message.MessageType.DIAL_RESPONSE,\n              dialResponse: {\n                status: Message.ResponseStatus.E_BAD_REQUEST,\n                statusText: 'missing peer info'\n              }\n            })\n\n            return\n          }\n\n          try {\n            peerId = peerIdFromBytes(peer.id)\n          } catch (err) {\n            self.log.error('invalid PeerId', err)\n\n            yield Message.encode({\n              type: Message.MessageType.DIAL_RESPONSE,\n              dialResponse: {\n                status: Message.ResponseStatus.E_BAD_REQUEST,\n                statusText: 'bad peer id'\n              }\n            })\n\n            return\n          }\n\n          self.log('incoming request from %p', peerId)\n\n          // reject any dial requests that arrive via relays\n          if (!data.connection.remotePeer.equals(peerId)) {\n            self.log('target peer %p did not equal sending peer %p', peerId, data.connection.remotePeer)\n\n            yield Message.encode({\n              type: Message.MessageType.DIAL_RESPONSE,\n              dialResponse: {\n                status: Message.ResponseStatus.E_BAD_REQUEST,\n                statusText: 'peer id mismatch'\n              }\n            })\n\n            return\n          }\n\n          // get a list of multiaddrs to dial\n          const multiaddrs = peer.addrs\n            .map(buf => multiaddr(buf))\n            .filter(ma => {\n              const isFromSameHost = ma.toOptions().host === data.connection.remoteAddr.toOptions().host\n\n              self.log.trace('request to dial %a was sent from %a is same host %s', ma, data.connection.remoteAddr, isFromSameHost)\n              // skip any Multiaddrs where the target node's IP does not match the sending node's IP\n              return isFromSameHost\n            })\n            .filter(ma => {\n              const host = ma.toOptions().host\n              const isPublicIp = !(isPrivateIp(host) ?? false)\n\n              self.log.trace('host %s was public %s', host, isPublicIp)\n              // don't try to dial private addresses\n              return isPublicIp\n            })\n            .filter(ma => {\n              const host = ma.toOptions().host\n              const isNotOurHost = !ourHosts.includes(host)\n\n              self.log.trace('host %s was not our host %s', host, isNotOurHost)\n              // don't try to dial nodes on the same host as us\n              return isNotOurHost\n            })\n            .filter(ma => {\n              const isSupportedTransport = Boolean(self.components.transportManager.transportForMultiaddr(ma))\n\n              self.log.trace('transport for %a is supported %s', ma, isSupportedTransport)\n              // skip any Multiaddrs that have transports we do not support\n              return isSupportedTransport\n            })\n            .map(ma => {\n              if (ma.getPeerId() == null) {\n                // make sure we have the PeerId as part of the Multiaddr\n                ma = ma.encapsulate(`/p2p/${peerId.toString()}`)\n              }\n\n              return ma\n            })\n\n          // make sure we have something to dial\n          if (multiaddrs.length === 0) {\n            self.log('no valid multiaddrs for %p in message', peerId)\n\n            yield Message.encode({\n              type: Message.MessageType.DIAL_RESPONSE,\n              dialResponse: {\n                status: Message.ResponseStatus.E_DIAL_REFUSED,\n                statusText: 'no dialable addresses'\n              }\n            })\n\n            return\n          }\n\n          self.log('dial multiaddrs %s for peer %p', multiaddrs.map(ma => ma.toString()).join(', '), peerId)\n\n          let errorMessage = ''\n          let lastMultiaddr = multiaddrs[0]\n\n          for await (const multiaddr of multiaddrs) {\n            let connection: Connection | undefined\n            lastMultiaddr = multiaddr\n\n            try {\n              connection = await self.components.connectionManager.openConnection(multiaddr, {\n                signal\n              })\n\n              if (!connection.remoteAddr.equals(multiaddr)) {\n                self.log.error('tried to dial %a but dialed %a', multiaddr, connection.remoteAddr)\n                throw new Error('Unexpected remote address')\n              }\n\n              self.log('Success %p', peerId)\n\n              yield Message.encode({\n                type: Message.MessageType.DIAL_RESPONSE,\n                dialResponse: {\n                  status: Message.ResponseStatus.OK,\n                  addr: connection.remoteAddr.decapsulateCode(protocols('p2p').code).bytes\n                }\n              })\n\n              return\n            } catch (err: any) {\n              self.log('could not dial %p', peerId, err)\n              errorMessage = err.message\n            } finally {\n              if (connection != null) {\n                await connection.close()\n              }\n            }\n          }\n\n          yield Message.encode({\n            type: Message.MessageType.DIAL_RESPONSE,\n            dialResponse: {\n              status: Message.ResponseStatus.E_DIAL_ERROR,\n              statusText: errorMessage,\n              addr: lastMultiaddr.bytes\n            }\n          })\n        },\n        (source) => lp.encode(source),\n        data.stream\n      )\n    } catch (err) {\n      this.log.error('error handling incoming autonat stream', err)\n    } finally {\n      signal.removeEventListener('abort', onAbort)\n    }\n  }\n\n  _verifyExternalAddresses (): void {\n    void this.verifyExternalAddresses()\n      .catch(err => {\n        this.log.error('error verifying external address', err)\n      })\n  }\n\n  /**\n   * Our multicodec topology noticed a new peer that supports autonat\n   */\n  async verifyExternalAddresses (): Promise<void> {\n    clearTimeout(this.verifyAddressTimeout)\n\n    // Do not try to push if we are not running\n    if (!this.isStarted()) {\n      return\n    }\n\n    const addressManager = this.components.addressManager\n\n    const multiaddrs = addressManager.getObservedAddrs()\n      .filter(ma => {\n        const options = ma.toOptions()\n\n        return !(isPrivateIp(options.host) ?? false)\n      })\n\n    if (multiaddrs.length === 0) {\n      this.log('no public addresses found, not requesting verification')\n      this.verifyAddressTimeout = setTimeout(this._verifyExternalAddresses, this.refreshInterval)\n\n      return\n    }\n\n    const signal = AbortSignal.timeout(this.timeout)\n\n    // this controller may be used while dialing lots of peers so prevent MaxListenersExceededWarning\n    // appearing in the console\n    setMaxListeners(Infinity, signal)\n\n    const self = this\n\n    try {\n      this.log('verify multiaddrs %s', multiaddrs.map(ma => ma.toString()).join(', '))\n\n      const request = Message.encode({\n        type: Message.MessageType.DIAL,\n        dial: {\n          peer: {\n            id: this.components.peerId.toBytes(),\n            addrs: multiaddrs.map(map => map.bytes)\n          }\n        }\n      })\n      // find some random peers\n      const randomPeer = await createEd25519PeerId()\n      const randomCid = randomPeer.toBytes()\n\n      const results: Record<string, { success: number, failure: number }> = {}\n      const networkSegments: string[] = []\n\n      const verifyAddress = async (peer: PeerInfo): Promise<Message.DialResponse | undefined> => {\n        let onAbort = (): void => {}\n\n        try {\n          this.log('asking %p to verify multiaddr', peer.id)\n\n          const connection = await self.components.connectionManager.openConnection(peer.id, {\n            signal\n          })\n\n          const stream = await connection.newStream(this.protocol, {\n            signal\n          })\n\n          onAbort = () => { stream.abort(new CodeError('verifyAddress timeout', ERR_TIMEOUT)) }\n\n          signal.addEventListener('abort', onAbort, { once: true })\n\n          const buf = await pipe(\n            [request],\n            (source) => lp.encode(source),\n            stream,\n            (source) => lp.decode(source),\n            async (stream) => first(stream)\n          )\n          if (buf == null) {\n            this.log('no response received from %p', connection.remotePeer)\n            return undefined\n          }\n          const response = Message.decode(buf)\n\n          if (response.type !== Message.MessageType.DIAL_RESPONSE || response.dialResponse == null) {\n            this.log('invalid autonat response from %p', connection.remotePeer)\n            return undefined\n          }\n\n          if (response.dialResponse.status === Message.ResponseStatus.OK) {\n            // make sure we use different network segments\n            const options = connection.remoteAddr.toOptions()\n            let segment: string\n\n            if (options.family === 4) {\n              const octets = options.host.split('.')\n              segment = octets[0]\n            } else if (options.family === 6) {\n              const octets = options.host.split(':')\n              segment = octets[0]\n            } else {\n              this.log('remote address \"%s\" was not IP4 or IP6?', options.host)\n              return undefined\n            }\n\n            if (networkSegments.includes(segment)) {\n              this.log('already have response from network segment %d - %s', segment, options.host)\n              return undefined\n            }\n\n            networkSegments.push(segment)\n          }\n\n          return response.dialResponse\n        } catch (err) {\n          this.log.error('error asking remote to verify multiaddr', err)\n        } finally {\n          signal.removeEventListener('abort', onAbort)\n        }\n      }\n\n      for await (const dialResponse of parallel(map(this.components.peerRouting.getClosestPeers(randomCid, {\n        signal\n      }), (peer) => async () => verifyAddress(peer)), {\n        concurrency: REQUIRED_SUCCESSFUL_DIALS\n      })) {\n        try {\n          if (dialResponse == null) {\n            continue\n          }\n\n          // they either told us which address worked/didn't work, or we only sent them one address\n          const addr = dialResponse.addr == null ? multiaddrs[0] : multiaddr(dialResponse.addr)\n\n          this.log('autonat response for %a is %s', addr, dialResponse.status)\n\n          if (dialResponse.status === Message.ResponseStatus.E_BAD_REQUEST) {\n            // the remote could not parse our request\n            continue\n          }\n\n          if (dialResponse.status === Message.ResponseStatus.E_DIAL_REFUSED) {\n            // the remote could not honour our request\n            continue\n          }\n\n          if (dialResponse.addr == null && multiaddrs.length > 1) {\n            // we sent the remote multiple addrs but they didn't tell us which ones worked/didn't work\n            continue\n          }\n\n          if (!multiaddrs.some(ma => ma.equals(addr))) {\n            this.log('peer reported %a as %s but it was not in our observed address list', addr, dialResponse.status)\n            continue\n          }\n\n          const addrStr = addr.toString()\n\n          if (results[addrStr] == null) {\n            results[addrStr] = { success: 0, failure: 0 }\n          }\n\n          if (dialResponse.status === Message.ResponseStatus.OK) {\n            results[addrStr].success++\n          } else if (dialResponse.status === Message.ResponseStatus.E_DIAL_ERROR) {\n            results[addrStr].failure++\n          }\n\n          if (results[addrStr].success === REQUIRED_SUCCESSFUL_DIALS) {\n            // we are now convinced\n            this.log('%a is externally dialable', addr)\n            addressManager.confirmObservedAddr(addr)\n            return\n          }\n\n          if (results[addrStr].failure === REQUIRED_SUCCESSFUL_DIALS) {\n            // we are now unconvinced\n            this.log('%a is not externally dialable', addr)\n            addressManager.removeObservedAddr(addr)\n            return\n          }\n        } catch (err) {\n          this.log.error('could not verify external address', err)\n        }\n      }\n    } finally {\n      this.verifyAddressTimeout = setTimeout(this._verifyExternalAddresses, this.refreshInterval)\n    }\n  }\n}\n","/**\n * @packageDocumentation\n *\n * The AutoNAT service uses the [AutoNAT protocol](https://docs.libp2p.io/concepts/nat/autonat/).\n * The service confirms addresses are dialable by remote peers, and updates the list it advertises.\n *\n * The service dials randomly selected peers with a request to verify it's external addresses.\n * The request includes a list of public multiaddrs (addressManager.getObservedAddrs()).\n * The remote peers dial that list and respond with the results.\n *\n * The AutoNAT service uses those responses to either:\n * - addressManager.confirmObservedAddr(addr)\n * - addressManager.removeObservedAddr(addr)\n *\n * The result list of candidates and confirmed addresses can be found\n * at addressManager.getObservedAddrs()\n *\n * @example\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { autoNAT } from '@libp2p/autonat'\n *\n * const node = await createLibp2p({\n *   // ...other options\n *   services: {\n *     autoNAT: autoNAT()\n *   }\n * })\n * ```\n */\n\nimport { AutoNATService } from './autonat.js'\nimport type { ComponentLogger, PeerId, PeerRouting } from '@libp2p/interface'\nimport type { AddressManager, ConnectionManager, Registrar, TransportManager } from '@libp2p/interface-internal'\n\nexport interface AutoNATServiceInit {\n  /**\n   * Allows overriding the protocol prefix used\n   */\n  protocolPrefix?: string\n\n  /**\n   * How long we should wait for a remote peer to verify our external address\n   */\n  timeout?: number\n\n  /**\n   * How long to wait after startup before trying to verify our external address\n   */\n  startupDelay?: number\n\n  /**\n   * Verify our external addresses this often\n   */\n  refreshInterval?: number\n\n  /**\n   * How many parallel inbound autoNAT streams we allow per-connection\n   */\n  maxInboundStreams?: number\n\n  /**\n   * How many parallel outbound autoNAT streams we allow per-connection\n   */\n  maxOutboundStreams?: number\n}\n\nexport interface AutoNATComponents {\n  registrar: Registrar\n  addressManager: AddressManager\n  transportManager: TransportManager\n  peerId: PeerId\n  connectionManager: ConnectionManager\n  peerRouting: PeerRouting\n  logger: ComponentLogger\n}\n\nexport function autoNAT (init: AutoNATServiceInit = {}): (components: AutoNATComponents) => unknown {\n  return (components) => {\n    return new AutoNATService(components, init)\n  }\n}\n","/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive length-prefixed Protobuf encoded\n * messages over streams.\n *\n * @example\n *\n * ```typescript\n * import { pbStream } from 'it-protobuf-stream'\n * import { MessageType } from './src/my-message-type.js'\n *\n * // RequestType and ResponseType have been generate from `.proto` files and have\n * // `.encode` and `.decode` methods for serialization/deserialization\n *\n * const stream = pbStream(duplex)\n *\n * // write a message to the stream\n * stream.write({\n *   foo: 'bar'\n * }, MessageType)\n *\n * // read a message from the stream\n * const res = await stream.read(MessageType)\n * ```\n */\n\nimport { lpStream } from 'it-length-prefixed-stream'\nimport type { LengthPrefixedStreamOpts } from 'it-length-prefixed-stream'\nimport type { Duplex } from 'it-stream-types'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\n/**\n * A protobuf decoder - takes a byte array and returns an object\n */\nexport interface Decoder<T> {\n  (data: Uint8Array | Uint8ArrayList): T\n}\n\n/**\n * A protobuf encoder - takes an object and returns a byte array\n */\nexport interface Encoder<T> {\n  (data: T): Uint8Array\n}\n\n/**\n * Convenience methods for working with protobuf streams\n */\nexport interface ProtobufStream <Stream = unknown> {\n  /**\n   * Read the next length-prefixed byte array from the stream and decode it as the passed protobuf format\n   */\n  read<T>(proto: { decode: Decoder<T> }, options?: AbortOptions): Promise<T>\n\n  /**\n   * Encode the passed object as a protobuf message and write it's length-prefixed bytes to the stream\n   */\n  write<T>(data: T, proto: { encode: Encoder<T> }, options?: AbortOptions): Promise<void>\n\n  /**\n   * Encode the passed objects as protobuf messages and write their length-prefixed bytes to the stream as a single write\n   */\n  writeV<T>(input: T[], proto: { encode: Encoder<T> }, options?: AbortOptions): Promise<void>\n\n  /**\n   * Returns an object with read/write methods for operating on one specific type of protobuf message\n   */\n  pb<T>(proto: { encode: Encoder<T>, decode: Decoder<T> }): MessageStream<T, Stream>\n\n  /**\n   * Returns the underlying stream\n   */\n  unwrap(): Stream\n}\n\n/**\n * A message reader/writer that only uses one type of message\n */\nexport interface MessageStream <T, S = unknown> {\n  /**\n   * Read a message from the stream\n   */\n  read(options?: AbortOptions): Promise<T>\n\n  /**\n   * Write a message to the stream\n   */\n  write(d: T, options?: AbortOptions): Promise<void>\n\n  /**\n   * Write several messages to the stream\n   */\n  writeV(d: T[], options?: AbortOptions): Promise<void>\n\n  /**\n   * Unwrap the underlying protobuf stream\n   */\n  unwrap(): ProtobufStream<S>\n}\n\nexport interface ProtobufStreamOpts extends LengthPrefixedStreamOpts {\n\n}\n\nexport function pbStream <Stream extends Duplex<any, any, any>> (duplex: Stream, opts?: Partial<ProtobufStreamOpts>): ProtobufStream<Stream> {\n  const lp = lpStream(duplex, opts)\n\n  const W: ProtobufStream<Stream> = {\n    read: async (proto, options?: AbortOptions) => {\n      // readLP, decode\n      const value = await lp.read(options)\n\n      return proto.decode(value)\n    },\n    write: async (message, proto, options?: AbortOptions) => {\n      // encode, writeLP\n      await lp.write(proto.encode(message), options)\n    },\n    writeV: async (messages, proto, options?: AbortOptions) => {\n      // encode, writeLP\n      await lp.writeV(messages.map(message => proto.encode(message)), options)\n    },\n    pb: (proto) => {\n      return {\n        read: async (options) => W.read(proto, options),\n        write: async (d, options) => W.write(d, proto, options),\n        writeV: async (d, options) => W.writeV(d, proto, options),\n        unwrap: () => W\n      }\n    },\n    unwrap: () => {\n      return lp.unwrap()\n    }\n  }\n\n  return W\n}\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface HolePunch {\n  type?: HolePunch.Type\n  observedAddresses: Uint8Array[]\n}\n\nexport namespace HolePunch {\n  export enum Type {\n    UNUSED = 'UNUSED',\n    CONNECT = 'CONNECT',\n    SYNC = 'SYNC'\n  }\n\n  enum __TypeValues {\n    UNUSED = 0,\n    CONNECT = 100,\n    SYNC = 300\n  }\n\n  export namespace Type {\n    export const codec = (): Codec<Type> => {\n      return enumeration<Type>(__TypeValues)\n    }\n  }\n\n  let _codec: Codec<HolePunch>\n\n  export const codec = (): Codec<HolePunch> => {\n    if (_codec == null) {\n      _codec = message<HolePunch>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.type != null) {\n          w.uint32(8)\n          HolePunch.Type.codec().encode(obj.type, w)\n        }\n\n        if (obj.observedAddresses != null) {\n          for (const value of obj.observedAddresses) {\n            w.uint32(18)\n            w.bytes(value)\n          }\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          observedAddresses: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.type = HolePunch.Type.codec().decode(reader)\n              break\n            case 2:\n              obj.observedAddresses.push(reader.bytes())\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<HolePunch>): Uint8Array => {\n    return encodeMessage(obj, HolePunch.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): HolePunch => {\n    return decodeMessage(buf, HolePunch.codec())\n  }\n}\n","/**\n * @packageDocumentation\n *\n * This module exports various matchers that can be used to infer the type of a\n * passed multiaddr.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org')\n *\n * DNS.matches(ma) // true - this is a multiaddr with a DNS address at the start\n * ```\n *\n * @example\n *\n * The default matching behaviour ignores any subsequent tuples in the multiaddr.\n * If you want stricter matching you can use `.exactMatch`:\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS, Circuit } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org/p2p/QmFoo/p2p-circuit/p2p/QmBar')\n *\n * DNS.exactMatch(ma) // false - this address has extra tuples after the DNS component\n * Circuit.matches(ma) // true\n * Circuit.exactMatch(ma) // true - the extra tuples are circuit relay related\n * ```\n */\n\nimport { isIPv4, isIPv6 } from '@chainsafe/is-ip'\nimport { type Multiaddr } from '@multiformats/multiaddr'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { base64url } from 'multiformats/bases/base64'\n\n/**\n * Split a multiaddr into path components\n */\nconst toParts = (ma: Multiaddr): string[] => {\n  return ma.toString().split('/').slice(1)\n}\n\n/**\n * A matcher accepts multiaddr components and either fails to match and returns\n * false or returns a sublist of unmatched components\n */\ninterface Matcher {\n  match(parts: string[]): string[] | false\n  pattern: string\n}\n\nconst func = (fn: (val: string) => boolean): Matcher => {\n  return {\n    match: (vals) => {\n      if (vals.length < 1) {\n        return false\n      }\n\n      if (fn(vals[0])) {\n        return vals.slice(1)\n      }\n\n      return false\n    },\n    pattern: 'fn'\n  }\n}\n\nconst literal = (str: string): Matcher => {\n  return {\n    match: (vals) => func((val) => val === str).match(vals),\n    pattern: str\n  }\n}\n\nconst string = (): Matcher => {\n  return {\n    match: (vals) => func((val) => typeof val === 'string').match(vals),\n    pattern: '{string}'\n  }\n}\n\nconst number = (): Matcher => {\n  return {\n    match: (vals) => func((val) => !isNaN(parseInt(val))).match(vals),\n    pattern: '{number}'\n  }\n}\n\nconst peerId = (): Matcher => {\n  return {\n    match: (vals) => {\n      if (vals.length < 2) {\n        return false\n      }\n\n      if (vals[0] !== 'p2p' && vals[0] !== 'ipfs') {\n        return false\n      }\n\n      // Q is RSA, 1 is Ed25519 or Secp256k1\n      if (vals[1].startsWith('Q') || vals[1].startsWith('1')) {\n        try {\n          base58btc.decode(`z${vals[1]}`)\n        } catch (err) {\n          return false\n        }\n      } else {\n        return false\n      }\n\n      return vals.slice(2)\n    },\n    pattern: '/p2p/{peerid}'\n  }\n}\n\nconst certhash = (): Matcher => {\n  return {\n    match: (vals) => {\n      if (vals.length < 2) {\n        return false\n      }\n\n      if (vals[0] !== 'certhash') {\n        return false\n      }\n\n      try {\n        base64url.decode(vals[1])\n      } catch {\n        return false\n      }\n\n      return vals.slice(2)\n    },\n    pattern: '/certhash/{certhash}'\n  }\n}\n\nconst optional = (matcher: Matcher): Matcher => {\n  return {\n    match: (vals) => {\n      const result = matcher.match(vals)\n\n      if (result === false) {\n        return vals\n      }\n\n      return result\n    },\n    pattern: `optional(${matcher.pattern})`\n  }\n}\n\nconst or = (...matchers: Matcher[]): Matcher => {\n  return {\n    match: (vals) => {\n      let matches: string[] | undefined\n\n      for (const matcher of matchers) {\n        const result = matcher.match(vals)\n\n        // no match\n        if (result === false) {\n          continue\n        }\n\n        // choose greediest matcher\n        if (matches == null || result.length < matches.length) {\n          matches = result\n        }\n      }\n\n      if (matches == null) {\n        return false\n      }\n\n      return matches\n    },\n    pattern: `or(${matchers.map(m => m.pattern).join(', ')})`\n  }\n}\n\nconst and = (...matchers: Matcher[]): Matcher => {\n  return {\n    match: (vals) => {\n      for (const matcher of matchers) {\n        // pass what's left of the array\n        const result = matcher.match(vals)\n\n        // no match\n        if (result === false) {\n          return false\n        }\n\n        vals = result\n      }\n\n      return vals\n    },\n    pattern: `and(${matchers.map(m => m.pattern).join(', ')})`\n  }\n}\n\nfunction fmt (...matchers: Matcher[]): MultiaddrMatcher {\n  function match (ma: Multiaddr): string[] | false {\n    let parts = toParts(ma)\n\n    for (const matcher of matchers) {\n      const result = matcher.match(parts)\n\n      if (result === false) {\n        return false\n      }\n\n      parts = result\n    }\n\n    return parts\n  }\n\n  function matches (ma: Multiaddr): boolean {\n    const result = match(ma)\n\n    return result !== false\n  }\n\n  function exactMatch (ma: Multiaddr): boolean {\n    const result = match(ma)\n\n    if (result === false) {\n      return false\n    }\n\n    return result.length === 0\n  }\n\n  return {\n    matches,\n    exactMatch\n  }\n}\n\n/**\n * A MultiaddrMatcher allows interpreting a multiaddr as a certain type of\n * multiaddr\n */\nexport interface MultiaddrMatcher {\n  /**\n   * Returns true if the passed multiaddr can be treated as this type of\n   * multiaddr\n   */\n  matches(ma: Multiaddr): boolean\n\n  /**\n   * Returns true if the passed multiaddr terminates as this type of\n   * multiaddr\n   */\n  exactMatch(ma: Multiaddr): boolean\n}\n\n/**\n * DNS matchers\n */\nconst _DNS4 = and(literal('dns4'), string())\nconst _DNS6 = and(literal('dns6'), string())\nconst _DNSADDR = and(literal('dnsaddr'), string())\nconst _DNS = and(literal('dns'), string())\n\n/**\n * Matches dns4 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS4 } from '@multiformats/multiaddr-matcher'\n *\n * DNS4.matches(multiaddr('/dns4/example.org')) // true\n * ```\n */\nexport const DNS4 = fmt(_DNS4)\n\n/**\n * Matches dns6 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS6 } from '@multiformats/multiaddr-matcher'\n *\n * DNS6.matches(multiaddr('/dns6/example.org')) // true\n * ```\n */\nexport const DNS6 = fmt(_DNS6)\n\n/**\n * Matches dnsaddr addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNSADDR } from '@multiformats/multiaddr-matcher'\n *\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org')) // true\n * ```\n */\nexport const DNSADDR = fmt(_DNSADDR)\n\n/**\n * Matches any dns address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * DNS.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNS.matches(multiaddr('/dns4/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org')) // true\n * ```\n */\nexport const DNS = fmt(or(\n  _DNS,\n  _DNSADDR,\n  _DNS4,\n  _DNS6\n))\n\nconst _IP4 = and(literal('ip4'), func(isIPv4))\nconst _IP6 = and(literal('ip6'), func(isIPv6))\nconst _IP = or(\n  _IP4,\n  _IP6\n)\n\nconst _IP_OR_DOMAIN = or(_IP, _DNS, _DNS4, _DNS6, _DNSADDR)\n\n/**\n * A matcher for addresses that start with IP or DNS tuples.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP_OR_DOMAIN } from '@multiformats/multiaddr-matcher'\n *\n * IP_OR_DOMAIN.matches(multiaddr('/ip4/123.123.123.123/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/dns/example.com/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/p2p/QmFoo')) // false\n * ```\n */\nexport const IP_OR_DOMAIN = fmt(_IP_OR_DOMAIN)\n\n/**\n * Matches ip4 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP4 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip4/123.123.123.123')\n *\n * IP4.matches(ma) // true\n * ```\n */\nexport const IP4 = fmt(_IP4)\n\n/**\n * Matches ip6 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP6 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')\n *\n * IP6.matches(ma) // true\n * ```\n */\nexport const IP6 = fmt(_IP6)\n\n/**\n * Matches ip4 or ip6 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP } from '@multiformats/multiaddr-matcher'\n *\n * IP.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP.matches(multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')) // true\n * ```\n */\nexport const IP = fmt(_IP)\n\nconst _TCP = and(_IP_OR_DOMAIN, literal('tcp'), number())\nconst _UDP = and(_IP_OR_DOMAIN, literal('udp'), number())\n\nconst TCP_OR_UDP = or(_TCP, _UDP)\n\n/**\n * Matches TCP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { TCP } from '@multiformats/multiaddr-matcher'\n *\n * TCP.matches(multiaddr('/ip4/123.123.123.123/tcp/1234')) // true\n * ```\n */\nexport const TCP = fmt(_TCP)\n\n/**\n * Matches UDP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { UDP } from '@multiformats/multiaddr-matcher'\n *\n * UDP.matches(multiaddr('/ip4/123.123.123.123/udp/1234')) // true\n * ```\n */\nexport const UDP = fmt(_UDP)\n\nconst _QUIC = and(_UDP, literal('quic'))\nconst _QUICV1 = and(_UDP, literal('quic-v1'))\n\nconst QUIC_V0_OR_V1 = or(_QUIC, _QUICV1)\n\n/**\n * Matches QUIC addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUIC } from '@multiformats/multiaddr-matcher'\n *\n * QUIC.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic')) // true\n * ```\n */\nexport const QUIC = fmt(_QUIC)\n\n/**\n * Matches QUICv1 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUICV1 } from '@multiformats/multiaddr-matcher'\n *\n * QUICV1.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1')) // true\n * ```\n */\nexport const QUICV1 = fmt(_QUICV1)\n\nconst _WEB = or(\n  _IP_OR_DOMAIN,\n  _TCP,\n  _UDP,\n  _QUIC,\n  _QUICV1\n)\n\nconst _WebSockets = or(\n  and(_WEB, literal('ws'), optional(peerId()))\n)\n\n/**\n * Matches WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSockets } from '@multiformats/multiaddr-matcher'\n *\n * WebSockets.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/ws')) // true\n * ```\n */\nexport const WebSockets = fmt(_WebSockets)\n\nconst _WebSocketsSecure = or(\n  and(_WEB, literal('wss'), optional(peerId())),\n  and(_WEB, literal('tls'), literal('ws'), optional(peerId()))\n)\n\n/**\n * Matches secure WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSocketsSecure } from '@multiformats/multiaddr-matcher'\n *\n * WebSocketsSecure.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/wss')) // true\n * ```\n */\nexport const WebSocketsSecure = fmt(_WebSocketsSecure)\n\nconst _WebRTCDirect = and(TCP_OR_UDP, literal('webrtc-direct'), certhash(), optional(certhash()), optional(peerId()))\n\n/**\n * Matches WebRTC-direct addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo/webrtc-direct/certhash/u....')) // true\n * ```\n */\nexport const WebRTCDirect = fmt(_WebRTCDirect)\n\nconst _WebTransport = and(_QUICV1, literal('webtransport'), certhash(), certhash(), optional(peerId()))\n\n/**\n * Matches WebTransport addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1/webtransport/certhash/u..../certhash/u..../p2p/QmFoo')) // true\n * ```\n */\nexport const WebTransport = fmt(_WebTransport)\n\nconst _P2P = or(\n  _WebSockets,\n  _WebSocketsSecure,\n  and(_TCP, optional(peerId())),\n  and(QUIC_V0_OR_V1, optional(peerId())),\n  and(_IP_OR_DOMAIN, optional(peerId())),\n  _WebRTCDirect,\n  _WebTransport,\n  peerId()\n)\n\n/**\n * Matches peer addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { P2P } from '@multiformats/multiaddr-matcher'\n *\n * P2P.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo')) // true\n * ```\n */\nexport const P2P = fmt(_P2P)\n\nconst _Circuit = and(_P2P, literal('p2p-circuit'), peerId())\n\n/**\n * Matches circuit relay addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Circuit } from '@multiformats/multiaddr-matcher'\n *\n * Circuit.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/p2p/QmTarget')) // true\n * ```\n */\nexport const Circuit = fmt(_Circuit)\n\nconst _WebRTC = or(\n  and(_P2P, literal('p2p-circuit'), literal('webrtc'), peerId()),\n  and(_P2P, literal('webrtc'), optional(peerId())),\n  literal('webrtc')\n)\n\n/**\n * Matches WebRTC addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTC } from '@multiformats/multiaddr-matcher'\n *\n * WebRTC.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/webrtc/p2p/QmTarget')) // true\n * ```\n */\nexport const WebRTC = fmt(_WebRTC)\n\nconst _HTTP = or(\n  and(_IP_OR_DOMAIN, literal('tcp'), number(), literal('http'), optional(peerId())),\n  and(_IP_OR_DOMAIN, literal('http'), optional(peerId()))\n)\n\n/**\n * Matches HTTP addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/http')) // true\n * ```\n */\nexport const HTTP = fmt(_HTTP)\n\nconst _HTTPS = or(\n  and(_IP_OR_DOMAIN, literal('tcp'), or(\n    and(literal('443'), literal('http')),\n    and(number(), literal('https'))\n  ), optional(peerId())),\n  and(_IP_OR_DOMAIN, literal('tls'), literal('http'), optional(peerId())),\n  and(_IP_OR_DOMAIN, literal('https'), optional(peerId()))\n)\n\n/**\n * Matches HTTPS addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/tls/http')) // true\n * ```\n */\nexport const HTTPS = fmt(_HTTPS)\n","import { isPrivateIp } from '@libp2p/utils/private-ip'\nimport { type Multiaddr } from '@multiformats/multiaddr'\nimport { Circuit, IP, DNS } from '@multiformats/multiaddr-matcher'\nimport type { TransportManager } from '@libp2p/interface-internal'\n\n/**\n * Returns true if the passed multiaddr is public, not relayed and we have a\n * transport that can dial it\n */\nexport function isPublicAndDialable (ma: Multiaddr, transportManager: TransportManager): boolean {\n  // ignore circuit relay\n  if (Circuit.matches(ma)) {\n    return false\n  }\n\n  const transport = transportManager.transportForMultiaddr(ma)\n\n  if (transport == null) {\n    return false\n  }\n\n  // dns addresses are probably public?\n  if (DNS.matches(ma)) {\n    return true\n  }\n\n  // ensure we have only IPv4/IPv6 addresses\n  if (!IP.matches(ma)) {\n    return false\n  }\n\n  return isPrivateIp(ma.toOptions().host) === false\n}\n","import { CodeError, ERR_INVALID_MESSAGE } from '@libp2p/interface'\nimport { type Multiaddr, multiaddr } from '@multiformats/multiaddr'\nimport delay from 'delay'\nimport { pbStream } from 'it-protobuf-stream'\nimport { HolePunch } from './pb/message.js'\nimport { isPublicAndDialable } from './utils.js'\nimport { multicodec } from './index.js'\nimport type { DCUtRServiceComponents, DCUtRServiceInit } from './index.js'\nimport type { Logger, Connection, Stream, PeerStore, Startable } from '@libp2p/interface'\nimport type { AddressManager, ConnectionManager, Registrar, TransportManager } from '@libp2p/interface-internal'\n\n// https://github.com/libp2p/specs/blob/master/relay/DCUtR.md#rpc-messages\nconst MAX_DCUTR_MESSAGE_SIZE = 1024 * 4\n// ensure the dial has a high priority to jump to the head of the dial queue\nconst DCUTR_DIAL_PRIORITY = 100\n\nconst defaultValues = {\n  // https://github.com/libp2p/go-libp2p/blob/8d2e54e1637041d5cf4fac1e531287560bd1f4ac/p2p/protocol/holepunch/holepuncher.go#L27\n  timeout: 5000,\n  // https://github.com/libp2p/go-libp2p/blob/8d2e54e1637041d5cf4fac1e531287560bd1f4ac/p2p/protocol/holepunch/holepuncher.go#L28\n  retries: 3,\n  maxInboundStreams: 1,\n  maxOutboundStreams: 1\n}\n\nexport class DefaultDCUtRService implements Startable {\n  private started: boolean\n  private readonly timeout: number\n  private readonly retries: number\n  private readonly maxInboundStreams: number\n  private readonly maxOutboundStreams: number\n  private readonly peerStore: PeerStore\n  private readonly registrar: Registrar\n  private readonly connectionManager: ConnectionManager\n  private readonly addressManager: AddressManager\n  private readonly transportManager: TransportManager\n  private topologyId?: string\n  private readonly log: Logger\n\n  constructor (components: DCUtRServiceComponents, init: DCUtRServiceInit) {\n    this.log = components.logger.forComponent('libp2p:dcutr')\n    this.started = false\n    this.peerStore = components.peerStore\n    this.registrar = components.registrar\n    this.addressManager = components.addressManager\n    this.connectionManager = components.connectionManager\n    this.transportManager = components.transportManager\n\n    this.timeout = init.timeout ?? defaultValues.timeout\n    this.retries = init.retries ?? defaultValues.retries\n    this.maxInboundStreams = init.maxInboundStreams ?? defaultValues.maxInboundStreams\n    this.maxOutboundStreams = init.maxOutboundStreams ?? defaultValues.maxOutboundStreams\n  }\n\n  isStarted (): boolean {\n    return this.started\n  }\n\n  async start (): Promise<void> {\n    if (this.started) {\n      return\n    }\n\n    // register for notifications of when peers that support DCUtR connect\n    // nb. requires the identify service to be enabled\n    this.topologyId = await this.registrar.register(multicodec, {\n      notifyOnTransient: true,\n      onConnect: (peerId, connection) => {\n        if (!connection.transient) {\n          // the connection is already direct, no upgrade is required\n          return\n        }\n\n        // the inbound peer starts the connection upgrade\n        if (connection.direction !== 'inbound') {\n          return\n        }\n\n        this.upgradeInbound(connection)\n          .catch(err => {\n            this.log.error('error during outgoing DCUtR attempt', err)\n          })\n      }\n    })\n\n    await this.registrar.handle(multicodec, (data) => {\n      void this.handleIncomingUpgrade(data.stream, data.connection).catch(err => {\n        this.log.error('error during incoming DCUtR attempt', err)\n        data.stream.abort(err)\n      })\n    }, {\n      maxInboundStreams: this.maxInboundStreams,\n      maxOutboundStreams: this.maxOutboundStreams,\n      runOnTransientConnection: true\n    })\n\n    this.started = true\n  }\n\n  async stop (): Promise<void> {\n    await this.registrar.unhandle(multicodec)\n\n    if (this.topologyId != null) {\n      this.registrar.unregister(this.topologyId)\n    }\n\n    this.started = false\n  }\n\n  /**\n   * Perform the inbound connection upgrade as B\n   *\n   * @see https://github.com/libp2p/specs/blob/master/relay/DCUtR.md#the-protocol\n   */\n  async upgradeInbound (relayedConnection: Connection): Promise<void> {\n    // Upon observing the new connection, the inbound peer (here B) checks the\n    // addresses advertised by A via identify.\n    //\n    // If that set includes public addresses, then A may be reachable by a direct\n    // connection, in which case B attempts a unilateral connection upgrade by\n    // initiating a direct connection to A.\n    if (await this.attemptUnilateralConnectionUpgrade(relayedConnection)) {\n      return\n    }\n\n    let stream: Stream | undefined\n\n    for (let i = 0; i < this.retries; i++) {\n      const options = {\n        signal: AbortSignal.timeout(this.timeout)\n      }\n\n      try {\n        // 1. B opens a stream to A using the /libp2p/dcutr protocol.\n        stream = await relayedConnection.newStream([multicodec], {\n          signal: options.signal,\n          runOnTransientConnection: true\n        })\n\n        const pb = pbStream(stream, {\n          maxDataLength: MAX_DCUTR_MESSAGE_SIZE\n        }).pb(HolePunch)\n\n        // 2. B sends to A a Connect message containing its observed (and\n        // possibly predicted) addresses from identify and starts a timer\n        // to measure RTT of the relay connection.\n        this.log('B sending connect to %p', relayedConnection.remotePeer)\n        const connectTimer = Date.now()\n        await pb.write({\n          type: HolePunch.Type.CONNECT,\n          observedAddresses: this.addressManager.getAddresses().map(ma => ma.bytes)\n        }, options)\n\n        this.log('B receiving connect from %p', relayedConnection.remotePeer)\n        // 4. Upon receiving the Connect, B sends a Sync message\n        const connect = await pb.read(options)\n\n        if (connect.type !== HolePunch.Type.CONNECT) {\n          this.log('A sent wrong message type')\n          throw new CodeError('DCUtR message type was incorrect', ERR_INVALID_MESSAGE)\n        }\n\n        const multiaddrs = this.getDialableMultiaddrs(connect.observedAddresses)\n\n        if (multiaddrs.length === 0) {\n          this.log('A did not have any dialable multiaddrs')\n          throw new CodeError('DCUtR connect message had no multiaddrs', ERR_INVALID_MESSAGE)\n        }\n\n        const rtt = Date.now() - connectTimer\n\n        this.log('A sending sync, rtt %dms', rtt)\n        await pb.write({\n          type: HolePunch.Type.SYNC,\n          observedAddresses: []\n        }, options)\n\n        this.log('A waiting for half RTT')\n        // ..and starts a timer for half the RTT measured from the time between\n        // sending the initial Connect and receiving the response\n        await delay(rtt / 2)\n\n        // TODO: when we have a QUIC transport, the dial step is different - for\n        // now we only have tcp support\n        // https://github.com/libp2p/specs/blob/master/relay/DCUtR.md#the-protocol\n\n        this.log('B dialing', multiaddrs)\n        // Upon expiry of the timer, B dials the address to A.\n        const conn = await this.connectionManager.openConnection(multiaddrs, {\n          signal: options.signal,\n          priority: DCUTR_DIAL_PRIORITY\n        })\n\n        this.log('DCUtR to %p succeeded to address %a, closing relayed connection', relayedConnection.remotePeer, conn.remoteAddr)\n        await relayedConnection.close(options)\n\n        break\n      } catch (err: any) {\n        this.log.error('error while attempting DCUtR on attempt %d of %d', i + 1, this.retries, err)\n        stream?.abort(err)\n\n        if (i === this.retries) {\n          throw err\n        }\n      } finally {\n        if (stream != null) {\n          await stream.close(options)\n        }\n      }\n    }\n  }\n\n  /**\n   * This is performed when A has dialed B via a relay but A also has a public\n   * address that B can dial directly\n   */\n  async attemptUnilateralConnectionUpgrade (relayedConnection: Connection): Promise<boolean> {\n    // Upon observing the new connection, the inbound peer (here B) checks the\n    // addresses advertised by A via identify.\n    const peerInfo = await this.peerStore.get(relayedConnection.remotePeer)\n\n    // If that set includes public addresses, then A may be reachable by a direct\n    // connection, in which case B attempts a unilateral connection upgrade by\n    // initiating a direct connection to A.\n    const publicAddresses = peerInfo.addresses\n      .map(address => {\n        const ma = address.multiaddr\n\n        // ensure all multiaddrs have the peer id\n        if (ma.getPeerId() == null) {\n          return ma.encapsulate(`/p2p/${relayedConnection.remotePeer}`)\n        }\n\n        return ma\n      })\n      .filter(ma => {\n        return isPublicAndDialable(ma, this.transportManager)\n      })\n\n    if (publicAddresses.length > 0) {\n      const signal = AbortSignal.timeout(this.timeout)\n\n      try {\n        this.log('attempting unilateral connection upgrade to %a', publicAddresses)\n\n        // force-dial the multiaddr(s), otherwise `connectionManager.openConnection`\n        // will return the existing relayed connection\n        const connection = await this.connectionManager.openConnection(publicAddresses, {\n          signal,\n          force: true\n        })\n\n        if (connection.transient) {\n          throw new Error('Could not open a new, non-transient, connection')\n        }\n\n        this.log('unilateral connection upgrade to %p succeeded via %a, closing relayed connection', relayedConnection.remotePeer, connection.remoteAddr)\n\n        await relayedConnection.close({\n          signal\n        })\n\n        return true\n      } catch (err) {\n        this.log.error('unilateral connection upgrade to %p on addresses %a failed', relayedConnection.remotePeer, publicAddresses, err)\n      }\n    } else {\n      this.log('peer %p has no public addresses, not attempting unilateral connection upgrade', relayedConnection.remotePeer)\n    }\n\n    // no public addresses or failed to dial public addresses\n    return false\n  }\n\n  /**\n   * Perform the connection upgrade as A\n   *\n   * @see https://github.com/libp2p/specs/blob/master/relay/DCUtR.md#the-protocol\n   */\n  async handleIncomingUpgrade (stream: Stream, relayedConnection: Connection): Promise<void> {\n    const options = {\n      signal: AbortSignal.timeout(this.timeout)\n    }\n\n    try {\n      const pb = pbStream(stream, {\n        maxDataLength: MAX_DCUTR_MESSAGE_SIZE\n      }).pb(HolePunch)\n\n      this.log('A receiving connect')\n      // 3. Upon receiving the Connect, A responds back with a Connect message\n      // containing its observed (and possibly predicted) addresses.\n      const connect = await pb.read(options)\n\n      if (connect.type !== HolePunch.Type.CONNECT) {\n        this.log('B sent wrong message type')\n        throw new CodeError('DCUtR message type was incorrect', ERR_INVALID_MESSAGE)\n      }\n\n      if (connect.observedAddresses.length === 0) {\n        this.log('B sent no multiaddrs')\n        throw new CodeError('DCUtR connect message had no multiaddrs', ERR_INVALID_MESSAGE)\n      }\n\n      const multiaddrs = this.getDialableMultiaddrs(connect.observedAddresses)\n\n      if (multiaddrs.length === 0) {\n        this.log('B had no dialable multiaddrs')\n        throw new CodeError('DCUtR connect message had no dialable multiaddrs', ERR_INVALID_MESSAGE)\n      }\n\n      this.log('A sending connect')\n      await pb.write({\n        type: HolePunch.Type.CONNECT,\n        observedAddresses: this.addressManager.getAddresses().map(ma => ma.bytes)\n      })\n\n      this.log('A receiving sync')\n      const sync = await pb.read(options)\n\n      if (sync.type !== HolePunch.Type.SYNC) {\n        throw new CodeError('DCUtR message type was incorrect', ERR_INVALID_MESSAGE)\n      }\n\n      // TODO: when we have a QUIC transport, the dial step is different - for\n      // now we only have tcp support\n      // https://github.com/libp2p/specs/blob/master/relay/DCUtR.md#the-protocol\n\n      // Upon receiving the Sync, A immediately dials the address to B\n      this.log('A dialing', multiaddrs)\n      const connection = await this.connectionManager.openConnection(multiaddrs, {\n        signal: options.signal,\n        priority: DCUTR_DIAL_PRIORITY,\n        force: true\n      })\n\n      this.log('DCUtR to %p succeeded via %a, closing relayed connection', relayedConnection.remotePeer, connection.remoteAddr)\n      await relayedConnection.close(options)\n    } catch (err: any) {\n      this.log.error('incoming DCUtR from %p failed', relayedConnection.remotePeer, err)\n      stream.abort(err)\n    } finally {\n      await stream.close(options)\n    }\n  }\n\n  /**\n   * Takes the `addr` and converts it to a Multiaddr if possible\n   */\n  getDialableMultiaddrs (addrs: Array<Uint8Array | string | null | undefined>): Multiaddr[] {\n    const output = []\n\n    for (const addr of addrs) {\n      if (addr == null || addr.length === 0) {\n        continue\n      }\n\n      try {\n        const ma = multiaddr(addr)\n\n        if (!isPublicAndDialable(ma, this.transportManager)) {\n          continue\n        }\n\n        output.push(ma)\n      } catch {}\n    }\n\n    return output\n  }\n}\n","/**\n * @packageDocumentation\n *\n * Direct Connection Upgrade through Relay (DCUtR) is a protocol that allows two\n * nodes to connect to each other who would otherwise be prevented doing so due\n * to being behind NATed connections or firewalls.\n *\n * The protocol involves making a relayed connection between the two peers and\n * using the relay to synchronise connection timings so that they dial each other\n * at precisely the same moment.\n *\n * @example\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { circuitRelayTransport } from '@libp2p/circuit-relay-v2'\n * import { tcp } from '@libp2p/tcp'\n * import { identify } from '@libp2p/identify'\n * import { dcutr } from '@libp2p/dcutr'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const node = await createLibp2p({\n *   transports: [\n *     circuitRelayTransport(),\n *     tcp()\n *   ],\n *   services: {\n *     identify: identify(),\n *     dcutr: dcutr()\n *   }\n * })\n *\n * // QmTarget is a peer that is behind a NAT, supports TCP and has a relay\n * // reservation\n * const ma = multiaddr('/ip4/.../p2p/QmRelay/p2p-circuit/p2p/QmTarget')\n * await node.dial(ma)\n *\n * // after a while the connection should automatically get upgraded to a\n * // direct connection (e.g. non-transient)\n * while (true) {\n *   const connections = node.getConnections()\n *\n *   if (connections.find(conn => conn.transient === false)) {\n *     console.info('have direct connection')\n *     break\n *   } else {\n *     console.info('have relayed connection')\n *\n *     // wait a few seconds to see if it's succeeded yet\n *     await new Promise<void>((resolve) => {\n *       setTimeout(() => resolve(), 5000)\n *     })\n *   }\n * }\n * ```\n */\n\nimport { DefaultDCUtRService } from './dcutr.js'\nimport type { ComponentLogger, PeerStore } from '@libp2p/interface'\nimport type { AddressManager, ConnectionManager, Registrar, TransportManager } from '@libp2p/interface-internal'\n\nexport interface DCUtRServiceInit {\n  /**\n   * How long we should wait for the connection upgrade to complete (default: 5s)\n   */\n  timeout?: number\n\n  /**\n   * How many times to retry the connection upgrade (default: 3)\n   */\n  retries?: number\n\n  /**\n   * How many simultaneous inbound DCUtR protocol streams to allow on each\n   * connection (default: 1)\n   */\n  maxInboundStreams?: number\n\n  /**\n   * How many simultaneous outbound DCUtR protocol streams to allow on each\n   * connection (default: 1)\n   */\n  maxOutboundStreams?: number\n}\n\nexport interface DCUtRServiceComponents {\n  peerStore: PeerStore\n  connectionManager: ConnectionManager\n  registrar: Registrar\n  addressManager: AddressManager\n  transportManager: TransportManager\n  logger: ComponentLogger\n}\n\n/**\n * The DCUtR protocol\n */\nexport const multicodec = '/libp2p/dcutr'\n\nexport function dcutr (init: DCUtRServiceInit = {}): (components: DCUtRServiceComponents) => unknown {\n  return (components) => new DefaultDCUtRService(components, init)\n}\n","export const PROTOCOL_VERSION = 'ipfs/0.1.0' // deprecated\nexport const MULTICODEC_IDENTIFY = '/ipfs/id/1.0.0' // deprecated\nexport const MULTICODEC_IDENTIFY_PUSH = '/ipfs/id/push/1.0.0' // deprecated\n\nexport const IDENTIFY_PROTOCOL_VERSION = '0.1.0'\nexport const MULTICODEC_IDENTIFY_PROTOCOL_NAME = 'id'\nexport const MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME = 'id/push'\nexport const MULTICODEC_IDENTIFY_PROTOCOL_VERSION = '1.0.0'\nexport const MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION = '1.0.0'\n","export const codes = {\n  ERR_SIGNATURE_NOT_VALID: 'ERR_SIGNATURE_NOT_VALID'\n}\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Envelope {\n  publicKey: Uint8Array\n  payloadType: Uint8Array\n  payload: Uint8Array\n  signature: Uint8Array\n}\n\nexport namespace Envelope {\n  let _codec: Codec<Envelope>\n\n  export const codec = (): Codec<Envelope> => {\n    if (_codec == null) {\n      _codec = message<Envelope>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if ((obj.publicKey != null && obj.publicKey.byteLength > 0)) {\n          w.uint32(10)\n          w.bytes(obj.publicKey)\n        }\n\n        if ((obj.payloadType != null && obj.payloadType.byteLength > 0)) {\n          w.uint32(18)\n          w.bytes(obj.payloadType)\n        }\n\n        if ((obj.payload != null && obj.payload.byteLength > 0)) {\n          w.uint32(26)\n          w.bytes(obj.payload)\n        }\n\n        if ((obj.signature != null && obj.signature.byteLength > 0)) {\n          w.uint32(42)\n          w.bytes(obj.signature)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          publicKey: new Uint8Array(0),\n          payloadType: new Uint8Array(0),\n          payload: new Uint8Array(0),\n          signature: new Uint8Array(0)\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.publicKey = reader.bytes()\n              break\n            case 2:\n              obj.payloadType = reader.bytes()\n              break\n            case 3:\n              obj.payload = reader.bytes()\n              break\n            case 5:\n              obj.signature = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Envelope>): Uint8Array => {\n    return encodeMessage(obj, Envelope.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Envelope => {\n    return decodeMessage(buf, Envelope.codec())\n  }\n}\n","import { unmarshalPrivateKey, unmarshalPublicKey } from '@libp2p/crypto/keys'\nimport { CodeError } from '@libp2p/interface'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { fromString as uint8arraysFromString } from 'uint8arrays/from-string'\nimport { codes } from '../errors.js'\nimport { Envelope as Protobuf } from './envelope.js'\nimport type { PeerId, Record, Envelope } from '@libp2p/interface'\n\nexport interface RecordEnvelopeInit {\n  peerId: PeerId\n  payloadType: Uint8Array\n  payload: Uint8Array\n  signature: Uint8Array\n}\n\nexport class RecordEnvelope implements Envelope {\n  /**\n   * Unmarshal a serialized Envelope protobuf message\n   */\n  static createFromProtobuf = async (data: Uint8Array | Uint8ArrayList): Promise<RecordEnvelope> => {\n    const envelopeData = Protobuf.decode(data)\n    const peerId = await peerIdFromKeys(envelopeData.publicKey)\n\n    return new RecordEnvelope({\n      peerId,\n      payloadType: envelopeData.payloadType,\n      payload: envelopeData.payload,\n      signature: envelopeData.signature\n    })\n  }\n\n  /**\n   * Seal marshals the given Record, places the marshaled bytes inside an Envelope\n   * and signs it with the given peerId's private key\n   */\n  static seal = async (record: Record, peerId: PeerId): Promise<RecordEnvelope> => {\n    if (peerId.privateKey == null) {\n      throw new Error('Missing private key')\n    }\n\n    const domain = record.domain\n    const payloadType = record.codec\n    const payload = record.marshal()\n    const signData = formatSignaturePayload(domain, payloadType, payload)\n    const key = await unmarshalPrivateKey(peerId.privateKey)\n    const signature = await key.sign(signData.subarray())\n\n    return new RecordEnvelope({\n      peerId,\n      payloadType,\n      payload,\n      signature\n    })\n  }\n\n  /**\n   * Open and certify a given marshalled envelope.\n   * Data is unmarshalled and the signature validated for the given domain.\n   */\n  static openAndCertify = async (data: Uint8Array | Uint8ArrayList, domain: string): Promise<RecordEnvelope> => {\n    const envelope = await RecordEnvelope.createFromProtobuf(data)\n    const valid = await envelope.validate(domain)\n\n    if (!valid) {\n      throw new CodeError('envelope signature is not valid for the given domain', codes.ERR_SIGNATURE_NOT_VALID)\n    }\n\n    return envelope\n  }\n\n  public peerId: PeerId\n  public payloadType: Uint8Array\n  public payload: Uint8Array\n  public signature: Uint8Array\n  public marshaled?: Uint8Array\n\n  /**\n   * The Envelope is responsible for keeping an arbitrary signed record\n   * by a libp2p peer.\n   */\n  constructor (init: RecordEnvelopeInit) {\n    const { peerId, payloadType, payload, signature } = init\n\n    this.peerId = peerId\n    this.payloadType = payloadType\n    this.payload = payload\n    this.signature = signature\n  }\n\n  /**\n   * Marshal the envelope content\n   */\n  marshal (): Uint8Array {\n    if (this.peerId.publicKey == null) {\n      throw new Error('Missing public key')\n    }\n\n    if (this.marshaled == null) {\n      this.marshaled = Protobuf.encode({\n        publicKey: this.peerId.publicKey,\n        payloadType: this.payloadType,\n        payload: this.payload.subarray(),\n        signature: this.signature\n      })\n    }\n\n    return this.marshaled\n  }\n\n  /**\n   * Verifies if the other Envelope is identical to this one\n   */\n  equals (other: Envelope): boolean {\n    return uint8ArrayEquals(this.marshal(), other.marshal())\n  }\n\n  /**\n   * Validate envelope data signature for the given domain\n   */\n  async validate (domain: string): Promise<boolean> {\n    const signData = formatSignaturePayload(domain, this.payloadType, this.payload)\n\n    if (this.peerId.publicKey == null) {\n      throw new Error('Missing public key')\n    }\n\n    const key = unmarshalPublicKey(this.peerId.publicKey)\n\n    return key.verify(signData.subarray(), this.signature)\n  }\n}\n\n/**\n * Helper function that prepares a Uint8Array to sign or verify a signature\n */\nconst formatSignaturePayload = (domain: string, payloadType: Uint8Array, payload: Uint8Array | Uint8ArrayList): Uint8ArrayList => {\n  // When signing, a peer will prepare a Uint8Array by concatenating the following:\n  // - The length of the domain separation string string in bytes\n  // - The domain separation string, encoded as UTF-8\n  // - The length of the payload_type field in bytes\n  // - The value of the payload_type field\n  // - The length of the payload field in bytes\n  // - The value of the payload field\n\n  const domainUint8Array = uint8arraysFromString(domain)\n  const domainLength = varint.encode(domainUint8Array.byteLength)\n  const payloadTypeLength = varint.encode(payloadType.length)\n  const payloadLength = varint.encode(payload.length)\n\n  return new Uint8ArrayList(\n    domainLength,\n    domainUint8Array,\n    payloadTypeLength,\n    payloadType,\n    payloadLength,\n    payload\n  )\n}\n","/**\n * @packageDocumentation\n *\n * Provides strategies ensure arrays are equivalent.\n *\n * @example\n *\n * ```typescript\n * import { arrayEquals } from '@libp2p/utils/array-equals'\n * import { multiaddr } from '@multformats/multiaddr'\n *\n * const ma1 = multiaddr('/ip4/127.0.0.1/tcp/9000'),\n * const ma2 = multiaddr('/ip4/82.41.53.1/tcp/9000')\n *\n * console.info(arrayEquals([ma1], [ma1])) // true\n * console.info(arrayEquals([ma1], [ma2])) // false\n * ```\n */\n\n/**\n * Verify if two arrays of non primitive types with the \"equals\" function are equal.\n * Compatible with multiaddr, peer-id and others.\n */\nexport function arrayEquals (a: any[], b: any[]): boolean {\n  const sort = (a: any, b: any): number => a.toString().localeCompare(b.toString())\n\n  if (a.length !== b.length) {\n    return false\n  }\n\n  b.sort(sort)\n\n  return a.sort(sort).every((item, index) => b[index].equals(item))\n}\n","// The domain string used for peer records contained in a Envelope.\nexport const ENVELOPE_DOMAIN_PEER_RECORD = 'libp2p-peer-record'\n\n// The type hint used to identify peer records in a Envelope.\n// Defined in https://github.com/multiformats/multicodec/blob/master/table.csv\n// with name \"libp2p-peer-record\"\nexport const ENVELOPE_PAYLOAD_TYPE_PEER_RECORD = Uint8Array.from([3, 1])\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface PeerRecord {\n  peerId: Uint8Array\n  seq: bigint\n  addresses: PeerRecord.AddressInfo[]\n}\n\nexport namespace PeerRecord {\n  export interface AddressInfo {\n    multiaddr: Uint8Array\n  }\n\n  export namespace AddressInfo {\n    let _codec: Codec<AddressInfo>\n\n    export const codec = (): Codec<AddressInfo> => {\n      if (_codec == null) {\n        _codec = message<AddressInfo>((obj, w, opts = {}) => {\n          if (opts.lengthDelimited !== false) {\n            w.fork()\n          }\n\n          if ((obj.multiaddr != null && obj.multiaddr.byteLength > 0)) {\n            w.uint32(10)\n            w.bytes(obj.multiaddr)\n          }\n\n          if (opts.lengthDelimited !== false) {\n            w.ldelim()\n          }\n        }, (reader, length) => {\n          const obj: any = {\n            multiaddr: new Uint8Array(0)\n          }\n\n          const end = length == null ? reader.len : reader.pos + length\n\n          while (reader.pos < end) {\n            const tag = reader.uint32()\n\n            switch (tag >>> 3) {\n              case 1:\n                obj.multiaddr = reader.bytes()\n                break\n              default:\n                reader.skipType(tag & 7)\n                break\n            }\n          }\n\n          return obj\n        })\n      }\n\n      return _codec\n    }\n\n    export const encode = (obj: Partial<AddressInfo>): Uint8Array => {\n      return encodeMessage(obj, AddressInfo.codec())\n    }\n\n    export const decode = (buf: Uint8Array | Uint8ArrayList): AddressInfo => {\n      return decodeMessage(buf, AddressInfo.codec())\n    }\n  }\n\n  let _codec: Codec<PeerRecord>\n\n  export const codec = (): Codec<PeerRecord> => {\n    if (_codec == null) {\n      _codec = message<PeerRecord>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if ((obj.peerId != null && obj.peerId.byteLength > 0)) {\n          w.uint32(10)\n          w.bytes(obj.peerId)\n        }\n\n        if ((obj.seq != null && obj.seq !== 0n)) {\n          w.uint32(16)\n          w.uint64(obj.seq)\n        }\n\n        if (obj.addresses != null) {\n          for (const value of obj.addresses) {\n            w.uint32(26)\n            PeerRecord.AddressInfo.codec().encode(value, w)\n          }\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          peerId: new Uint8Array(0),\n          seq: 0n,\n          addresses: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.peerId = reader.bytes()\n              break\n            case 2:\n              obj.seq = reader.uint64()\n              break\n            case 3:\n              obj.addresses.push(PeerRecord.AddressInfo.codec().decode(reader, reader.uint32()))\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PeerRecord>): Uint8Array => {\n    return encodeMessage(obj, PeerRecord.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PeerRecord => {\n    return decodeMessage(buf, PeerRecord.codec())\n  }\n}\n","import { peerIdFromBytes } from '@libp2p/peer-id'\nimport { arrayEquals } from '@libp2p/utils/array-equals'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport {\n  ENVELOPE_DOMAIN_PEER_RECORD,\n  ENVELOPE_PAYLOAD_TYPE_PEER_RECORD\n} from './consts.js'\nimport { PeerRecord as Protobuf } from './peer-record.js'\nimport type { PeerId } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface PeerRecordInit {\n  peerId: PeerId\n\n  /**\n   * Addresses of the associated peer.\n   */\n  multiaddrs?: Multiaddr[]\n\n  /**\n   * Monotonically-increasing sequence counter that's used to order PeerRecords in time.\n   */\n  seqNumber?: bigint\n}\n\n/**\n * The PeerRecord is used for distributing peer routing records across the network.\n * It contains the peer's reachable listen addresses.\n */\nexport class PeerRecord {\n  /**\n   * Unmarshal Peer Record Protobuf\n   */\n  static createFromProtobuf = (buf: Uint8Array | Uint8ArrayList): PeerRecord => {\n    const peerRecord = Protobuf.decode(buf)\n    const peerId = peerIdFromBytes(peerRecord.peerId)\n    const multiaddrs = (peerRecord.addresses ?? []).map((a) => multiaddr(a.multiaddr))\n    const seqNumber = peerRecord.seq\n\n    return new PeerRecord({ peerId, multiaddrs, seqNumber })\n  }\n\n  static DOMAIN = ENVELOPE_DOMAIN_PEER_RECORD\n  static CODEC = ENVELOPE_PAYLOAD_TYPE_PEER_RECORD\n\n  public peerId: PeerId\n  public multiaddrs: Multiaddr[]\n  public seqNumber: bigint\n  public domain = PeerRecord.DOMAIN\n  public codec = PeerRecord.CODEC\n  private marshaled?: Uint8Array\n\n  constructor (init: PeerRecordInit) {\n    const { peerId, multiaddrs, seqNumber } = init\n\n    this.peerId = peerId\n    this.multiaddrs = multiaddrs ?? []\n    this.seqNumber = seqNumber ?? BigInt(Date.now())\n  }\n\n  /**\n   * Marshal a record to be used in an envelope\n   */\n  marshal (): Uint8Array {\n    if (this.marshaled == null) {\n      this.marshaled = Protobuf.encode({\n        peerId: this.peerId.toBytes(),\n        seq: BigInt(this.seqNumber),\n        addresses: this.multiaddrs.map((m) => ({\n          multiaddr: m.bytes\n        }))\n      })\n    }\n\n    return this.marshaled\n  }\n\n  /**\n   * Returns true if `this` record equals the `other`\n   */\n  equals (other: unknown): boolean {\n    if (!(other instanceof PeerRecord)) {\n      return false\n    }\n\n    // Validate PeerId\n    if (!this.peerId.equals(other.peerId)) {\n      return false\n    }\n\n    // Validate seqNumber\n    if (this.seqNumber !== other.seqNumber) {\n      return false\n    }\n\n    // Validate multiaddrs\n    if (!arrayEquals(this.multiaddrs, other.multiaddrs)) {\n      return false\n    }\n\n    return true\n  }\n}\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Identify {\n  protocolVersion?: string\n  agentVersion?: string\n  publicKey?: Uint8Array\n  listenAddrs: Uint8Array[]\n  observedAddr?: Uint8Array\n  protocols: string[]\n  signedPeerRecord?: Uint8Array\n}\n\nexport namespace Identify {\n  let _codec: Codec<Identify>\n\n  export const codec = (): Codec<Identify> => {\n    if (_codec == null) {\n      _codec = message<Identify>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.protocolVersion != null) {\n          w.uint32(42)\n          w.string(obj.protocolVersion)\n        }\n\n        if (obj.agentVersion != null) {\n          w.uint32(50)\n          w.string(obj.agentVersion)\n        }\n\n        if (obj.publicKey != null) {\n          w.uint32(10)\n          w.bytes(obj.publicKey)\n        }\n\n        if (obj.listenAddrs != null) {\n          for (const value of obj.listenAddrs) {\n            w.uint32(18)\n            w.bytes(value)\n          }\n        }\n\n        if (obj.observedAddr != null) {\n          w.uint32(34)\n          w.bytes(obj.observedAddr)\n        }\n\n        if (obj.protocols != null) {\n          for (const value of obj.protocols) {\n            w.uint32(26)\n            w.string(value)\n          }\n        }\n\n        if (obj.signedPeerRecord != null) {\n          w.uint32(66)\n          w.bytes(obj.signedPeerRecord)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          listenAddrs: [],\n          protocols: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 5:\n              obj.protocolVersion = reader.string()\n              break\n            case 6:\n              obj.agentVersion = reader.string()\n              break\n            case 1:\n              obj.publicKey = reader.bytes()\n              break\n            case 2:\n              obj.listenAddrs.push(reader.bytes())\n              break\n            case 4:\n              obj.observedAddr = reader.bytes()\n              break\n            case 3:\n              obj.protocols.push(reader.string())\n              break\n            case 8:\n              obj.signedPeerRecord = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Identify>): Uint8Array => {\n    return encodeMessage(obj, Identify.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Identify => {\n    return decodeMessage(buf, Identify.codec())\n  }\n}\n","/* eslint-disable complexity */\n\nimport { CodeError, ERR_NOT_FOUND, setMaxListeners } from '@libp2p/interface'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { RecordEnvelope, PeerRecord } from '@libp2p/peer-record'\nimport { type Multiaddr, multiaddr, protocols } from '@multiformats/multiaddr'\nimport { IP_OR_DOMAIN } from '@multiformats/multiaddr-matcher'\nimport { pbStream } from 'it-protobuf-stream'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { isNode, isBrowser, isWebWorker, isElectronMain, isElectronRenderer, isReactNative } from 'wherearewe'\nimport {\n  IDENTIFY_PROTOCOL_VERSION,\n  MULTICODEC_IDENTIFY_PROTOCOL_NAME,\n  MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME,\n  MULTICODEC_IDENTIFY_PROTOCOL_VERSION,\n  MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION\n} from './consts.js'\nimport { Identify as IdentifyMessage } from './pb/message.js'\nimport type { Identify as IdentifyInterface, IdentifyComponents, IdentifyInit } from './index.js'\nimport type { Libp2pEvents, IdentifyResult, SignedPeerRecord, AbortOptions, Logger, Connection, Stream, TypedEventTarget, PeerId, Peer, PeerData, PeerStore, Startable } from '@libp2p/interface'\nimport type { AddressManager, ConnectionManager, IncomingStreamData, Registrar } from '@libp2p/interface-internal'\n\n// https://github.com/libp2p/go-libp2p/blob/8d2e54e1637041d5cf4fac1e531287560bd1f4ac/p2p/protocol/identify/id.go#L52\nconst MAX_IDENTIFY_MESSAGE_SIZE = 1024 * 8\n\nconst defaultValues = {\n  protocolPrefix: 'ipfs',\n  // https://github.com/libp2p/go-libp2p/blob/8d2e54e1637041d5cf4fac1e531287560bd1f4ac/p2p/protocol/identify/id.go#L48\n  timeout: 60000,\n  maxInboundStreams: 1,\n  maxOutboundStreams: 1,\n  maxPushIncomingStreams: 1,\n  maxPushOutgoingStreams: 1,\n  maxObservedAddresses: 10,\n  maxIdentifyMessageSize: 8192,\n  runOnConnectionOpen: true,\n  runOnTransientConnection: true\n}\n\nexport class Identify implements Startable, IdentifyInterface {\n  private readonly identifyProtocolStr: string\n  private readonly identifyPushProtocolStr: string\n  public readonly host: {\n    protocolVersion: string\n    agentVersion: string\n  }\n\n  private started: boolean\n  private readonly timeout: number\n  private readonly peerId: PeerId\n  private readonly peerStore: PeerStore\n  private readonly registrar: Registrar\n  private readonly connectionManager: ConnectionManager\n  private readonly addressManager: AddressManager\n  private readonly maxInboundStreams: number\n  private readonly maxOutboundStreams: number\n  private readonly maxPushIncomingStreams: number\n  private readonly maxPushOutgoingStreams: number\n  private readonly maxIdentifyMessageSize: number\n  private readonly maxObservedAddresses: number\n  private readonly events: TypedEventTarget<Libp2pEvents>\n  private readonly runOnTransientConnection: boolean\n  private readonly log: Logger\n\n  constructor (components: IdentifyComponents, init: IdentifyInit = {}) {\n    this.started = false\n    this.peerId = components.peerId\n    this.peerStore = components.peerStore\n    this.registrar = components.registrar\n    this.addressManager = components.addressManager\n    this.connectionManager = components.connectionManager\n    this.events = components.events\n    this.log = components.logger.forComponent('libp2p:identify')\n\n    this.identifyProtocolStr = `/${init.protocolPrefix ?? defaultValues.protocolPrefix}/${MULTICODEC_IDENTIFY_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PROTOCOL_VERSION}`\n    this.identifyPushProtocolStr = `/${init.protocolPrefix ?? defaultValues.protocolPrefix}/${MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION}`\n    this.timeout = init.timeout ?? defaultValues.timeout\n    this.maxInboundStreams = init.maxInboundStreams ?? defaultValues.maxInboundStreams\n    this.maxOutboundStreams = init.maxOutboundStreams ?? defaultValues.maxOutboundStreams\n    this.maxPushIncomingStreams = init.maxPushIncomingStreams ?? defaultValues.maxPushIncomingStreams\n    this.maxPushOutgoingStreams = init.maxPushOutgoingStreams ?? defaultValues.maxPushOutgoingStreams\n    this.maxIdentifyMessageSize = init.maxIdentifyMessageSize ?? defaultValues.maxIdentifyMessageSize\n    this.maxObservedAddresses = init.maxObservedAddresses ?? defaultValues.maxObservedAddresses\n    this.runOnTransientConnection = init.runOnTransientConnection ?? defaultValues.runOnTransientConnection\n\n    // Store self host metadata\n    this.host = {\n      protocolVersion: `${init.protocolPrefix ?? defaultValues.protocolPrefix}/${IDENTIFY_PROTOCOL_VERSION}`,\n      agentVersion: init.agentVersion ?? `${components.nodeInfo.name}/${components.nodeInfo.version}`\n    }\n\n    if (init.runOnConnectionOpen ?? defaultValues.runOnConnectionOpen) {\n      // When a new connection happens, trigger identify\n      components.events.addEventListener('connection:open', (evt) => {\n        const connection = evt.detail\n        this.identify(connection).catch(err => { this.log.error('error during identify trigged by connection:open', err) })\n      })\n    }\n\n    // When self peer record changes, trigger identify-push\n    components.events.addEventListener('self:peer:update', (evt) => {\n      void this.push().catch(err => { this.log.error(err) })\n    })\n\n    // Append user agent version to default AGENT_VERSION depending on the environment\n    if (this.host.agentVersion === `${components.nodeInfo.name}/${components.nodeInfo.version}`) {\n      if (isNode || isElectronMain) {\n        this.host.agentVersion += ` UserAgent=${globalThis.process.version}`\n      } else if (isBrowser || isWebWorker || isElectronRenderer || isReactNative) {\n        this.host.agentVersion += ` UserAgent=${globalThis.navigator.userAgent}`\n      }\n    }\n  }\n\n  isStarted (): boolean {\n    return this.started\n  }\n\n  async start (): Promise<void> {\n    if (this.started) {\n      return\n    }\n\n    await this.peerStore.merge(this.peerId, {\n      metadata: {\n        AgentVersion: uint8ArrayFromString(this.host.agentVersion),\n        ProtocolVersion: uint8ArrayFromString(this.host.protocolVersion)\n      }\n    })\n\n    await this.registrar.handle(this.identifyProtocolStr, (data) => {\n      void this._handleIdentify(data).catch(err => {\n        this.log.error(err)\n      })\n    }, {\n      maxInboundStreams: this.maxInboundStreams,\n      maxOutboundStreams: this.maxOutboundStreams,\n      runOnTransientConnection: this.runOnTransientConnection\n    })\n    await this.registrar.handle(this.identifyPushProtocolStr, (data) => {\n      void this._handlePush(data).catch(err => {\n        this.log.error(err)\n      })\n    }, {\n      maxInboundStreams: this.maxPushIncomingStreams,\n      maxOutboundStreams: this.maxPushOutgoingStreams,\n      runOnTransientConnection: this.runOnTransientConnection\n    })\n\n    this.started = true\n  }\n\n  async stop (): Promise<void> {\n    await this.registrar.unhandle(this.identifyProtocolStr)\n    await this.registrar.unhandle(this.identifyPushProtocolStr)\n\n    this.started = false\n  }\n\n  /**\n   * Send an Identify Push update to the list of connections\n   */\n  async pushToConnections (connections: Connection[]): Promise<void> {\n    const listenAddresses = this.addressManager.getAddresses().map(ma => ma.decapsulateCode(protocols('p2p').code))\n    const peerRecord = new PeerRecord({\n      peerId: this.peerId,\n      multiaddrs: listenAddresses\n    })\n    const signedPeerRecord = await RecordEnvelope.seal(peerRecord, this.peerId)\n    const supportedProtocols = this.registrar.getProtocols()\n    const peer = await this.peerStore.get(this.peerId)\n    const agentVersion = uint8ArrayToString(peer.metadata.get('AgentVersion') ?? uint8ArrayFromString(this.host.agentVersion))\n    const protocolVersion = uint8ArrayToString(peer.metadata.get('ProtocolVersion') ?? uint8ArrayFromString(this.host.protocolVersion))\n\n    const pushes = connections.map(async connection => {\n      let stream: Stream | undefined\n      const signal = AbortSignal.timeout(this.timeout)\n\n      setMaxListeners(Infinity, signal)\n\n      try {\n        stream = await connection.newStream(this.identifyPushProtocolStr, {\n          signal,\n          runOnTransientConnection: this.runOnTransientConnection\n        })\n\n        const pb = pbStream(stream, {\n          maxDataLength: this.maxIdentifyMessageSize ?? MAX_IDENTIFY_MESSAGE_SIZE\n        }).pb(IdentifyMessage)\n\n        await pb.write({\n          listenAddrs: listenAddresses.map(ma => ma.bytes),\n          signedPeerRecord: signedPeerRecord.marshal(),\n          protocols: supportedProtocols,\n          agentVersion,\n          protocolVersion\n        }, {\n          signal\n        })\n\n        await stream.close({\n          signal\n        })\n      } catch (err: any) {\n        // Just log errors\n        this.log.error('could not push identify update to peer', err)\n        stream?.abort(err)\n      }\n    })\n\n    await Promise.all(pushes)\n  }\n\n  /**\n   * Calls `push` on all peer connections\n   */\n  async push (): Promise<void> {\n    // Do not try to push if we are not running\n    if (!this.isStarted()) {\n      return\n    }\n\n    const connections: Connection[] = []\n\n    await Promise.all(\n      this.connectionManager.getConnections().map(async conn => {\n        try {\n          const peer = await this.peerStore.get(conn.remotePeer)\n\n          if (!peer.protocols.includes(this.identifyPushProtocolStr)) {\n            return\n          }\n\n          connections.push(conn)\n        } catch (err: any) {\n          if (err.code !== ERR_NOT_FOUND) {\n            throw err\n          }\n        }\n      })\n    )\n\n    await this.pushToConnections(connections)\n  }\n\n  async _identify (connection: Connection, options: AbortOptions = {}): Promise<IdentifyMessage> {\n    let stream: Stream | undefined\n\n    if (options.signal == null) {\n      const signal = AbortSignal.timeout(this.timeout)\n      setMaxListeners(Infinity, signal)\n\n      options = {\n        ...options,\n        signal\n      }\n    }\n\n    try {\n      stream = await connection.newStream(this.identifyProtocolStr, {\n        ...options,\n        runOnTransientConnection: this.runOnTransientConnection\n      })\n\n      const pb = pbStream(stream, {\n        maxDataLength: this.maxIdentifyMessageSize ?? MAX_IDENTIFY_MESSAGE_SIZE\n      }).pb(IdentifyMessage)\n\n      const message = await pb.read(options)\n\n      await stream.close(options)\n\n      return message\n    } catch (err: any) {\n      this.log.error('error while reading identify message', err)\n      stream?.abort(err)\n      throw err\n    }\n  }\n\n  async identify (connection: Connection, options: AbortOptions = {}): Promise<IdentifyResult> {\n    const message = await this._identify(connection, options)\n    const {\n      publicKey,\n      protocols,\n      observedAddr\n    } = message\n\n    if (publicKey == null) {\n      throw new CodeError('public key was missing from identify message', 'ERR_MISSING_PUBLIC_KEY')\n    }\n\n    const id = await peerIdFromKeys(publicKey)\n\n    if (!connection.remotePeer.equals(id)) {\n      throw new CodeError('identified peer does not match the expected peer', 'ERR_INVALID_PEER')\n    }\n\n    if (this.peerId.equals(id)) {\n      throw new CodeError('identified peer is our own peer id?', 'ERR_INVALID_PEER')\n    }\n\n    // Get the observedAddr if there is one\n    const cleanObservedAddr = getCleanMultiaddr(observedAddr)\n\n    this.log('identify completed for peer %p and protocols %o', id, protocols)\n    this.log('our observed address is %a', cleanObservedAddr)\n\n    if (cleanObservedAddr != null &&\n        this.addressManager.getObservedAddrs().length < (this.maxObservedAddresses ?? Infinity)) {\n      this.log('storing our observed address %a', cleanObservedAddr)\n      this.addressManager.addObservedAddr(cleanObservedAddr)\n    }\n\n    return this.#consumeIdentifyMessage(connection, message)\n  }\n\n  /**\n   * Sends the `Identify` response with the Signed Peer Record\n   * to the requesting peer over the given `connection`\n   */\n  async _handleIdentify (data: IncomingStreamData): Promise<void> {\n    const { connection, stream } = data\n\n    const signal = AbortSignal.timeout(this.timeout)\n\n    setMaxListeners(Infinity, signal)\n\n    try {\n      const publicKey = this.peerId.publicKey ?? new Uint8Array(0)\n      const peerData = await this.peerStore.get(this.peerId)\n      const multiaddrs = this.addressManager.getAddresses().map(ma => ma.decapsulateCode(protocols('p2p').code))\n      let signedPeerRecord = peerData.peerRecordEnvelope\n\n      if (multiaddrs.length > 0 && signedPeerRecord == null) {\n        const peerRecord = new PeerRecord({\n          peerId: this.peerId,\n          multiaddrs\n        })\n\n        const envelope = await RecordEnvelope.seal(peerRecord, this.peerId)\n        signedPeerRecord = envelope.marshal().subarray()\n      }\n\n      let observedAddr: Uint8Array | undefined = connection.remoteAddr.bytes\n\n      if (!IP_OR_DOMAIN.matches(connection.remoteAddr)) {\n        observedAddr = undefined\n      }\n\n      const pb = pbStream(stream).pb(IdentifyMessage)\n\n      await pb.write({\n        protocolVersion: this.host.protocolVersion,\n        agentVersion: this.host.agentVersion,\n        publicKey,\n        listenAddrs: multiaddrs.map(addr => addr.bytes),\n        signedPeerRecord,\n        observedAddr,\n        protocols: peerData.protocols\n      }, {\n        signal\n      })\n\n      await stream.close({\n        signal\n      })\n    } catch (err: any) {\n      this.log.error('could not respond to identify request', err)\n      stream.abort(err)\n    }\n  }\n\n  /**\n   * Reads the Identify Push message from the given `connection`\n   */\n  async _handlePush (data: IncomingStreamData): Promise<void> {\n    const { connection, stream } = data\n\n    try {\n      if (this.peerId.equals(connection.remotePeer)) {\n        throw new Error('received push from ourselves?')\n      }\n\n      const options = {\n        signal: AbortSignal.timeout(this.timeout)\n      }\n\n      const pb = pbStream(stream, {\n        maxDataLength: this.maxIdentifyMessageSize ?? MAX_IDENTIFY_MESSAGE_SIZE\n      }).pb(IdentifyMessage)\n\n      const message = await pb.read(options)\n      await stream.close(options)\n\n      await this.#consumeIdentifyMessage(connection, message)\n    } catch (err: any) {\n      this.log.error('received invalid message', err)\n      stream.abort(err)\n      return\n    }\n\n    this.log('handled push from %p', connection.remotePeer)\n  }\n\n  async #consumeIdentifyMessage (connection: Connection, message: IdentifyMessage): Promise<IdentifyResult> {\n    this.log('received identify from %p', connection.remotePeer)\n\n    if (message == null) {\n      throw new CodeError('message was null or undefined', 'ERR_INVALID_MESSAGE')\n    }\n\n    const peer: PeerData = {}\n\n    if (message.listenAddrs.length > 0) {\n      peer.addresses = message.listenAddrs.map(buf => ({\n        isCertified: false,\n        multiaddr: multiaddr(buf)\n      }))\n    }\n\n    if (message.protocols.length > 0) {\n      peer.protocols = message.protocols\n    }\n\n    if (message.publicKey != null) {\n      peer.publicKey = message.publicKey\n\n      const peerId = await peerIdFromKeys(message.publicKey)\n\n      if (!peerId.equals(connection.remotePeer)) {\n        throw new CodeError('public key did not match remote PeerId', 'ERR_INVALID_PUBLIC_KEY')\n      }\n    }\n\n    let output: SignedPeerRecord | undefined\n\n    // if the peer record has been sent, prefer the addresses in the record as they are signed by the remote peer\n    if (message.signedPeerRecord != null) {\n      this.log('received signedPeerRecord from %p', connection.remotePeer)\n\n      let peerRecordEnvelope = message.signedPeerRecord\n      const envelope = await RecordEnvelope.openAndCertify(peerRecordEnvelope, PeerRecord.DOMAIN)\n      let peerRecord = PeerRecord.createFromProtobuf(envelope.payload)\n\n      // Verify peerId\n      if (!peerRecord.peerId.equals(envelope.peerId)) {\n        throw new CodeError('signing key does not match PeerId in the PeerRecord', 'ERR_INVALID_SIGNING_KEY')\n      }\n\n      // Make sure remote peer is the one sending the record\n      if (!connection.remotePeer.equals(peerRecord.peerId)) {\n        throw new CodeError('signing key does not match remote PeerId', 'ERR_INVALID_PEER_RECORD_KEY')\n      }\n\n      let existingPeer: Peer | undefined\n\n      try {\n        existingPeer = await this.peerStore.get(peerRecord.peerId)\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      if (existingPeer != null) {\n        // don't lose any existing metadata\n        peer.metadata = existingPeer.metadata\n\n        // if we have previously received a signed record for this peer, compare it to the incoming one\n        if (existingPeer.peerRecordEnvelope != null) {\n          const storedEnvelope = await RecordEnvelope.createFromProtobuf(existingPeer.peerRecordEnvelope)\n          const storedRecord = PeerRecord.createFromProtobuf(storedEnvelope.payload)\n\n          // ensure seq is greater than, or equal to, the last received\n          if (storedRecord.seqNumber >= peerRecord.seqNumber) {\n            this.log('sequence number was lower or equal to existing sequence number - stored: %d received: %d', storedRecord.seqNumber, peerRecord.seqNumber)\n            peerRecord = storedRecord\n            peerRecordEnvelope = existingPeer.peerRecordEnvelope\n          }\n        }\n      }\n\n      // store the signed record for next time\n      peer.peerRecordEnvelope = peerRecordEnvelope\n\n      // override the stored addresses with the signed multiaddrs\n      peer.addresses = peerRecord.multiaddrs.map(multiaddr => ({\n        isCertified: true,\n        multiaddr\n      }))\n\n      output = {\n        seq: peerRecord.seqNumber,\n        addresses: peerRecord.multiaddrs\n      }\n    } else {\n      this.log('%p did not send a signed peer record', connection.remotePeer)\n    }\n\n    this.log('patching %p with', connection.remotePeer, peer)\n    await this.peerStore.patch(connection.remotePeer, peer)\n\n    if (message.agentVersion != null || message.protocolVersion != null) {\n      const metadata: Record<string, Uint8Array> = {}\n\n      if (message.agentVersion != null) {\n        metadata.AgentVersion = uint8ArrayFromString(message.agentVersion)\n      }\n\n      if (message.protocolVersion != null) {\n        metadata.ProtocolVersion = uint8ArrayFromString(message.protocolVersion)\n      }\n\n      this.log('merging %p metadata', connection.remotePeer, metadata)\n      await this.peerStore.merge(connection.remotePeer, {\n        metadata\n      })\n    }\n\n    const result: IdentifyResult = {\n      peerId: connection.remotePeer,\n      protocolVersion: message.protocolVersion,\n      agentVersion: message.agentVersion,\n      publicKey: message.publicKey,\n      listenAddrs: message.listenAddrs.map(buf => multiaddr(buf)),\n      observedAddr: message.observedAddr == null ? undefined : multiaddr(message.observedAddr),\n      protocols: message.protocols,\n      signedPeerRecord: output,\n      connection\n    }\n\n    this.events.safeDispatchEvent('peer:identify', { detail: result })\n\n    return result\n  }\n}\n\n/**\n * Takes the `addr` and converts it to a Multiaddr if possible\n */\nfunction getCleanMultiaddr (addr: Uint8Array | string | null | undefined): Multiaddr | undefined {\n  if (addr != null && addr.length > 0) {\n    try {\n      return multiaddr(addr)\n    } catch {\n\n    }\n  }\n}\n","/**\n * @packageDocumentation\n *\n * Use the `identify` function to add support for the [Identify protocol](https://github.com/libp2p/specs/blob/master/identify/README.md) to libp2p.\n *\n * @example\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { identify } from '@libp2p/identify'\n *\n * const node = await createLibp2p({\n *   // ...other options\n *   services: {\n *     identify: identify()\n *   }\n * })\n * ```\n */\n\nimport {\n  MULTICODEC_IDENTIFY,\n  MULTICODEC_IDENTIFY_PUSH\n} from './consts.js'\nimport { Identify as IdentifyClass } from './identify.js'\nimport type { AbortOptions, IdentifyResult, Libp2pEvents, ComponentLogger, NodeInfo, TypedEventTarget, PeerId, PeerStore, Connection } from '@libp2p/interface'\nimport type { AddressManager, ConnectionManager, Registrar } from '@libp2p/interface-internal'\n\nexport interface IdentifyInit {\n  /**\n   * The prefix to use for the protocol (default: 'ipfs')\n   */\n  protocolPrefix?: string\n\n  /**\n   * What details we should send as part of an identify message\n   */\n  agentVersion?: string\n\n  /**\n   * How long we should wait for a remote peer to send their identify response\n   */\n  timeout?: number\n\n  /**\n   * Identify responses larger than this in bytes will be rejected (default: 8192)\n   */\n  maxIdentifyMessageSize?: number\n\n  maxInboundStreams?: number\n  maxOutboundStreams?: number\n\n  maxPushIncomingStreams?: number\n  maxPushOutgoingStreams?: number\n  maxObservedAddresses?: number\n\n  /**\n   * Whether to automatically dial identify on newly opened connections (default: true)\n   */\n  runOnConnectionOpen?: boolean\n\n  /**\n   * Whether to run on connections with data or duration limits (default: true)\n   */\n  runOnTransientConnection?: boolean\n}\n\nexport interface IdentifyComponents {\n  peerId: PeerId\n  peerStore: PeerStore\n  connectionManager: ConnectionManager\n  registrar: Registrar\n  addressManager: AddressManager\n  events: TypedEventTarget<Libp2pEvents>\n  logger: ComponentLogger\n  nodeInfo: NodeInfo\n}\n\n/**\n * The protocols the Identify service supports\n */\nexport const multicodecs = {\n  IDENTIFY: MULTICODEC_IDENTIFY,\n  IDENTIFY_PUSH: MULTICODEC_IDENTIFY_PUSH\n}\n\nexport interface Identify {\n  /**\n   * due to the default limits on inbound/outbound streams for this protocol,\n   * invoking this method when runOnConnectionOpen is true can lead to unpredictable results\n   * as streams may be closed by the local or the remote node.\n   * Please use with caution. If you find yourself needing to call this method to discover other peers that support your protocol,\n   * you may be better off configuring a topology to be notified instead.\n   */\n  identify(connection: Connection, options?: AbortOptions): Promise<IdentifyResult>\n\n  push(): Promise<void>\n}\n\nexport function identify (init: IdentifyInit = {}): (components: IdentifyComponents) => Identify {\n  return (components) => new IdentifyClass(components, init)\n}\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotl, wrapConstructor } from './utils.js';\n\n// SHA1 (RFC 3174) was cryptographically broken. It's still used. Don't use it for a new protocol.\n\n// Initial state\nconst SHA1_IV = /* @__PURE__ */ new Uint32Array([\n  0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\nclass SHA1 extends HashMD<SHA1> {\n  private A = SHA1_IV[0] | 0;\n  private B = SHA1_IV[1] | 0;\n  private C = SHA1_IV[2] | 0;\n  private D = SHA1_IV[3] | 0;\n  private E = SHA1_IV[4] | 0;\n\n  constructor() {\n    super(64, 20, 8, false);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { A, B, C, D, E } = this;\n    return [A, B, C, D, E];\n  }\n  protected set(A: number, B: number, C: number, D: number, E: number) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) SHA1_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 80; i++)\n      SHA1_W[i] = rotl(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n    // Compression function main loop, 80 rounds\n    let { A, B, C, D, E } = this;\n    for (let i = 0; i < 80; i++) {\n      let F, K;\n      if (i < 20) {\n        F = Chi(B, C, D);\n        K = 0x5a827999;\n      } else if (i < 40) {\n        F = B ^ C ^ D;\n        K = 0x6ed9eba1;\n      } else if (i < 60) {\n        F = Maj(B, C, D);\n        K = 0x8f1bbcdc;\n      } else {\n        F = B ^ C ^ D;\n        K = 0xca62c1d6;\n      }\n      const T = (rotl(A, 5) + F + E + K + SHA1_W[i]) | 0;\n      E = D;\n      D = C;\n      C = rotl(B, 30);\n      B = A;\n      A = T;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    this.set(A, B, C, D, E);\n  }\n  protected roundClean() {\n    SHA1_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n\nexport const sha1 = /* @__PURE__ */ wrapConstructor(() => new SHA1());\n","import { CodeError } from '@libp2p/interface'\nimport { pbkdf2 as pbkdf2Sync } from '@noble/hashes/pbkdf2'\nimport { sha1 } from '@noble/hashes/sha1'\nimport { sha256 } from '@noble/hashes/sha256'\nimport { sha512 } from '@noble/hashes/sha512'\nimport { base64 } from 'multiformats/bases/base64'\n\n/**\n * Maps an IPFS hash name to its @noble/hashes equivalent.\n *\n * See https://github.com/multiformats/multihash/blob/master/hashtable.csv\n *\n * @private\n */\nconst hashName = {\n  sha1,\n  'sha2-256': sha256,\n  'sha2-512': sha512\n}\n\n/**\n * Computes the Password-Based Key Derivation Function 2.\n */\nexport default function pbkdf2 (password: string, salt: string | Uint8Array, iterations: number, keySize: number, hash: string): string {\n  if (hash !== 'sha1' && hash !== 'sha2-256' && hash !== 'sha2-512') {\n    const types = Object.keys(hashName).join(' / ')\n    throw new CodeError(`Hash '${hash}' is unknown or not supported. Must be ${types}`, 'ERR_UNSUPPORTED_HASH_TYPE')\n  }\n\n  const hasher = hashName[hash]\n  const dek = pbkdf2Sync(\n    hasher,\n    password,\n    salt, {\n      c: iterations,\n      dkLen: keySize\n    }\n  )\n\n  return base64.encode(dek).substring(1)\n}\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { type SupportedEncodings, toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nconst pathSepS = '/'\nconst pathSepB = new TextEncoder().encode(pathSepS)\nconst pathSep = pathSepB[0]\n\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n  private _buf: Uint8Array\n\n  /**\n   * @param {string | Uint8Array} s\n   * @param {boolean} [clean]\n   */\n  constructor (s: string | Uint8Array, clean?: boolean) {\n    if (typeof s === 'string') {\n      this._buf = uint8ArrayFromString(s)\n    } else if (s instanceof Uint8Array) {\n      this._buf = s\n    } else {\n      throw new Error('Invalid key, should be String of Uint8Array')\n    }\n\n    if (clean == null) {\n      clean = true\n    }\n\n    if (clean) {\n      this.clean()\n    }\n\n    if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n      throw new Error('Invalid key')\n    }\n  }\n\n  /**\n   * Convert to the string representation\n   *\n   * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding='utf8'] - The encoding to use.\n   * @returns {string}\n   */\n  toString (encoding: SupportedEncodings = 'utf8'): string {\n    return uint8ArrayToString(this._buf, encoding)\n  }\n\n  /**\n   * Return the Uint8Array representation of the key\n   *\n   * @returns {Uint8Array}\n   */\n  uint8Array (): Uint8Array {\n    return this._buf\n  }\n\n  /**\n   * Return string representation of the key\n   *\n   * @returns {string}\n   */\n  get [Symbol.toStringTag] (): string {\n    return `Key(${this.toString()})`\n  }\n\n  /**\n   * Constructs a key out of a namespace array.\n   *\n   * @param {Array<string>} list - The array of namespaces\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * Key.withNamespaces(['one', 'two'])\n   * // => Key('/one/two')\n   * ```\n   */\n  static withNamespaces (list: string[]): Key {\n    return new Key(list.join(pathSepS))\n  }\n\n  /**\n   * Returns a randomly (uuid) generated key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * Key.random()\n   * // => Key('/344502982398')\n   * ```\n   */\n  static random (): Key {\n    return new Key(Math.random().toString().substring(2))\n  }\n\n  /**\n   * @param {*} other\n   */\n  static asKey (other: any): Key | null {\n    if (other instanceof Uint8Array || typeof other === 'string') {\n      // we can create a key from this\n      return new Key(other)\n    }\n\n    if (typeof other.uint8Array === 'function') {\n      // this is an older version or may have crossed the esm/cjs boundary\n      return new Key(other.uint8Array())\n    }\n\n    return null\n  }\n\n  /**\n   * Cleanup the current key\n   *\n   * @returns {void}\n   */\n  clean (): void {\n    if (this._buf == null || this._buf.byteLength === 0) {\n      this._buf = pathSepB\n    }\n\n    if (this._buf[0] !== pathSep) {\n      const bytes = new Uint8Array(this._buf.byteLength + 1)\n      bytes.fill(pathSep, 0, 1)\n      bytes.set(this._buf, 1)\n      this._buf = bytes\n    }\n\n    // normalize does not remove trailing slashes\n    while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n      this._buf = this._buf.subarray(0, -1)\n    }\n  }\n\n  /**\n   * Check if the given key is sorted lower than ourself.\n   *\n   * @param {Key} key - The other Key to check against\n   * @returns {boolean}\n   */\n  less (key: Key): boolean {\n    const list1 = this.list()\n    const list2 = key.list()\n\n    for (let i = 0; i < list1.length; i++) {\n      if (list2.length < i + 1) {\n        return false\n      }\n\n      const c1 = list1[i]\n      const c2 = list2[i]\n\n      if (c1 < c2) {\n        return true\n      } else if (c1 > c2) {\n        return false\n      }\n    }\n\n    return list1.length < list2.length\n  }\n\n  /**\n   * Returns the key with all parts in reversed order.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n   * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n   * ```\n   */\n  reverse (): Key {\n    return Key.withNamespaces(this.list().slice().reverse())\n  }\n\n  /**\n   * Returns the `namespaces` making up this Key.\n   *\n   * @returns {Array<string>}\n   */\n  namespaces (): string[] {\n    return this.list()\n  }\n\n  /** Returns the \"base\" namespace of this key.\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n   * // => 'Actor:JohnCleese'\n   * ```\n   */\n  baseNamespace (): string {\n    const ns = this.namespaces()\n    return ns[ns.length - 1]\n  }\n\n  /**\n   * Returns the `list` representation of this key.\n   *\n   * @returns {Array<string>}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n   * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n   * ```\n   */\n  list (): string[] {\n    return this.toString().split(pathSepS).slice(1)\n  }\n\n  /**\n   * Returns the \"type\" of this key (value of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n   * // => 'Actor'\n   * ```\n   */\n  type (): string {\n    return namespaceType(this.baseNamespace())\n  }\n\n  /**\n   * Returns the \"name\" of this key (field of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n   * // => 'JohnCleese'\n   * ```\n   */\n  name (): string {\n    return namespaceValue(this.baseNamespace())\n  }\n\n  /**\n   * Returns an \"instance\" of this type key (appends value to namespace).\n   *\n   * @param {string} s - The string to append.\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   * ```\n   */\n  instance (s: string): Key {\n    return new Key(this.toString() + ':' + s)\n  }\n\n  /**\n   * Returns the \"path\" of this key (parent + type).\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n   * // => Key('/Comedy/MontyPython/Actor')\n   * ```\n   */\n  path (): Key {\n    let p = this.parent().toString()\n    if (!p.endsWith(pathSepS)) {\n      p += pathSepS\n    }\n    p += this.type()\n    return new Key(p)\n  }\n\n  /**\n   * Returns the `parent` Key of this Key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n   * // => Key(\"/Comedy/MontyPython\")\n   * ```\n   */\n  parent (): Key {\n    const list = this.list()\n    if (list.length === 1) {\n      return new Key(pathSepS)\n    }\n\n    return new Key(list.slice(0, -1).join(pathSepS))\n  }\n\n  /**\n   * Returns the `child` Key of this Key.\n   *\n   * @param {Key} key - The child Key to add\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   * ```\n   */\n  child (key: Key): Key {\n    if (this.toString() === pathSepS) {\n      return key\n    } else if (key.toString() === pathSepS) {\n      return this\n    }\n\n    return new Key(this.toString() + key.toString(), false)\n  }\n\n  /**\n   * Returns whether this key is a prefix of `other`\n   *\n   * @param {Key} other - The other key to test against\n   * @returns {boolean}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n   * // => true\n   * ```\n   */\n  isAncestorOf (other: Key): boolean {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return other.toString().startsWith(this.toString())\n  }\n\n  /**\n   * Returns whether this key is a contains another as prefix.\n   *\n   * @param {Key} other - The other Key to test against\n   * @returns {boolean}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n   * // => true\n   * ```\n   */\n  isDecendantOf (other: Key): boolean {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return this.toString().startsWith(other.toString())\n  }\n\n  /**\n   * Checks if this key has only one namespace.\n   *\n   * @returns {boolean}\n   */\n  isTopLevel (): boolean {\n    return this.list().length === 1\n  }\n\n  /**\n   * Concats one or more Keys into one new Key.\n   *\n   * @param {Array<Key>} keys - The array of keys to concatenate\n   * @returns {Key}\n   */\n  concat (...keys: Key[]): Key {\n    return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))])\n  }\n}\n\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType (ns: string): string {\n  const parts = ns.split(':')\n  if (parts.length < 2) {\n    return ''\n  }\n  return parts.slice(0, -1).join(':')\n}\n\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue (ns: string): string {\n  const parts = ns.split(':')\n  return parts[parts.length - 1]\n}\n\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten (arr: any[]): string[] {\n  return ([]).concat(...arr)\n}\n","/**\n * Thin ESM wrapper for CJS named exports.\n *\n * Ref: https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1\n */\n\nimport mergeOptions from './index.js';\nexport default mergeOptions;\n","/* eslint max-nested-callbacks: [\"error\", 5] */\n\nimport { pbkdf2, randomBytes } from '@libp2p/crypto'\nimport { generateKeyPair, importKey, unmarshalPrivateKey } from '@libp2p/crypto/keys'\nimport { CodeError } from '@libp2p/interface'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { Key } from 'interface-datastore/key'\nimport mergeOptions from 'merge-options'\nimport sanitize from 'sanitize-filename'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { codes } from './errors.js'\nimport type { KeychainComponents, KeychainInit, Keychain, KeyInfo } from './index.js'\nimport type { Logger, KeyType, PeerId } from '@libp2p/interface'\n\nconst keyPrefix = '/pkcs8/'\nconst infoPrefix = '/info/'\nconst privates = new WeakMap<object, { dek: string }>()\n\n// NIST SP 800-132\nconst NIST = {\n  minKeyLength: 112 / 8,\n  minSaltLength: 128 / 8,\n  minIterationCount: 1000\n}\n\nconst defaultOptions = {\n  // See https://cryptosense.com/parametesr-choice-for-pbkdf2/\n  dek: {\n    keyLength: 512 / 8,\n    iterationCount: 10000,\n    salt: 'you should override this value with a crypto secure random number',\n    hash: 'sha2-512'\n  }\n}\n\nfunction validateKeyName (name: string): boolean {\n  if (name == null) {\n    return false\n  }\n  if (typeof name !== 'string') {\n    return false\n  }\n  return name === sanitize(name.trim()) && name.length > 0\n}\n\n/**\n * Throws an error after a delay\n *\n * This assumes than an error indicates that the keychain is under attack. Delay returning an\n * error to make brute force attacks harder.\n */\nasync function randomDelay (): Promise<void> {\n  const min = 200\n  const max = 1000\n  const delay = Math.random() * (max - min) + min\n\n  await new Promise(resolve => setTimeout(resolve, delay))\n}\n\n/**\n * Converts a key name into a datastore name\n */\nfunction DsName (name: string): Key {\n  return new Key(keyPrefix + name)\n}\n\n/**\n * Converts a key name into a datastore info name\n */\nfunction DsInfoName (name: string): Key {\n  return new Key(infoPrefix + name)\n}\n\n/**\n * Manages the lifecycle of a key. Keys are encrypted at rest using PKCS #8.\n *\n * A key in the store has two entries\n * - '/info/*key-name*', contains the KeyInfo for the key\n * - '/pkcs8/*key-name*', contains the PKCS #8 for the key\n *\n */\nexport class DefaultKeychain implements Keychain {\n  private readonly components: KeychainComponents\n  private readonly init: KeychainInit\n  private readonly log: Logger\n\n  /**\n   * Creates a new instance of a key chain\n   */\n  constructor (components: KeychainComponents, init: KeychainInit) {\n    this.components = components\n    this.log = components.logger.forComponent('libp2p:keychain')\n    this.init = mergeOptions(defaultOptions, init)\n\n    // Enforce NIST SP 800-132\n    if (this.init.pass != null && this.init.pass?.length < 20) {\n      throw new Error('pass must be least 20 characters')\n    }\n    if (this.init.dek?.keyLength != null && this.init.dek.keyLength < NIST.minKeyLength) {\n      throw new Error(`dek.keyLength must be least ${NIST.minKeyLength} bytes`)\n    }\n    if (this.init.dek?.salt?.length != null && this.init.dek.salt.length < NIST.minSaltLength) {\n      throw new Error(`dek.saltLength must be least ${NIST.minSaltLength} bytes`)\n    }\n    if (this.init.dek?.iterationCount != null && this.init.dek.iterationCount < NIST.minIterationCount) {\n      throw new Error(`dek.iterationCount must be least ${NIST.minIterationCount}`)\n    }\n\n    const dek = this.init.pass != null && this.init.dek?.salt != null\n      ? pbkdf2(\n        this.init.pass,\n        this.init.dek?.salt,\n        this.init.dek?.iterationCount,\n        this.init.dek?.keyLength,\n        this.init.dek?.hash)\n      : ''\n\n    privates.set(this, { dek })\n  }\n\n  /**\n   * Generates the options for a keychain.  A random salt is produced.\n   *\n   * @returns {object}\n   */\n  static generateOptions (): KeychainInit {\n    const options = Object.assign({}, defaultOptions)\n    const saltLength = Math.ceil(NIST.minSaltLength / 3) * 3 // no base64 padding\n    options.dek.salt = uint8ArrayToString(randomBytes(saltLength), 'base64')\n    return options\n  }\n\n  /**\n   * Gets an object that can encrypt/decrypt protected data.\n   * The default options for a keychain.\n   *\n   * @returns {object}\n   */\n  static get options (): typeof defaultOptions {\n    return defaultOptions\n  }\n\n  /**\n   * Create a new key.\n   *\n   * @param {string} name - The local key name; cannot already exist.\n   * @param {string} type - One of the key types; 'rsa'.\n   * @param {number} [size = 2048] - The key size in bits. Used for rsa keys only\n   */\n  async createKey (name: string, type: KeyType, size = 2048): Promise<KeyInfo> {\n    if (!validateKeyName(name) || name === 'self') {\n      await randomDelay()\n      throw new CodeError('Invalid key name', codes.ERR_INVALID_KEY_NAME)\n    }\n\n    if (typeof type !== 'string') {\n      await randomDelay()\n      throw new CodeError('Invalid key type', codes.ERR_INVALID_KEY_TYPE)\n    }\n\n    const dsname = DsName(name)\n    const exists = await this.components.datastore.has(dsname)\n    if (exists) {\n      await randomDelay()\n      throw new CodeError('Key name already exists', codes.ERR_KEY_ALREADY_EXISTS)\n    }\n\n    switch (type.toLowerCase()) {\n      case 'rsa':\n        if (!Number.isSafeInteger(size) || size < 2048) {\n          await randomDelay()\n          throw new CodeError('Invalid RSA key size', codes.ERR_INVALID_KEY_SIZE)\n        }\n        break\n      default:\n        break\n    }\n\n    let keyInfo\n    try {\n      const keypair = await generateKeyPair(type, size)\n      const kid = await keypair.id()\n      const cached = privates.get(this)\n\n      if (cached == null) {\n        throw new CodeError('dek missing', codes.ERR_INVALID_PARAMETERS)\n      }\n\n      const dek = cached.dek\n      const pem = await keypair.export(dek)\n      keyInfo = {\n        name,\n        id: kid\n      }\n      const batch = this.components.datastore.batch()\n      batch.put(dsname, uint8ArrayFromString(pem))\n      batch.put(DsInfoName(name), uint8ArrayFromString(JSON.stringify(keyInfo)))\n\n      await batch.commit()\n    } catch (err: any) {\n      await randomDelay()\n      throw err\n    }\n\n    return keyInfo\n  }\n\n  /**\n   * List all the keys.\n   *\n   * @returns {Promise<KeyInfo[]>}\n   */\n  async listKeys (): Promise<KeyInfo[]> {\n    const query = {\n      prefix: infoPrefix\n    }\n\n    const info = []\n    for await (const value of this.components.datastore.query(query)) {\n      info.push(JSON.parse(uint8ArrayToString(value.value)))\n    }\n\n    return info\n  }\n\n  /**\n   * Find a key by it's id\n   */\n  async findKeyById (id: string): Promise<KeyInfo> {\n    try {\n      const keys = await this.listKeys()\n      const key = keys.find((k) => k.id === id)\n\n      if (key == null) {\n        throw new CodeError(`Key with id '${id}' does not exist.`, codes.ERR_KEY_NOT_FOUND)\n      }\n\n      return key\n    } catch (err: any) {\n      await randomDelay()\n      throw err\n    }\n  }\n\n  /**\n   * Find a key by it's name.\n   *\n   * @param {string} name - The local key name.\n   * @returns {Promise<KeyInfo>}\n   */\n  async findKeyByName (name: string): Promise<KeyInfo> {\n    if (!validateKeyName(name)) {\n      await randomDelay()\n      throw new CodeError(`Invalid key name '${name}'`, codes.ERR_INVALID_KEY_NAME)\n    }\n\n    const dsname = DsInfoName(name)\n    try {\n      const res = await this.components.datastore.get(dsname)\n      return JSON.parse(uint8ArrayToString(res))\n    } catch (err: any) {\n      await randomDelay()\n      this.log.error(err)\n      throw new CodeError(`Key '${name}' does not exist.`, codes.ERR_KEY_NOT_FOUND)\n    }\n  }\n\n  /**\n   * Remove an existing key.\n   *\n   * @param {string} name - The local key name; must already exist.\n   * @returns {Promise<KeyInfo>}\n   */\n  async removeKey (name: string): Promise<KeyInfo> {\n    if (!validateKeyName(name) || name === 'self') {\n      await randomDelay()\n      throw new CodeError(`Invalid key name '${name}'`, codes.ERR_INVALID_KEY_NAME)\n    }\n    const dsname = DsName(name)\n    const keyInfo = await this.findKeyByName(name)\n    const batch = this.components.datastore.batch()\n    batch.delete(dsname)\n    batch.delete(DsInfoName(name))\n    await batch.commit()\n    return keyInfo\n  }\n\n  /**\n   * Rename a key\n   *\n   * @param {string} oldName - The old local key name; must already exist.\n   * @param {string} newName - The new local key name; must not already exist.\n   * @returns {Promise<KeyInfo>}\n   */\n  async renameKey (oldName: string, newName: string): Promise<KeyInfo> {\n    if (!validateKeyName(oldName) || oldName === 'self') {\n      await randomDelay()\n      throw new CodeError(`Invalid old key name '${oldName}'`, codes.ERR_OLD_KEY_NAME_INVALID)\n    }\n    if (!validateKeyName(newName) || newName === 'self') {\n      await randomDelay()\n      throw new CodeError(`Invalid new key name '${newName}'`, codes.ERR_NEW_KEY_NAME_INVALID)\n    }\n    const oldDsname = DsName(oldName)\n    const newDsname = DsName(newName)\n    const oldInfoName = DsInfoName(oldName)\n    const newInfoName = DsInfoName(newName)\n\n    const exists = await this.components.datastore.has(newDsname)\n    if (exists) {\n      await randomDelay()\n      throw new CodeError(`Key '${newName}' already exists`, codes.ERR_KEY_ALREADY_EXISTS)\n    }\n\n    try {\n      const pem = await this.components.datastore.get(oldDsname)\n      const res = await this.components.datastore.get(oldInfoName)\n\n      const keyInfo = JSON.parse(uint8ArrayToString(res))\n      keyInfo.name = newName\n      const batch = this.components.datastore.batch()\n      batch.put(newDsname, pem)\n      batch.put(newInfoName, uint8ArrayFromString(JSON.stringify(keyInfo)))\n      batch.delete(oldDsname)\n      batch.delete(oldInfoName)\n      await batch.commit()\n      return keyInfo\n    } catch (err: any) {\n      await randomDelay()\n      throw err\n    }\n  }\n\n  /**\n   * Export an existing key as a PEM encrypted PKCS #8 string\n   */\n  async exportKey (name: string, password: string): Promise<string> {\n    if (!validateKeyName(name)) {\n      await randomDelay()\n      throw new CodeError(`Invalid key name '${name}'`, codes.ERR_INVALID_KEY_NAME)\n    }\n    if (password == null) {\n      await randomDelay()\n      throw new CodeError('Password is required', codes.ERR_PASSWORD_REQUIRED)\n    }\n\n    const dsname = DsName(name)\n    try {\n      const res = await this.components.datastore.get(dsname)\n      const pem = uint8ArrayToString(res)\n      const cached = privates.get(this)\n\n      if (cached == null) {\n        throw new CodeError('dek missing', codes.ERR_INVALID_PARAMETERS)\n      }\n\n      const dek = cached.dek\n      const privateKey = await importKey(pem, dek)\n      const keyString = await privateKey.export(password)\n\n      return keyString\n    } catch (err: any) {\n      await randomDelay()\n      throw err\n    }\n  }\n\n  /**\n   * Export an existing key as a PeerId\n   */\n  async exportPeerId (name: string): Promise<PeerId> {\n    const password = 'temporary-password'\n    const pem = await this.exportKey(name, password)\n    const privateKey = await importKey(pem, password)\n\n    return peerIdFromKeys(privateKey.public.bytes, privateKey.bytes)\n  }\n\n  /**\n   * Import a new key from a PEM encoded PKCS #8 string\n   *\n   * @param {string} name - The local key name; must not already exist.\n   * @param {string} pem - The PEM encoded PKCS #8 string\n   * @param {string} password - The password.\n   * @returns {Promise<KeyInfo>}\n   */\n  async importKey (name: string, pem: string, password: string): Promise<KeyInfo> {\n    if (!validateKeyName(name) || name === 'self') {\n      await randomDelay()\n      throw new CodeError(`Invalid key name '${name}'`, codes.ERR_INVALID_KEY_NAME)\n    }\n    if (pem == null) {\n      await randomDelay()\n      throw new CodeError('PEM encoded key is required', codes.ERR_PEM_REQUIRED)\n    }\n    const dsname = DsName(name)\n    const exists = await this.components.datastore.has(dsname)\n    if (exists) {\n      await randomDelay()\n      throw new CodeError(`Key '${name}' already exists`, codes.ERR_KEY_ALREADY_EXISTS)\n    }\n\n    let privateKey\n    try {\n      privateKey = await importKey(pem, password)\n    } catch (err: any) {\n      await randomDelay()\n      throw new CodeError('Cannot read the key, most likely the password is wrong', codes.ERR_CANNOT_READ_KEY)\n    }\n\n    let kid\n    try {\n      kid = await privateKey.id()\n      const cached = privates.get(this)\n\n      if (cached == null) {\n        throw new CodeError('dek missing', codes.ERR_INVALID_PARAMETERS)\n      }\n\n      const dek = cached.dek\n      pem = await privateKey.export(dek)\n    } catch (err: any) {\n      await randomDelay()\n      throw err\n    }\n\n    const keyInfo = {\n      name,\n      id: kid\n    }\n    const batch = this.components.datastore.batch()\n    batch.put(dsname, uint8ArrayFromString(pem))\n    batch.put(DsInfoName(name), uint8ArrayFromString(JSON.stringify(keyInfo)))\n    await batch.commit()\n\n    return keyInfo\n  }\n\n  /**\n   * Import a peer key\n   */\n  async importPeer (name: string, peer: PeerId): Promise<KeyInfo> {\n    try {\n      if (!validateKeyName(name)) {\n        throw new CodeError(`Invalid key name '${name}'`, codes.ERR_INVALID_KEY_NAME)\n      }\n      if (peer == null) {\n        throw new CodeError('PeerId is required', codes.ERR_MISSING_PRIVATE_KEY)\n      }\n      if (peer.privateKey == null) {\n        throw new CodeError('PeerId.privKey is required', codes.ERR_MISSING_PRIVATE_KEY)\n      }\n\n      const privateKey = await unmarshalPrivateKey(peer.privateKey)\n\n      const dsname = DsName(name)\n      const exists = await this.components.datastore.has(dsname)\n      if (exists) {\n        await randomDelay()\n        throw new CodeError(`Key '${name}' already exists`, codes.ERR_KEY_ALREADY_EXISTS)\n      }\n\n      const cached = privates.get(this)\n\n      if (cached == null) {\n        throw new CodeError('dek missing', codes.ERR_INVALID_PARAMETERS)\n      }\n\n      const dek = cached.dek\n      const pem = await privateKey.export(dek)\n      const keyInfo: KeyInfo = {\n        name,\n        id: peer.toString()\n      }\n      const batch = this.components.datastore.batch()\n      batch.put(dsname, uint8ArrayFromString(pem))\n      batch.put(DsInfoName(name), uint8ArrayFromString(JSON.stringify(keyInfo)))\n      await batch.commit()\n      return keyInfo\n    } catch (err: any) {\n      await randomDelay()\n      throw err\n    }\n  }\n\n  /**\n   * Gets the private key as PEM encoded PKCS #8 string\n   */\n  async getPrivateKey (name: string): Promise<string> {\n    if (!validateKeyName(name)) {\n      await randomDelay()\n      throw new CodeError(`Invalid key name '${name}'`, codes.ERR_INVALID_KEY_NAME)\n    }\n\n    try {\n      const dsname = DsName(name)\n      const res = await this.components.datastore.get(dsname)\n      return uint8ArrayToString(res)\n    } catch (err: any) {\n      await randomDelay()\n      this.log.error(err)\n      throw new CodeError(`Key '${name}' does not exist.`, codes.ERR_KEY_NOT_FOUND)\n    }\n  }\n\n  /**\n   * Rotate keychain password and re-encrypt all associated keys\n   */\n  async rotateKeychainPass (oldPass: string, newPass: string): Promise<void> {\n    if (typeof oldPass !== 'string') {\n      await randomDelay()\n      throw new CodeError(`Invalid old pass type '${typeof oldPass}'`, codes.ERR_INVALID_OLD_PASS_TYPE)\n    }\n    if (typeof newPass !== 'string') {\n      await randomDelay()\n      throw new CodeError(`Invalid new pass type '${typeof newPass}'`, codes.ERR_INVALID_NEW_PASS_TYPE)\n    }\n    if (newPass.length < 20) {\n      await randomDelay()\n      throw new CodeError(`Invalid pass length ${newPass.length}`, codes.ERR_INVALID_PASS_LENGTH)\n    }\n    this.log('recreating keychain')\n    const cached = privates.get(this)\n\n    if (cached == null) {\n      throw new CodeError('dek missing', codes.ERR_INVALID_PARAMETERS)\n    }\n\n    const oldDek = cached.dek\n    this.init.pass = newPass\n    const newDek = newPass != null && this.init.dek?.salt != null\n      ? pbkdf2(\n        newPass,\n        this.init.dek.salt,\n        this.init.dek?.iterationCount,\n        this.init.dek?.keyLength,\n        this.init.dek?.hash)\n      : ''\n    privates.set(this, { dek: newDek })\n    const keys = await this.listKeys()\n    for (const key of keys) {\n      const res = await this.components.datastore.get(DsName(key.name))\n      const pem = uint8ArrayToString(res)\n      const privateKey = await importKey(pem, oldDek)\n      const password = newDek.toString()\n      const keyAsPEM = await privateKey.export(password)\n\n      // Update stored key\n      const batch = this.components.datastore.batch()\n      const keyInfo = {\n        name: key.name,\n        id: key.id\n      }\n      batch.put(DsName(key.name), uint8ArrayFromString(keyAsPEM))\n      batch.put(DsInfoName(key.name), uint8ArrayFromString(JSON.stringify(keyInfo)))\n      await batch.commit()\n    }\n    this.log('keychain reconstructed')\n  }\n}\n","export enum codes {\n  ERR_INVALID_PARAMETERS = 'ERR_INVALID_PARAMETERS',\n  ERR_INVALID_KEY_NAME = 'ERR_INVALID_KEY_NAME',\n  ERR_INVALID_KEY_TYPE = 'ERR_INVALID_KEY_TYPE',\n  ERR_KEY_ALREADY_EXISTS = 'ERR_KEY_ALREADY_EXISTS',\n  ERR_INVALID_KEY_SIZE = 'ERR_INVALID_KEY_SIZE',\n  ERR_KEY_NOT_FOUND = 'ERR_KEY_NOT_FOUND',\n  ERR_OLD_KEY_NAME_INVALID = 'ERR_OLD_KEY_NAME_INVALID',\n  ERR_NEW_KEY_NAME_INVALID = 'ERR_NEW_KEY_NAME_INVALID',\n  ERR_PASSWORD_REQUIRED = 'ERR_PASSWORD_REQUIRED',\n  ERR_PEM_REQUIRED = 'ERR_PEM_REQUIRED',\n  ERR_CANNOT_READ_KEY = 'ERR_CANNOT_READ_KEY',\n  ERR_MISSING_PRIVATE_KEY = 'ERR_MISSING_PRIVATE_KEY',\n  ERR_INVALID_OLD_PASS_TYPE = 'ERR_INVALID_OLD_PASS_TYPE',\n  ERR_INVALID_NEW_PASS_TYPE = 'ERR_INVALID_NEW_PASS_TYPE',\n  ERR_INVALID_PASS_LENGTH = 'ERR_INVALID_PASS_LENGTH'\n}\n","/**\n * @packageDocumentation\n *\n * - Manages the lifecycle of a key\n * - Keys are encrypted at rest\n * - Enforces the use of safe key names\n * - Uses encrypted PKCS 8 for key storage\n * - Uses PBKDF2 for a \"stetched\" key encryption key\n * - Enforces NIST SP 800-131A and NIST SP 800-132\n * - Delays reporting errors to slow down brute force attacks\n *\n * ## KeyInfo\n *\n * The key management and naming service API all return a `KeyInfo` object.  The `id` is a universally unique identifier for the key.  The `name` is local to the key chain.\n *\n * ```JSON\n * {\n *   \"name\": \"rsa-key\",\n *   \"id\": \"QmYWYSUZ4PV6MRFYpdtEDJBiGs4UrmE6g8wmAWSePekXVW\"\n * }\n * ```\n *\n * The **key id** is the SHA-256 [multihash](https://github.com/multiformats/multihash) of its public key.\n *\n * The *public key* is a [protobuf encoding](https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/src/keys/keys.proto.js) containing a type and the [DER encoding](https://en.wikipedia.org/wiki/X.690) of the PKCS [SubjectPublicKeyInfo](https://www.ietf.org/rfc/rfc3279.txt).\n *\n * ## Private key storage\n *\n * A private key is stored as an encrypted PKCS 8 structure in the PEM format. It is protected by a key generated from the key chain's *passPhrase* using **PBKDF2**.\n *\n * The default options for generating the derived encryption key are in the `dek` object.  This, along with the passPhrase, is the input to a `PBKDF2` function.\n *\n * ```TypeScript\n * const defaultOptions = {\n *   // See https://cryptosense.com/parameter-choice-for-pbkdf2/\n *   dek: {\n *     keyLength: 512 / 8,\n *     iterationCount: 1000,\n *     salt: 'at least 16 characters long',\n *     hash: 'sha2-512'\n *   }\n * }\n * ```\n *\n * ![key storage](./doc/private-key.png?raw=true)\n *\n * ## Physical storage\n *\n * The actual physical storage of an encrypted key is left to implementations of [interface-datastore](https://github.com/ipfs/interface-datastore/).\n *\n * A key benefit is that now the key chain can be used in browser with the [js-datastore-level](https://github.com/ipfs/js-datastore-level) implementation.\n */\n\nimport { DefaultKeychain } from './keychain.js'\nimport type { ComponentLogger, KeyType, PeerId } from '@libp2p/interface'\nimport type { Datastore } from 'interface-datastore'\nimport type { Multibase } from 'multiformats/bases/interface.js'\n\nexport interface DEKConfig {\n  hash: string\n  salt: string\n  iterationCount: number\n  keyLength: number\n}\n\nexport interface KeychainInit {\n  pass?: string\n  dek?: DEKConfig\n}\n\nexport interface KeychainComponents {\n  datastore: Datastore\n  logger: ComponentLogger\n}\n\nexport interface KeyInfo {\n  /**\n   * The universally unique key id\n   */\n  id: string\n\n  /**\n   * The local key name\n   */\n  name: string\n}\n\nexport interface Keychain {\n  /**\n   * Export an existing key as a PEM encrypted PKCS #8 string.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * await libp2p.keychain.createKey('keyTest', 'RSA', 4096)\n   * const pemKey = await libp2p.keychain.exportKey('keyTest', 'password123')\n   * ```\n   */\n  exportKey(name: string, password: string): Promise<Multibase<'m'>>\n\n  /**\n   * Import a new key from a PEM encoded PKCS #8 string.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * await libp2p.keychain.createKey('keyTest', 'RSA', 4096)\n   * const pemKey = await libp2p.keychain.exportKey('keyTest', 'password123')\n   * const keyInfo = await libp2p.keychain.importKey('keyTestImport', pemKey, 'password123')\n   * ```\n   */\n  importKey(name: string, pem: string, password: string): Promise<KeyInfo>\n\n  /**\n   * Import a new key from a PeerId with a private key component\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const keyInfo = await libp2p.keychain.importPeer('keyTestImport', peerIdFromString('12D3Foo...'))\n   * ```\n   */\n  importPeer(name: string, peerId: PeerId): Promise<KeyInfo>\n\n  /**\n   * Export an existing key as a PeerId\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const peerId = await libp2p.keychain.exportPeerId('key-name')\n   * ```\n   */\n  exportPeerId(name: string): Promise<PeerId>\n\n  /**\n   * Create a key in the keychain.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const keyInfo = await libp2p.keychain.createKey('keyTest', 'RSA', 4096)\n   * ```\n   */\n  createKey(name: string, type: KeyType, size?: number): Promise<KeyInfo>\n\n  /**\n   * List all the keys.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const keyInfos = await libp2p.keychain.listKeys()\n   * ```\n   */\n  listKeys(): Promise<KeyInfo[]>\n\n  /**\n   * Removes a key from the keychain.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * await libp2p.keychain.createKey('keyTest', 'RSA', 4096)\n   * const keyInfo = await libp2p.keychain.removeKey('keyTest')\n   * ```\n   */\n  removeKey(name: string): Promise<KeyInfo>\n\n  /**\n   * Rename a key in the keychain.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * await libp2p.keychain.createKey('keyTest', 'RSA', 4096)\n   * const keyInfo = await libp2p.keychain.renameKey('keyTest', 'keyNewNtest')\n   * ```\n   */\n  renameKey(oldName: string, newName: string): Promise<KeyInfo>\n\n  /**\n   * Find a key by it's id.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const keyInfo = await libp2p.keychain.createKey('keyTest', 'RSA', 4096)\n   * const keyInfo2 = await libp2p.keychain.findKeyById(keyInfo.id)\n   * ```\n   */\n  findKeyById(id: string): Promise<KeyInfo>\n\n  /**\n   * Find a key by it's name.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const keyInfo = await libp2p.keychain.createKey('keyTest', 'RSA', 4096)\n   * const keyInfo2 = await libp2p.keychain.findKeyByName('keyTest')\n   * ```\n   */\n  findKeyByName(name: string): Promise<KeyInfo>\n\n  /**\n   * Rotate keychain password and re-encrypt all associated keys\n   *\n   * @example\n   *\n   * ```TypeScript\n   * await libp2p.keychain.rotateKeychainPass('oldPassword', 'newPassword')\n   * ```\n   */\n  rotateKeychainPass(oldPass: string, newPass: string): Promise<void>\n}\n\nexport function keychain (init: KeychainInit = {}): (components: KeychainComponents) => Keychain {\n  return (components: KeychainComponents) => {\n    return new DefaultKeychain(components, init)\n  }\n}\n","export const PING_PROTOCOL = '/ipfs/ping/1.0.0'\nexport const PING_LENGTH = 32\nexport const PROTOCOL_VERSION = '1.0.0'\nexport const PROTOCOL_NAME = 'ping'\nexport const PROTOCOL_PREFIX = 'ipfs'\nexport const TIMEOUT = 10000\n\n// See https://github.com/libp2p/specs/blob/d4b5fb0152a6bb86cfd9ea/ping/ping.md?plain=1#L38-L43\n// The dialing peer MUST NOT keep more than one outbound stream for the ping protocol per peer.\n// The listening peer SHOULD accept at most two streams per peer since cross-stream behavior is\n// non-linear and stream writes occur asynchronously. The listening peer may perceive the\n// dialing peer closing and opening the wrong streams (for instance, closing stream B and\n// opening stream A even though the dialing peer is opening stream B and closing stream A).\nexport const MAX_INBOUND_STREAMS = 2\nexport const MAX_OUTBOUND_STREAMS = 1\n\nexport const ERR_WRONG_PING_ACK = 'ERR_WRONG_PING_ACK'\n","import { randomBytes } from '@libp2p/crypto'\nimport { CodeError, ERR_TIMEOUT } from '@libp2p/interface'\nimport first from 'it-first'\nimport { pipe } from 'it-pipe'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { PROTOCOL_PREFIX, PROTOCOL_NAME, PING_LENGTH, PROTOCOL_VERSION, TIMEOUT, MAX_INBOUND_STREAMS, MAX_OUTBOUND_STREAMS, ERR_WRONG_PING_ACK } from './constants.js'\nimport type { PingServiceComponents, PingServiceInit, PingService as PingServiceInterface } from './index.js'\nimport type { AbortOptions, Logger, Stream, PeerId, Startable } from '@libp2p/interface'\nimport type { IncomingStreamData } from '@libp2p/interface-internal'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport class PingService implements Startable, PingServiceInterface {\n  public readonly protocol: string\n  private readonly components: PingServiceComponents\n  private started: boolean\n  private readonly timeout: number\n  private readonly maxInboundStreams: number\n  private readonly maxOutboundStreams: number\n  private readonly runOnTransientConnection: boolean\n  private readonly log: Logger\n\n  constructor (components: PingServiceComponents, init: PingServiceInit = {}) {\n    this.components = components\n    this.log = components.logger.forComponent('libp2p:ping')\n    this.started = false\n    this.protocol = `/${init.protocolPrefix ?? PROTOCOL_PREFIX}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`\n    this.timeout = init.timeout ?? TIMEOUT\n    this.maxInboundStreams = init.maxInboundStreams ?? MAX_INBOUND_STREAMS\n    this.maxOutboundStreams = init.maxOutboundStreams ?? MAX_OUTBOUND_STREAMS\n    this.runOnTransientConnection = init.runOnTransientConnection ?? true\n\n    this.handleMessage = this.handleMessage.bind(this)\n  }\n\n  async start (): Promise<void> {\n    await this.components.registrar.handle(this.protocol, this.handleMessage, {\n      maxInboundStreams: this.maxInboundStreams,\n      maxOutboundStreams: this.maxOutboundStreams,\n      runOnTransientConnection: this.runOnTransientConnection\n    })\n    this.started = true\n  }\n\n  async stop (): Promise<void> {\n    await this.components.registrar.unhandle(this.protocol)\n    this.started = false\n  }\n\n  isStarted (): boolean {\n    return this.started\n  }\n\n  /**\n   * A handler to register with Libp2p to process ping messages\n   */\n  handleMessage (data: IncomingStreamData): void {\n    this.log('incoming ping from %p', data.connection.remotePeer)\n\n    const { stream } = data\n    const start = Date.now()\n\n    void pipe(stream, stream)\n      .catch(err => {\n        this.log.error('incoming ping from %p failed with error', data.connection.remotePeer, err)\n      })\n      .finally(() => {\n        const ms = Date.now() - start\n\n        this.log('incoming ping from %p complete in %dms', data.connection.remotePeer, ms)\n      })\n  }\n\n  /**\n   * Ping a given peer and wait for its response, getting the operation latency.\n   */\n  async ping (peer: PeerId | Multiaddr | Multiaddr[], options: AbortOptions = {}): Promise<number> {\n    this.log('pinging %p', peer)\n\n    const start = Date.now()\n    const data = randomBytes(PING_LENGTH)\n    const connection = await this.components.connectionManager.openConnection(peer, options)\n    let stream: Stream | undefined\n    let onAbort = (): void => {}\n\n    if (options.signal == null) {\n      const signal = AbortSignal.timeout(this.timeout)\n\n      options = {\n        ...options,\n        signal\n      }\n    }\n\n    try {\n      stream = await connection.newStream(this.protocol, {\n        ...options,\n        runOnTransientConnection: this.runOnTransientConnection\n      })\n\n      onAbort = () => {\n        stream?.abort(new CodeError('ping timeout', ERR_TIMEOUT))\n      }\n\n      // make stream abortable\n      options.signal?.addEventListener('abort', onAbort, { once: true })\n\n      const result = await pipe(\n        [data],\n        stream,\n        async (source) => first(source)\n      )\n\n      const ms = Date.now() - start\n\n      if (result == null) {\n        throw new CodeError(`Did not receive a ping ack after ${ms}ms`, ERR_WRONG_PING_ACK)\n      }\n\n      if (!uint8ArrayEquals(data, result.subarray())) {\n        throw new CodeError(`Received wrong ping ack after ${ms}ms`, ERR_WRONG_PING_ACK)\n      }\n\n      this.log('ping %p complete in %dms', connection.remotePeer, ms)\n\n      return ms\n    } catch (err: any) {\n      this.log.error('error while pinging %p', connection.remotePeer, err)\n\n      stream?.abort(err)\n\n      throw err\n    } finally {\n      options.signal?.removeEventListener('abort', onAbort)\n      if (stream != null) {\n        await stream.close()\n      }\n    }\n  }\n}\n","/**\n * @packageDocumentation\n *\n * The ping service implements the [libp2p ping spec](https://github.com/libp2p/specs/blob/master/ping/ping.md) allowing you to make a latency measurement to a remote peer.\n *\n * @example\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { ping } from '@libp2p/ping'\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const node = await createLibp2p({\n *   services: {\n *     ping: ping()\n *   }\n * })\n *\n * const rtt = await node.services.ping.ping(multiaddr('/ip4/...'))\n *\n * console.info(rtt)\n * ```\n */\n\nimport { PingService as PingServiceClass } from './ping.js'\nimport type { AbortOptions, ComponentLogger, PeerId } from '@libp2p/interface'\nimport type { ConnectionManager, Registrar } from '@libp2p/interface-internal'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface PingService {\n  ping(peer: PeerId | Multiaddr | Multiaddr[], options?: AbortOptions): Promise<number>\n}\n\nexport interface PingServiceInit {\n  protocolPrefix?: string\n  maxInboundStreams?: number\n  maxOutboundStreams?: number\n  runOnTransientConnection?: boolean\n\n  /**\n   * How long we should wait for a ping response\n   */\n  timeout?: number\n}\n\nexport interface PingServiceComponents {\n  registrar: Registrar\n  connectionManager: ConnectionManager\n  logger: ComponentLogger\n}\n\nexport function ping (init: PingServiceInit = {}): (components: PingServiceComponents) => PingService {\n  return (components) => new PingServiceClass(components, init)\n}\n\nexport { PING_PROTOCOL } from './constants.js'\n","/**\n * @packageDocumentation\n *\n * Mostly useful for tests or when you want to be explicit about consuming an iterable without doing anything with any yielded values.\n *\n * @example\n *\n * ```javascript\n * import drain from 'it-drain'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * drain(values)\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import drain from 'it-drain'\n *\n * const values = async function * {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * await drain(values())\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything\n */\nfunction drain (source: Iterable<unknown>): void\nfunction drain (source: Iterable<unknown> | AsyncIterable<unknown>): Promise<void>\nfunction drain (source: Iterable<unknown> | AsyncIterable<unknown>): Promise<void> | void {\n  if (isAsyncIterable(source)) {\n    return (async () => {\n      for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n    })()\n  } else {\n    for (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n  }\n}\n\nexport default drain\n","// MaxRecordAge specifies the maximum time that any node will hold onto a record\n// from the time its received. This does not apply to any other forms of validity that\n// the record may contain.\n// For example, a record may contain an ipns entry with an EOL saying its valid\n// until the year 2020 (a great time in the future). For that record to stick around\n// it must be rebroadcasted more frequently than once every 'MaxRecordAge'\n\nexport const second = 1000\nexport const minute = 60 * second\nexport const hour = 60 * minute\n\nexport const MAX_RECORD_AGE = 36 * hour\n\nexport const PROTOCOL = '/ipfs/kad/1.0.0'\n\nexport const RECORD_KEY_PREFIX = '/dht/record'\n\nexport const PROVIDER_KEY_PREFIX = '/dht/provider'\n\nexport const PROVIDERS_LRU_CACHE_SIZE = 256\n\nexport const PROVIDERS_VALIDITY = 24 * hour\n\nexport const PROVIDERS_CLEANUP_INTERVAL = hour\n\nexport const READ_MESSAGE_TIMEOUT = 10 * second\n\n// The number of records that will be retrieved on a call to getMany()\nexport const GET_MANY_RECORD_COUNT = 16\n\n// K is the maximum number of requests to perform before returning failure\nexport const K = 20\n\n// Alpha is the concurrency for asynchronous requests\nexport const ALPHA = 3\n\n// How often we look for our closest DHT neighbours\nexport const QUERY_SELF_INTERVAL = 5 * minute\n\n// How often we look for the first set of our closest DHT neighbours\nexport const QUERY_SELF_INITIAL_INTERVAL = second\n\n// How long to look for our closest DHT neighbours for\nexport const QUERY_SELF_TIMEOUT = 5 * second\n\n// How often we try to find new peers\nexport const TABLE_REFRESH_INTERVAL = 5 * minute\n\n// How how long to look for new peers for\nexport const TABLE_REFRESH_QUERY_TIMEOUT = 30 * second\n\n// When a timeout is not specified, run a query for this long\nexport const DEFAULT_QUERY_TIMEOUT = 30 * second\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { type Codec, decodeMessage, type DecodeOptions, encodeMessage, message } from 'protons-runtime'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Record {\n  key: Uint8Array\n  value: Uint8Array\n  timeReceived: string\n}\n\nexport namespace Record {\n  let _codec: Codec<Record>\n\n  export const codec = (): Codec<Record> => {\n    if (_codec == null) {\n      _codec = message<Record>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if ((obj.key != null && obj.key.byteLength > 0)) {\n          w.uint32(10)\n          w.bytes(obj.key)\n        }\n\n        if ((obj.value != null && obj.value.byteLength > 0)) {\n          w.uint32(18)\n          w.bytes(obj.value)\n        }\n\n        if ((obj.timeReceived != null && obj.timeReceived !== '')) {\n          w.uint32(42)\n          w.string(obj.timeReceived)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length, opts = {}) => {\n        const obj: any = {\n          key: uint8ArrayAlloc(0),\n          value: uint8ArrayAlloc(0),\n          timeReceived: ''\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.key = reader.bytes()\n              break\n            }\n            case 2: {\n              obj.value = reader.bytes()\n              break\n            }\n            case 5: {\n              obj.timeReceived = reader.string()\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Record>): Uint8Array => {\n    return encodeMessage(obj, Record.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList, opts?: DecodeOptions<Record>): Record => {\n    return decodeMessage(buf, Record.codec(), opts)\n  }\n}\n","/**\n * Convert a JavaScript date into an `RFC3339Nano` formatted\n * string\n */\nexport function toRFC3339 (time: Date): string {\n  const year = time.getUTCFullYear()\n  const month = String(time.getUTCMonth() + 1).padStart(2, '0')\n  const day = String(time.getUTCDate()).padStart(2, '0')\n  const hour = String(time.getUTCHours()).padStart(2, '0')\n  const minute = String(time.getUTCMinutes()).padStart(2, '0')\n  const seconds = String(time.getUTCSeconds()).padStart(2, '0')\n  const milliseconds = time.getUTCMilliseconds()\n  const nanoseconds = String(milliseconds * 1000 * 1000).padStart(9, '0')\n\n  return `${year}-${month}-${day}T${hour}:${minute}:${seconds}.${nanoseconds}Z`\n}\n\n/**\n * Parses a date string formatted as `RFC3339Nano` into a\n * JavaScript Date object\n */\nexport function parseRFC3339 (time: string): Date {\n  const rfc3339Matcher = new RegExp(\n    // 2006-01-02T\n    '(\\\\d{4})-(\\\\d{2})-(\\\\d{2})T' +\n    // 15:04:05\n    '(\\\\d{2}):(\\\\d{2}):(\\\\d{2})' +\n    // .999999999Z\n    '\\\\.(\\\\d+)Z'\n  )\n  const m = String(time).trim().match(rfc3339Matcher)\n\n  if (m == null) {\n    throw new Error('Invalid format')\n  }\n\n  const year = parseInt(m[1], 10)\n  const month = parseInt(m[2], 10) - 1\n  const date = parseInt(m[3], 10)\n  const hour = parseInt(m[4], 10)\n  const minute = parseInt(m[5], 10)\n  const second = parseInt(m[6], 10)\n  const millisecond = parseInt(m[7].slice(0, -6), 10)\n\n  return new Date(Date.UTC(year, month, date, hour, minute, second, millisecond))\n}\n","/**\n * @packageDocumentation\n *\n * This is an implementation of the [routing record format](https://github.com/libp2p/specs/blob/b9efe152c29f93f7a87931c14d78ae11e7924d5a/kad-dht/README.md?plain=1#L408-L425) used by libp2p to store data in the datastore passed to the libp2p constructor.\n *\n * @example Deserialization\n *\n * ```TypeScript\n * import { Libp2pRecord } from '@libp2p/record'\n *\n * const buf = Uint8Array.from([0, 1, 2, 3])\n * const record = Libp2pRecord.deserialize(buf)\n * ```\n *\n * @example Serialization\n *\n * ```TypeScript\n * import { Libp2pRecord } from '@libp2p/record'\n *\n * const key = Uint8Array.from([0, 1, 2, 3])\n * const value = Uint8Array.from([0, 1, 2, 3])\n * const timeReceived = new Date()\n *\n * const record = new Libp2pRecord(key, value, timeReceived)\n * const buf = record.serialize()\n * ```\n */\n\nimport {\n  Record\n} from './record.js'\nimport * as utils from './utils.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class Libp2pRecord {\n  public key: Uint8Array\n  public value: Uint8Array\n  public timeReceived: Date\n\n  constructor (key: Uint8Array, value: Uint8Array, timeReceived: Date) {\n    if (!(key instanceof Uint8Array)) {\n      throw new Error('key must be a Uint8Array')\n    }\n\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('value must be a Uint8Array')\n    }\n\n    this.key = key\n    this.value = value\n    this.timeReceived = timeReceived\n  }\n\n  serialize (): Uint8Array {\n    return Record.encode(this.prepareSerialize())\n  }\n\n  /**\n   * Return the object format ready to be given to the protobuf library.\n   */\n  prepareSerialize (): Record {\n    return {\n      key: this.key,\n      value: this.value,\n      timeReceived: utils.toRFC3339(this.timeReceived)\n    }\n  }\n\n  /**\n   * Decode a protobuf encoded record\n   */\n  static deserialize (raw: Uint8Array | Uint8ArrayList): Libp2pRecord {\n    const rec = Record.decode(raw)\n\n    return new Libp2pRecord(rec.key, rec.value, new Date(rec.timeReceived))\n  }\n\n  /**\n   * Create a record from the raw object returned from the protobuf library\n   */\n  static fromDeserialized (obj: Record): Libp2pRecord {\n    const recvtime = utils.parseRFC3339(obj.timeReceived)\n\n    if (obj.key == null) {\n      throw new Error('key missing from deserialized object')\n    }\n\n    if (obj.value == null) {\n      throw new Error('value missing from deserialized object')\n    }\n\n    const rec = new Libp2pRecord(\n      obj.key, obj.value, recvtime\n    )\n\n    return rec\n  }\n}\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { type Codec, decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Record {\n  key?: Uint8Array\n  value?: Uint8Array\n  author?: Uint8Array\n  signature?: Uint8Array\n  timeReceived?: string\n}\n\nexport namespace Record {\n  let _codec: Codec<Record>\n\n  export const codec = (): Codec<Record> => {\n    if (_codec == null) {\n      _codec = message<Record>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.key != null) {\n          w.uint32(10)\n          w.bytes(obj.key)\n        }\n\n        if (obj.value != null) {\n          w.uint32(18)\n          w.bytes(obj.value)\n        }\n\n        if (obj.author != null) {\n          w.uint32(26)\n          w.bytes(obj.author)\n        }\n\n        if (obj.signature != null) {\n          w.uint32(34)\n          w.bytes(obj.signature)\n        }\n\n        if (obj.timeReceived != null) {\n          w.uint32(42)\n          w.string(obj.timeReceived)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.key = reader.bytes()\n              break\n            }\n            case 2: {\n              obj.value = reader.bytes()\n              break\n            }\n            case 3: {\n              obj.author = reader.bytes()\n              break\n            }\n            case 4: {\n              obj.signature = reader.bytes()\n              break\n            }\n            case 5: {\n              obj.timeReceived = reader.string()\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Record>): Uint8Array => {\n    return encodeMessage(obj, Record.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Record => {\n    return decodeMessage(buf, Record.codec())\n  }\n}\n\nexport enum MessageType {\n  PUT_VALUE = 'PUT_VALUE',\n  GET_VALUE = 'GET_VALUE',\n  ADD_PROVIDER = 'ADD_PROVIDER',\n  GET_PROVIDERS = 'GET_PROVIDERS',\n  FIND_NODE = 'FIND_NODE',\n  PING = 'PING'\n}\n\nenum __MessageTypeValues {\n  PUT_VALUE = 0,\n  GET_VALUE = 1,\n  ADD_PROVIDER = 2,\n  GET_PROVIDERS = 3,\n  FIND_NODE = 4,\n  PING = 5\n}\n\nexport namespace MessageType {\n  export const codec = (): Codec<MessageType> => {\n    return enumeration<MessageType>(__MessageTypeValues)\n  }\n}\nexport enum ConnectionType {\n  NOT_CONNECTED = 'NOT_CONNECTED',\n  CONNECTED = 'CONNECTED',\n  CAN_CONNECT = 'CAN_CONNECT',\n  CANNOT_CONNECT = 'CANNOT_CONNECT'\n}\n\nenum __ConnectionTypeValues {\n  NOT_CONNECTED = 0,\n  CONNECTED = 1,\n  CAN_CONNECT = 2,\n  CANNOT_CONNECT = 3\n}\n\nexport namespace ConnectionType {\n  export const codec = (): Codec<ConnectionType> => {\n    return enumeration<ConnectionType>(__ConnectionTypeValues)\n  }\n}\nexport interface PeerInfo {\n  id: Uint8Array\n  multiaddrs: Uint8Array[]\n  connection?: ConnectionType\n}\n\nexport namespace PeerInfo {\n  let _codec: Codec<PeerInfo>\n\n  export const codec = (): Codec<PeerInfo> => {\n    if (_codec == null) {\n      _codec = message<PeerInfo>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if ((obj.id != null && obj.id.byteLength > 0)) {\n          w.uint32(10)\n          w.bytes(obj.id)\n        }\n\n        if (obj.multiaddrs != null) {\n          for (const value of obj.multiaddrs) {\n            w.uint32(18)\n            w.bytes(value)\n          }\n        }\n\n        if (obj.connection != null) {\n          w.uint32(24)\n          ConnectionType.codec().encode(obj.connection, w)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          id: uint8ArrayAlloc(0),\n          multiaddrs: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.id = reader.bytes()\n              break\n            }\n            case 2: {\n              obj.multiaddrs.push(reader.bytes())\n              break\n            }\n            case 3: {\n              obj.connection = ConnectionType.codec().decode(reader)\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PeerInfo>): Uint8Array => {\n    return encodeMessage(obj, PeerInfo.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PeerInfo => {\n    return decodeMessage(buf, PeerInfo.codec())\n  }\n}\n\nexport interface Message {\n  type: MessageType\n  clusterLevel?: number\n  key?: Uint8Array\n  record?: Uint8Array\n  closer: PeerInfo[]\n  providers: PeerInfo[]\n}\n\nexport namespace Message {\n  let _codec: Codec<Message>\n\n  export const codec = (): Codec<Message> => {\n    if (_codec == null) {\n      _codec = message<Message>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.type != null && __MessageTypeValues[obj.type] !== 0) {\n          w.uint32(8)\n          MessageType.codec().encode(obj.type, w)\n        }\n\n        if (obj.clusterLevel != null) {\n          w.uint32(80)\n          w.int32(obj.clusterLevel)\n        }\n\n        if (obj.key != null) {\n          w.uint32(18)\n          w.bytes(obj.key)\n        }\n\n        if (obj.record != null) {\n          w.uint32(26)\n          w.bytes(obj.record)\n        }\n\n        if (obj.closer != null) {\n          for (const value of obj.closer) {\n            w.uint32(66)\n            PeerInfo.codec().encode(value, w)\n          }\n        }\n\n        if (obj.providers != null) {\n          for (const value of obj.providers) {\n            w.uint32(74)\n            PeerInfo.codec().encode(value, w)\n          }\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          type: MessageType.PUT_VALUE,\n          closer: [],\n          providers: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.type = MessageType.codec().decode(reader)\n              break\n            }\n            case 10: {\n              obj.clusterLevel = reader.int32()\n              break\n            }\n            case 2: {\n              obj.key = reader.bytes()\n              break\n            }\n            case 3: {\n              obj.record = reader.bytes()\n              break\n            }\n            case 8: {\n              obj.closer.push(PeerInfo.codec().decode(reader, reader.uint32()))\n              break\n            }\n            case 9: {\n              obj.providers.push(PeerInfo.codec().decode(reader, reader.uint32()))\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Message>): Uint8Array => {\n    return encodeMessage(obj, Message.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Message => {\n    return decodeMessage(buf, Message.codec())\n  }\n}\n","import { CustomEvent } from '@libp2p/interface'\nimport type { MessageType, SendQueryEvent, PeerResponseEvent, DialPeerEvent, AddPeerEvent, ValueEvent, ProviderEvent, QueryErrorEvent, FinalPeerEvent } from '../index.js'\nimport type { PeerId, PeerInfo } from '@libp2p/interface'\nimport type { Libp2pRecord } from '@libp2p/record'\nimport type { ProgressOptions } from 'progress-events'\n\nexport interface QueryEventFields {\n  to: PeerId\n  type: MessageType\n}\n\nexport function sendQueryEvent (fields: QueryEventFields, options: ProgressOptions = {}): SendQueryEvent {\n  const event: SendQueryEvent = {\n    ...fields,\n    name: 'SEND_QUERY',\n    type: 0,\n    messageName: fields.type,\n    messageType: fields.type\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:send-query', { detail: event }))\n\n  return event\n}\n\nexport interface PeerResponseEventFields {\n  from: PeerId\n  messageType: MessageType\n  closer?: PeerInfo[]\n  providers?: PeerInfo[]\n  record?: Libp2pRecord\n}\n\nexport function peerResponseEvent (fields: PeerResponseEventFields, options: ProgressOptions = {}): PeerResponseEvent {\n  const event: PeerResponseEvent = {\n    ...fields,\n    name: 'PEER_RESPONSE',\n    type: 1,\n    messageName: fields.messageType,\n    closer: (fields.closer != null) ? fields.closer : [],\n    providers: (fields.providers != null) ? fields.providers : []\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:peer-response', { detail: event }))\n\n  return event\n}\n\nexport interface FinalPeerEventFields {\n  from: PeerId\n  peer: PeerInfo\n}\n\nexport function finalPeerEvent (fields: FinalPeerEventFields, options: ProgressOptions = {}): FinalPeerEvent {\n  const event: FinalPeerEvent = {\n    ...fields,\n    name: 'FINAL_PEER',\n    type: 2\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:final-peer', { detail: event }))\n\n  return event\n}\n\nexport interface ErrorEventFields {\n  from: PeerId\n  error: Error\n}\n\nexport function queryErrorEvent (fields: ErrorEventFields, options: ProgressOptions = {}): QueryErrorEvent {\n  const event: QueryErrorEvent = {\n    ...fields,\n    name: 'QUERY_ERROR',\n    type: 3\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:query-error', { detail: event }))\n\n  return event\n}\n\nexport interface ProviderEventFields {\n  from: PeerId\n  providers: PeerInfo[]\n}\n\nexport function providerEvent (fields: ProviderEventFields, options: ProgressOptions = {}): ProviderEvent {\n  const event: ProviderEvent = {\n    ...fields,\n    name: 'PROVIDER',\n    type: 4\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:provider', { detail: event }))\n\n  return event\n}\n\nexport interface ValueEventFields {\n  from: PeerId\n  value: Uint8Array\n}\n\nexport function valueEvent (fields: ValueEventFields, options: ProgressOptions = {}): ValueEvent {\n  const event: ValueEvent = {\n    ...fields,\n    name: 'VALUE',\n    type: 5\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:value', { detail: event }))\n\n  return event\n}\n\nexport interface PeerEventFields {\n  peer: PeerId\n}\n\nexport function addPeerEvent (fields: PeerEventFields, options: ProgressOptions = {}): AddPeerEvent {\n  const event: AddPeerEvent = {\n    ...fields,\n    name: 'ADD_PEER',\n    type: 6\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:add-peer', { detail: event }))\n\n  return event\n}\n\nexport interface DialPeerEventFields {\n  peer: PeerId\n}\n\nexport function dialPeerEvent (fields: DialPeerEventFields, options: ProgressOptions = {}): DialPeerEvent {\n  const event: DialPeerEvent = {\n    ...fields,\n    name: 'DIAL_PEER',\n    type: 7\n  }\n\n  options.onProgress?.(new CustomEvent('kad-dht:query:dial-peer', { detail: event }))\n\n  return event\n}\n","import { CodeError } from '@libp2p/interface'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport type { Selectors } from '../index.js'\n\n/**\n * Select the best record out of the given records\n */\nexport function bestRecord (selectors: Selectors, k: Uint8Array, records: Uint8Array[]): number {\n  if (records.length === 0) {\n    const errMsg = 'No records given'\n\n    throw new CodeError(errMsg, 'ERR_NO_RECORDS_RECEIVED')\n  }\n\n  const kStr = uint8ArrayToString(k)\n  const parts = kStr.split('/')\n\n  if (parts.length < 3) {\n    const errMsg = 'Record key does not have a selector function'\n\n    throw new CodeError(errMsg, 'ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY')\n  }\n\n  const selector = selectors[parts[1].toString()]\n\n  if (selector == null) {\n    const errMsg = `No selector function configured for key type \"${parts[1]}\"`\n\n    throw new CodeError(errMsg, 'ERR_UNRECOGNIZED_KEY_PREFIX')\n  }\n\n  if (records.length === 1) {\n    return 0\n  }\n\n  return selector(k, records)\n}\n\n/**\n * Best record selector, for public key records.\n * Simply returns the first record, as all valid public key\n * records are equal\n */\nfunction publickKey (k: Uint8Array, records: Uint8Array[]): number {\n  return 0\n}\n\nexport const selectors: Selectors = {\n  pk: publickKey\n}\n","import { CodeError } from '@libp2p/interface'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport type { Validators } from '../index.js'\nimport type { Libp2pRecord } from '@libp2p/record'\n\n/**\n * Checks a record and ensures it is still valid.\n * It runs the needed validators.\n * If verification fails the returned Promise will reject with the error.\n */\nexport async function verifyRecord (validators: Validators, record: Libp2pRecord): Promise<void> {\n  const key = record.key\n  const keyString = uint8ArrayToString(key)\n  const parts = keyString.split('/')\n\n  if (parts.length < 3) {\n    // No validator available\n    return\n  }\n\n  const validator = validators[parts[1].toString()]\n\n  if (validator == null) {\n    const errMsg = `No validator available for key type \"${parts[1]}\"`\n\n    throw new CodeError(errMsg, 'ERR_INVALID_RECORD_KEY_TYPE')\n  }\n\n  await validator(key, record.value)\n}\n\n/**\n * Validator for public key records.\n * Verifies that the passed in record value is the PublicKey\n * that matches the passed in key.\n * If validation fails the returned Promise will reject with the error.\n *\n * @param {Uint8Array} key - A valid key is of the form `'/pk/<keymultihash>'`\n * @param {Uint8Array} publicKey - The public key to validate against (protobuf encoded).\n */\nconst validatePublicKeyRecord = async (key: Uint8Array, publicKey: Uint8Array): Promise<void> => {\n  if (!(key instanceof Uint8Array)) {\n    throw new CodeError('\"key\" must be a Uint8Array', 'ERR_INVALID_RECORD_KEY_NOT_BUFFER')\n  }\n\n  if (key.byteLength < 5) {\n    throw new CodeError('invalid public key record', 'ERR_INVALID_RECORD_KEY_TOO_SHORT')\n  }\n\n  const prefix = uint8ArrayToString(key.subarray(0, 4))\n\n  if (prefix !== '/pk/') {\n    throw new CodeError('key was not prefixed with /pk/', 'ERR_INVALID_RECORD_KEY_BAD_PREFIX')\n  }\n\n  const keyhash = key.slice(4)\n\n  const publicKeyHash = await sha256.digest(publicKey)\n\n  if (!uint8ArrayEquals(keyhash, publicKeyHash.bytes)) {\n    throw new CodeError('public key does not match passed in key', 'ERR_INVALID_RECORD_HASH_MISMATCH')\n  }\n}\n\nexport const validators: Validators = {\n  pk: validatePublicKeyRecord\n}\n","import { peerIdFromBytes } from '@libp2p/peer-id'\nimport { Libp2pRecord } from '@libp2p/record'\nimport { isPrivateIp } from '@libp2p/utils/private-ip'\nimport { Key } from 'interface-datastore/key'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { RECORD_KEY_PREFIX } from './constants.js'\nimport type { PeerId, PeerInfo } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\n// const IPNS_PREFIX = uint8ArrayFromString('/ipns/')\nconst PK_PREFIX = uint8ArrayFromString('/pk/')\n\nexport function removePrivateAddressesMapper (peer: PeerInfo): PeerInfo {\n  return {\n    ...peer,\n    multiaddrs: peer.multiaddrs.filter(multiaddr => {\n      const [[type, addr]] = multiaddr.stringTuples()\n\n      // treat /dns, /dns4, and /dns6 addrs as public\n      if (type === 53 || type === 54 || type === 55) {\n        // localhost can be a dns address but it's private\n        if (addr === 'localhost') {\n          return false\n        }\n\n        return true\n      }\n\n      if (type !== 4 && type !== 6) {\n        return false\n      }\n\n      if (addr == null) {\n        return false\n      }\n\n      const isPrivate = isPrivateIp(addr)\n\n      if (isPrivate == null) {\n        // not an ip address\n        return true\n      }\n\n      return !isPrivate\n    })\n  }\n}\n\nexport function removePublicAddressesMapper (peer: PeerInfo): PeerInfo {\n  return {\n    ...peer,\n    multiaddrs: peer.multiaddrs.filter(multiaddr => {\n      const [[type, addr]] = multiaddr.stringTuples()\n\n      if (addr === 'localhost') {\n        return true\n      }\n\n      if (type !== 4 && type !== 6) {\n        return false\n      }\n\n      if (addr == null) {\n        return false\n      }\n\n      const isPrivate = isPrivateIp(addr)\n\n      if (isPrivate == null) {\n        // not an ip address\n        return false\n      }\n\n      return isPrivate\n    })\n  }\n}\n\nexport function passthroughMapper (info: PeerInfo): PeerInfo {\n  return info\n}\n\n/**\n * Creates a DHT ID by hashing a given Uint8Array\n */\nexport async function convertBuffer (buf: Uint8Array): Promise<Uint8Array> {\n  const multihash = await sha256.digest(buf)\n\n  return multihash.digest\n}\n\n/**\n * Creates a DHT ID by hashing a Peer ID\n */\nexport async function convertPeerId (peerId: PeerId): Promise<Uint8Array> {\n  return convertBuffer(peerId.toBytes())\n}\n\n/**\n * Convert a Uint8Array to their SHA2-256 hash\n */\nexport function bufferToKey (buf: Uint8Array): Key {\n  return new Key('/' + uint8ArrayToString(buf, 'base32'), false)\n}\n\n/**\n * Convert a Uint8Array to their SHA2-256 hash\n */\nexport function bufferToRecordKey (buf: Uint8Array): Key {\n  return new Key(`${RECORD_KEY_PREFIX}/${uint8ArrayToString(buf, 'base32')}`, false)\n}\n\n/**\n * Generate the key for a public key.\n */\nexport function keyForPublicKey (peer: PeerId): Uint8Array {\n  return uint8ArrayConcat([\n    PK_PREFIX,\n    peer.toBytes()\n  ])\n}\n\nexport function isPublicKeyKey (key: Uint8Array): boolean {\n  return uint8ArrayToString(key.subarray(0, 4)) === '/pk/'\n}\n\nexport function isIPNSKey (key: Uint8Array): boolean {\n  return uint8ArrayToString(key.subarray(0, 4)) === '/ipns/'\n}\n\nexport function fromPublicKeyKey (key: Uint8Array): PeerId {\n  return peerIdFromBytes(key.subarray(4))\n}\n\n/**\n * Create a new put record, encodes and signs it if enabled\n */\nexport function createPutRecord (key: Uint8Array, value: Uint8Array): Uint8Array {\n  const timeReceived = new Date()\n  const rec = new Libp2pRecord(key, value, timeReceived)\n\n  return rec.serialize()\n}\n\nexport function debounce (callback: () => void, wait: number = 100): () => void {\n  let timeout: ReturnType<typeof setTimeout>\n\n  return (): void => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => { callback() }, wait)\n  }\n}\n\n// see https://github.com/multiformats/multiaddr/blob/master/protocols.csv\nconst P2P_CIRCUIT_CODE = 290\nconst DNS4_CODE = 54\nconst DNS6_CODE = 55\nconst DNSADDR_CODE = 56\nconst IP4_CODE = 4\nconst IP6_CODE = 41\n\nexport function multiaddrIsPublic (multiaddr: Multiaddr): boolean {\n  const tuples = multiaddr.stringTuples()\n\n  // p2p-circuit should not enable server mode\n  for (const tuple of tuples) {\n    if (tuple[0] === P2P_CIRCUIT_CODE) {\n      return false\n    }\n  }\n\n  // dns4 or dns6 or dnsaddr\n  if (tuples[0][0] === DNS4_CODE || tuples[0][0] === DNS6_CODE || tuples[0][0] === DNSADDR_CODE) {\n    return true\n  }\n\n  // ip4 or ip6\n  if (tuples[0][0] === IP4_CODE || tuples[0][0] === IP6_CODE) {\n    const result = isPrivateIp(`${tuples[0][1]}`)\n    const isPublic = result == null || !result\n\n    return isPublic\n  }\n\n  return false\n}\n","import { CodeError } from '@libp2p/interface'\nimport { Libp2pRecord } from '@libp2p/record'\nimport map from 'it-map'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport {\n  ALPHA\n} from '../constants.js'\nimport { MessageType } from '../message/dht.js'\nimport {\n  valueEvent,\n  queryErrorEvent\n} from '../query/events.js'\nimport { bestRecord } from '../record/selectors.js'\nimport { verifyRecord } from '../record/validators.js'\nimport { createPutRecord, bufferToRecordKey } from '../utils.js'\nimport type { KadDHTComponents, Validators, Selectors, ValueEvent, QueryEvent } from '../index.js'\nimport type { Message } from '../message/dht.js'\nimport type { Network } from '../network.js'\nimport type { PeerRouting } from '../peer-routing/index.js'\nimport type { QueryManager } from '../query/manager.js'\nimport type { QueryFunc } from '../query/types.js'\nimport type { Logger, RoutingOptions } from '@libp2p/interface'\n\nexport interface ContentFetchingInit {\n  validators: Validators\n  selectors: Selectors\n  peerRouting: PeerRouting\n  queryManager: QueryManager\n  network: Network\n  logPrefix: string\n}\n\nexport class ContentFetching {\n  private readonly log: Logger\n  private readonly components: KadDHTComponents\n  private readonly validators: Validators\n  private readonly selectors: Selectors\n  private readonly peerRouting: PeerRouting\n  private readonly queryManager: QueryManager\n  private readonly network: Network\n\n  constructor (components: KadDHTComponents, init: ContentFetchingInit) {\n    const { validators, selectors, peerRouting, queryManager, network, logPrefix } = init\n\n    this.components = components\n    this.log = components.logger.forComponent(`${logPrefix}:content-fetching`)\n    this.validators = validators\n    this.selectors = selectors\n    this.peerRouting = peerRouting\n    this.queryManager = queryManager\n    this.network = network\n  }\n\n  /**\n   * Attempt to retrieve the value for the given key from\n   * the local datastore\n   */\n  async getLocal (key: Uint8Array): Promise<Libp2pRecord> {\n    this.log('getLocal %b', key)\n\n    const dsKey = bufferToRecordKey(key)\n\n    this.log('fetching record for key %k', dsKey)\n\n    const raw = await this.components.datastore.get(dsKey)\n    this.log('found %k in local datastore', dsKey)\n\n    const rec = Libp2pRecord.deserialize(raw)\n\n    await verifyRecord(this.validators, rec)\n\n    return rec\n  }\n\n  /**\n   * Send the best record found to any peers that have an out of date record\n   */\n  async * sendCorrectionRecord (key: Uint8Array, vals: ValueEvent[], best: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<QueryEvent> {\n    this.log('sendCorrection for %b', key)\n    const fixupRec = createPutRecord(key, best)\n\n    for (const { value, from } of vals) {\n      // no need to do anything\n      if (uint8ArrayEquals(value, best)) {\n        this.log('record was ok')\n        continue\n      }\n\n      // correct ourself\n      if (this.components.peerId.equals(from)) {\n        try {\n          const dsKey = bufferToRecordKey(key)\n          this.log(`Storing corrected record for key ${dsKey.toString()}`)\n          await this.components.datastore.put(dsKey, fixupRec.subarray())\n        } catch (err: any) {\n          this.log.error('Failed error correcting self', err)\n        }\n\n        continue\n      }\n\n      // send correction\n      let sentCorrection = false\n      const request: Partial<Message> = {\n        type: MessageType.PUT_VALUE,\n        key,\n        record: fixupRec\n      }\n\n      for await (const event of this.network.sendRequest(from, request, options)) {\n        if (event.name === 'PEER_RESPONSE' && (event.record != null) && uint8ArrayEquals(event.record.value, Libp2pRecord.deserialize(fixupRec).value)) {\n          sentCorrection = true\n        }\n\n        yield event\n      }\n\n      if (!sentCorrection) {\n        yield queryErrorEvent({ from, error: new CodeError('value not put correctly', 'ERR_PUT_VALUE_INVALID') }, options)\n      }\n\n      this.log.error('Failed error correcting entry')\n    }\n  }\n\n  /**\n   * Store the given key/value pair in the DHT\n   */\n  async * put (key: Uint8Array, value: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<unknown, void, undefined> {\n    this.log('put key %b value %b', key, value)\n\n    // create record in the dht format\n    const record = createPutRecord(key, value)\n\n    // store the record locally\n    const dsKey = bufferToRecordKey(key)\n    this.log(`storing record for key ${dsKey.toString()}`)\n    await this.components.datastore.put(dsKey, record.subarray())\n\n    // put record to the closest peers\n    yield * pipe(\n      this.peerRouting.getClosestPeers(key, { signal: options.signal }),\n      (source) => map(source, (event) => {\n        return async () => {\n          if (event.name !== 'FINAL_PEER') {\n            return [event]\n          }\n\n          const events = []\n\n          const msg: Partial<Message> = {\n            type: MessageType.PUT_VALUE,\n            key,\n            record\n          }\n\n          this.log('send put to %p', event.peer.id)\n          for await (const putEvent of this.network.sendRequest(event.peer.id, msg, options)) {\n            events.push(putEvent)\n\n            if (putEvent.name !== 'PEER_RESPONSE') {\n              continue\n            }\n\n            if (!(putEvent.record != null && uint8ArrayEquals(putEvent.record.value, Libp2pRecord.deserialize(record).value))) {\n              events.push(queryErrorEvent({ from: event.peer.id, error: new CodeError('value not put correctly', 'ERR_PUT_VALUE_INVALID') }, options))\n            }\n          }\n\n          return events\n        }\n      }),\n      (source) => parallel(source, {\n        ordered: false,\n        concurrency: ALPHA\n      }),\n      async function * (source) {\n        for await (const events of source) {\n          yield * events\n        }\n      }\n    )\n  }\n\n  /**\n   * Get the value to the given key\n   */\n  async * get (key: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<QueryEvent | ValueEvent> {\n    this.log('get %b', key)\n\n    const vals: ValueEvent[] = []\n\n    for await (const event of this.getMany(key, options)) {\n      if (event.name === 'VALUE') {\n        vals.push(event)\n      }\n\n      yield event\n    }\n\n    if (vals.length === 0) {\n      return\n    }\n\n    const records = vals.map((v) => v.value)\n    let i = 0\n\n    try {\n      i = bestRecord(this.selectors, key, records)\n    } catch (err: any) {\n      // Assume the first record if no selector available\n      if (err.code !== 'ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY') {\n        throw err\n      }\n    }\n\n    const best = records[i]\n    this.log('GetValue %b %b', key, best)\n\n    if (best == null) {\n      throw new CodeError('best value was not found', 'ERR_NOT_FOUND')\n    }\n\n    yield * this.sendCorrectionRecord(key, vals, best, options)\n\n    yield vals[i]\n  }\n\n  /**\n   * Get the `n` values to the given key without sorting\n   */\n  async * getMany (key: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<QueryEvent> {\n    this.log('getMany values for %b', key)\n\n    try {\n      const localRec = await this.getLocal(key)\n\n      yield valueEvent({\n        value: localRec.value,\n        from: this.components.peerId\n      }, options)\n    } catch (err: any) {\n      this.log('error getting local value for %b', key, err)\n    }\n\n    const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n    const getValueQuery: QueryFunc = async function * ({ peer, signal }) {\n      for await (const event of self.peerRouting.getValueOrPeers(peer, key, { signal })) {\n        yield event\n\n        if (event.name === 'PEER_RESPONSE' && (event.record != null)) {\n          yield valueEvent({ from: peer, value: event.record.value }, options)\n        }\n      }\n    }\n\n    // we have peers, lets send the actual query to them\n    yield * this.queryManager.run(key, getValueQuery, options)\n  }\n}\n","/**\n * Calls the passed map function on every entry of the passed iterable iterator\n */\nexport function mapIterable <T, R> (iter: IterableIterator<T>, map: (val: T) => R): IterableIterator<R> {\n  const iterator: IterableIterator<R> = {\n    [Symbol.iterator]: () => {\n      return iterator\n    },\n    next: () => {\n      const next = iter.next()\n      const val = next.value\n\n      if (next.done === true || val == null) {\n        const result: IteratorReturnResult<any> = {\n          done: true,\n          value: undefined\n        }\n\n        return result\n      }\n\n      return {\n        done: false,\n        value: map(val)\n      }\n    }\n  }\n\n  return iterator\n}\n","import { peerIdFromString } from '@libp2p/peer-id'\nimport { mapIterable } from './util.js'\nimport type { PeerId } from '@libp2p/interface'\n\n/**\n * We can't use PeerIds as set entries because set entries are\n * compared using same-value-zero equality, so this is just\n * a map that stringifies the PeerIds before storing them.\n *\n * PeerIds cache stringified versions of themselves so this\n * should be a cheap operation.\n *\n * @example\n *\n * ```TypeScript\n * import { peerSet } from '@libp2p/peer-collections'\n *\n * const set = peerSet()\n * set.add(peerId)\n * ```\n */\nexport class PeerSet {\n  private readonly set: Set<string>\n\n  constructor (set?: PeerSet | Iterable<PeerId>) {\n    this.set = new Set()\n\n    if (set != null) {\n      for (const key of set) {\n        this.set.add(key.toString())\n      }\n    }\n  }\n\n  get size (): number {\n    return this.set.size\n  }\n\n  [Symbol.iterator] (): IterableIterator<PeerId> {\n    return this.values()\n  }\n\n  add (peer: PeerId): void {\n    this.set.add(peer.toString())\n  }\n\n  clear (): void {\n    this.set.clear()\n  }\n\n  delete (peer: PeerId): void {\n    this.set.delete(peer.toString())\n  }\n\n  entries (): IterableIterator<[PeerId, PeerId]> {\n    return mapIterable<[string, string], [PeerId, PeerId]>(\n      this.set.entries(),\n      (val) => {\n        const peerId = peerIdFromString(val[0])\n\n        return [peerId, peerId]\n      }\n    )\n  }\n\n  forEach (predicate: (peerId: PeerId, index: PeerId, set: PeerSet) => void): void {\n    this.set.forEach((str) => {\n      const id = peerIdFromString(str)\n\n      predicate(id, id, this)\n    })\n  }\n\n  has (peer: PeerId): boolean {\n    return this.set.has(peer.toString())\n  }\n\n  values (): IterableIterator<PeerId> {\n    return mapIterable<string, PeerId>(\n      this.set.values(),\n      (val) => {\n        return peerIdFromString(val)\n      }\n    )\n  }\n\n  intersection (other: PeerSet): PeerSet {\n    const output = new PeerSet()\n\n    for (const peerId of other) {\n      if (this.has(peerId)) {\n        output.add(peerId)\n      }\n    }\n\n    return output\n  }\n\n  difference (other: PeerSet): PeerSet {\n    const output = new PeerSet()\n\n    for (const peerId of this) {\n      if (!other.has(peerId)) {\n        output.add(peerId)\n      }\n    }\n\n    return output\n  }\n\n  union (other: PeerSet): PeerSet {\n    const output = new PeerSet()\n\n    for (const peerId of other) {\n      output.add(peerId)\n    }\n\n    for (const peerId of this) {\n      output.add(peerId)\n    }\n\n    return output\n  }\n}\n\nexport function peerSet (): PeerSet {\n  return new PeerSet()\n}\n","import { peerIdFromBytes } from '@libp2p/peer-id'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport type { PeerInfo as PBPeerInfo, ConnectionType } from './dht.js'\nimport type { PeerInfo } from '@libp2p/interface'\n\nexport function toPbPeerInfo (peer: PeerInfo, connection?: ConnectionType): PBPeerInfo {\n  const output: PBPeerInfo = {\n    id: peer.id.toBytes(),\n    multiaddrs: (peer.multiaddrs ?? []).map((m) => m.bytes),\n    connection\n  }\n\n  return output\n}\n\nexport function fromPbPeerInfo (peer: PBPeerInfo): PeerInfo {\n  if (peer.id == null) {\n    throw new Error('Invalid peer in message')\n  }\n\n  return {\n    id: peerIdFromBytes(peer.id),\n    multiaddrs: (peer.multiaddrs ?? []).map((a) => multiaddr(a))\n  }\n}\n","import { PeerSet } from '@libp2p/peer-collections'\nimport map from 'it-map'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport { ALPHA } from '../constants.js'\nimport { MessageType } from '../message/dht.js'\nimport { toPbPeerInfo } from '../message/utils.js'\nimport {\n  queryErrorEvent,\n  peerResponseEvent,\n  providerEvent\n} from '../query/events.js'\nimport type { KadDHTComponents, PeerResponseEvent, ProviderEvent, QueryEvent } from '../index.js'\nimport type { Message } from '../message/dht.js'\nimport type { Network } from '../network.js'\nimport type { PeerRouting } from '../peer-routing/index.js'\nimport type { Providers } from '../providers.js'\nimport type { QueryManager } from '../query/manager.js'\nimport type { QueryFunc } from '../query/types.js'\nimport type { RoutingTable } from '../routing-table/index.js'\nimport type { Logger, PeerInfo, RoutingOptions } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { CID } from 'multiformats/cid'\n\nexport interface ContentRoutingInit {\n  network: Network\n  peerRouting: PeerRouting\n  queryManager: QueryManager\n  routingTable: RoutingTable\n  providers: Providers\n  logPrefix: string\n}\n\nexport class ContentRouting {\n  private readonly log: Logger\n  private readonly components: KadDHTComponents\n  private readonly network: Network\n  private readonly peerRouting: PeerRouting\n  private readonly queryManager: QueryManager\n  private readonly routingTable: RoutingTable\n  private readonly providers: Providers\n\n  constructor (components: KadDHTComponents, init: ContentRoutingInit) {\n    const { network, peerRouting, queryManager, routingTable, providers, logPrefix } = init\n\n    this.components = components\n    this.log = components.logger.forComponent(`${logPrefix}:content-routing`)\n    this.network = network\n    this.peerRouting = peerRouting\n    this.queryManager = queryManager\n    this.routingTable = routingTable\n    this.providers = providers\n  }\n\n  /**\n   * Announce to the network that we can provide the value for a given key and\n   * are contactable on the given multiaddrs\n   */\n  async * provide (key: CID, multiaddrs: Multiaddr[], options: RoutingOptions = {}): AsyncGenerator<QueryEvent, void, undefined> {\n    this.log('provide %s', key)\n\n    // Add peer as provider\n    await this.providers.addProvider(key, this.components.peerId)\n\n    const msg: Partial<Message> = {\n      type: MessageType.ADD_PROVIDER,\n      key: key.multihash.bytes,\n      providers: [\n        toPbPeerInfo({\n          id: this.components.peerId,\n          multiaddrs\n        })\n      ]\n    }\n\n    let sent = 0\n\n    const maybeNotifyPeer = (event: QueryEvent) => {\n      return async () => {\n        if (event.name !== 'FINAL_PEER') {\n          return [event]\n        }\n\n        const events = []\n\n        this.log('putProvider %s to %p', key, event.peer.id)\n\n        try {\n          this.log('sending provider record for %s to %p', key, event.peer.id)\n\n          for await (const sendEvent of this.network.sendMessage(event.peer.id, msg, options)) {\n            if (sendEvent.name === 'PEER_RESPONSE') {\n              this.log('sent provider record for %s to %p', key, event.peer.id)\n              sent++\n            }\n\n            events.push(sendEvent)\n          }\n        } catch (err: any) {\n          this.log.error('error sending provide record to peer %p', event.peer.id, err)\n          events.push(queryErrorEvent({ from: event.peer.id, error: err }, options))\n        }\n\n        return events\n      }\n    }\n\n    // Notify closest peers\n    yield * pipe(\n      this.peerRouting.getClosestPeers(key.multihash.bytes, options),\n      (source) => map(source, (event) => maybeNotifyPeer(event)),\n      (source) => parallel(source, {\n        ordered: false,\n        concurrency: ALPHA\n      }),\n      async function * (source) {\n        for await (const events of source) {\n          yield * events\n        }\n      }\n    )\n\n    this.log('sent provider records to %d peers', sent)\n  }\n\n  /**\n   * Search the dht for up to `K` providers of the given CID.\n   */\n  async * findProviders (key: CID, options: RoutingOptions): AsyncGenerator<PeerResponseEvent | ProviderEvent | QueryEvent> {\n    const toFind = this.routingTable.kBucketSize\n    let found = 0\n    const target = key.multihash.bytes\n    const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n    this.log('findProviders %c', key)\n\n    const provs = await this.providers.getProviders(key)\n\n    // yield values if we have some, also slice because maybe we got lucky and already have too many?\n    if (provs.length > 0) {\n      const providers: PeerInfo[] = []\n\n      for (const peerId of provs.slice(0, toFind)) {\n        try {\n          const peer = await this.components.peerStore.get(peerId)\n\n          providers.push({\n            id: peerId,\n            multiaddrs: peer.addresses.map(({ multiaddr }) => multiaddr)\n          })\n        } catch (err: any) {\n          if (err.code !== 'ERR_NOT_FOUND') {\n            throw err\n          }\n\n          this.log('no peer store entry for %p', peerId)\n        }\n      }\n\n      yield peerResponseEvent({ from: this.components.peerId, messageType: MessageType.GET_PROVIDERS, providers }, options)\n      yield providerEvent({ from: this.components.peerId, providers }, options)\n\n      found += providers.length\n\n      if (found >= toFind) {\n        return\n      }\n    }\n\n    /**\n     * The query function to use on this particular disjoint path\n     */\n    const findProvidersQuery: QueryFunc = async function * ({ peer, signal }) {\n      const request = {\n        type: MessageType.GET_PROVIDERS,\n        key: target\n      }\n\n      yield * self.network.sendRequest(peer, request, {\n        ...options,\n        signal\n      })\n    }\n\n    const providers = new PeerSet(provs)\n\n    for await (const event of this.queryManager.run(target, findProvidersQuery, options)) {\n      yield event\n\n      if (event.name === 'PEER_RESPONSE') {\n        this.log('Found %d provider entries for %c and %d closer peers', event.providers.length, key, event.closer.length)\n\n        const newProviders = []\n\n        for (const peer of event.providers) {\n          if (providers.has(peer.id)) {\n            continue\n          }\n\n          providers.add(peer.id)\n          newProviders.push(peer)\n        }\n\n        if (newProviders.length > 0) {\n          yield providerEvent({ from: event.from, providers: newProviders }, options)\n\n          found += newProviders.length\n\n          if (found >= toFind) {\n            return\n          }\n        }\n      }\n    }\n  }\n}\n","import { TypedEventEmitter } from '@libp2p/interface'\nimport { Libp2pRecord } from '@libp2p/record'\nimport { pbStream } from 'it-protobuf-stream'\nimport { CodeError } from 'protons-runtime'\nimport { Message } from './message/dht.js'\nimport { fromPbPeerInfo } from './message/utils.js'\nimport {\n  dialPeerEvent,\n  sendQueryEvent,\n  peerResponseEvent,\n  queryErrorEvent\n} from './query/events.js'\nimport type { KadDHTComponents, QueryEvent } from './index.js'\nimport type { AbortOptions, Logger, Stream, PeerId, PeerInfo, Startable, RoutingOptions } from '@libp2p/interface'\n\nexport interface NetworkInit {\n  protocol: string\n  logPrefix: string\n}\n\ninterface NetworkEvents {\n  'peer': CustomEvent<PeerInfo>\n}\n\n/**\n * Handle network operations for the dht\n */\nexport class Network extends TypedEventEmitter<NetworkEvents> implements Startable {\n  private readonly log: Logger\n  private readonly protocol: string\n  private running: boolean\n  private readonly components: KadDHTComponents\n\n  /**\n   * Create a new network\n   */\n  constructor (components: KadDHTComponents, init: NetworkInit) {\n    super()\n\n    const { protocol } = init\n    this.components = components\n    this.log = components.logger.forComponent(`${init.logPrefix}:network`)\n    this.running = false\n    this.protocol = protocol\n  }\n\n  /**\n   * Start the network\n   */\n  async start (): Promise<void> {\n    if (this.running) {\n      return\n    }\n\n    this.running = true\n  }\n\n  /**\n   * Stop all network activity\n   */\n  async stop (): Promise<void> {\n    this.running = false\n  }\n\n  /**\n   * Is the network online?\n   */\n  isStarted (): boolean {\n    return this.running\n  }\n\n  /**\n   * Send a request and record RTT for latency measurements\n   */\n  async * sendRequest (to: PeerId, msg: Partial<Message>, options: RoutingOptions = {}): AsyncGenerator<QueryEvent> {\n    if (!this.running) {\n      return\n    }\n\n    const type = msg.type\n\n    if (type == null) {\n      throw new CodeError('Message type was missing', 'ERR_INVALID_PARAMETERS')\n    }\n\n    this.log('sending %s to %p', msg.type, to)\n    yield dialPeerEvent({ peer: to }, options)\n    yield sendQueryEvent({ to, type }, options)\n\n    let stream: Stream | undefined\n\n    try {\n      const connection = await this.components.connectionManager.openConnection(to, options)\n      const stream = await connection.newStream(this.protocol, options)\n\n      const response = await this._writeReadMessage(stream, msg, options)\n\n      yield peerResponseEvent({\n        from: to,\n        messageType: response.type,\n        closer: response.closer.map(fromPbPeerInfo),\n        providers: response.providers.map(fromPbPeerInfo),\n        record: response.record == null ? undefined : Libp2pRecord.deserialize(response.record)\n      }, options)\n    } catch (err: any) {\n      this.log.error('could not send %s to %p', msg.type, to, err)\n      yield queryErrorEvent({ from: to, error: err }, options)\n    } finally {\n      if (stream != null) {\n        await stream.close()\n      }\n    }\n  }\n\n  /**\n   * Sends a message without expecting an answer\n   */\n  async * sendMessage (to: PeerId, msg: Partial<Message>, options: RoutingOptions = {}): AsyncGenerator<QueryEvent> {\n    if (!this.running) {\n      return\n    }\n\n    const type = msg.type\n\n    if (type == null) {\n      throw new CodeError('Message type was missing', 'ERR_INVALID_PARAMETERS')\n    }\n\n    this.log('sending %s to %p', msg.type, to)\n    yield dialPeerEvent({ peer: to }, options)\n    yield sendQueryEvent({ to, type }, options)\n\n    let stream: Stream | undefined\n\n    try {\n      const connection = await this.components.connectionManager.openConnection(to, options)\n      const stream = await connection.newStream(this.protocol, options)\n\n      await this._writeMessage(stream, msg, options)\n\n      yield peerResponseEvent({ from: to, messageType: type }, options)\n    } catch (err: any) {\n      yield queryErrorEvent({ from: to, error: err }, options)\n    } finally {\n      if (stream != null) {\n        await stream.close()\n      }\n    }\n  }\n\n  /**\n   * Write a message to the given stream\n   */\n  async _writeMessage (stream: Stream, msg: Partial<Message>, options: AbortOptions): Promise<void> {\n    const pb = pbStream(stream)\n    await pb.write(msg, Message, options)\n    await pb.unwrap().close(options)\n  }\n\n  /**\n   * Write a message and read its response.\n   * If no response is received after the specified timeout\n   * this will error out.\n   */\n  async _writeReadMessage (stream: Stream, msg: Partial<Message>, options: AbortOptions): Promise<Message> {\n    const pb = pbStream(stream)\n\n    await pb.write(msg, Message, options)\n\n    const message = await pb.read(Message, options)\n\n    await pb.unwrap().close(options)\n\n    // tell any listeners about new peers we've seen\n    message.closer.forEach(peerData => {\n      this.safeDispatchEvent<PeerInfo>('peer', {\n        detail: fromPbPeerInfo(peerData)\n      })\n    })\n    message.providers.forEach(peerData => {\n      this.safeDispatchEvent<PeerInfo>('peer', {\n        detail: fromPbPeerInfo(peerData)\n      })\n    })\n\n    return message\n  }\n}\n","import { compare as uint8ArrayCompare } from 'uint8arrays/compare'\nimport { xor as uint8ArrayXor } from 'uint8arrays/xor'\nimport * as utils from '../utils.js'\nimport type { PeerId } from '@libp2p/interface'\n\ninterface PeerDistance {\n  peerId: PeerId\n  distance: Uint8Array\n}\n\n/**\n * Maintains a list of peerIds sorted by distance from a DHT key.\n */\nexport class PeerDistanceList {\n  /**\n   * The DHT key from which distance is calculated\n   */\n  private readonly originDhtKey: Uint8Array\n\n  /**\n   * The maximum size of the list\n   */\n  private readonly capacity: number\n\n  private peerDistances: PeerDistance[]\n\n  constructor (originDhtKey: Uint8Array, capacity: number) {\n    this.originDhtKey = originDhtKey\n    this.capacity = capacity\n    this.peerDistances = []\n  }\n\n  /**\n   * The length of the list\n   */\n  get length (): number {\n    return this.peerDistances.length\n  }\n\n  /**\n   * The peerIds in the list, in order of distance from the origin key\n   */\n  get peers (): PeerId[] {\n    return this.peerDistances.map(pd => pd.peerId)\n  }\n\n  /**\n   * Add a peerId to the list.\n   */\n  async add (peerId: PeerId): Promise<void> {\n    if (this.peerDistances.find(pd => pd.peerId.equals(peerId)) != null) {\n      return\n    }\n\n    const dhtKey = await utils.convertPeerId(peerId)\n    const el = {\n      peerId,\n      distance: uint8ArrayXor(this.originDhtKey, dhtKey)\n    }\n\n    this.peerDistances.push(el)\n    this.peerDistances.sort((a, b) => uint8ArrayCompare(a.distance, b.distance))\n    this.peerDistances = this.peerDistances.slice(0, this.capacity)\n  }\n\n  /**\n   * Indicates whether any of the peerIds passed as a parameter are closer\n   * to the origin key than the furthest peerId in the PeerDistanceList.\n   */\n  async anyCloser (peerIds: PeerId[]): Promise<boolean> {\n    if (peerIds.length === 0) {\n      return false\n    }\n\n    if (this.length === 0) {\n      return true\n    }\n\n    const dhtKeys = await Promise.all(peerIds.map(utils.convertPeerId))\n    const furthestDistance = this.peerDistances[this.peerDistances.length - 1].distance\n\n    for (const dhtKey of dhtKeys) {\n      const keyDistance = uint8ArrayXor(this.originDhtKey, dhtKey)\n\n      if (uint8ArrayCompare(keyDistance, furthestDistance) < 0) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","import { keys } from '@libp2p/crypto'\nimport { CodeError } from '@libp2p/interface'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { Libp2pRecord } from '@libp2p/record'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { MessageType } from '../message/dht.js'\nimport { PeerDistanceList } from '../peer-list/peer-distance-list.js'\nimport {\n  queryErrorEvent,\n  finalPeerEvent,\n  valueEvent\n} from '../query/events.js'\nimport { verifyRecord } from '../record/validators.js'\nimport * as utils from '../utils.js'\nimport type { KadDHTComponents, DHTRecord, DialPeerEvent, FinalPeerEvent, QueryEvent, Validators } from '../index.js'\nimport type { Message } from '../message/dht.js'\nimport type { Network } from '../network.js'\nimport type { QueryManager, QueryOptions } from '../query/manager.js'\nimport type { QueryFunc } from '../query/types.js'\nimport type { RoutingTable } from '../routing-table/index.js'\nimport type { Logger, PeerId, PeerInfo, PeerStore, RoutingOptions } from '@libp2p/interface'\n\nexport interface PeerRoutingInit {\n  routingTable: RoutingTable\n  network: Network\n  validators: Validators\n  queryManager: QueryManager\n  logPrefix: string\n}\n\nexport class PeerRouting {\n  private readonly log: Logger\n  private readonly routingTable: RoutingTable\n  private readonly network: Network\n  private readonly validators: Validators\n  private readonly queryManager: QueryManager\n  private readonly peerStore: PeerStore\n  private readonly peerId: PeerId\n\n  constructor (components: KadDHTComponents, init: PeerRoutingInit) {\n    const { routingTable, network, validators, queryManager, logPrefix } = init\n\n    this.routingTable = routingTable\n    this.network = network\n    this.validators = validators\n    this.queryManager = queryManager\n    this.peerStore = components.peerStore\n    this.peerId = components.peerId\n    this.log = components.logger.forComponent(`${logPrefix}:peer-routing`)\n  }\n\n  /**\n   * Look if we are connected to a peer with the given id.\n   * Returns its id and addresses, if found, otherwise `undefined`.\n   */\n  async findPeerLocal (peer: PeerId): Promise<PeerInfo | undefined> {\n    let peerData\n    const p = await this.routingTable.find(peer)\n\n    if (p != null) {\n      this.log('findPeerLocal found %p in routing table', peer)\n\n      try {\n        peerData = await this.peerStore.get(p)\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    if (peerData == null) {\n      try {\n        peerData = await this.peerStore.get(peer)\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    if (peerData != null) {\n      this.log('findPeerLocal found %p in peer store', peer)\n\n      return {\n        id: peerData.id,\n        multiaddrs: peerData.addresses.map((address) => address.multiaddr)\n      }\n    }\n\n    return undefined\n  }\n\n  /**\n   * Get a value via rpc call for the given parameters\n   */\n  async * _getValueSingle (peer: PeerId, key: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<QueryEvent> {\n    const msg: Partial<Message> = {\n      type: MessageType.GET_VALUE,\n      key\n    }\n\n    yield * this.network.sendRequest(peer, msg, options)\n  }\n\n  /**\n   * Get the public key directly from a node\n   */\n  async * getPublicKeyFromNode (peer: PeerId, options: RoutingOptions = {}): AsyncGenerator<QueryEvent> {\n    const pkKey = utils.keyForPublicKey(peer)\n\n    for await (const event of this._getValueSingle(peer, pkKey, options)) {\n      yield event\n\n      if (event.name === 'PEER_RESPONSE' && event.record != null) {\n        const recPeer = await peerIdFromKeys(keys.marshalPublicKey({ bytes: event.record.value }))\n\n        // compare hashes of the pub key\n        if (!recPeer.equals(peer)) {\n          throw new CodeError('public key does not match id', 'ERR_PUBLIC_KEY_DOES_NOT_MATCH_ID')\n        }\n\n        if (recPeer.publicKey == null) {\n          throw new CodeError('public key missing', 'ERR_PUBLIC_KEY_MISSING')\n        }\n\n        yield valueEvent({ from: peer, value: recPeer.publicKey }, options)\n      }\n    }\n\n    throw new CodeError(`Node not responding with its public key: ${peer.toString()}`, 'ERR_INVALID_RECORD')\n  }\n\n  /**\n   * Search for a peer with the given ID\n   */\n  async * findPeer (id: PeerId, options: RoutingOptions = {}): AsyncGenerator<FinalPeerEvent | QueryEvent> {\n    this.log('findPeer %p', id)\n\n    if (options.useCache !== false) {\n      // Try to find locally\n      const pi = await this.findPeerLocal(id)\n\n      // already got it\n      if (pi != null) {\n        this.log('found local')\n        yield finalPeerEvent({\n          from: this.peerId,\n          peer: pi\n        }, options)\n        return\n      }\n    }\n\n    let foundPeer = false\n\n    if (options.useNetwork !== false) {\n      const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n      const findPeerQuery: QueryFunc = async function * ({ peer, signal }) {\n        const request: Partial<Message> = {\n          type: MessageType.FIND_NODE,\n          key: id.toBytes()\n        }\n\n        for await (const event of self.network.sendRequest(peer, request, {\n          ...options,\n          signal\n        })) {\n          yield event\n\n          if (event.name === 'PEER_RESPONSE') {\n            const match = event.closer.find((p) => p.id.equals(id))\n\n            // found the peer\n            if (match != null) {\n              yield finalPeerEvent({ from: event.from, peer: match }, options)\n            }\n          }\n        }\n      }\n\n      for await (const event of this.queryManager.run(id.toBytes(), findPeerQuery, options)) {\n        if (event.name === 'FINAL_PEER') {\n          foundPeer = true\n        }\n\n        yield event\n      }\n    }\n\n    if (!foundPeer) {\n      yield queryErrorEvent({ from: this.peerId, error: new CodeError('Not found', 'ERR_NOT_FOUND') }, options)\n    }\n  }\n\n  /**\n   * Kademlia 'node lookup' operation on a key, which could be a the\n   * bytes from a multihash or a peer ID\n   */\n  async * getClosestPeers (key: Uint8Array, options: QueryOptions = {}): AsyncGenerator<DialPeerEvent | QueryEvent> {\n    this.log('getClosestPeers to %b', key)\n    const id = await utils.convertBuffer(key)\n    const tablePeers = this.routingTable.closestPeers(id)\n    const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n    const peers = new PeerDistanceList(id, this.routingTable.kBucketSize)\n    await Promise.all(tablePeers.map(async peer => { await peers.add(peer) }))\n\n    const getCloserPeersQuery: QueryFunc = async function * ({ peer, signal }) {\n      self.log('closerPeersSingle %s from %p', uint8ArrayToString(key, 'base32'), peer)\n      const request: Partial<Message> = {\n        type: MessageType.FIND_NODE,\n        key\n      }\n\n      yield * self.network.sendRequest(peer, request, {\n        ...options,\n        signal\n      })\n    }\n\n    for await (const event of this.queryManager.run(key, getCloserPeersQuery, options)) {\n      yield event\n\n      if (event.name === 'PEER_RESPONSE') {\n        await Promise.all(event.closer.map(async peerData => { await peers.add(peerData.id) }))\n      }\n    }\n\n    this.log('found %d peers close to %b', peers.length, key)\n\n    for (const peerId of peers.peers) {\n      try {\n        const peer = await this.peerStore.get(peerId)\n\n        yield finalPeerEvent({\n          from: this.peerId,\n          peer: {\n            id: peerId,\n            multiaddrs: peer.addresses.map(({ multiaddr }) => multiaddr)\n          }\n        }, options)\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n  }\n\n  /**\n   * Query a particular peer for the value for the given key.\n   * It will either return the value or a list of closer peers.\n   *\n   * Note: The peerStore is updated with new addresses found for the given peer.\n   */\n  async * getValueOrPeers (peer: PeerId, key: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<DialPeerEvent | QueryEvent> {\n    for await (const event of this._getValueSingle(peer, key, options)) {\n      if (event.name === 'PEER_RESPONSE') {\n        if (event.record != null) {\n          // We have a record\n          try {\n            await this._verifyRecordOnline(event.record)\n          } catch (err: any) {\n            const errMsg = 'invalid record received, discarded'\n            this.log(errMsg)\n\n            yield queryErrorEvent({ from: event.from, error: new CodeError(errMsg, 'ERR_INVALID_RECORD') }, options)\n            continue\n          }\n        }\n      }\n\n      yield event\n    }\n  }\n\n  /**\n   * Verify a record, fetching missing public keys from the network.\n   * Throws an error if the record is invalid.\n   */\n  async _verifyRecordOnline (record: DHTRecord): Promise<void> {\n    if (record.timeReceived == null) {\n      throw new CodeError('invalid record received', 'ERR_INVALID_RECORD')\n    }\n\n    await verifyRecord(this.validators, new Libp2pRecord(record.key, record.value, record.timeReceived))\n  }\n\n  /**\n   * Get the nearest peers to the given query, but if closer\n   * than self\n   */\n  async getCloserPeersOffline (key: Uint8Array, closerThan: PeerId): Promise<PeerInfo[]> {\n    const id = await utils.convertBuffer(key)\n    const ids = this.routingTable.closestPeers(id)\n    const output: PeerInfo[] = []\n\n    for (const peerId of ids) {\n      if (peerId.equals(closerThan)) {\n        continue\n      }\n\n      try {\n        const peer = await this.peerStore.get(peerId)\n\n        output.push({\n          id: peerId,\n          multiaddrs: peer.addresses.map(({ multiaddr }) => multiaddr)\n        })\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    if (output.length > 0) {\n      this.log('getCloserPeersOffline found %d peer(s) closer to %b than %p', output.length, key, closerThan)\n    } else {\n      this.log('getCloserPeersOffline could not find peer closer to %b than %p', key, closerThan)\n    }\n\n    return output\n  }\n}\n","import { peerIdFromString } from '@libp2p/peer-id'\nimport cache from 'hashlru'\nimport { Key } from 'interface-datastore/key'\nimport Queue from 'p-queue'\nimport * as varint from 'uint8-varint'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport {\n  PROVIDERS_CLEANUP_INTERVAL,\n  PROVIDERS_VALIDITY,\n  PROVIDERS_LRU_CACHE_SIZE,\n  PROVIDER_KEY_PREFIX\n} from './constants.js'\nimport type { ComponentLogger, Logger, PeerId, Startable } from '@libp2p/interface'\nimport type { Datastore } from 'interface-datastore'\nimport type { CID } from 'multiformats'\n\nexport interface ProvidersInit {\n  /**\n   * @default 256\n   */\n  cacheSize?: number\n  /**\n   * How often invalid records are cleaned. (in seconds)\n   *\n   * @default 5400\n   */\n  cleanupInterval?: number\n  /**\n   * How long is a provider valid for. (in seconds)\n   *\n   * @default 86400\n   */\n  provideValidity?: number\n}\n\nexport interface ProvidersComponents {\n  datastore: Datastore\n  logger: ComponentLogger\n}\n\n/**\n * This class manages known providers.\n * A provider is a peer that we know to have the content for a given CID.\n *\n * Every `cleanupInterval` providers are checked if they\n * are still valid, i.e. younger than the `provideValidity`.\n * If they are not, they are deleted.\n *\n * To ensure the list survives restarts of the daemon,\n * providers are stored in the datastore, but to ensure\n * access is fast there is an LRU cache in front of that.\n */\nexport class Providers implements Startable {\n  private readonly log: Logger\n  private readonly datastore: Datastore\n  private readonly cache: ReturnType<typeof cache>\n  private readonly cleanupInterval: number\n  private readonly provideValidity: number\n  private readonly syncQueue: Queue\n  private started: boolean\n  private cleaner?: ReturnType<typeof setInterval>\n\n  constructor (components: ProvidersComponents, init: ProvidersInit = {}) {\n    const { cacheSize, cleanupInterval, provideValidity } = init\n\n    this.log = components.logger.forComponent('libp2p:kad-dht:providers')\n    this.datastore = components.datastore\n    this.cleanupInterval = cleanupInterval ?? PROVIDERS_CLEANUP_INTERVAL\n    this.provideValidity = provideValidity ?? PROVIDERS_VALIDITY\n    this.cache = cache(cacheSize ?? PROVIDERS_LRU_CACHE_SIZE)\n    this.syncQueue = new Queue({ concurrency: 1 })\n    this.started = false\n  }\n\n  isStarted (): boolean {\n    return this.started\n  }\n\n  /**\n   * Start the provider cleanup service\n   */\n  async start (): Promise<void> {\n    if (this.started) {\n      return\n    }\n\n    this.started = true\n\n    this.cleaner = setInterval(\n      () => {\n        this._cleanup().catch(err => {\n          this.log.error(err)\n        })\n      },\n      this.cleanupInterval\n    )\n  }\n\n  /**\n   * Release any resources.\n   */\n  async stop (): Promise<void> {\n    this.started = false\n\n    if (this.cleaner != null) {\n      clearInterval(this.cleaner)\n      this.cleaner = undefined\n    }\n  }\n\n  /**\n   * Check all providers if they are still valid, and if not delete them\n   */\n  async _cleanup (): Promise<void> {\n    await this.syncQueue.add(async () => {\n      const start = Date.now()\n\n      let count = 0\n      let deleteCount = 0\n      const deleted = new Map<string, Set<string>>()\n      const batch = this.datastore.batch()\n\n      // Get all provider entries from the datastore\n      const query = this.datastore.query({ prefix: PROVIDER_KEY_PREFIX })\n\n      for await (const entry of query) {\n        try {\n          // Add a delete to the batch for each expired entry\n          const { cid, peerId } = parseProviderKey(entry.key)\n          const time = readTime(entry.value).getTime()\n          const now = Date.now()\n          const delta = now - time\n          const expired = delta > this.provideValidity\n\n          this.log('comparing: %d - %d = %d > %d %s', now, time, delta, this.provideValidity, expired ? '(expired)' : '')\n\n          if (expired) {\n            deleteCount++\n            batch.delete(entry.key)\n            const peers = deleted.get(cid) ?? new Set<string>()\n            peers.add(peerId)\n            deleted.set(cid, peers)\n          }\n          count++\n        } catch (err: any) {\n          this.log.error(err.message)\n        }\n      }\n\n      // Commit the deletes to the datastore\n      if (deleted.size > 0) {\n        this.log('deleting %d / %d entries', deleteCount, count)\n        await batch.commit()\n      } else {\n        this.log('nothing to delete')\n      }\n\n      // Clear expired entries from the cache\n      for (const [cid, peers] of deleted) {\n        const key = makeProviderKey(cid)\n        const provs = this.cache.get(key)\n\n        if (provs != null) {\n          for (const peerId of peers) {\n            provs.delete(peerId)\n          }\n\n          if (provs.size === 0) {\n            this.cache.remove(key)\n          } else {\n            this.cache.set(key, provs)\n          }\n        }\n      }\n\n      this.log('Cleanup successful (%dms)', Date.now() - start)\n    })\n  }\n\n  /**\n   * Get the currently known provider peer ids for a given CID\n   */\n  async _getProvidersMap (cid: CID): Promise<Map<string, Date>> {\n    const cacheKey = makeProviderKey(cid)\n    let provs: Map<string, Date> = this.cache.get(cacheKey)\n\n    if (provs == null) {\n      provs = await loadProviders(this.datastore, cid)\n      this.cache.set(cacheKey, provs)\n    }\n\n    return provs\n  }\n\n  /**\n   * Add a new provider for the given CID\n   */\n  async addProvider (cid: CID, provider: PeerId): Promise<void> {\n    await this.syncQueue.add(async () => {\n      this.log('%p provides %s', provider, cid)\n      const provs = await this._getProvidersMap(cid)\n\n      this.log('loaded %s provs', provs.size)\n      const now = new Date()\n      provs.set(provider.toString(), now)\n\n      const dsKey = makeProviderKey(cid)\n      this.cache.set(dsKey, provs)\n\n      await writeProviderEntry(this.datastore, cid, provider, now)\n    })\n  }\n\n  /**\n   * Get a list of providers for the given CID\n   */\n  async getProviders (cid: CID): Promise<PeerId[]> {\n    return this.syncQueue.add(async () => {\n      this.log('get providers for %s', cid)\n      const provs = await this._getProvidersMap(cid)\n\n      return [...provs.keys()].map(peerIdStr => {\n        return peerIdFromString(peerIdStr)\n      })\n    }, {\n      // no timeout is specified for this queue so it will not\n      // throw, but this is required to get the right return\n      // type since p-queue@7.3.4\n      throwOnTimeout: true\n    })\n  }\n}\n\n/**\n * Encode the given key its matching datastore key\n */\nfunction makeProviderKey (cid: CID | string): string {\n  const cidStr = typeof cid === 'string' ? cid : uint8ArrayToString(cid.multihash.bytes, 'base32')\n\n  return `${PROVIDER_KEY_PREFIX}/${cidStr}`\n}\n\n/**\n * Write a provider into the given store\n */\nasync function writeProviderEntry (store: Datastore, cid: CID, peer: PeerId, time: Date): Promise<void> {\n  const dsKey = [\n    makeProviderKey(cid),\n    '/',\n    peer.toString()\n  ].join('')\n\n  const key = new Key(dsKey)\n  const buffer = varint.encode(time.getTime())\n\n  await store.put(key, buffer)\n}\n\n/**\n * Parse the CID and provider peer id from the key\n */\nfunction parseProviderKey (key: Key): { cid: string, peerId: string } {\n  const parts = key.toString().split('/')\n\n  if (parts.length !== 5) {\n    throw new Error(`incorrectly formatted provider entry key in datastore: ${key.toString()}`)\n  }\n\n  return {\n    cid: parts[3],\n    peerId: parts[4]\n  }\n}\n\n/**\n * Load providers for the given CID from the store\n */\nasync function loadProviders (store: Datastore, cid: CID): Promise<Map<string, Date>> {\n  const providers = new Map<string, Date>()\n  const query = store.query({ prefix: makeProviderKey(cid) })\n\n  for await (const entry of query) {\n    const { peerId } = parseProviderKey(entry.key)\n    providers.set(peerId, readTime(entry.value))\n  }\n\n  return providers\n}\n\nfunction readTime (buf: Uint8Array): Date {\n  return new Date(varint.decode(buf))\n}\n","import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","import lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    #queue = [];\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && this.#queue[this.size - 1].priority >= options.priority) {\n            this.#queue.push(element);\n            return;\n        }\n        const index = lowerBound(this.#queue, element, (a, b) => b.priority - a.priority);\n        this.#queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this.#queue.shift();\n        return item?.run;\n    }\n    filter(options) {\n        return this.#queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this.#queue.length;\n    }\n}\n","import { EventEmitter } from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    #carryoverConcurrencyCount;\n    #isIntervalIgnored;\n    #intervalCount = 0;\n    #intervalCap;\n    #interval;\n    #intervalEnd = 0;\n    #intervalId;\n    #timeoutId;\n    #queue;\n    #queueClass;\n    #pending = 0;\n    // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n    #concurrency;\n    #isPaused;\n    #throwOnTimeout;\n    /**\n    Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n\n    Applies to each future operation.\n    */\n    timeout;\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        super();\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${options.intervalCap?.toString() ?? ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${options.interval?.toString() ?? ''}\\` (${typeof options.interval})`);\n        }\n        this.#carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this.#isIntervalIgnored = options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0;\n        this.#intervalCap = options.intervalCap;\n        this.#interval = options.interval;\n        this.#queue = new options.queueClass();\n        this.#queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        this.#throwOnTimeout = options.throwOnTimeout === true;\n        this.#isPaused = options.autoStart === false;\n    }\n    get #doesIntervalAllowAnother() {\n        return this.#isIntervalIgnored || this.#intervalCount < this.#intervalCap;\n    }\n    get #doesConcurrentAllowAnother() {\n        return this.#pending < this.#concurrency;\n    }\n    #next() {\n        this.#pending--;\n        this.#tryToStartAnother();\n        this.emit('next');\n    }\n    #onResumeInterval() {\n        this.#onInterval();\n        this.#initializeIntervalIfNeeded();\n        this.#timeoutId = undefined;\n    }\n    get #isIntervalPaused() {\n        const now = Date.now();\n        if (this.#intervalId === undefined) {\n            const delay = this.#intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this.#intervalCount = (this.#carryoverConcurrencyCount) ? this.#pending : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this.#timeoutId === undefined) {\n                    this.#timeoutId = setTimeout(() => {\n                        this.#onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #tryToStartAnother() {\n        if (this.#queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this.#intervalId) {\n                clearInterval(this.#intervalId);\n            }\n            this.#intervalId = undefined;\n            this.emit('empty');\n            if (this.#pending === 0) {\n                this.emit('idle');\n            }\n            return false;\n        }\n        if (!this.#isPaused) {\n            const canInitializeInterval = !this.#isIntervalPaused;\n            if (this.#doesIntervalAllowAnother && this.#doesConcurrentAllowAnother) {\n                const job = this.#queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this.#initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #initializeIntervalIfNeeded() {\n        if (this.#isIntervalIgnored || this.#intervalId !== undefined) {\n            return;\n        }\n        this.#intervalId = setInterval(() => {\n            this.#onInterval();\n        }, this.#interval);\n        this.#intervalEnd = Date.now() + this.#interval;\n    }\n    #onInterval() {\n        if (this.#intervalCount === 0 && this.#pending === 0 && this.#intervalId) {\n            clearInterval(this.#intervalId);\n            this.#intervalId = undefined;\n        }\n        this.#intervalCount = this.#carryoverConcurrencyCount ? this.#pending : 0;\n        this.#processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    #processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this.#tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this.#concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this.#concurrency = newConcurrency;\n        this.#processQueue();\n    }\n    async #throwOnAbort(signal) {\n        return new Promise((_resolve, reject) => {\n            signal.addEventListener('abort', () => {\n                reject(signal.reason);\n            }, { once: true });\n        });\n    }\n    async add(function_, options = {}) {\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: this.#throwOnTimeout,\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            this.#queue.enqueue(async () => {\n                this.#pending++;\n                this.#intervalCount++;\n                try {\n                    options.signal?.throwIfAborted();\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), { milliseconds: options.timeout });\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, this.#throwOnAbort(options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    this.#next();\n                }\n            }, options);\n            this.emit('add');\n            this.#tryToStartAnother();\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this.#isPaused) {\n            return this;\n        }\n        this.#isPaused = false;\n        this.#processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this.#isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this.#queue = new this.#queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (this.#queue.size < limit) {\n            return;\n        }\n        await this.#onEvent('next', () => this.#queue.size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.#pending === 0 && this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('idle');\n    }\n    async #onEvent(event, filter) {\n        return new Promise(resolve => {\n            const listener = () => {\n                if (filter && !filter()) {\n                    return;\n                }\n                this.off(event, listener);\n                resolve();\n            };\n            this.on(event, listener);\n        });\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return this.#queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return this.#queue.filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return this.#pending;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this.#isPaused;\n    }\n}\n","\nexport interface ClearableSignal extends AbortSignal {\n  clear: () => void\n}\n\n/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n */\nexport function anySignal (signals: Array<AbortSignal | undefined | null>): ClearableSignal {\n  const controller = new globalThis.AbortController()\n\n  function onAbort (): void {\n    controller.abort()\n\n    for (const signal of signals) {\n      if (signal?.removeEventListener != null) {\n        signal.removeEventListener('abort', onAbort)\n      }\n    }\n  }\n\n  for (const signal of signals) {\n    if (signal?.aborted === true) {\n      onAbort()\n      break\n    }\n\n    if (signal?.addEventListener != null) {\n      signal.addEventListener('abort', onAbort)\n    }\n  }\n\n  function clear (): void {\n    for (const signal of signals) {\n      if (signal?.removeEventListener != null) {\n        signal.removeEventListener('abort', onAbort)\n      }\n    }\n  }\n\n  const signal = controller.signal as ClearableSignal\n  signal.clear = clear\n\n  return signal\n}\n","import { CodeError } from '@libp2p/interface'\nimport { pushable } from 'it-pushable'\nimport type { CleanUpEvents } from './manager.js'\nimport type { QueryEvent } from '../index.js'\nimport type { Logger, TypedEventTarget } from '@libp2p/interface'\nimport type Queue from 'p-queue'\n\nexport async function * queueToGenerator (queue: Queue, signal: AbortSignal, cleanUp: TypedEventTarget<CleanUpEvents>, log: Logger): AsyncGenerator<QueryEvent, void, undefined> {\n  const stream = pushable<QueryEvent>({\n    objectMode: true\n  })\n\n  const cleanup = (err?: Error): void => {\n    log('clean up queue, results %d, queue size %d, pending tasks %d', stream.readableLength, queue.size, queue.pending)\n    queue.clear()\n    stream.end(err)\n  }\n\n  const onQueueJobComplete = (result: QueryEvent): void => {\n    if (result != null) {\n      stream.push(result)\n    }\n  }\n\n  const onQueueError = (err: Error): void => {\n    log('queue error', err)\n    cleanup(err)\n  }\n\n  const onQueueIdle = (): void => {\n    log('queue idle')\n    cleanup()\n  }\n\n  // clear the queue and throw if the query is aborted\n  const onSignalAbort = (): void => {\n    log('abort queue')\n    cleanup(new CodeError('Query aborted', 'ERR_QUERY_ABORTED'))\n  }\n\n  // the user broke out of the loop early, ensure we resolve the deferred result\n  // promise and clear the queue of any remaining jobs\n  const onCleanUp = (): void => {\n    cleanup()\n  }\n\n  // add listeners\n  queue.on('completed', onQueueJobComplete)\n  queue.on('error', onQueueError)\n  queue.on('idle', onQueueIdle)\n  signal.addEventListener('abort', onSignalAbort)\n  cleanUp.addEventListener('cleanup', onCleanUp)\n\n  try {\n    yield * stream\n  } finally {\n    // remove listeners\n    queue.removeListener('completed', onQueueJobComplete)\n    queue.removeListener('error', onQueueError)\n    queue.removeListener('idle', onQueueIdle)\n    signal.removeEventListener('abort', onSignalAbort)\n    cleanUp.removeEventListener('cleanup', onCleanUp)\n  }\n}\n","import { setMaxListeners } from '@libp2p/interface'\nimport { anySignal } from 'any-signal'\nimport Queue from 'p-queue'\nimport { toString } from 'uint8arrays/to-string'\nimport { xor } from 'uint8arrays/xor'\nimport { convertPeerId, convertBuffer } from '../utils.js'\nimport { queryErrorEvent } from './events.js'\nimport { queueToGenerator } from './utils.js'\nimport type { CleanUpEvents } from './manager.js'\nimport type { QueryEvent } from '../index.js'\nimport type { QueryFunc } from '../query/types.js'\nimport type { Logger, TypedEventTarget, PeerId, RoutingOptions } from '@libp2p/interface'\nimport type { PeerSet } from '@libp2p/peer-collections'\n\nconst MAX_XOR = BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF')\n\nexport interface QueryPathOptions extends RoutingOptions {\n  /**\n   * What are we trying to find\n   */\n  key: Uint8Array\n\n  /**\n   * Where we start our query\n   */\n  startingPeer: PeerId\n\n  /**\n   * Who we are\n   */\n  ourPeerId: PeerId\n\n  /**\n   * When to stop querying\n   */\n  signal: AbortSignal\n\n  /**\n   * The query function to run with each peer\n   */\n  query: QueryFunc\n\n  /**\n   * How many concurrent node/value lookups to run\n   */\n  alpha: number\n\n  /**\n   * How many concurrent node/value lookups to run\n   */\n  pathIndex: number\n\n  /**\n   * How many concurrent node/value lookups to run\n   */\n  numPaths: number\n\n  /**\n   * will emit a 'cleanup' event if the caller exits the for..await of early\n   */\n  cleanUp: TypedEventTarget<CleanUpEvents>\n\n  /**\n   * A timeout for queryFunc in ms\n   */\n  queryFuncTimeout?: number\n\n  /**\n   * Query log\n   */\n  log: Logger\n\n  /**\n   * Set of peers seen by this and other paths\n   */\n  peersSeen: PeerSet\n}\n\n/**\n * Walks a path through the DHT, calling the passed query function for\n * every peer encountered that we have not seen before\n */\nexport async function * queryPath (options: QueryPathOptions): AsyncGenerator<QueryEvent, void, undefined> {\n  const { key, startingPeer, ourPeerId, signal, query, alpha, pathIndex, numPaths, cleanUp, queryFuncTimeout, log, peersSeen } = options\n  // Only ALPHA node/value lookups are allowed at any given time for each process\n  // https://github.com/libp2p/specs/tree/master/kad-dht#alpha-concurrency-parameter-%CE%B1\n  const queue = new Queue({\n    concurrency: alpha\n  })\n\n  // perform lookups on kadId, not the actual value\n  const kadId = await convertBuffer(key)\n\n  /**\n   * Adds the passed peer to the query queue if it's not us and no\n   * other path has passed through this peer\n   */\n  function queryPeer (peer: PeerId, peerKadId: Uint8Array): void {\n    if (peer == null) {\n      return\n    }\n\n    peersSeen.add(peer)\n\n    const peerXor = BigInt('0x' + toString(xor(peerKadId, kadId), 'base16'))\n\n    queue.add(async () => {\n      const signals = [signal]\n\n      if (queryFuncTimeout != null) {\n        signals.push(AbortSignal.timeout(queryFuncTimeout))\n      }\n\n      const compoundSignal = anySignal(signals)\n\n      // this signal can get listened to a lot\n      setMaxListeners(Infinity, compoundSignal)\n\n      try {\n        for await (const event of query({\n          key,\n          peer,\n          signal: compoundSignal,\n          pathIndex,\n          numPaths\n        })) {\n          if (compoundSignal.aborted) {\n            return\n          }\n\n          // if there are closer peers and the query has not completed, continue the query\n          if (event.name === 'PEER_RESPONSE') {\n            for (const closerPeer of event.closer) {\n              if (peersSeen.has(closerPeer.id)) { // eslint-disable-line max-depth\n                log('already seen %p in query', closerPeer.id)\n                continue\n              }\n\n              if (ourPeerId.equals(closerPeer.id)) { // eslint-disable-line max-depth\n                log('not querying ourselves')\n                continue\n              }\n\n              const closerPeerKadId = await convertPeerId(closerPeer.id)\n              const closerPeerXor = BigInt('0x' + toString(xor(closerPeerKadId, kadId), 'base16'))\n\n              // only continue query if closer peer is actually closer\n              if (closerPeerXor > peerXor) { // eslint-disable-line max-depth\n                log('skipping %p as they are not closer to %b than %p', closerPeer.id, key, peer)\n                continue\n              }\n\n              log('querying closer peer %p', closerPeer.id)\n              queryPeer(closerPeer.id, closerPeerKadId)\n            }\n          }\n          queue.emit('completed', event)\n        }\n      } catch (err: any) {\n        if (!signal.aborted) {\n          return queryErrorEvent({\n            from: peer,\n            error: err\n          }, options)\n        }\n      } finally {\n        compoundSignal.clear()\n      }\n    }, {\n      // use xor value as the queue priority - closer peers should execute first\n      // subtract it from MAX_XOR because higher priority values execute sooner\n\n      // @ts-expect-error this is supposed to be a Number but it's ok to use BigInts\n      // as long as all priorities are BigInts since we won't mix BigInts and Number\n      // values in arithmetic operations\n      priority: MAX_XOR - peerXor\n    }).catch(err => {\n      log.error(err)\n    })\n  }\n\n  // begin the query with the starting peer\n  queryPeer(startingPeer, await convertPeerId(startingPeer))\n\n  // yield results as they come in\n  yield * queueToGenerator(queue, signal, cleanUp, log)\n}\n","import { TypedEventEmitter, CustomEvent, setMaxListeners } from '@libp2p/interface'\nimport { PeerSet } from '@libp2p/peer-collections'\nimport { anySignal } from 'any-signal'\nimport merge from 'it-merge'\nimport { raceSignal } from 'race-signal'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport {\n  ALPHA, K, DEFAULT_QUERY_TIMEOUT\n} from '../constants.js'\nimport { convertBuffer } from '../utils.js'\nimport { queryPath } from './query-path.js'\nimport type { QueryFunc } from './types.js'\nimport type { QueryEvent } from '../index.js'\nimport type { RoutingTable } from '../routing-table/index.js'\nimport type { ComponentLogger, Metric, Metrics, PeerId, RoutingOptions, Startable } from '@libp2p/interface'\nimport type { DeferredPromise } from 'p-defer'\n\nexport interface CleanUpEvents {\n  'cleanup': CustomEvent\n}\n\nexport interface QueryManagerInit {\n  logPrefix: string\n  disjointPaths?: number\n  alpha?: number\n  initialQuerySelfHasRun: DeferredPromise<void>\n  routingTable: RoutingTable\n}\n\nexport interface QueryManagerComponents {\n  peerId: PeerId\n  metrics?: Metrics\n  logger: ComponentLogger\n}\n\nexport interface QueryOptions extends RoutingOptions {\n  /**\n   * A timeout for subqueries executed as part of the main query\n   */\n  queryFuncTimeout?: number\n\n  isSelfQuery?: boolean\n}\n\n/**\n * Keeps track of all running queries\n */\nexport class QueryManager implements Startable {\n  public disjointPaths: number\n  private readonly alpha: number\n  private shutDownController: AbortController\n  private running: boolean\n  private queries: number\n  private readonly logger: ComponentLogger\n  private readonly peerId: PeerId\n  private readonly routingTable: RoutingTable\n  private initialQuerySelfHasRun?: DeferredPromise<void>\n  private readonly logPrefix: string\n  private readonly metrics?: {\n    runningQueries: Metric\n    queryTime: Metric\n  }\n\n  constructor (components: QueryManagerComponents, init: QueryManagerInit) {\n    const { disjointPaths = K, alpha = ALPHA, logPrefix } = init\n\n    this.logPrefix = logPrefix\n    this.disjointPaths = disjointPaths ?? K\n    this.running = false\n    this.alpha = alpha ?? ALPHA\n    this.queries = 0\n    this.initialQuerySelfHasRun = init.initialQuerySelfHasRun\n    this.routingTable = init.routingTable\n    this.logger = components.logger\n    this.peerId = components.peerId\n\n    if (components.metrics != null) {\n      this.metrics = {\n        runningQueries: components.metrics.registerMetric(`${logPrefix.replaceAll(':', '_')}_running_queries`),\n        queryTime: components.metrics.registerMetric(`${logPrefix.replaceAll(':', '_')}_query_time_seconds`)\n      }\n    }\n\n    // allow us to stop queries on shut down\n    this.shutDownController = new AbortController()\n    // make sure we don't make a lot of noise in the logs\n    setMaxListeners(Infinity, this.shutDownController.signal)\n  }\n\n  isStarted (): boolean {\n    return this.running\n  }\n\n  /**\n   * Starts the query manager\n   */\n  async start (): Promise<void> {\n    this.running = true\n\n    // allow us to stop queries on shut down\n    this.shutDownController = new AbortController()\n    // make sure we don't make a lot of noise in the logs\n    setMaxListeners(Infinity, this.shutDownController.signal)\n  }\n\n  /**\n   * Stops all queries\n   */\n  async stop (): Promise<void> {\n    this.running = false\n\n    this.shutDownController.abort()\n  }\n\n  async * run (key: Uint8Array, queryFunc: QueryFunc, options: QueryOptions = {}): AsyncGenerator<QueryEvent> {\n    if (!this.running) {\n      throw new Error('QueryManager not started')\n    }\n\n    const stopQueryTimer = this.metrics?.queryTime.timer()\n\n    if (options.signal == null) {\n      // don't let queries run forever\n      const signal = AbortSignal.timeout(DEFAULT_QUERY_TIMEOUT)\n\n      // this signal will get listened to for network requests, etc\n      // so make sure we don't make a lot of noise in the logs\n      setMaxListeners(Infinity, signal)\n\n      options = {\n        ...options,\n        signal\n      }\n    }\n\n    // if the user breaks out of a for..await of loop iterating over query\n    // results we need to cancel any in-flight network requests\n    const queryEarlyExitController = new AbortController()\n\n    const signal = anySignal([\n      this.shutDownController.signal,\n      queryEarlyExitController.signal,\n      options.signal\n    ])\n\n    // this signal will get listened to for every invocation of queryFunc\n    // so make sure we don't make a lot of noise in the logs\n    setMaxListeners(Infinity, signal, queryEarlyExitController.signal)\n\n    const log = this.logger.forComponent(`${this.logPrefix}:query:` + uint8ArrayToString(key, 'base58btc'))\n\n    // query a subset of peers up to `kBucketSize / 2` in length\n    const startTime = Date.now()\n    const cleanUp = new TypedEventEmitter<CleanUpEvents>()\n    let queryFinished = false\n\n    try {\n      if (options.isSelfQuery !== true && this.initialQuerySelfHasRun != null) {\n        log('waiting for initial query-self query before continuing')\n\n        await raceSignal(this.initialQuerySelfHasRun.promise, signal)\n\n        this.initialQuerySelfHasRun = undefined\n      }\n\n      log('query:start')\n      this.queries++\n      this.metrics?.runningQueries.update(this.queries)\n\n      const id = await convertBuffer(key)\n      const peers = this.routingTable.closestPeers(id)\n      const peersToQuery = peers.slice(0, Math.min(this.disjointPaths, peers.length))\n\n      if (peers.length === 0) {\n        log.error('Running query with no peers')\n        return\n      }\n\n      // make sure we don't get trapped in a loop\n      const peersSeen = new PeerSet()\n\n      // Create query paths from the starting peers\n      const paths = peersToQuery.map((peer, index) => {\n        return queryPath({\n          key,\n          startingPeer: peer,\n          ourPeerId: this.peerId,\n          signal,\n          query: queryFunc,\n          pathIndex: index,\n          numPaths: peersToQuery.length,\n          alpha: this.alpha,\n          cleanUp,\n          queryFuncTimeout: options.queryFuncTimeout,\n          log,\n          peersSeen,\n          onProgress: options.onProgress\n        })\n      })\n\n      // Execute the query along each disjoint path and yield their results as they become available\n      for await (const event of merge(...paths)) {\n        if (event.name === 'QUERY_ERROR') {\n          log.error('query error', event.error)\n        }\n\n        yield event\n      }\n\n      queryFinished = true\n    } catch (err: any) {\n      if (!this.running && err.code === 'ERR_QUERY_ABORTED') {\n        // ignore query aborted errors that were thrown during query manager shutdown\n      } else {\n        throw err\n      }\n    } finally {\n      if (!queryFinished) {\n        log('query exited early')\n        queryEarlyExitController.abort()\n      }\n\n      signal.clear()\n\n      this.queries--\n      this.metrics?.runningQueries.update(this.queries)\n\n      if (stopQueryTimer != null) {\n        stopQueryTimer()\n      }\n\n      cleanUp.dispatchEvent(new CustomEvent('cleanup'))\n      log('query:done in %dms', Date.now() - startTime)\n    }\n  }\n}\n","/**\n * @packageDocumentation\n *\n * Counts the number of items in an (async)iterable.\n *\n * N.b. will consume the iterable\n *\n * @example\n *\n * ```javascript\n * import length from 'it-length'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const res = length(values)\n *\n * console.info(res) // 5\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import length from 'it-length'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const res = await length(values())\n *\n * console.info(res) // 5\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Consumes the passed iterator and returns the number of items it contained\n */\nfunction length (source: Iterable<unknown>): number\nfunction length (source: Iterable<unknown> | AsyncIterable<unknown>): Promise<number>\nfunction length (source: Iterable<unknown> | AsyncIterable<unknown>): Promise<number> | number {\n  if (isAsyncIterable(source)) {\n    return (async () => {\n      let count = 0\n\n      for await (const _ of source) { // eslint-disable-line no-unused-vars,@typescript-eslint/no-unused-vars\n        count++\n      }\n\n      return count\n    })()\n  } else {\n    let count = 0\n\n    for (const _ of source) { // eslint-disable-line no-unused-vars,@typescript-eslint/no-unused-vars\n      count++\n    }\n\n    return count\n  }\n}\n\nexport default length\n","/**\n * @packageDocumentation\n *\n * For when you only want a few values out of an (async)iterable.\n *\n * @example\n *\n * ```javascript\n * import take from 'it-take'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const arr = all(take(values, 2))\n *\n * console.info(arr) // 0, 1\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import take from 'it-take'\n * import all from 'it-all'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = await all(take(values(), 2))\n *\n * console.info(arr) // 0, 1\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Stop iteration after n items have been received\n */\nfunction take <T> (source: Iterable<T>, limit: number): Generator<T, void, undefined>\nfunction take <T> (source: Iterable<T> | AsyncIterable<T>, limit: number): AsyncGenerator<T, void, undefined>\nfunction take <T> (source: Iterable<T> | AsyncIterable<T>, limit: number): AsyncGenerator<T, void, undefined> | Generator<T, void, undefined> {\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      let items = 0\n\n      if (limit < 1) {\n        return\n      }\n\n      for await (const entry of source) {\n        yield entry\n\n        items++\n\n        if (items === limit) {\n          return\n        }\n      }\n    })()\n  }\n\n  return (function * () {\n    let items = 0\n\n    if (limit < 1) {\n      return\n    }\n\n    for (const entry of source) {\n      yield entry\n\n      items++\n\n      if (items === limit) {\n        return\n      }\n    }\n  })()\n}\n\nexport default take\n","import pTimeout from 'p-timeout';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.addEventListener || emitter.on || emitter.addListener;\n\tconst removeListener = emitter.removeEventListener || emitter.off || emitter.removeListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter),\n\t};\n};\n\nexport function pEventMultiple(emitter, event, options) {\n\tlet cancel;\n\tconst returnValue = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options,\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Number.POSITIVE_INFINITY || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\toptions.signal?.throwIfAborted();\n\n\t\t// Allow multiple events\n\t\tconst events = [event].flat();\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = (...arguments_) => {\n\t\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\t\tif (options.filter && !options.filter(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = error => {\n\t\t\tcancel();\n\t\t\treject(error);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\toptions.signal.addEventListener('abort', () => {\n\t\t\t\trejectHandler(options.signal.reason);\n\t\t\t}, {once: true});\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\treturnValue.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(returnValue, {milliseconds: options.timeout});\n\t\ttimeout.cancel = cancel;\n\t\treturn timeout;\n\t}\n\n\treturn returnValue;\n}\n\nexport function pEvent(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false,\n\t};\n\n\tconst arrayPromise = pEventMultiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]);\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n}\n\nexport function pEventIterator(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = [event].flat();\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Number.POSITIVE_INFINITY,\n\t\tmultiArgs: false,\n\t\t...options,\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Number.POSITIVE_INFINITY || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\toptions.signal?.throwIfAborted();\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...arguments_) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...arguments_) => {\n\t\terror = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = (...arguments_) => {\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\tif (options.filter && !options.filter(value)) {\n\t\t\tcancel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\tif (options.signal) {\n\t\toptions.signal.addEventListener('abort', () => {\n\t\t\trejectHandler(options.signal.reason);\n\t\t}, {once: true});\n\t}\n\n\treturn {\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tnextQueue.push({resolve, reject});\n\t\t\t});\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue,\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport {TimeoutError} from 'p-timeout';\n","import { setMaxListeners } from '@libp2p/interface'\nimport { anySignal } from 'any-signal'\nimport length from 'it-length'\nimport { pipe } from 'it-pipe'\nimport take from 'it-take'\nimport pDefer from 'p-defer'\nimport { pEvent } from 'p-event'\nimport { QUERY_SELF_INTERVAL, QUERY_SELF_TIMEOUT, K, QUERY_SELF_INITIAL_INTERVAL } from './constants.js'\nimport type { PeerRouting } from './peer-routing/index.js'\nimport type { RoutingTable } from './routing-table/index.js'\nimport type { ComponentLogger, Logger, PeerId, Startable } from '@libp2p/interface'\nimport type { DeferredPromise } from 'p-defer'\n\nexport interface QuerySelfInit {\n  logPrefix: string\n  peerRouting: PeerRouting\n  routingTable: RoutingTable\n  count?: number\n  interval?: number\n  initialInterval?: number\n  queryTimeout?: number\n  initialQuerySelfHasRun: DeferredPromise<void>\n}\n\nexport interface QuerySelfComponents {\n  peerId: PeerId\n  logger: ComponentLogger\n}\n\n/**\n * Receives notifications of new peers joining the network that support the DHT protocol\n */\nexport class QuerySelf implements Startable {\n  private readonly log: Logger\n  private readonly peerId: PeerId\n  private readonly peerRouting: PeerRouting\n  private readonly routingTable: RoutingTable\n  private readonly count: number\n  private readonly interval: number\n  private readonly initialInterval: number\n  private readonly queryTimeout: number\n  private started: boolean\n  private timeoutId?: ReturnType<typeof setTimeout>\n  private controller?: AbortController\n  private initialQuerySelfHasRun?: DeferredPromise<void>\n  private querySelfPromise?: DeferredPromise<void>\n\n  constructor (components: QuerySelfComponents, init: QuerySelfInit) {\n    const { peerRouting, logPrefix, count, interval, queryTimeout, routingTable } = init\n\n    this.peerId = components.peerId\n    this.log = components.logger.forComponent(`${logPrefix}:query-self`)\n    this.started = false\n    this.peerRouting = peerRouting\n    this.routingTable = routingTable\n    this.count = count ?? K\n    this.interval = interval ?? QUERY_SELF_INTERVAL\n    this.initialInterval = init.initialInterval ?? QUERY_SELF_INITIAL_INTERVAL\n    this.queryTimeout = queryTimeout ?? QUERY_SELF_TIMEOUT\n    this.initialQuerySelfHasRun = init.initialQuerySelfHasRun\n  }\n\n  isStarted (): boolean {\n    return this.started\n  }\n\n  start (): void {\n    if (this.started) {\n      return\n    }\n\n    this.started = true\n    clearTimeout(this.timeoutId)\n    this.timeoutId = setTimeout(() => {\n      this.querySelf()\n        .catch(err => {\n          this.log.error('error running self-query', err)\n        })\n    }, this.initialInterval)\n  }\n\n  stop (): void {\n    this.started = false\n\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId)\n    }\n\n    if (this.controller != null) {\n      this.controller.abort()\n    }\n  }\n\n  async querySelf (): Promise<void> {\n    if (!this.started) {\n      this.log('skip self-query because we are not started')\n      return\n    }\n\n    if (this.querySelfPromise != null) {\n      this.log('joining existing self query')\n      return this.querySelfPromise.promise\n    }\n\n    this.querySelfPromise = pDefer()\n\n    if (this.started) {\n      this.controller = new AbortController()\n      const timeoutSignal = AbortSignal.timeout(this.queryTimeout)\n      const signal = anySignal([this.controller.signal, timeoutSignal])\n\n      // this controller will get used for lots of dial attempts so make sure we don't cause warnings to be logged\n      setMaxListeners(Infinity, signal, this.controller.signal, timeoutSignal)\n\n      try {\n        if (this.routingTable.size === 0) {\n          this.log('routing table was empty, waiting for some peers before running query')\n          // wait to discover at least one DHT peer\n          await pEvent(this.routingTable, 'peer:add', {\n            signal\n          })\n        }\n\n        this.log('run self-query, look for %d peers timing out after %dms', this.count, this.queryTimeout)\n        const start = Date.now()\n\n        const found = await pipe(\n          this.peerRouting.getClosestPeers(this.peerId.toBytes(), {\n            signal,\n            isSelfQuery: true\n          }),\n          (source) => take(source, this.count),\n          async (source) => length(source)\n        )\n\n        this.log('self-query found %d peers in %dms', found, Date.now() - start)\n      } catch (err: any) {\n        this.log.error('self-query error', err)\n      } finally {\n        signal.clear()\n\n        if (this.initialQuerySelfHasRun != null) {\n          this.initialQuerySelfHasRun.resolve()\n          this.initialQuerySelfHasRun = undefined\n        }\n      }\n    }\n\n    this.querySelfPromise.resolve()\n    this.querySelfPromise = undefined\n\n    if (!this.started) {\n      return\n    }\n\n    this.timeoutId = setTimeout(() => {\n      this.querySelf()\n        .catch(err => {\n          this.log.error('error running self-query', err)\n        })\n    }, this.interval)\n  }\n}\n","/**\n * @packageDocumentation\n *\n * Race an event against an AbortSignal, taking care to remove any event\n * listeners that were added.\n *\n * @example Getting started\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * setTimeout(() => {\n *   // too late\n *   emitter.dispatchEvent(new CustomEvent('event'))\n * }, 1000)\n *\n * // throws an AbortError\n * const resolve = await raceEvent(emitter, 'event', controller.signal)\n * ```\n *\n * @example Customising the thrown AbortError\n *\n * The error message and `.code` property of the thrown `AbortError` can be\n * specified by passing options:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   errorMessage: 'Oh no!',\n *   errorCode: 'ERR_OH_NO'\n * })\n * ```\n *\n * @example Only resolving on specific events\n *\n * Where multiple events with the same type are emitted, a `filter` function can\n * be passed to only resolve on one of them:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws a Error: Oh no!\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt: Event) => {\n *     return evt.detail.foo === 'bar'\n *   }\n * })\n * ```\n *\n * @example Terminating early by throwing from the filter\n *\n * You can cause listening for the event to cease and all event listeners to be\n * removed by throwing from the filter:\n *\n * ```TypeScript\n * import { raceEvent } from 'race-event'\n *\n * const controller = new AbortController()\n * const emitter = new EventTarget()\n *\n * // throws Error: Cannot continue\n * const resolve = await raceEvent(emitter, 'event', controller.signal, {\n *   filter: (evt) => {\n *     if (...reasons) {\n *       throw new Error('Cannot continue')\n *     }\n *\n *     return true\n *   }\n * })\n * ```\n */\n\n/**\n * An abort error class that extends error\n */\nexport class AbortError extends Error {\n  public type: string\n  public code: string | string\n\n  constructor (message?: string, code?: string) {\n    super(message ?? 'The operation was aborted')\n    this.type = 'aborted'\n    this.name = 'AbortError'\n    this.code = code ?? 'ABORT_ERR'\n  }\n}\n\nexport interface RaceEventOptions<T> {\n  /**\n   * The message for the error thrown if the signal aborts\n   */\n  errorMessage?: string\n\n  /**\n   * The code for the error thrown if the signal aborts\n   */\n  errorCode?: string\n\n  /**\n   * When multiple events with the same name may be emitted, pass a filter\n   * function here to allow ignoring ones that should not cause the returned\n   * promise to resolve.\n   */\n  filter?(evt: T): boolean\n}\n\n/**\n * Race a promise against an abort signal\n */\nexport async function raceEvent <T> (emitter: EventTarget, eventName: string, signal?: AbortSignal, opts?: RaceEventOptions<T>): Promise<T> {\n  // create the error here so we have more context in the stack trace\n  const error = new AbortError(opts?.errorMessage, opts?.errorCode)\n\n  if (signal?.aborted === true) {\n    return Promise.reject(error)\n  }\n\n  return new Promise((resolve, reject) => {\n    const eventListener = (evt: any): void => {\n      try {\n        if (opts?.filter?.(evt) === false) {\n          return\n        }\n      } catch (err: any) {\n        emitter.removeEventListener(eventName, eventListener)\n        signal?.removeEventListener('abort', abortListener)\n\n        reject(err)\n        return\n      }\n\n      emitter.removeEventListener(eventName, eventListener)\n      signal?.removeEventListener('abort', abortListener)\n\n      resolve(evt)\n    }\n    const abortListener = (): void => {\n      emitter.removeEventListener(eventName, eventListener)\n      signal?.removeEventListener('abort', abortListener)\n\n      reject(error)\n    }\n\n    emitter.addEventListener(eventName, eventListener)\n    signal?.addEventListener('abort', abortListener)\n  })\n}\n","import { AbortError } from '@libp2p/interface'\nimport pDefer from 'p-defer'\nimport type { DeferredPromise } from 'p-defer'\n\nexport class JobRecipient<JobReturnType> {\n  public deferred: DeferredPromise<JobReturnType>\n  public signal?: AbortSignal\n  public where?: string\n\n  constructor (where?: string, signal?: AbortSignal) {\n    this.signal = signal\n    this.deferred = pDefer()\n    this.where = where\n\n    this.onAbort = this.onAbort.bind(this)\n    this.signal?.addEventListener('abort', this.onAbort)\n  }\n\n  onAbort (): void {\n    this.deferred.reject(this.signal?.reason ?? new AbortError())\n  }\n\n  cleanup (): void {\n    this.signal?.removeEventListener('abort', this.onAbort)\n  }\n}\n","import { AbortError, setMaxListeners } from '@libp2p/interface'\nimport { raceSignal } from 'race-signal'\nimport { JobRecipient } from './recipient.js'\nimport type { JobStatus } from './index.js'\nimport type { AbortOptions } from '@libp2p/interface'\n\n/**\n * Returns a random string\n */\nfunction randomId (): string {\n  return `${(parseInt(String(Math.random() * 1e9), 10)).toString()}${Date.now()}`\n}\n\nexport interface JobTimeline {\n  created: number\n  started?: number\n  finished?: number\n}\n\nexport class Job <JobOptions extends AbortOptions = AbortOptions, JobReturnType = unknown> {\n  public id: string\n  public fn: (options: JobOptions) => Promise<JobReturnType>\n  public options: JobOptions\n  public priority: number\n  public recipients: Array<JobRecipient<JobReturnType>>\n  public status: JobStatus\n  public readonly timeline: JobTimeline\n  private readonly controller: AbortController\n\n  constructor (fn: (options: JobOptions) => Promise<JobReturnType>, options: any, priority: number = 0) {\n    this.id = randomId()\n    this.status = 'queued'\n    this.fn = fn\n    this.priority = priority\n    this.options = options\n    this.recipients = []\n    this.timeline = {\n      created: Date.now()\n    }\n\n    this.controller = new AbortController()\n    setMaxListeners(Infinity, this.controller.signal)\n\n    this.onAbort = this.onAbort.bind(this)\n  }\n\n  abort (err: Error): void {\n    this.controller.abort(err)\n  }\n\n  onAbort (): void {\n    const allAborted = this.recipients.reduce((acc, curr) => {\n      return acc && (curr.signal?.aborted === true)\n    }, true)\n\n    // if all recipients have aborted the job, actually abort the job\n    if (allAborted) {\n      this.controller.abort(new AbortError())\n      this.cleanup()\n    }\n  }\n\n  async join (options: AbortOptions = {}): Promise<JobReturnType> {\n    const recipient = new JobRecipient<JobReturnType>((new Error('where')).stack, options.signal)\n    this.recipients.push(recipient)\n\n    options.signal?.addEventListener('abort', this.onAbort)\n\n    return recipient.deferred.promise\n  }\n\n  async run (): Promise<void> {\n    this.status = 'running'\n    this.timeline.started = Date.now()\n\n    try {\n      this.controller.signal.throwIfAborted()\n\n      const result = await raceSignal(this.fn({\n        ...(this.options ?? {}),\n        signal: this.controller.signal\n      }), this.controller.signal)\n\n      this.recipients.forEach(recipient => {\n        recipient.deferred.resolve(result)\n      })\n\n      this.status = 'complete'\n    } catch (err) {\n      this.recipients.forEach(recipient => {\n        recipient.deferred.reject(err)\n      })\n\n      this.status = 'errored'\n    } finally {\n      this.timeline.finished = Date.now()\n      this.cleanup()\n    }\n  }\n\n  cleanup (): void {\n    this.recipients.forEach(recipient => {\n      recipient.cleanup()\n      recipient.signal?.removeEventListener('abort', this.onAbort)\n    })\n  }\n}\n","import { AbortError, CodeError, TypedEventEmitter } from '@libp2p/interface'\nimport { pushable } from 'it-pushable'\nimport { raceEvent } from 'race-event'\nimport { Job } from './job.js'\nimport type { AbortOptions, Metrics } from '@libp2p/interface'\n\nexport interface QueueAddOptions extends AbortOptions {\n  /**\n   * Priority of operation. Operations with greater priority will be scheduled first.\n   *\n   * @default 0\n   */\n  priority?: number\n}\n\nexport interface QueueInit {\n  /**\n   * Concurrency limit.\n   *\n   * Minimum: `1`.\n   *\n   * @default Infinity\n   */\n  concurrency?: number\n\n  /**\n   * The name of the metric for the queue length\n   */\n  metricName?: string\n\n  /**\n   * An implementation of the libp2p Metrics interface\n   */\n  metrics?: Metrics\n}\n\nexport type JobStatus = 'queued' | 'running' | 'errored' | 'complete'\n\nexport interface RunFunction<Options = AbortOptions, ReturnType = void> {\n  (opts?: Options): Promise<ReturnType>\n}\n\nexport interface JobMatcher<JobOptions extends QueueAddOptions = QueueAddOptions> {\n  (options?: Partial<JobOptions>): boolean\n}\n\nexport interface QueueJobSuccess<JobReturnType, JobOptions extends QueueAddOptions = QueueAddOptions> {\n  job: Job<JobOptions, JobReturnType>\n  result: JobReturnType\n}\n\nexport interface QueueJobFailure<JobReturnType, JobOptions extends QueueAddOptions = QueueAddOptions> {\n  job: Job<JobOptions, JobReturnType>\n  error: Error\n}\n\nexport interface QueueEvents<JobReturnType, JobOptions extends QueueAddOptions = QueueAddOptions> {\n  /**\n   * A job is about to start running\n   */\n  'active': CustomEvent\n\n  /**\n   * All jobs have finished and the queue is empty\n   */\n  'idle': CustomEvent\n\n  /**\n   * The queue is empty, jobs may be running\n   */\n  'empty': CustomEvent\n\n  /**\n   * A job was added to the queue\n   */\n  'add': CustomEvent\n\n  /**\n   * A job has finished or failed\n   */\n  'next': CustomEvent\n\n  /**\n   * A job has finished successfully\n   */\n  'completed': CustomEvent<JobReturnType>\n\n  /**\n   * A job has failed\n   */\n  'error': CustomEvent<Error>\n\n  /**\n   * Emitted just after `\"completed\", a job has finished successfully - this\n   * event gives access to the job and it's result\n   */\n  'success': CustomEvent<QueueJobSuccess<JobReturnType, JobOptions>>\n\n  /**\n   * Emitted just after `\"error\", a job has failed - this event gives access to\n   * the job and the thrown error\n   */\n  'failure': CustomEvent<QueueJobFailure<JobReturnType, JobOptions>>\n}\n\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound<T> (array: readonly T[], value: T, comparator: (a: T, b: T) => number): number {\n  let first = 0\n  let count = array.length\n\n  while (count > 0) {\n    const step = Math.trunc(count / 2)\n    let it = first + step\n\n    if (comparator(array[it], value) <= 0) {\n      first = ++it\n      count -= step + 1\n    } else {\n      count = step\n    }\n  }\n\n  return first\n}\n\n/**\n * Heavily influence by `p-queue` with the following differences:\n *\n * 1. Items remain at the head of the queue while they are running so `queue.size` includes `queue.pending` items - this is so interested parties can join the results of a queue item while it is running\n * 2. The options for a job are stored separately to the job in order for them to be modified while they are still in the queue\n */\nexport class Queue<JobReturnType = unknown, JobOptions extends QueueAddOptions = QueueAddOptions> extends TypedEventEmitter<QueueEvents<JobReturnType, JobOptions>> {\n  public concurrency: number\n  public queue: Array<Job<JobOptions, JobReturnType>>\n  private pending: number\n\n  constructor (init: QueueInit = {}) {\n    super()\n\n    this.concurrency = init.concurrency ?? Number.POSITIVE_INFINITY\n    this.pending = 0\n\n    if (init.metricName != null) {\n      init.metrics?.registerMetricGroup(init.metricName, {\n        calculate: () => {\n          return {\n            size: this.queue.length,\n            running: this.pending,\n            queued: this.queue.length - this.pending\n          }\n        }\n      })\n    }\n\n    this.queue = []\n  }\n\n  private tryToStartAnother (): boolean {\n    if (this.size === 0) {\n      // do this in the microtask queue so all job recipients receive the\n      // result before the \"empty\" event fires\n      queueMicrotask(() => {\n        this.safeDispatchEvent('empty')\n      })\n\n      if (this.running === 0) {\n        // do this in the microtask queue so all job recipients receive the\n        // result before the \"idle\" event fires\n        queueMicrotask(() => {\n          this.safeDispatchEvent('idle')\n        })\n      }\n\n      return false\n    }\n\n    if (this.pending < this.concurrency) {\n      let job: Job<JobOptions, JobReturnType> | undefined\n\n      for (const j of this.queue) {\n        if (j.status === 'queued') {\n          job = j\n          break\n        }\n      }\n\n      if (job == null) {\n        return false\n      }\n\n      this.safeDispatchEvent('active')\n\n      this.pending++\n\n      job.run()\n        .finally(() => {\n          // remove the job from the queue\n          for (let i = 0; i < this.queue.length; i++) {\n            if (this.queue[i] === job) {\n              this.queue.splice(i, 1)\n              break\n            }\n          }\n\n          this.pending--\n          this.tryToStartAnother()\n          this.safeDispatchEvent('next')\n        })\n\n      return true\n    }\n\n    return false\n  }\n\n  private enqueue (job: Job<JobOptions, JobReturnType>): void {\n    if (this.queue[this.size - 1]?.priority >= job.priority) {\n      this.queue.push(job)\n      return\n    }\n\n    const index = lowerBound(\n      this.queue, job,\n      (a: Readonly< Job<JobOptions, JobReturnType>>, b: Readonly< Job<JobOptions, JobReturnType>>) => b.priority - a.priority\n    )\n    this.queue.splice(index, 0, job)\n  }\n\n  /**\n   * Adds a sync or async task to the queue. Always returns a promise.\n   */\n  async add (fn: RunFunction<JobOptions, JobReturnType>, options?: JobOptions): Promise<JobReturnType> {\n    options?.signal?.throwIfAborted()\n\n    const job = new Job<JobOptions, JobReturnType>(fn, options, options?.priority)\n\n    const p = job.join(options)\n      .then(result => {\n        this.safeDispatchEvent('completed', { detail: result })\n        this.safeDispatchEvent('success', { detail: { job, result } })\n\n        return result\n      })\n      .catch(err => {\n        if (job.status === 'queued') {\n          // job was aborted before it started - remove the job from the queue\n          for (let i = 0; i < this.queue.length; i++) {\n            if (this.queue[i] === job) {\n              this.queue.splice(i, 1)\n              break\n            }\n          }\n        }\n\n        this.safeDispatchEvent('error', { detail: err })\n        this.safeDispatchEvent('failure', { detail: { job, error: err } })\n\n        throw err\n      })\n\n    this.enqueue(job)\n    this.safeDispatchEvent('add')\n    this.tryToStartAnother()\n\n    return p\n  }\n\n  /**\n   * Clear the queue\n   */\n  clear (): void {\n    this.queue.splice(0, this.queue.length)\n  }\n\n  /**\n   * Abort all jobs in the queue and clear it\n   */\n  abort (): void {\n    this.queue.forEach(job => {\n      job.abort(new AbortError())\n    })\n\n    this.clear()\n  }\n\n  /**\n   * Can be called multiple times. Useful if you for example add additional items at a later time.\n   *\n   * @returns A promise that settles when the queue becomes empty.\n   */\n  async onEmpty (options?: AbortOptions): Promise<void> {\n    // Instantly resolve if the queue is empty\n    if (this.size === 0) {\n      return\n    }\n\n    await raceEvent(this, 'empty', options?.signal)\n  }\n\n  /**\n   * @returns A promise that settles when the queue size is less than the given\n   * limit: `queue.size < limit`.\n   *\n   * If you want to avoid having the queue grow beyond a certain size you can\n   * `await queue.onSizeLessThan()` before adding a new item.\n   *\n   * Note that this only limits the number of items waiting to start. There\n   * could still be up to `concurrency` jobs already running that this call does\n   * not include in its calculation.\n   */\n  async onSizeLessThan (limit: number, options?: AbortOptions): Promise<void> {\n    // Instantly resolve if the queue is empty.\n    if (this.size < limit) {\n      return\n    }\n\n    await raceEvent(this, 'next', options?.signal, {\n      filter: () => this.size < limit\n    })\n  }\n\n  /**\n   * The difference with `.onEmpty` is that `.onIdle` guarantees that all work\n   * from the queue has finished. `.onEmpty` merely signals that the queue is\n   * empty, but it could mean that some promises haven't completed yet.\n   *\n   * @returns A promise that settles when the queue becomes empty, and all\n   * promises have completed; `queue.size === 0 && queue.pending === 0`.\n   */\n  async onIdle (options?: AbortOptions): Promise<void> {\n    // Instantly resolve if none pending and if nothing else is queued\n    if (this.pending === 0 && this.size === 0) {\n      return\n    }\n\n    await raceEvent(this, 'idle', options?.signal)\n  }\n\n  /**\n   * Size of the queue including running items\n   */\n  get size (): number {\n    return this.queue.length\n  }\n\n  /**\n   * The number of queued items waiting to run.\n   */\n  get queued (): number {\n    return this.queue.length - this.pending\n  }\n\n  /**\n   * The number of items currently running.\n   */\n  get running (): number {\n    return this.pending\n  }\n\n  /**\n   * Returns an async generator that makes it easy to iterate over the results\n   * of jobs added to the queue.\n   *\n   * The generator will end when the queue becomes idle, that is there are no\n   * jobs running and no jobs that have yet to run.\n   *\n   * If you need to keep the queue open indefinitely, consider using it-pushable\n   * instead.\n   */\n  async * toGenerator (options?: AbortOptions): AsyncGenerator<JobReturnType, void, unknown> {\n    options?.signal?.throwIfAborted()\n\n    const stream = pushable<JobReturnType>({\n      objectMode: true\n    })\n\n    const cleanup = (err?: Error): void => {\n      if (err != null) {\n        this.abort()\n      } else {\n        this.clear()\n      }\n\n      stream.end(err)\n    }\n\n    const onQueueJobComplete = (evt: CustomEvent<JobReturnType>): void => {\n      if (evt.detail != null) {\n        stream.push(evt.detail)\n      }\n    }\n\n    const onQueueError = (evt: CustomEvent<Error>): void => {\n      cleanup(evt.detail)\n    }\n\n    const onQueueIdle = (): void => {\n      cleanup()\n    }\n\n    // clear the queue and throw if the query is aborted\n    const onSignalAbort = (): void => {\n      cleanup(new CodeError('Queue aborted', 'ERR_QUEUE_ABORTED'))\n    }\n\n    // add listeners\n    this.addEventListener('completed', onQueueJobComplete)\n    this.addEventListener('error', onQueueError)\n    this.addEventListener('idle', onQueueIdle)\n    options?.signal?.addEventListener('abort', onSignalAbort)\n\n    try {\n      yield * stream\n    } finally {\n      // remove listeners\n      this.removeEventListener('completed', onQueueJobComplete)\n      this.removeEventListener('error', onQueueError)\n      this.removeEventListener('idle', onQueueIdle)\n      options?.signal?.removeEventListener('abort', onSignalAbort)\n\n      // empty the queue for when the user has broken out of a loop early\n      cleanup()\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport { Queue, type QueueAddOptions } from './queue/index.js'\nimport type { Job } from './queue/job.js'\nimport type { PeerId } from '@libp2p/interface'\n\nexport interface PeerQueueJobOptions extends QueueAddOptions {\n  peerId: PeerId\n}\n\n/**\n * Extends Queue to add support for querying queued jobs by peer id\n */\nexport class PeerQueue<JobReturnType = void, JobOptions extends PeerQueueJobOptions = PeerQueueJobOptions> extends Queue<JobReturnType, JobOptions> {\n  has (peerId: PeerId): boolean {\n    return this.find(peerId) != null\n  }\n\n  find (peerId: PeerId): Job<JobOptions, JobReturnType> | undefined {\n    return this.queue.find(job => {\n      return peerId.equals(job.options.peerId)\n    })\n  }\n}\n","/*\nindex.js - Kademlia DHT K-bucket implementation as a binary tree.\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2021 Tristan Slominski\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { TypedEventEmitter } from '@libp2p/interface'\nimport type { PeerId } from '@libp2p/interface'\n\nfunction arrayEquals (array1: Uint8Array, array2: Uint8Array): boolean {\n  if (array1 === array2) {\n    return true\n  }\n  if (array1.length !== array2.length) {\n    return false\n  }\n  for (let i = 0, length = array1.length; i < length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction createNode (): Bucket {\n  // @ts-expect-error loose types\n  return { contacts: [], dontSplit: false, left: null, right: null }\n}\n\nfunction ensureInt8 (name: string, val?: Uint8Array): void {\n  if (!(val instanceof Uint8Array)) {\n    throw new TypeError(name + ' is not a Uint8Array')\n  }\n}\n\nexport interface PingEventDetails {\n  oldContacts: Contact[]\n  newContact: Contact\n}\n\nexport interface UpdatedEventDetails {\n  incumbent: Contact\n  selection: Contact\n}\n\nexport interface KBucketEvents {\n  'ping': CustomEvent<PingEventDetails>\n  'added': CustomEvent<Contact>\n  'removed': CustomEvent<Contact>\n  'updated': CustomEvent<UpdatedEventDetails>\n}\n\nexport interface KBucketOptions {\n  /**\n   * A Uint8Array representing the local node id\n   */\n  localNodeId: Uint8Array\n\n  /**\n   * The number of nodes that a k-bucket can contain before being full or split.\n   */\n  numberOfNodesPerKBucket?: number\n\n  /**\n   * The number of nodes to ping when a bucket that should not be split becomes\n   * full. KBucket will emit a `ping` event that contains `numberOfNodesToPing`\n   * nodes that have not been contacted the longest.\n   */\n  numberOfNodesToPing?: number\n\n  /**\n   * An optional `distance` function that gets two `id` Uint8Arrays and return\n   * distance (as number) between them.\n   */\n  distance?(a: Uint8Array, b: Uint8Array): number\n\n  /**\n   * An optional `arbiter` function that given two `contact` objects with the\n   * same `id` returns the desired object to be used for updating the k-bucket.\n   * For more details, see [arbiter function](#arbiter-function).\n   */\n  arbiter?(incumbent: Contact, candidate: Contact): Contact\n}\n\nexport interface Contact {\n  id: Uint8Array\n  peer: PeerId\n  vectorClock?: number\n}\n\nexport interface Bucket {\n  id: Uint8Array\n  contacts: Contact[]\n  dontSplit: boolean\n  left: Bucket\n  right: Bucket\n}\n\n/**\n * Implementation of a Kademlia DHT k-bucket used for storing\n * contact (peer node) information.\n */\nexport class KBucket extends TypedEventEmitter<KBucketEvents> {\n  public localNodeId: Uint8Array\n  public root: Bucket\n  private readonly numberOfNodesPerKBucket: number\n  private readonly numberOfNodesToPing: number\n  private readonly distance: (a: Uint8Array, b: Uint8Array) => number\n  private readonly arbiter: (incumbent: Contact, candidate: Contact) => Contact\n\n  constructor (options: KBucketOptions) {\n    super()\n\n    this.localNodeId = options.localNodeId\n    this.numberOfNodesPerKBucket = options.numberOfNodesPerKBucket ?? 20\n    this.numberOfNodesToPing = options.numberOfNodesToPing ?? 3\n    this.distance = options.distance ?? KBucket.distance\n    // use an arbiter from options or vectorClock arbiter by default\n    this.arbiter = options.arbiter ?? KBucket.arbiter\n\n    ensureInt8('option.localNodeId as parameter 1', this.localNodeId)\n\n    this.root = createNode()\n  }\n\n  /**\n   * Default arbiter function for contacts with the same id. Uses\n   * contact.vectorClock to select which contact to update the k-bucket with.\n   * Contact with larger vectorClock field will be selected. If vectorClock is\n   * the same, candidate will be selected.\n   *\n   * @param {object} incumbent - Contact currently stored in the k-bucket.\n   * @param {object} candidate - Contact being added to the k-bucket.\n   * @returns {object} Contact to updated the k-bucket with.\n   */\n  static arbiter (incumbent: Contact, candidate: Contact): Contact {\n    return (incumbent.vectorClock ?? 0) > (candidate.vectorClock ?? 0) ? incumbent : candidate\n  }\n\n  /**\n   * Default distance function. Finds the XOR\n   * distance between firstId and secondId.\n   *\n   * @param  {Uint8Array} firstId -  Uint8Array containing first id.\n   * @param  {Uint8Array} secondId -  Uint8Array containing second id.\n   * @returns {number} Integer The XOR distance between firstId and secondId.\n   */\n  static distance (firstId: Uint8Array, secondId: Uint8Array): number {\n    let distance = 0\n    let i = 0\n    const min = Math.min(firstId.length, secondId.length)\n    const max = Math.max(firstId.length, secondId.length)\n    for (; i < min; ++i) {\n      distance = distance * 256 + (firstId[i] ^ secondId[i])\n    }\n    for (; i < max; ++i) distance = distance * 256 + 255\n    return distance\n  }\n\n  /**\n   * Adds a contact to the k-bucket.\n   *\n   * @param {object} contact - the contact object to add\n   */\n  add (contact: Contact): KBucket {\n    ensureInt8('contact.id', contact?.id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      // this is not a leaf node but an inner node with 'low' and 'high'\n      // branches; we will check the appropriate bit of the identifier and\n      // delegate to the appropriate node for further processing\n      node = this._determineNode(node, contact.id, bitIndex++)\n    }\n\n    // check if the contact already exists\n    const index = this._indexOf(node, contact.id)\n    if (index >= 0) {\n      this._update(node, index, contact)\n      return this\n    }\n\n    if (node.contacts.length < this.numberOfNodesPerKBucket) {\n      node.contacts.push(contact)\n      this.safeDispatchEvent('added', { detail: contact })\n      return this\n    }\n\n    // the bucket is full\n    if (node.dontSplit) {\n      // we are not allowed to split the bucket\n      // we need to ping the first this.numberOfNodesToPing\n      // in order to determine if they are alive\n      // only if one of the pinged nodes does not respond, can the new contact\n      // be added (this prevents DoS flodding with new invalid contacts)\n      this.safeDispatchEvent('ping', {\n        detail: {\n          oldContacts: node.contacts.slice(0, this.numberOfNodesToPing),\n          newContact: contact\n        }\n      })\n      return this\n    }\n\n    this._split(node, bitIndex)\n    return this.add(contact)\n  }\n\n  /**\n   * Get the n closest contacts to the provided node id. \"Closest\" here means:\n   * closest according to the XOR metric of the contact node id.\n   *\n   * @param {Uint8Array} id - Contact node id\n   * @param {number} n - Integer (Default: Infinity) The maximum number of closest contacts to return\n   * @returns {Array} Array Maximum of n closest contacts to the node id\n   */\n  closest (id: Uint8Array, n = Infinity): Contact[] {\n    ensureInt8('id', id)\n\n    if ((!Number.isInteger(n) && n !== Infinity) || n <= 0) {\n      throw new TypeError('n is not positive number')\n    }\n\n    let contacts: Contact[] = []\n\n    for (let nodes = [this.root], bitIndex = 0; nodes.length > 0 && contacts.length < n;) {\n      const node = nodes.pop()\n\n      if (node == null) {\n        continue\n      }\n\n      if (node.contacts === null) {\n        const detNode = this._determineNode(node, id, bitIndex++)\n        nodes.push(node.left === detNode ? node.right : node.left)\n        nodes.push(detNode)\n      } else {\n        contacts = contacts.concat(node.contacts)\n      }\n    }\n\n    return contacts\n      .map(a => ({\n        distance: this.distance(a.id, id),\n        contact: a\n      }))\n      .sort((a, b) => a.distance - b.distance)\n      .slice(0, n)\n      .map(a => a.contact)\n  }\n\n  /**\n   * Counts the total number of contacts in the tree.\n   *\n   * @returns {number} The number of contacts held in the tree\n   */\n  count (): number {\n    // return this.toArray().length\n    let count = 0\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n\n      if (node == null) {\n        continue\n      }\n\n      if (node.contacts === null) {\n        nodes.push(node.right, node.left)\n      } else {\n        count += node.contacts.length\n      }\n    }\n\n    return count\n  }\n\n  /**\n   * Determines whether the id at the bitIndex is 0 or 1.\n   * Return left leaf if `id` at `bitIndex` is 0, right leaf otherwise\n   *\n   * @param {object} node - internal object that has 2 leafs: left and right\n   * @param {Uint8Array} id - Id to compare localNodeId with.\n   * @param {number} bitIndex - Integer (Default: 0) The bit index to which bit to check in the id Uint8Array.\n   * @returns {object} left leaf if id at bitIndex is 0, right leaf otherwise.\n   */\n  _determineNode (node: any, id: Uint8Array, bitIndex: number): Bucket {\n    // **NOTE** remember that id is a Uint8Array and has granularity of\n    // bytes (8 bits), whereas the bitIndex is the _bit_ index (not byte)\n\n    // id's that are too short are put in low bucket (1 byte = 8 bits)\n    // (bitIndex >> 3) finds how many bytes the bitIndex describes\n    // bitIndex % 8 checks if we have extra bits beyond byte multiples\n    // if number of bytes is <= no. of bytes described by bitIndex and there\n    // are extra bits to consider, this means id has less bits than what\n    // bitIndex describes, id therefore is too short, and will be put in low\n    // bucket\n    const bytesDescribedByBitIndex = bitIndex >> 3\n    const bitIndexWithinByte = bitIndex % 8\n    if ((id.length <= bytesDescribedByBitIndex) && (bitIndexWithinByte !== 0)) {\n      return node.left\n    }\n\n    const byteUnderConsideration = id[bytesDescribedByBitIndex]\n\n    // byteUnderConsideration is an integer from 0 to 255 represented by 8 bits\n    // where 255 is 11111111 and 0 is 00000000\n    // in order to find out whether the bit at bitIndexWithinByte is set\n    // we construct (1 << (7 - bitIndexWithinByte)) which will consist\n    // of all bits being 0, with only one bit set to 1\n    // for example, if bitIndexWithinByte is 3, we will construct 00010000 by\n    // (1 << (7 - 3)) -> (1 << 4) -> 16\n    if ((byteUnderConsideration & (1 << (7 - bitIndexWithinByte))) !== 0) {\n      return node.right\n    }\n\n    return node.left\n  }\n\n  /**\n   * Get a contact by its exact ID.\n   * If this is a leaf, loop through the bucket contents and return the correct\n   * contact if we have it or null if not. If this is an inner node, determine\n   * which branch of the tree to traverse and repeat.\n   *\n   * @param {Uint8Array} id - The ID of the contact to fetch.\n   * @returns {object | null} The contact if available, otherwise null\n   */\n  get (id: Uint8Array): Contact | undefined {\n    ensureInt8('id', id)\n\n    let bitIndex = 0\n\n    let node: Bucket = this.root\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    // index of uses contact id for matching\n    const index = this._indexOf(node, id)\n    return index >= 0 ? node.contacts[index] : undefined\n  }\n\n  /**\n   * Returns the index of the contact with provided\n   * id if it exists, returns -1 otherwise.\n   *\n   * @param {object} node - internal object that has 2 leafs: left and right\n   * @param {Uint8Array} id - Contact node id.\n   * @returns {number} Integer Index of contact with provided id if it exists, -1 otherwise.\n   */\n  _indexOf (node: Bucket, id: Uint8Array): number {\n    for (let i = 0; i < node.contacts.length; ++i) {\n      if (arrayEquals(node.contacts[i].id, id)) return i\n    }\n\n    return -1\n  }\n\n  /**\n   * Removes contact with the provided id.\n   *\n   * @param {Uint8Array} id - The ID of the contact to remove\n   * @returns {object} The k-bucket itself\n   */\n  remove (id: Uint8Array): KBucket {\n    ensureInt8('the id as parameter 1', id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    const index = this._indexOf(node, id)\n    if (index >= 0) {\n      const contact = node.contacts.splice(index, 1)[0]\n      this.safeDispatchEvent('removed', {\n        detail: contact\n      })\n    }\n\n    return this\n  }\n\n  /**\n   * Splits the node, redistributes contacts to the new nodes, and marks the\n   * node that was split as an inner node of the binary tree of nodes by\n   * setting this.root.contacts = null\n   *\n   * @param {object} node - node for splitting\n   * @param {number} bitIndex - the bitIndex to which byte to check in the Uint8Array for navigating the binary tree\n   */\n  _split (node: Bucket, bitIndex: number): void {\n    node.left = createNode()\n    node.right = createNode()\n\n    // redistribute existing contacts amongst the two newly created nodes\n    for (const contact of node.contacts) {\n      this._determineNode(node, contact.id, bitIndex).contacts.push(contact)\n    }\n\n    // @ts-expect-error loose types\n    node.contacts = null // mark as inner tree node\n\n    // don't split the \"far away\" node\n    // we check where the local node would end up and mark the other one as\n    // \"dontSplit\" (i.e. \"far away\")\n    const detNode = this._determineNode(node, this.localNodeId, bitIndex)\n    const otherNode = node.left === detNode ? node.right : node.left\n    otherNode.dontSplit = true\n  }\n\n  /**\n   * Returns all the contacts contained in the tree as an array.\n   * If this is a leaf, return a copy of the bucket. If this is not a leaf,\n   * return the union of the low and high branches (themselves also as arrays).\n   *\n   * @returns {Array} All of the contacts in the tree, as an array\n   */\n  toArray (): Contact[] {\n    let result: Contact[] = []\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n\n      if (node == null) {\n        continue\n      }\n\n      if (node.contacts === null) {\n        nodes.push(node.right, node.left)\n      } else {\n        result = result.concat(node.contacts)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Similar to `toArray()` but instead of buffering everything up into an\n   * array before returning it, yields contacts as they are encountered while\n   * walking the tree.\n   *\n   * @returns {Iterable} All of the contacts in the tree, as an iterable\n   */\n  * toIterable (): Iterable<Contact> {\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n\n      if (node == null) {\n        continue\n      }\n\n      if (node.contacts === null) {\n        nodes.push(node.right, node.left)\n      } else {\n        yield * node.contacts\n      }\n    }\n  }\n\n  /**\n   * Updates the contact selected by the arbiter.\n   * If the selection is our old contact and the candidate is some new contact\n   * then the new contact is abandoned (not added).\n   * If the selection is our old contact and the candidate is our old contact\n   * then we are refreshing the contact and it is marked as most recently\n   * contacted (by being moved to the right/end of the bucket array).\n   * If the selection is our new contact, the old contact is removed and the new\n   * contact is marked as most recently contacted.\n   *\n   * @param {object} node - internal object that has 2 leafs: left and right\n   * @param {number} index - the index in the bucket where contact exists (index has already been computed in a previous calculation)\n   * @param {object} contact - The contact object to update\n   */\n  _update (node: Bucket, index: number, contact: Contact): void {\n    // sanity check\n    if (!arrayEquals(node.contacts[index].id, contact.id)) {\n      throw new Error('wrong index for _update')\n    }\n\n    const incumbent = node.contacts[index]\n    const selection = this.arbiter(incumbent, contact)\n    // if the selection is our old contact and the candidate is some new\n    // contact, then there is nothing to do\n    if (selection === incumbent && incumbent !== contact) return\n\n    node.contacts.splice(index, 1) // remove old contact\n    node.contacts.push(selection) // add more recent contact version\n    this.safeDispatchEvent('updated', {\n      detail: {\n        incumbent, selection\n      }\n    })\n  }\n}\n","import { CodeError, TypedEventEmitter } from '@libp2p/interface'\nimport { PeerSet } from '@libp2p/peer-collections'\nimport { PeerQueue } from '@libp2p/utils/peer-queue'\nimport { pbStream } from 'it-protobuf-stream'\nimport { Message, MessageType } from '../message/dht.js'\nimport * as utils from '../utils.js'\nimport { KBucket, type PingEventDetails } from './k-bucket.js'\nimport type { ComponentLogger, Logger, Metric, Metrics, PeerId, PeerStore, Startable, Stream } from '@libp2p/interface'\nimport type { ConnectionManager } from '@libp2p/interface-internal'\n\nexport const KAD_CLOSE_TAG_NAME = 'kad-close'\nexport const KAD_CLOSE_TAG_VALUE = 50\nexport const KBUCKET_SIZE = 20\nexport const PING_TIMEOUT = 10000\nexport const PING_CONCURRENCY = 10\n\nexport interface RoutingTableInit {\n  logPrefix: string\n  protocol: string\n  kBucketSize?: number\n  pingTimeout?: number\n  pingConcurrency?: number\n  tagName?: string\n  tagValue?: number\n}\n\nexport interface RoutingTableComponents {\n  peerId: PeerId\n  peerStore: PeerStore\n  connectionManager: ConnectionManager\n  metrics?: Metrics\n  logger: ComponentLogger\n}\n\nexport interface RoutingTableEvents {\n  'peer:add': CustomEvent<PeerId>\n  'peer:remove': CustomEvent<PeerId>\n}\n\n/**\n * A wrapper around `k-bucket`, to provide easy store and\n * retrieval for peers.\n */\nexport class RoutingTable extends TypedEventEmitter<RoutingTableEvents> implements Startable {\n  public kBucketSize: number\n  public kb?: KBucket\n  public pingQueue: PeerQueue<boolean>\n\n  private readonly log: Logger\n  private readonly components: RoutingTableComponents\n  private readonly pingTimeout: number\n  private readonly pingConcurrency: number\n  private running: boolean\n  private readonly protocol: string\n  private readonly tagName: string\n  private readonly tagValue: number\n  private readonly metrics?: {\n    routingTableSize: Metric\n  }\n\n  constructor (components: RoutingTableComponents, init: RoutingTableInit) {\n    super()\n\n    const { kBucketSize, pingTimeout, logPrefix, pingConcurrency, protocol, tagName, tagValue } = init\n\n    this.components = components\n    this.log = components.logger.forComponent(`${logPrefix}:routing-table`)\n    this.kBucketSize = kBucketSize ?? KBUCKET_SIZE\n    this.pingTimeout = pingTimeout ?? PING_TIMEOUT\n    this.pingConcurrency = pingConcurrency ?? PING_CONCURRENCY\n    this.running = false\n    this.protocol = protocol\n    this.tagName = tagName ?? KAD_CLOSE_TAG_NAME\n    this.tagValue = tagValue ?? KAD_CLOSE_TAG_VALUE\n\n    this.pingQueue = new PeerQueue({\n      concurrency: this.pingConcurrency,\n      metricName: `${logPrefix.replaceAll(':', '_')}_ping_queue`,\n      metrics: this.components.metrics\n    })\n    this.pingQueue.addEventListener('error', evt => {\n      this.log.error('error pinging peer', evt.detail)\n    })\n\n    if (this.components.metrics != null) {\n      this.metrics = {\n        routingTableSize: this.components.metrics.registerMetric(`${logPrefix.replaceAll(':', '_')}_routing_table_size`)\n      }\n    }\n  }\n\n  isStarted (): boolean {\n    return this.running\n  }\n\n  async start (): Promise<void> {\n    this.running = true\n\n    const kBuck = new KBucket({\n      localNodeId: await utils.convertPeerId(this.components.peerId),\n      numberOfNodesPerKBucket: this.kBucketSize,\n      numberOfNodesToPing: 1\n    })\n    this.kb = kBuck\n\n    // test whether to evict peers\n    kBuck.addEventListener('ping', (evt) => {\n      this._onPing(evt).catch(err => {\n        this.log.error('could not process k-bucket ping event', err)\n      })\n    })\n\n    // tag kad-close peers\n    this._tagPeers(kBuck)\n  }\n\n  async stop (): Promise<void> {\n    this.running = false\n    this.pingQueue.clear()\n    this.kb = undefined\n  }\n\n  /**\n   * Keep track of our k-closest peers and tag them in the peer store as such\n   * - this will lower the chances that connections to them get closed when\n   * we reach connection limits\n   */\n  _tagPeers (kBuck: KBucket): void {\n    let kClosest = new PeerSet()\n\n    const updatePeerTags = utils.debounce(() => {\n      const newClosest = new PeerSet(\n        kBuck.closest(kBuck.localNodeId, KBUCKET_SIZE).map(contact => contact.peer)\n      )\n      const addedPeers = newClosest.difference(kClosest)\n      const removedPeers = kClosest.difference(newClosest)\n\n      Promise.resolve()\n        .then(async () => {\n          for (const peer of addedPeers) {\n            await this.components.peerStore.merge(peer, {\n              tags: {\n                [this.tagName]: {\n                  value: this.tagValue\n                }\n              }\n            })\n          }\n\n          for (const peer of removedPeers) {\n            await this.components.peerStore.merge(peer, {\n              tags: {\n                [this.tagName]: undefined\n              }\n            })\n          }\n        })\n        .catch(err => {\n          this.log.error('Could not update peer tags', err)\n        })\n\n      kClosest = newClosest\n    })\n\n    kBuck.addEventListener('added', (evt) => {\n      updatePeerTags()\n\n      this.safeDispatchEvent('peer:add', { detail: evt.detail.peer })\n    })\n    kBuck.addEventListener('removed', (evt) => {\n      updatePeerTags()\n\n      this.safeDispatchEvent('peer:remove', { detail: evt.detail.peer })\n    })\n  }\n\n  /**\n   * Called on the `ping` event from `k-bucket` when a bucket is full\n   * and cannot split.\n   *\n   * `oldContacts.length` is defined by the `numberOfNodesToPing` param\n   * passed to the `k-bucket` constructor.\n   *\n   * `oldContacts` will not be empty and is the list of contacts that\n   * have not been contacted for the longest.\n   */\n  async _onPing (evt: CustomEvent<PingEventDetails>): Promise<void> {\n    if (!this.running) {\n      return\n    }\n\n    const {\n      oldContacts,\n      newContact\n    } = evt.detail\n\n    const results = await Promise.all(\n      oldContacts.map(async oldContact => {\n        // if a previous ping wants us to ping this contact, re-use the result\n        const pingJob = this.pingQueue.find(oldContact.peer)\n\n        if (pingJob != null) {\n          return pingJob.join()\n        }\n\n        return this.pingQueue.add(async () => {\n          let stream: Stream | undefined\n\n          try {\n            const options = {\n              signal: AbortSignal.timeout(this.pingTimeout)\n            }\n\n            this.log('pinging old contact %p', oldContact.peer)\n            const connection = await this.components.connectionManager.openConnection(oldContact.peer, options)\n            stream = await connection.newStream(this.protocol, options)\n\n            const pb = pbStream(stream)\n            await pb.write({\n              type: MessageType.PING\n            }, Message, options)\n            const response = await pb.read(Message, options)\n\n            await pb.unwrap().close()\n\n            if (response.type !== MessageType.PING) {\n              throw new CodeError(`Incorrect message type received, expected PING got ${response.type}`, 'ERR_BAD_PING_RESPONSE')\n            }\n\n            return true\n          } catch (err: any) {\n            if (this.running && this.kb != null) {\n              // only evict peers if we are still running, otherwise we evict\n              // when dialing is cancelled due to shutdown in progress\n              this.log.error('could not ping peer %p', oldContact.peer, err)\n              this.log('evicting old contact after ping failed %p', oldContact.peer)\n              this.kb.remove(oldContact.id)\n            }\n\n            stream?.abort(err)\n\n            return false\n          } finally {\n            this.metrics?.routingTableSize.update(this.size)\n          }\n        }, {\n          peerId: oldContact.peer\n        })\n      })\n    )\n\n    const responded = results\n      .filter(res => res)\n      .length\n\n    if (this.running && responded < oldContacts.length && this.kb != null) {\n      this.log('adding new contact %p', newContact.peer)\n      this.kb.add(newContact)\n    }\n  }\n\n  // -- Public Interface\n\n  /**\n   * Amount of currently stored peers\n   */\n  get size (): number {\n    if (this.kb == null) {\n      return 0\n    }\n\n    return this.kb.count()\n  }\n\n  /**\n   * Find a specific peer by id\n   */\n  async find (peer: PeerId): Promise<PeerId | undefined> {\n    const key = await utils.convertPeerId(peer)\n    const closest = this.closestPeer(key)\n\n    if (closest != null && peer.equals(closest)) {\n      return closest\n    }\n\n    return undefined\n  }\n\n  /**\n   * Retrieve the closest peers to the given key\n   */\n  closestPeer (key: Uint8Array): PeerId | undefined {\n    const res = this.closestPeers(key, 1)\n\n    if (res.length > 0) {\n      return res[0]\n    }\n\n    return undefined\n  }\n\n  /**\n   * Retrieve the `count`-closest peers to the given key\n   */\n  closestPeers (key: Uint8Array, count = this.kBucketSize): PeerId[] {\n    if (this.kb == null) {\n      return []\n    }\n\n    const closest = this.kb.closest(key, count)\n\n    return closest.map(p => p.peer)\n  }\n\n  /**\n   * Add or update the routing table with the given peer\n   */\n  async add (peer: PeerId): Promise<void> {\n    if (this.kb == null) {\n      throw new Error('RoutingTable is not started')\n    }\n\n    const id = await utils.convertPeerId(peer)\n\n    this.kb.add({ id, peer })\n\n    this.log('added %p with kad id %b', peer, id)\n\n    this.metrics?.routingTableSize.update(this.size)\n  }\n\n  /**\n   * Remove a given peer from the table\n   */\n  async remove (peer: PeerId): Promise<void> {\n    if (this.kb == null) {\n      throw new Error('RoutingTable is not started')\n    }\n\n    const id = await utils.convertPeerId(peer)\n\n    this.kb.remove(id)\n\n    this.metrics?.routingTableSize.update(this.size)\n  }\n}\n","import { randomBytes } from '@libp2p/crypto'\nimport { peerIdFromBytes } from '@libp2p/peer-id'\nimport length from 'it-length'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { xor as uint8ArrayXor } from 'uint8arrays/xor'\nimport { TABLE_REFRESH_INTERVAL, TABLE_REFRESH_QUERY_TIMEOUT } from '../constants.js'\nimport GENERATED_PREFIXES from './generated-prefix-list.js'\nimport type { RoutingTable } from './index.js'\nimport type { PeerRouting } from '../peer-routing/index.js'\nimport type { ComponentLogger, Logger, PeerId } from '@libp2p/interface'\n\n/**\n * Cannot generate random KadIds longer than this + 1\n */\nconst MAX_COMMON_PREFIX_LENGTH = 15\n\nexport interface RoutingTableRefreshComponents {\n  logger: ComponentLogger\n}\n\nexport interface RoutingTableRefreshInit {\n  peerRouting: PeerRouting\n  routingTable: RoutingTable\n  logPrefix: string\n  refreshInterval?: number\n  refreshQueryTimeout?: number\n}\n\n/**\n * A wrapper around `k-bucket`, to provide easy store and\n * retrieval for peers.\n */\nexport class RoutingTableRefresh {\n  private readonly log: Logger\n  private readonly peerRouting: PeerRouting\n  private readonly routingTable: RoutingTable\n  private readonly refreshInterval: number\n  private readonly refreshQueryTimeout: number\n  private readonly commonPrefixLengthRefreshedAt: Date[]\n  private refreshTimeoutId?: ReturnType<typeof setTimeout>\n\n  constructor (components: RoutingTableRefreshComponents, init: RoutingTableRefreshInit) {\n    const { peerRouting, routingTable, refreshInterval, refreshQueryTimeout, logPrefix } = init\n    this.log = components.logger.forComponent(`${logPrefix}:routing-table:refresh`)\n    this.peerRouting = peerRouting\n    this.routingTable = routingTable\n    this.refreshInterval = refreshInterval ?? TABLE_REFRESH_INTERVAL\n    this.refreshQueryTimeout = refreshQueryTimeout ?? TABLE_REFRESH_QUERY_TIMEOUT\n    this.commonPrefixLengthRefreshedAt = []\n\n    this.refreshTable = this.refreshTable.bind(this)\n  }\n\n  async start (): Promise<void> {\n    this.log(`refreshing routing table every ${this.refreshInterval}ms`)\n    this.refreshTable(true)\n  }\n\n  async stop (): Promise<void> {\n    if (this.refreshTimeoutId != null) {\n      clearTimeout(this.refreshTimeoutId)\n    }\n  }\n\n  /**\n   * To speed lookups, we seed the table with random PeerIds. This means\n   * when we are asked to locate a peer on the network, we can find a KadId\n   * that is close to the requested peer ID and query that, then network\n   * peers will tell us who they know who is close to the fake ID\n   */\n  refreshTable (force: boolean = false): void {\n    this.log('refreshing routing table')\n\n    const prefixLength = this._maxCommonPrefix()\n    const refreshCpls = this._getTrackedCommonPrefixLengthsForRefresh(prefixLength)\n\n    this.log(`max common prefix length ${prefixLength}`)\n    this.log(`tracked CPLs [ ${refreshCpls.map(date => date.toISOString()).join(', ')} ]`)\n\n    /**\n     * If we see a gap at a common prefix length in the Routing table, we ONLY refresh up until\n     * the maximum cpl we have in the Routing Table OR (2 * (Cpl+ 1) with the gap), whichever\n     * is smaller.\n     *\n     * This is to prevent refreshes for Cpls that have no peers in the network but happen to be\n     * before a very high max Cpl for which we do have peers in the network.\n     *\n     * The number of 2 * (Cpl + 1) can be proved and a proof would have been written here if\n     * the programmer had paid more attention in the Math classes at university.\n     *\n     * So, please be patient and a doc explaining it will be published soon.\n     *\n     * https://github.com/libp2p/go-libp2p-kad-dht/commit/2851c88acb0a3f86bcfe3cfd0f4604a03db801d8#diff-ad45f4ba97ffbc4083c2eb87a4420c1157057b233f048030d67c6b551855ccf6R219\n     */\n    Promise.all(\n      refreshCpls.map(async (lastRefresh, index) => {\n        try {\n          await this._refreshCommonPrefixLength(index, lastRefresh, force)\n\n          if (this._numPeersForCpl(prefixLength) === 0) {\n            const lastCpl = Math.min(2 * (index + 1), refreshCpls.length - 1)\n\n            for (let n = index + 1; n < lastCpl + 1; n++) {\n              try {\n                await this._refreshCommonPrefixLength(n, lastRefresh, force)\n              } catch (err: any) {\n                this.log.error(err)\n              }\n            }\n          }\n        } catch (err: any) {\n          this.log.error(err)\n        }\n      })\n    ).catch(err => {\n      this.log.error(err)\n    }).then(() => {\n      this.refreshTimeoutId = setTimeout(this.refreshTable, this.refreshInterval)\n\n      if (this.refreshTimeoutId.unref != null) {\n        this.refreshTimeoutId.unref()\n      }\n    }).catch(err => {\n      this.log.error(err)\n    })\n  }\n\n  async _refreshCommonPrefixLength (cpl: number, lastRefresh: Date, force: boolean): Promise<void> {\n    if (!force && lastRefresh.getTime() > (Date.now() - this.refreshInterval)) {\n      this.log('not running refresh for cpl %s as time since last refresh not above interval', cpl)\n      return\n    }\n\n    // gen a key for the query to refresh the cpl\n    const peerId = await this._generateRandomPeerId(cpl)\n\n    this.log('starting refreshing cpl %s with key %p (routing table size was %s)', cpl, peerId, this.routingTable.size)\n\n    const peers = await length(this.peerRouting.getClosestPeers(peerId.toBytes(), { signal: AbortSignal.timeout(this.refreshQueryTimeout) }))\n\n    this.log(`found ${peers} peers that were close to imaginary peer %p`, peerId)\n    this.log('finished refreshing cpl %s with key %p (routing table size is now %s)', cpl, peerId, this.routingTable.size)\n  }\n\n  _getTrackedCommonPrefixLengthsForRefresh (maxCommonPrefix: number): Date[] {\n    if (maxCommonPrefix > MAX_COMMON_PREFIX_LENGTH) {\n      maxCommonPrefix = MAX_COMMON_PREFIX_LENGTH\n    }\n\n    const dates: Date[] = []\n\n    for (let i = 0; i <= maxCommonPrefix; i++) {\n      // defaults to the zero value if we haven't refreshed it yet.\n      dates[i] = this.commonPrefixLengthRefreshedAt[i] ?? new Date()\n    }\n\n    return dates\n  }\n\n  async _generateRandomPeerId (targetCommonPrefixLength: number): Promise<PeerId> {\n    if (this.routingTable.kb == null) {\n      throw new Error('Routing table not started')\n    }\n\n    const randomData = randomBytes(2)\n    const randomUint16 = (randomData[1] << 8) + randomData[0]\n\n    const key = await this._makePeerId(this.routingTable.kb.localNodeId, randomUint16, targetCommonPrefixLength)\n\n    return peerIdFromBytes(key)\n  }\n\n  async _makePeerId (localKadId: Uint8Array, randomPrefix: number, targetCommonPrefixLength: number): Promise<Uint8Array> {\n    if (targetCommonPrefixLength > MAX_COMMON_PREFIX_LENGTH) {\n      throw new Error(`Cannot generate peer ID for common prefix length greater than ${MAX_COMMON_PREFIX_LENGTH}`)\n    }\n\n    const view = new DataView(localKadId.buffer, localKadId.byteOffset, localKadId.byteLength)\n    const localPrefix = view.getUint16(0, false)\n\n    // For host with ID `L`, an ID `K` belongs to a bucket with ID `B` ONLY IF CommonPrefixLen(L,K) is EXACTLY B.\n    // Hence, to achieve a targetPrefix `T`, we must toggle the (T+1)th bit in L & then copy (T+1) bits from L\n    // to our randomly generated prefix.\n    const toggledLocalPrefix = localPrefix ^ (0x8000 >> targetCommonPrefixLength)\n\n    // Combine the toggled local prefix and the random bits at the correct offset\n    // such that ONLY the first `targetCommonPrefixLength` bits match the local ID.\n    const mask = 65535 << (16 - (targetCommonPrefixLength + 1))\n    const targetPrefix = (toggledLocalPrefix & mask) | (randomPrefix & ~mask)\n\n    // Convert to a known peer ID.\n    const keyPrefix = GENERATED_PREFIXES[targetPrefix]\n\n    const keyBuffer = new ArrayBuffer(34)\n    const keyView = new DataView(keyBuffer, 0, keyBuffer.byteLength)\n    keyView.setUint8(0, sha256.code)\n    keyView.setUint8(1, 32)\n    keyView.setUint32(2, keyPrefix, false)\n\n    return new Uint8Array(keyView.buffer, keyView.byteOffset, keyView.byteLength)\n  }\n\n  /**\n   * returns the maximum common prefix length between any peer in the table\n   * and the current peer\n   */\n  _maxCommonPrefix (): number {\n    // xor our KadId with every KadId in the k-bucket tree,\n    // return the longest id prefix that is the same\n    let prefixLength = 0\n\n    for (const length of this._prefixLengths()) {\n      if (length > prefixLength) {\n        prefixLength = length\n      }\n    }\n\n    return prefixLength\n  }\n\n  /**\n   * Returns the number of peers in the table with a given prefix length\n   */\n  _numPeersForCpl (prefixLength: number): number {\n    let count = 0\n\n    for (const length of this._prefixLengths()) {\n      if (length === prefixLength) {\n        count++\n      }\n    }\n\n    return count\n  }\n\n  /**\n   * Yields the common prefix length of every peer in the table\n   */\n  * _prefixLengths (): Generator<number> {\n    if (this.routingTable.kb == null) {\n      return\n    }\n\n    for (const { id } of this.routingTable.kb.toIterable()) {\n      const distance = uint8ArrayXor(this.routingTable.kb.localNodeId, id)\n      let leadingZeros = 0\n\n      for (const byte of distance) {\n        if (byte === 0) {\n          leadingZeros++\n        } else {\n          break\n        }\n      }\n\n      yield leadingZeros\n    }\n  }\n}\n","export default [\n  77591, 94053, 60620, 45849, 22417, 13238, 102507, 179931, 43971, 15812, 24466, 64694, 28421, 80794, 13447, 118511,\n  740, 6439, 164565, 160996, 29829, 65024, 115728, 46297, 71467, 26874, 47057, 19864, 228973, 57886, 62422, 50382,\n  196661, 98858, 8131, 154708, 78537, 104511, 53134, 136579, 27689, 126238, 28199, 3679, 36431, 48892, 2655, 57939,\n  44415, 38209, 7970, 34780, 14362, 51843, 23108, 52670, 19456, 36805, 408716, 129012, 106025, 12683, 780, 36702,\n  96308, 73261, 165714, 94326, 2882, 15786, 65607, 80947, 49509, 13763, 104712, 13107, 21149, 137011, 223495, 30903,\n  87173, 75141, 2533, 121964, 131409, 110026, 108394, 16009, 75844, 196819, 1440, 7629, 23676, 111231, 127712, 61087,\n  121838, 51872, 29103, 7233, 30291, 24088, 110490, 92353, 17492, 113372, 16487, 97612, 2953, 9394, 210912, 8964,\n  7564, 3852, 97455, 42207, 110620, 22643, 65016, 7253, 129477, 46969, 7830, 43238, 127283, 37807, 65596, 47230,\n  53113, 68778, 42174, 3025, 72417, 113389, 61485, 3233, 165166, 23272, 207684, 1480, 109690, 77717, 146330, 35614,\n  21200, 125839, 9167, 183529, 102125, 27762, 21718, 34784, 24049, 54922, 44135, 54112, 71504, 58952, 18652, 36112,\n  90342, 97581, 105898, 116695, 25307, 71711, 19850, 443067, 72039, 164371, 99358, 141908, 26812, 37120, 222981, 92235,\n  26715, 2272, 38699, 277092, 32264, 2507, 11509, 41396, 133800, 81066, 75726, 51643, 71161, 32364, 125073, 195906,\n  88956, 8820, 58708, 60150, 171987, 43866, 50300, 27077, 51779, 41724, 18910, 42608, 24425, 59574, 40645, 30367,\n  16671, 106324, 56018, 73410, 30251, 125091, 17154, 23172, 186294, 741, 111661, 148919, 247761, 71695, 148683, 76545,\n  14202, 32826, 57291, 56464, 2121, 52187, 36887, 19845, 8465, 15701, 42227, 10603, 35024, 129005, 20364, 271992,\n  4876, 54659, 43090, 48318, 85917, 40506, 60228, 35848, 169730, 2400, 19908, 21535, 3638, 2880, 105194, 37121,\n  256836, 27972, 59367, 47659, 96184, 20378, 6352, 132486, 943, 210847, 347244, 42708, 18678, 161556, 4520, 63681,\n  6583, 138160, 207565, 4182, 52907, 72891, 36505, 33320, 35807, 152018, 13288, 904, 112254, 139219, 23049, 24474,\n  214097, 14830, 47960, 50966, 18796, 25821, 749, 61464, 11595, 123216, 5285, 37544, 9243, 80395, 22070, 63873,\n  23554, 106570, 90364, 35779, 887, 61552, 55147, 3791, 268203, 76040, 13872, 53070, 382004, 149091, 9411, 70938,\n  24590, 26314, 23297, 60821, 111335, 56198, 123964, 28317, 11625, 39656, 33077, 122186, 16619, 2762, 8556, 43622,\n  29039, 54719, 141778, 30583, 102425, 30319, 55618, 4660, 69006, 75066, 46293, 24767, 97976, 8387, 5680, 68535,\n  92362, 327684, 180600, 43548, 32552, 905, 167743, 10812, 63717, 48600, 4157, 19832, 41433, 44366, 169717, 362623,\n  128974, 242972, 74944, 25914, 137630, 138732, 9905, 65119, 59943, 13001, 10439, 346877, 10019, 72338, 47424, 90540,\n  13986, 32605, 74311, 36273, 35430, 43274, 490600, 15654, 33665, 40911, 16891, 132492, 108037, 118859, 30430, 45629,\n  43799, 65831, 25824, 63966, 43280, 70552, 34778, 102075, 38195, 5993, 20515, 11742, 29078, 67047, 980, 30234,\n  58629, 68076, 5792, 59696, 18265, 2627, 47407, 29302, 14425, 46647, 15604, 15925, 46832, 5440, 684, 42003,\n  235538, 28764, 54452, 25101, 40830, 8023, 6501, 50689, 77881, 5650, 16800, 16147, 110717, 28112, 219637, 1634,\n  58937, 32412, 88801, 6927, 3463, 157022, 94779, 442571, 325358, 276, 141280, 75559, 51300, 58421, 109559, 35845,\n  47623, 321870, 24845, 42379, 117252, 19971, 14000, 130543, 19007, 191657, 1705, 32933, 10170, 64831, 2632, 89911,\n  20540, 14737, 53476, 30106, 91237, 23474, 41156, 76048, 294813, 109786, 153316, 31289, 4951, 134188, 5698, 58898,\n  79841, 8216, 13373, 150001, 56232, 83956, 179514, 40785, 36270, 150581, 38142, 36729, 128547, 27488, 48397, 32074,\n  69209, 83991, 69639, 44375, 66275, 50325, 46119, 4588, 100156, 57453, 106674, 3707, 32063, 12250, 176480, 94462,\n  73531, 42286, 44132, 42292, 34439, 205098, 23362, 170867, 80937, 18578, 35224, 8003, 28892, 73415, 50905, 36012,\n  44466, 3377, 68122, 77350, 88595, 16048, 139321, 45304, 216307, 26958, 49160, 2333, 32583, 197092, 51650, 27957,\n  49620, 28596, 32484, 40154, 16605, 3672, 19287, 14394, 82127, 113881, 101822, 55495, 45807, 22719, 49287, 17105,\n  21630, 9213, 225560, 184754, 78726, 55879, 1187, 55736, 20235, 48276, 60072, 8055, 40163, 71435, 10613, 66014,\n  111007, 30011, 11754, 32797, 96926, 8244, 35114, 58420, 5567, 8879, 4349, 36989, 72083, 27721, 80502, 31714,\n  21665, 68483, 67000, 32243, 58844, 22490, 151524, 85501, 39419, 31544, 46585, 60252, 179767, 135313, 38991, 99008,\n  48328, 21411, 230904, 25457, 42662, 73162, 35923, 104338, 51550, 37715, 30664, 24386, 5251, 34179, 21686, 23914,\n  37811, 77986, 123822, 22186, 49608, 218194, 113768, 119158, 81056, 136532, 36573, 4335, 50854, 77454, 36591, 786,\n  55513, 89905, 64981, 78223, 20922, 90512, 58000, 187805, 18891, 142810, 7204, 125174, 197409, 232663, 64781, 31572,\n  164656, 137833, 103498, 55315, 32593, 91963, 91694, 30505, 71449, 150025, 16975, 134836, 220474, 56258, 1789, 23900,\n  58919, 39771, 52833, 15954, 85682, 182360, 82050, 60999, 67854, 36289, 50792, 14607, 13758, 73909, 111848, 63880,\n  35066, 107613, 145156, 26237, 3565, 8173, 214338, 1836, 61905, 82544, 35483, 19741, 214793, 18510, 3395, 10924,\n  119572, 75264, 17466, 43207, 141419, 82668, 39303, 19609, 21504, 19695, 19065, 6944, 10302, 38666, 102996, 88789,\n  27354, 75138, 70106, 135106, 67003, 20045, 60619, 54525, 46131, 115306, 12445, 86777, 32668, 68413, 32737, 64388,\n  15165, 34095, 171569, 11093, 64871, 119058, 92294, 117952, 34450, 66009, 203796, 6258, 17821, 52488, 314552, 125812,\n  2757, 95795, 15139, 46369, 11452, 76801, 3035, 9101, 34189, 14945, 7202, 149174, 5160, 74854, 169046, 30085,\n  12257, 76562, 92934, 170882, 85523, 121128, 60225, 45744, 560, 62173, 205019, 128933, 53385, 94, 81804, 5962,\n  65887, 9406, 75139, 46078, 119549, 87470, 126330, 115083, 135620, 90768, 93971, 66716, 312353, 69610, 203240, 65196,\n  115979, 13452, 77397, 23, 122356, 131305, 48028, 43698, 10867, 95182, 47337, 60657, 193231, 4430, 32675, 100177,\n  124537, 49701, 68459, 417255, 54783, 44031, 66481, 29365, 90675, 20969, 21022, 49332, 120791, 87739, 113524, 8715,\n  4715, 33049, 64432, 86239, 142253, 763, 145381, 11942, 50943, 44118, 117335, 69368, 17271, 82615, 97767, 8516,\n  43358, 61812, 117693, 77645, 25331, 71884, 62816, 56740, 4917, 126017, 38232, 39911, 120566, 45088, 86073, 19308,\n  34580, 62715, 98835, 12238, 12878, 32818, 80514, 190672, 33786, 124897, 32390, 13707, 160528, 8239, 24113, 94911,\n  32523, 8473, 305619, 143741, 4869, 226676, 116030, 72714, 301307, 245805, 49902, 13070, 104817, 63744, 25320, 14079,\n  81491, 66562, 24649, 6335, 23276, 12633, 45891, 31344, 8832, 19031, 49267, 95191, 97911, 27244, 61726, 53839,\n  31265, 81626, 4566, 137532, 52065, 115327, 11846, 252068, 7998, 22402, 10126, 209408, 49622, 16068, 12953, 24383,\n  9715, 82577, 95468, 95106, 43998, 60754, 21093, 14837, 34091, 72540, 179063, 7433, 84587, 192802, 47914, 4438,\n  20664, 45500, 8855, 16934, 69041, 12731, 29041, 217180, 29419, 22657, 137482, 2887, 53205, 550, 70043, 123839,\n  10838, 164726, 42397, 184876, 58288, 26641, 22447, 12131, 116145, 22995, 97093, 108266, 6185, 2832, 52427, 64656,\n  5154, 49928, 144137, 12044, 141795, 129976, 31641, 84599, 35924, 2502, 28404, 26000, 21307, 63600, 20886, 165871,\n  144738, 353334, 45550, 4235, 43730, 54853, 149395, 14340, 12085, 6025, 82291, 127186, 8279, 7961, 81927, 74078,\n  10002, 50016, 8795, 38560, 119, 45637, 190798, 21574, 133779, 97318, 19903, 27528, 199668, 1330, 66035, 21635,\n  72938, 31184, 60710, 108060, 31768, 145285, 89744, 113430, 39176, 71121, 10578, 19002, 67875, 39253, 95870, 17637,\n  38453, 35956, 214432, 92498, 9700, 51981, 75487, 140364, 44144, 248414, 34793, 35244, 4121, 13131, 29680, 132109,\n  116048, 51552, 20482, 69742, 41733, 134398, 163626, 2676, 12868, 9786, 36799, 26675, 82669, 19252, 28098, 76936,\n  92308, 127797, 49202, 5337, 128, 27975, 178978, 22753, 34262, 94544, 214584, 43276, 11332, 665, 58732, 8484,\n  7712, 180682, 90181, 28567, 90764, 20944, 68372, 62049, 36141, 29920, 115786, 1365, 13553, 110638, 163556, 207080,\n  71312, 250718, 214174, 18727, 77470, 23807, 32279, 108909, 117314, 4887, 61022, 41180, 96549, 116044, 1081, 78818,\n  49135, 8305, 20213, 10021, 23602, 148923, 39033, 76575, 54468, 41625, 121743, 61361, 28605, 110339, 97381, 108784,\n  6327, 58565, 37906, 2722, 62308, 42415, 120829, 226683, 17171, 16955, 32278, 42441, 67531, 82112, 7044, 8333,\n  21319, 4625, 67693, 83024, 14105, 107392, 18658, 14247, 894, 35117, 78964, 71644, 107722, 11889, 4981, 16504,\n  46157, 86476, 243104, 110164, 8503, 65279, 38377, 50730, 51069, 170106, 155778, 36441, 100472, 8367, 14072, 2456,\n  45138, 1449, 85419, 56978, 15246, 51849, 58602, 75312, 14577, 34388, 14985, 214746, 35609, 94173, 205371, 29378,\n  191464, 60659, 83825, 4266, 1757, 79901, 4005, 96090, 13364, 26836, 20634, 9902, 161349, 52221, 57608, 45087,\n  32067, 12041, 24449, 122590, 91705, 4841, 5595, 1962, 81144, 94514, 7189, 65466, 52339, 115937, 30039, 184359,\n  5408, 37938, 13094, 131687, 91066, 50656, 3538, 308588, 21983, 117880, 124083, 8740, 14157, 207581, 132848, 24615,\n  100545, 35998, 13259, 94379, 4372, 221513, 9160, 14015, 26630, 42025, 87194, 4685, 129112, 37014, 5514, 1659,\n  1423, 35031, 86869, 42243, 29676, 77384, 91770, 8949, 213626, 219087, 14943, 2758, 4397, 146113, 19935, 39810,\n  88436, 21548, 15622, 47174, 99190, 170858, 31675, 22540, 6877, 25282, 66955, 39440, 49958, 3702, 59942, 3443,\n  26122, 118447, 24469, 28429, 114348, 66350, 72579, 194, 60661, 14964, 70751, 30122, 29818, 134851, 14530, 25859,\n  293118, 32210, 11158, 134437, 50042, 50868, 124554, 56791, 179738, 112687, 67437, 80580, 16400, 32499, 35433, 38147,\n  163423, 62209, 109887, 21489, 89627, 8619, 37255, 42560, 31040, 3283, 221255, 26057, 43973, 176482, 84209, 74565,\n  36638, 128029, 50150, 53376, 45952, 23372, 136030, 19408, 5153, 189398, 9461, 12142, 1894, 150004, 6947, 43095,\n  109322, 74270, 235743, 8877, 1898, 12589, 62161, 150831, 134021, 76036, 32418, 114411, 12402, 9784, 152424, 2030,\n  112077, 39948, 15299, 91532, 68309, 58254, 74157, 68071, 190269, 1807, 48227, 14614, 69866, 175786, 53526, 77245,\n  31938, 86410, 49785, 5548, 107383, 26754, 6925, 99713, 11522, 112823, 36879, 191627, 105232, 112178, 9544, 115058,\n  11248, 121092, 115523, 216088, 14868, 164602, 6984, 12211, 39852, 3557, 11388, 124397, 71707, 42768, 81029, 87167,\n  186525, 134029, 24303, 29049, 16530, 60454, 1801, 70482, 38162, 186140, 17626, 75869, 106212, 3301, 149347, 83560,\n  11700, 132692, 2213, 6118, 5130, 19621, 133100, 5413, 16608, 6316, 6903, 20826, 26998, 46988, 14742, 36801,\n  59586, 438, 115651, 12542, 108399, 50888, 73600, 74851, 230033, 11883, 313836, 13563, 43683, 27664, 16986, 54266,\n  48135, 20496, 78612, 90668, 82179, 65157, 159306, 244506, 2073, 113828, 34210, 8905, 5015, 124130, 30133, 30478,\n  196684, 40526, 10545, 25933, 189293, 20827, 73483, 91579, 16378, 24561, 168921, 100351, 23452, 105211, 31749, 3947,\n  8301, 235867, 175604, 4648, 35640, 22045, 10909, 12114, 11632, 81578, 50578, 17722, 214551, 40781, 131060, 242797,\n  29240, 41868, 116245, 182350, 57644, 27787, 59645, 42511, 33137, 64292, 86072, 2870, 91949, 108278, 14903, 186497,\n  55157, 48398, 10332, 2801, 52384, 20759, 10283, 88468, 117313, 23727, 138084, 65635, 5090, 14195, 126767, 300,\n  17717, 38157, 16186, 114320, 89668, 96676, 9742, 203368, 49363, 5035, 28964, 65388, 82238, 67525, 39995, 13922,\n  241035, 69735, 11154, 193950, 66216, 72997, 12434, 16882, 29066, 91839, 31743, 96167, 184088, 75620, 1030, 139617,\n  97206, 15695, 244555, 101352, 62820, 44153, 114812, 120196, 26595, 72217, 5935, 28488, 4241, 7832, 101557, 27041,\n  135635, 10308, 337586, 23855, 173672, 15924, 5051, 10103, 8202, 360, 45227, 30801, 459, 13982, 27256, 9104,\n  71355, 53611, 81898, 79904, 146294, 57705, 99956, 35919, 29587, 21273, 89804, 41886, 3008, 100905, 29691, 22814,\n  135385, 101754, 7790, 16486, 141203, 186158, 135150, 17125, 14803, 43200, 23042, 70352, 6634, 27432, 14596, 27017,\n  45094, 251700, 107172, 92556, 69362, 224587, 20275, 239867, 50925, 67860, 22054, 35132, 546, 107574, 11246, 15583,\n  51884, 52526, 41469, 90704, 62011, 30436, 4192, 20677, 83296, 40746, 43027, 18829, 234584, 59250, 10989, 12045,\n  44515, 87149, 5814, 22428, 56050, 1304, 54193, 102712, 89476, 74967, 28363, 182054, 87751, 63858, 4667, 36435,\n  19373, 13180, 80439, 20298, 12691, 59200, 175067, 68478, 149923, 65774, 50785, 75599, 19794, 24659, 40763, 18905,\n  13833, 221290, 11814, 27472, 35846, 256569, 9769, 37905, 87557, 16393, 61774, 29056, 58339, 67859, 122835, 31673,\n  2884, 29565, 225212, 50663, 19145, 154284, 7940, 13382, 25647, 46917, 107024, 18714, 12224, 8197, 11896, 129114,\n  11024, 5323, 163976, 216168, 77338, 91508, 61901, 29134, 64608, 87645, 71475, 46110, 122297, 22635, 34837, 26310,\n  53025, 53017, 10622, 90942, 7205, 22145, 163437, 101344, 36189, 355381, 3469, 59647, 36294, 29028, 61676, 33071,\n  170779, 1619, 42455, 55588, 21750, 12494, 53664, 106939, 7739, 60501, 600, 42951, 173883, 121950, 75147, 44445,\n  75192, 26282, 17177, 6729, 35664, 13478, 22319, 74388, 224240, 51121, 128054, 19973, 113121, 26367, 20959, 71130,\n  30181, 27274, 83822, 65840, 26267, 141848, 7294, 161141, 27036, 20489, 14220, 74392, 117827, 12263, 18511, 12425,\n  92015, 38371, 93826, 46517, 106516, 24959, 428957, 108509, 55628, 41208, 28538, 6694, 203549, 200020, 130157, 14026,\n  67949, 261382, 34954, 75428, 60462, 34936, 69163, 8775, 60844, 95271, 14668, 58597, 35911, 163570, 17395, 41268,\n  20457, 77077, 15920, 195151, 1820, 1127, 108523, 1201, 920, 64420, 142690, 3800, 19773, 18589, 25204, 114010,\n  8738, 45928, 72305, 27317, 73173, 58181, 4109, 38698, 181993, 2002, 91269, 6577, 38521, 64761, 34725, 2779,\n  98254, 99182, 109347, 42999, 76257, 42992, 2481, 76329, 46008, 9716, 174991, 37659, 92796, 26911, 126742, 21977,\n  5384, 89414, 18739, 22923, 26868, 2989, 52591, 14973, 151566, 3554, 169141, 41484, 22124, 26749, 78963, 86727,\n  2411, 21918, 43055, 36709, 15919, 32188, 39853, 31407, 186872, 106163, 35231, 3970, 180021, 86213, 133789, 47183,\n  28099, 10825, 8315, 193036, 152961, 12221, 96811, 33623, 78811, 61925, 91812, 72246, 80237, 171243, 144270, 12504,\n  62352, 69843, 208025, 139707, 102653, 182703, 42668, 65058, 74259, 143770, 10084, 32242, 184890, 53802, 20214, 60407,\n  16792, 41310, 4184, 1636, 123702, 13335, 68718, 46717, 224945, 64844, 113887, 41497, 29940, 10587, 27431, 128017,\n  19512, 17506, 17671, 26070, 75283, 42125, 47504, 37731, 14059, 88044, 36619, 847, 112691, 14770, 55376, 575,\n  92811, 347152, 96947, 9385, 233329, 3093, 22326, 45207, 20411, 273167, 31247, 6125, 138569, 8663, 357575, 28073,\n  53341, 234780, 21561, 48933, 109802, 48919, 46462, 50800, 50600, 21098, 18940, 1091, 134528, 14935, 2398, 127145,\n  66747, 34702, 127805, 27345, 5529, 139548, 51994, 127312, 166531, 11082, 36587, 50668, 31578, 37535, 46230, 2150,\n  64732, 41722, 91822, 21109, 67189, 47573, 20129, 8421, 1596, 16448, 126415, 81846, 126357, 140669, 1937, 32338,\n  967, 39499, 14778, 48543, 167999, 24888, 12192, 41633, 206598, 60067, 160162, 11609, 109752, 3487, 45910, 15601,\n  119431, 19179, 93578, 31236, 207825, 71291, 47437, 21034, 78791, 32425, 31613, 91908, 91938, 6225, 26499, 49240,\n  10301, 34970, 12824, 99989, 27311, 35324, 133950, 14043, 24233, 61362, 22243, 35045, 252343, 28863, 12365, 8224,\n  28831, 215245, 73325, 83362, 32812, 116785, 100940, 77100, 66002, 61855, 60149, 24654, 112267, 65835, 54563, 141839,\n  90895, 174574, 34653, 8453, 8786, 174076, 167014, 20249, 8095, 14050, 68580, 299481, 16824, 48793, 24856, 15716,\n  22866, 165280, 33060, 49389, 21813, 47387, 179304, 131281, 60507, 145727, 21710, 16780, 174833, 11187, 19174, 11577,\n  19549, 89709, 114442, 11917, 130985, 53665, 52636, 32837, 117051, 78060, 79585, 45117, 52110, 74026, 86227, 52956,\n  6938, 48219, 29286, 23852, 81923, 55204, 370875, 58300, 123864, 14993, 25906, 17004, 38061, 191997, 56608, 197099,\n  919, 5046, 126484, 79803, 18680, 145935, 124511, 60333, 53534, 6979, 35404, 23791, 46739, 36466, 2445, 19890,\n  112893, 35958, 11939, 45333, 161529, 38751, 76585, 129315, 85429, 125900, 37046, 110236, 26761, 13725, 20554, 21155,\n  11900, 10186, 81185, 44323, 81121, 127313, 181376, 68138, 91968, 77284, 14617, 15815, 15390, 1425, 15586, 9037,\n  217947, 19393, 2643, 291035, 56524, 1195, 154070, 7980, 1713, 2618, 18959, 70645, 6654, 8986, 122964, 149447,\n  37089, 79358, 120676, 39867, 85630, 173326, 14161, 103857, 138866, 98205, 107118, 105847, 61850, 48312, 3318, 110656,\n  16491, 22884, 29985, 202016, 75577, 7108, 49432, 450007, 16884, 60351, 28287, 31574, 98296, 153369, 5508, 59238,\n  73523, 2766, 134247, 6922, 6140, 15761, 20766, 33247, 44645, 98662, 62705, 5296, 6062, 16713, 27012, 204193,\n  36366, 4251, 6513, 1097, 29844, 148369, 4030, 44421, 57946, 57215, 45204, 63057, 37932, 100525, 276977, 104126,\n  42472, 13150, 108317, 106038, 5266, 1004, 31351, 41691, 20834, 27119, 14871, 42058, 19309, 18264, 15714, 128645,\n  33753, 97813, 14991, 36632, 127182, 38788, 23800, 23029, 134259, 141169, 22689, 9008, 35810, 85196, 80190, 175150,\n  41805, 96633, 36654, 189935, 45878, 63838, 3242, 5356, 312001, 228710, 66129, 4509, 14881, 203932, 11812, 70030,\n  47757, 276830, 122405, 33146, 49251, 2261, 162697, 5363, 120050, 24738, 211941, 21746, 44252, 31697, 2242, 4877,\n  3708, 85573, 85060, 82434, 25856, 115291, 56583, 56567, 107864, 962, 58671, 54581, 120347, 39508, 201071, 94108,\n  1228, 71194, 12513, 225594, 36550, 6911, 160283, 35838, 41682, 115576, 28022, 16436, 34496, 5034, 74108, 10228,\n  47025, 11047, 141530, 3837, 8393, 65028, 55696, 31079, 173365, 61729, 57479, 106029, 246526, 10526, 54647, 134609,\n  12894, 3537, 244, 16862, 161607, 118386, 60183, 141700, 35670, 22051, 179401, 24135, 90785, 29822, 122577, 87924,\n  126572, 2459, 80584, 28905, 2095, 87804, 54240, 102268, 124731, 60006, 15202, 109796, 157033, 21466, 164665, 37695,\n  58694, 81513, 83134, 208222, 554, 5651, 7656, 87297, 12786, 33576, 15075, 146538, 9642, 40949, 163656, 9760,\n  4817, 21064, 83245, 14829, 16136, 95061, 68060, 24365, 47864, 1179, 105850, 5322, 174698, 19385, 5399, 111971,\n  66992, 363067, 36771, 86468, 4639, 166195, 77004, 80406, 69284, 96401, 199722, 27643, 10625, 105066, 89724, 58878,\n  40710, 29791, 24556, 99909, 27763, 9231, 35125, 110086, 51738, 12458, 116193, 41661, 30404, 41774, 96495, 7041,\n  264105, 37287, 172797, 19867, 137904, 45042, 61041, 151622, 109882, 58327, 51284, 132939, 52487, 238, 24806, 356262,\n  42824, 71570, 114506, 221874, 57514, 290906, 425324, 6771, 2740, 77666, 51262, 18017, 10479, 14457, 11137, 19547,\n  146799, 74299, 1986, 193822, 107390, 66292, 13142, 8549, 16586, 41783, 4738, 83585, 88038, 9102, 61338, 33010,\n  174951, 5451, 103430, 20873, 9410, 71603, 254445, 29027, 16185, 19139, 109385, 57580, 44158, 18457, 29275, 116743,\n  5568, 32928, 91629, 19307, 40658, 229962, 46426, 15411, 46108, 30487, 67181, 20224, 12763, 92267, 69682, 41491,\n  97385, 46327, 89571, 20801, 26175, 104473, 82178, 53280, 108859, 90329, 60749, 15258, 664, 104876, 189856, 72942,\n  230732, 51261, 34901, 19996, 67470, 20008, 38335, 18089, 46663, 52358, 14286, 59726, 14395, 26243, 124071, 9514,\n  50750, 71549, 45061, 44126, 141320, 2803, 58061, 44739, 93140, 659, 64128, 26178, 15361, 168531, 40344, 8977,\n  47997, 172770, 68707, 16055, 55784, 23990, 20994, 19090, 6791, 21011, 244531, 47352, 307840, 16546, 63361, 164913,\n  118569, 30189, 34941, 229229, 107326, 24202, 160409, 1575, 18056, 16156, 162544, 1298, 58281, 140814, 38998, 4285,\n  260415, 19797, 24212, 11490, 54691, 125241, 149765, 53575, 8790, 98579, 39432, 49317, 73332, 17200, 47059, 6532,\n  45633, 17042, 110013, 4418, 7511, 26786, 2639, 40536, 45674, 39902, 37280, 138726, 143373, 16114, 16063, 95339,\n  14031, 18222, 148011, 134245, 11799, 36311, 103728, 15146, 94491, 24149, 24405, 126162, 35646, 2622, 13619, 190698,\n  96544, 59993, 46574, 579, 14560, 43052, 125756, 11698, 26049, 139612, 76126, 94179, 32983, 27506, 5021, 32417,\n  25791, 73423, 53795, 119140, 83814, 24222, 419, 60678, 42094, 36193, 71555, 167797, 231370, 39846, 78400, 68056,\n  63955, 1124, 59895, 8546, 139212, 47144, 37860, 26891, 2359, 163343, 60583, 105848, 169908, 4972, 13013, 132896,\n  3108, 44849, 132211, 4330, 183486, 14009, 10090, 75230, 105867, 102476, 3031, 44769, 28197, 21633, 23419, 68902,\n  32941, 109556, 36098, 52255, 124968, 209278, 40772, 6698, 26402, 57023, 171822, 87578, 88267, 23469, 27050, 64577,\n  149768, 71917, 89979, 16941, 23053, 7594, 106397, 125192, 3078, 35227, 9172, 18615, 19091, 182038, 12549, 48594,\n  52924, 6894, 86017, 20427, 25383, 22580, 75986, 18233, 19209, 61027, 86544, 26111, 111548, 24619, 166688, 24272,\n  97361, 51184, 78541, 14792, 3959, 2430, 71174, 280134, 24880, 85091, 19069, 48720, 235061, 148747, 27783, 40579,\n  9099, 95152, 259500, 59221, 24921, 73721, 170222, 102157, 161254, 66033, 357515, 82190, 151405, 105610, 28252, 213067,\n  20508, 97281, 6878, 87399, 7159, 45662, 182676, 27626, 34381, 71179, 112126, 12802, 20133, 56316, 50576, 70823,\n  11434, 14879, 96554, 27582, 74036, 24193, 21984, 147179, 19974, 41451, 8452, 161213, 34769, 115, 18749, 115303,\n  36585, 8710, 130627, 54462, 1076, 15711, 78215, 45693, 22454, 41595, 35658, 31785, 17354, 64339, 5699, 30987,\n  38727, 113863, 1046, 127166, 235160, 27501, 82135, 137484, 111547, 143478, 71619, 20477, 96454, 65400, 93505, 9234,\n  117448, 71966, 130201, 9407, 156940, 10894, 113917, 102178, 91330, 3786, 25046, 137247, 37299, 14204, 156671, 48589,\n  7310, 119658, 1019, 3147, 26915, 389655, 28024, 29905, 117060, 110822, 603, 9922, 51369, 186019, 151553, 53930,\n  22620, 65936, 33869, 50466, 61861, 18339, 116756, 22544, 322264, 178320, 134504, 32779, 106850, 51259, 7921, 18753,\n  111694, 76143, 15475, 39056, 15091, 96327, 38933, 146365, 2624, 6183, 303617, 83865, 40345, 8720, 102137, 208016,\n  300446, 153481, 62817, 17230, 177064, 59995, 17444, 96781, 1707, 62069, 105642, 215627, 27389, 113620, 8641, 39778,\n  54792, 22640, 92614, 72033, 327783, 56938, 97175, 28337, 132669, 24810, 100695, 42694, 183543, 96612, 26568, 321,\n  59003, 67147, 64475, 124682, 17744, 254962, 92433, 55393, 20603, 153319, 316603, 192699, 151134, 16030, 30713, 5369,\n  106923, 79389, 15318, 196516, 53084, 229057, 32215, 2061, 71803, 15710, 68210, 36730, 279424, 61974, 109245, 21881,\n  319816, 40889, 10178, 55054, 11579, 30821, 76533, 48007, 21946, 12530, 41523, 56504, 16728, 146955, 90643, 77497,\n  38274, 58777, 12829, 83673, 72711, 24324, 131406, 209463, 5085, 14864, 2408, 146954, 83391, 104916, 53219, 39654,\n  88646, 106083, 13930, 24286, 40159, 28744, 20399, 11792, 25027, 26454, 82556, 24039, 34680, 36361, 145006, 21872,\n  10752, 107608, 27995, 36258, 12988, 66287, 75099, 84038, 54126, 38128, 56142, 14292, 30365, 99229, 9312, 5952,\n  18338, 50601, 15454, 40761, 100445, 4866, 42787, 168097, 230674, 27, 4416, 59458, 44874, 21538, 13837, 21543,\n  84974, 32659, 181908, 81485, 143877, 1443, 22510, 44084, 123253, 114222, 131683, 77045, 139372, 123203, 151023, 23972,\n  28082, 30654, 30914, 61473, 91477, 143646, 51334, 8042, 144002, 18818, 47219, 30784, 13096, 53692, 57020, 125132,\n  219729, 72133, 94451, 32149, 46016, 5231, 19109, 89053, 50029, 67191, 30812, 104508, 42377, 43699, 106368, 9836,\n  14601, 54570, 18766, 12632, 6660, 155889, 71980, 75016, 58244, 83344, 7256, 100628, 58978, 56720, 58199, 118422,\n  23918, 11726, 37394, 463, 88206, 139614, 253619, 539, 113611, 38238, 154196, 29350, 64452, 9692, 12873, 4429,\n  17541, 32212, 6089, 18497, 41032, 117229, 60868, 14143, 10942, 926, 24793, 66470, 12021, 18956, 23792, 155539,\n  49189, 11284, 84405, 157831, 10978, 12543, 64410, 50098, 40175, 82131, 32892, 21615, 37156, 5526, 99592, 36215,\n  10947, 19241, 20602, 2093, 71709, 93588, 80808, 10971, 106894, 25921, 413, 34040, 112538, 180819, 118821, 72357,\n  57007, 79329, 16870, 137412, 137486, 10245, 90727, 18898, 150608, 14622, 19833, 22840, 152719, 29427, 209294, 4232,\n  40615, 60643, 170375, 22011, 7746, 28136, 332881, 60551, 279716, 193813, 38074, 19946, 13101, 16840, 117701, 27751,\n  19524, 59518, 5857, 368, 28708, 105821, 12973, 27739, 40578, 900, 41397, 104380, 72320, 33862, 8409, 34652,\n  1096, 35868, 72140, 8303, 182051, 82682, 33389, 5630, 94527, 27756, 204584, 39519, 51275, 31654, 10240, 28759,\n  22833, 178542, 47192, 48182, 45164, 83416, 42256, 42796, 81917, 217466, 53292, 37786, 77519, 106347, 83381, 18672,\n  48508, 13787, 77506, 13385, 5421, 76619, 372545, 27228, 140302, 83313, 3227, 42955, 37845, 66043, 76055, 149143,\n  149830, 12497, 9759, 138621, 5587, 153959, 83576, 136204, 27579, 39401, 30659, 75311, 5357, 6559, 74434, 7707,\n  428725, 26547, 2082, 18025, 248187, 41435, 176983, 82585, 6326, 238794, 27806, 33103, 206760, 30220, 62067, 73068,\n  39814, 3267, 31130, 1487, 32585, 16095, 47315, 334742, 89923, 102036, 75915, 77001, 44341, 23722, 4933, 28107,\n  288753, 33496, 67090, 13693, 284443, 67130, 6821, 12171, 96368, 120123, 128906, 6889, 31201, 197218, 124216, 25556,\n  94189, 226026, 49191, 116420, 119504, 22368, 28238, 62479, 20359, 140859, 29908, 42319, 52073, 25021, 11717, 171363,\n  103216, 48554, 148106, 44322, 179, 62550, 142748, 5200, 27934, 626834, 53683, 40353, 32801, 386580, 59130, 42350,\n  96035, 956, 88884, 71218, 34111, 41335, 31551, 1556, 34309, 7435, 32506, 89091, 101326, 35050, 97836, 7566,\n  18198, 14509, 235440, 30012, 20704, 338945, 90305, 62331, 210266, 5359, 86970, 67633, 37643, 51918, 7476, 35122,\n  27880, 2530, 23516, 55992, 141873, 9269, 20887, 235173, 106000, 53315, 71177, 78367, 19414, 8455, 3948, 72358,\n  56614, 93522, 50567, 6412, 167714, 32465, 101863, 1914, 66483, 142566, 61810, 14328, 107885, 75527, 21510, 22073,\n  86602, 3162, 170297, 80142, 4379, 139776, 150756, 52344, 20796, 126580, 47459, 31811, 75467, 203428, 2360, 109945,\n  4987, 40280, 38609, 247457, 5017, 131195, 52873, 51358, 118857, 25612, 54684, 86642, 26003, 82237, 10347, 74817,\n  34308, 134385, 105661, 2079, 114428, 3924, 56947, 20197, 29198, 93080, 30441, 23003, 6686, 189968, 44029, 59712,\n  29697, 69462, 47863, 6319, 73632, 71419, 54022, 228432, 3739, 11617, 144267, 6304, 69795, 159284, 38182, 88987,\n  16798, 60652, 18367, 39753, 41504, 26776, 44767, 4986, 7207, 326091, 10211, 275129, 30722, 15983, 114324, 26287,\n  21436, 250022, 386, 16493, 36735, 47994, 4425, 57498, 28067, 7086, 86124, 96341, 28545, 29897, 71934, 19803,\n  3239, 94102, 112964, 21957, 11221, 53105, 41589, 82164, 36031, 6367, 42771, 2307, 41889, 128904, 54967, 59098,\n  100010, 163061, 65256, 39405, 19247, 129504, 97081, 10279, 317673, 79950, 84866, 47576, 29495, 35727, 17138, 23769,\n  174554, 168948, 28307, 137478, 6424, 65666, 84059, 28007, 129725, 112584, 87500, 22631, 53845, 9237, 125865, 12109,\n  94986, 62791, 47377, 95747, 7955, 119822, 43499, 77478, 59676, 37816, 112528, 83870, 2604, 10721, 277540, 129593,\n  191497, 1803, 103962, 39100, 19735, 137806, 184562, 831, 102214, 21611, 10860, 96243, 62954, 12392, 277571, 104806,\n  23844, 21269, 30123, 51663, 11872, 3731, 70610, 110093, 179525, 50391, 26607, 87825, 261436, 17108, 19172, 65210,\n  34492, 179038, 18937, 8799, 428, 29645, 11956, 61342, 78404, 376484, 132083, 73837, 142035, 103650, 20615, 4466,\n  16747, 74934, 38480, 234599, 17246, 46547, 32844, 24552, 27578, 22737, 103773, 39027, 37021, 1234, 22307, 95862,\n  33672, 4191, 11010, 27369, 57944, 36384, 94490, 7931, 26056, 163500, 146122, 22564, 135760, 93787, 61065, 30077,\n  2369, 6137, 12659, 3122, 61674, 56540, 24935, 25675, 122066, 26194, 26305, 22069, 31327, 2064, 15705, 149614,\n  19374, 89531, 613, 93086, 157065, 5730, 15360, 6683, 40553, 8430, 74835, 94791, 130982, 74032, 11372, 90140,\n  69619, 36036, 16092, 112362, 71290, 44790, 23930, 155440, 38855, 195955, 61949, 49611, 72100, 9710, 26268, 41136,\n  92903, 169781, 27353, 78082, 95940, 112981, 249266, 45995, 51422, 17889, 6210, 74226, 165999, 87787, 28659, 84558,\n  65713, 42221, 17212, 99031, 57873, 122295, 227056, 76534, 50726, 57460, 287606, 77186, 7288, 29042, 88166, 172092,\n  20272, 22733, 128506, 113493, 2081, 55443, 102934, 214, 42326, 28948, 53196, 24237, 22624, 21099, 13480, 39377,\n  81120, 35325, 45300, 24047, 57914, 47609, 64670, 25672, 79352, 7747, 71834, 161803, 19447, 8688, 10183, 9684,\n  1684, 6277, 61421, 45761, 72302, 118558, 18353, 10661, 11774, 128325, 16327, 2665, 302559, 70280, 76546, 45579,\n  161481, 169457, 36438, 37410, 96396, 127007, 10776, 56760, 13692, 115406, 41747, 83908, 414988, 69549, 169745, 58040,\n  3721, 62350, 104731, 13605, 79066, 14490, 121161, 108219, 56627, 83538, 32335, 35780, 46883, 23245, 40346, 24451,\n  21150, 129629, 31758, 47729, 11747, 2392, 5660, 43534, 12184, 23309, 97227, 201922, 5856, 75935, 22492, 245478,\n  113458, 122567, 38892, 52163, 176117, 98436, 387939, 127565, 84416, 26809, 1689, 44206, 52079, 78841, 20795, 5683,\n  27933, 162169, 34126, 12822, 3354, 45811, 72520, 20811, 59765, 13615, 3254, 29527, 141359, 123305, 19887, 90838,\n  2212, 8885, 33750, 29379, 216309, 13657, 7475, 88895, 2555, 55375, 35969, 66537, 23458, 112987, 1751, 75280,\n  196722, 96722, 67717, 118130, 142463, 83824, 80129, 105478, 45701, 183568, 315287, 14884, 44548, 167199, 36212, 100715,\n  28798, 95743, 42919, 6271, 19418, 59193, 16434, 72701, 215, 108179, 34472, 75818, 29916, 15862, 29177, 1351,\n  9396, 129616, 4305, 86650, 10574, 51218, 914, 206197, 114226, 53103, 156910, 12946, 84475, 16322, 71666, 47108,\n  13520, 81329, 27088, 120745, 18694, 174187, 3645, 72390, 34056, 18867, 220604, 95316, 4524, 97988, 41515, 586619,\n  90302, 23520, 19632, 127752, 62930, 258836, 36988, 204585, 13539, 57180, 13517, 6044, 19407, 65336, 268952, 132299,\n  77209, 53483, 3327, 22672, 7728, 50216, 2729, 12196, 38088, 36872, 5799, 111465, 9535, 11303, 51899, 76725,\n  2263, 23913, 3675, 253827, 23875, 65387, 63019, 12817, 183945, 28678, 43266, 62072, 17750, 269599, 29961, 5765,\n  26274, 6555, 2446, 55197, 67172, 1910, 71875, 19799, 10585, 1419, 27911, 88939, 28042, 167002, 124915, 104112,\n  22199, 47768, 14066, 16710, 7478, 99068, 196517, 131507, 51331, 27291, 42046, 63842, 66030, 117306, 144818, 41353,\n  26774, 14822, 38660, 171065, 192929, 121185, 116712, 28895, 31434, 3911, 52612, 111118, 25850, 18697, 65634, 4147,\n  50197, 74729, 15097, 117548, 52926, 274499, 54590, 79384, 178158, 113803, 36365, 137334, 4679, 5949, 253573, 27681,\n  181256, 356354, 65776, 146248, 70184, 2871, 18045, 156661, 229600, 6542, 22726, 9001, 9959, 34743, 33915, 7460,\n  105594, 269690, 12482, 86077, 72158, 12017, 58753, 24594, 73974, 3029, 1912, 30079, 2726, 109412, 146145, 35326,\n  35085, 862, 90862, 85609, 78087, 43053, 160170, 33043, 23284, 4515, 162825, 69896, 35568, 601, 13016, 1407,\n  51713, 90134, 750, 45520, 155676, 21397, 168585, 187237, 5401, 125230, 5635, 89220, 27254, 54715, 98930, 113085,\n  11966, 3030, 1855, 149700, 17569, 56634, 16775, 51586, 223253, 10938, 121033, 70787, 71993, 76450, 39521, 26162,\n  103357, 94057, 56597, 26906, 111477, 293134, 42368, 24553, 55722, 30882, 11930, 19889, 30504, 35653, 6466, 203139,\n  26034, 287857, 19452, 2522, 46774, 8228, 76457, 83553, 35392, 6216, 12166, 56704, 36285, 6768, 54803, 1726,\n  214814, 6895, 182419, 26778, 41143, 53690, 13669, 45646, 163465, 22665, 198804, 39125, 1051, 54093, 61411, 31560,\n  16094, 26798, 90341, 277777, 81044, 169520, 129829, 46588, 6636, 71429, 29098, 27473, 76489, 47101, 118137, 125121,\n  179102, 29265, 57351, 60270, 20712, 59437, 33382, 18626, 39178, 70695, 80048, 54642, 35683, 106381, 97513, 43264,\n  125177, 120906, 35533, 22522, 54219, 7788, 92290, 6116, 30617, 6801, 86129, 39209, 52994, 53661, 59735, 17738,\n  25324, 24278, 105977, 13689, 50123, 36059, 130088, 54180, 2543, 36656, 87050, 59769, 87529, 20220, 367, 68705,\n  58995, 26101, 26380, 43246, 10688, 79793, 82063, 59968, 125199, 31463, 19802, 62223, 12388, 70063, 151361, 3296,\n  60158, 33268, 27121, 110554, 125481, 31240, 69489, 60334, 131646, 25391, 20034, 24248, 7642, 55281, 33709, 57581,\n  133350, 77700, 27095, 3522, 65874, 30518, 61307, 126098, 3438, 49052, 9849, 78050, 97277, 50748, 175256, 49826,\n  101450, 107315, 118984, 13409, 10075, 128877, 62205, 13193, 56344, 25228, 87810, 2143, 116821, 7648, 113840, 19459,\n  50778, 131885, 88512, 13697, 60547, 58403, 210177, 34494, 98016, 51781, 47807, 12099, 106135, 16443, 16925, 19635,\n  13859, 8422, 14030, 4756, 14255, 48634, 3275, 4837, 16300, 230472, 6616, 53129, 77373, 22360, 111581, 9662,\n  173521, 71655, 15044, 5531, 8285, 190633, 62896, 54909, 45932, 34330, 16255, 17909, 37426, 152464, 256859, 18903,\n  4054, 67227, 5705, 135855, 114295, 14380, 28822, 86386, 55947, 44796, 22159, 43163, 7703, 65450, 5829, 97182,\n  39114, 652, 2216, 44468, 52, 74475, 73693, 208207, 51119, 111015, 105280, 42780, 128135, 3956, 13974, 30409,\n  19714, 40616, 22185, 44115, 60715, 199079, 86742, 81192, 9554, 53876, 58171, 29597, 50492, 316379, 10539, 3453,\n  88180, 23111, 24529, 93240, 2823, 46332, 22213, 8752, 118271, 197846, 6618, 8946, 52993, 21325, 30302, 17074,\n  122625, 9575, 29441, 295253, 97919, 3130, 132791, 140156, 23859, 8941, 106857, 22772, 37895, 107740, 9471, 34989,\n  25040, 85180, 21330, 47109, 33614, 110324, 23189, 24151, 32102, 171390, 19981, 29005, 20431, 121, 38106, 170174,\n  3577, 46060, 182390, 13411, 9275, 119138, 47329, 30160, 15686, 30347, 7585, 10003, 43031, 29151, 20512, 144355,\n  157741, 153623, 16851, 99315, 110358, 156059, 69556, 9859, 1884, 75126, 4225, 180276, 40291, 131485, 17863, 1299,\n  125391, 75039, 111409, 31614, 13736, 31156, 97629, 65733, 5008, 14589, 129738, 29549, 64881, 29351, 75196, 52675,\n  87336, 57594, 21161, 14655, 77381, 35333, 37937, 262082, 70711, 100777, 11065, 52574, 43032, 79308, 11911, 5569,\n  49155, 8990, 20956, 71672, 118587, 90936, 6794, 2889, 70494, 14885, 17291, 20073, 4318, 33042, 38735, 27931,\n  10168, 11340, 174780, 29799, 30126, 32276, 416159, 9138, 12580, 186182, 69114, 30093, 10524, 55369, 90592, 23723,\n  280104, 31769, 43457, 134915, 104001, 3107, 52049, 3483, 145413, 4347, 87847, 8340, 2862, 22905, 12749, 10655,\n  84140, 32339, 14853, 21123, 6603, 75082, 30462, 29877, 106005, 84964, 69112, 129634, 13566, 31377, 1731, 2591,\n  12780, 75605, 9265, 203857, 11251, 95054, 43621, 106786, 42830, 115761, 76779, 15968, 571, 316548, 48436, 23152,\n  179910, 24939, 4039, 62740, 82443, 162336, 105433, 153188, 13146, 12020, 11190, 145468, 469, 151738, 6924, 16613,\n  42714, 25880, 5783, 38804, 32591, 110905, 81649, 189448, 265217, 122177, 28046, 8852, 424024, 1774, 13702, 37891,\n  92553, 66876, 68996, 31394, 54721, 100409, 93602, 51349, 134100, 42960, 121568, 58272, 6007, 12605, 20028, 3624,\n  15242, 25008, 65373, 95897, 114681, 115646, 2589, 33333, 59030, 148878, 4427, 719, 16718, 23118, 3261, 37212,\n  85465, 55213, 20762, 7510, 200214, 136975, 141829, 8623, 85982, 9053, 8985, 13680, 55174, 20625, 8519, 15392,\n  165013, 16648, 8679, 27707, 23493, 74409, 23572, 32138, 56964, 21537, 197403, 32462, 82529, 23420, 28463, 4528,\n  109150, 117327, 76538, 9244, 32706, 84770, 24954, 49185, 27568, 3481, 35176, 25954, 82442, 152974, 131562, 69937,\n  5350, 25825, 141497, 121347, 14976, 75327, 17713, 2839, 13165, 257262, 30030, 30105, 44890, 162261, 56625, 19734,\n  60021, 19579, 1465, 101402, 21343, 50719, 82005, 23880, 33978, 2744, 4244, 16973, 17264, 25584, 4273, 85481,\n  4655, 19471, 172622, 36425, 22328, 212066, 128477, 64373, 27819, 33935, 83439, 54538, 75730, 73945, 182416, 338,\n  16567, 164442, 82351, 56235, 55483, 38729, 47137, 36504, 14510, 39166, 16573, 4712, 17926, 119742, 48289, 74781,\n  45827, 314393, 143249, 63030, 150609, 33960, 254056, 83767, 3704, 81354, 45727, 6473, 7385, 36244, 6886, 18673,\n  272531, 4187, 62156, 112398, 161543, 82887, 4358, 87142, 76904, 76583, 39823, 167961, 122163, 68178, 11770, 14478,\n  52405, 50115, 29516, 109139, 2039, 4206, 65909, 23385, 19165, 89405, 28262, 22275, 41623, 3099, 70734, 12924,\n  14423, 41773, 25426, 95066, 228354, 10150, 40311, 18456, 3369, 167019, 217588, 126793, 176360, 66455, 4269, 8444,\n  85491, 121695, 17697, 323, 7122, 20991, 35726, 50184, 35789, 94066, 146437, 243045, 303724, 21794, 8433, 198209,\n  4465, 23672, 80873, 33604, 13628, 46964, 2602, 33500, 2233, 8434, 6196, 25551, 55311, 64859, 90756, 733,\n  118771, 16152, 16282, 13527, 20713, 42651, 69883, 78249, 10006, 70583, 164285, 102376, 221519, 42660, 9468, 65430,\n  45115, 136780, 41566, 157119, 71021, 40395, 88297, 10249, 35650, 41778, 28731, 28138, 29775, 49179, 39391, 51182,\n  7337, 14843, 4441, 103029, 10864, 81753, 72912, 49213, 20665, 88374, 112909, 1667, 21142, 63823, 38287, 19613,\n  1746, 41069, 30542, 41967, 15080, 138315, 9822, 40857, 1624, 120146, 62254, 46115, 32449, 11046, 21374, 514828,\n  10905, 260390, 38829, 21553, 105743, 7303, 96235, 38405, 229797, 32678, 23538, 112753, 7701, 37587, 64813, 15914,\n  3940, 40782, 259364, 20373, 22997, 77967, 19173, 76602, 178467, 82126, 9044, 83531, 57208, 74018, 5950, 34656,\n  389057, 21826, 6662, 16035, 39683, 55167, 129407, 79420, 59403, 152449, 39047, 31506, 63344, 27006, 12334, 147213,\n  63125, 155934, 26422, 197447, 54847, 124681, 52392, 3641, 69691, 15548, 83724, 62974, 18336, 43641, 194003, 56605,\n  56448, 6561, 195097, 103908, 3362, 8507, 99274, 120393, 37202, 12934, 69852, 54075, 18282, 7789, 50160, 102080,\n  29648, 97272, 47381, 12391, 138224, 47286, 208664, 50910, 35867, 32185, 28804, 64164, 10495, 11850, 159760, 137513,\n  5911, 76063, 12977, 6056, 28814, 21821, 2163, 130, 26653, 229563, 675, 34076, 31514, 47917, 92810, 44791,\n  176702, 25297, 80044, 28279, 26550, 62323, 9943, 101265, 45621, 173758, 88568, 219069, 11734, 117073, 111186, 26075,\n  4525, 39923, 16003, 12712, 40543, 7197, 150583, 16316, 73944, 199805, 158502, 7166, 121080, 2343, 53537, 17725,\n  27858, 14692, 138991, 22323, 155561, 72448, 37087, 173360, 14887, 2310, 89844, 54066, 44670, 35610, 30471, 49008,\n  30742, 32492, 123549, 16741, 8796, 69544, 57441, 97055, 107455, 22125, 10594, 123866, 113472, 2733, 85686, 54673,\n  56369, 34761, 5044, 12915, 75581, 8965, 47647, 30073, 183777, 13677, 34414, 87158, 240095, 56678, 23997, 13674,\n  133699, 17662, 364, 13753, 153299, 27177, 51527, 30243, 8768, 26167, 16767, 50595, 160464, 166312, 23739, 14534,\n  26058, 9664, 63302, 110621, 49078, 86820, 10195, 18754, 103971, 41541, 46431, 27835, 21875, 167947, 172353, 12902,\n  71486, 20686, 45374, 12571, 44888, 12274, 1818, 10422, 17156, 10122, 31744, 9367, 9678, 87337, 19033, 70558,\n  89541, 21373, 2670, 9033, 123019, 13271, 234210, 43826, 102337, 11809, 135892, 7723, 3972, 64409, 19618, 54008,\n  83930, 155668, 38822, 37966, 21245, 24138, 260, 246255, 87852, 28211, 156411, 8088, 109660, 68896, 82086, 248065,\n  287918, 183132, 99271, 104331, 183019, 20735, 38511, 16336, 686, 18533, 18914, 36568, 10100, 17413, 11801, 17493,\n  39177, 49978, 80098, 133024, 283941, 8179, 153303, 913, 11274, 22090, 73741, 81799, 24736, 36017, 34397, 5355,\n  26793, 74880, 144578, 239455, 26214, 19233, 17629, 106193, 25995, 57924, 89963, 116991, 77011, 261582, 364267, 12039,\n  141580, 15178, 36187, 9064, 4070, 21836, 104740, 12532, 23742, 192159, 139401, 14516, 46285, 50127, 9705, 30183,\n  46632, 6312, 66032, 10073, 30700, 26025, 26702, 43421, 26669, 6136, 155289, 120269, 19056, 202531, 43062, 10321,\n  35951, 149425, 302834, 15999, 115575, 92927, 51885, 95094, 174034, 1831, 20175, 39292, 56097, 9329, 155235, 20052,\n  35463, 55521, 17719, 122027, 87425, 145479, 31818, 5229, 24575, 132139, 118737, 52992, 44245, 16168, 78384, 56556,\n  38701, 11367, 88487, 19022, 82317, 214446, 53146, 132874, 85922, 28449, 40982, 81866, 281616, 112901, 26578, 190706,\n  100333, 155311, 101029, 171716, 147697, 12430, 68023, 26065, 61503, 69034, 60721, 126933, 7730, 7965, 21463, 59048,\n  84330, 17699, 17875, 37832, 8530, 54375, 218360, 53773, 59917, 9867, 92197, 54218, 61597, 39007, 87092, 58775,\n  17173, 53529, 33744, 101641, 9092, 6126, 34354, 17856, 32658, 23212, 16624, 40012, 90288, 66804, 30957, 193996,\n  193136, 3361, 126541, 62118, 39023, 18809, 8034, 19719, 20381, 66386, 64493, 20206, 56654, 11892, 180795, 70430,\n  31132, 148921, 124862, 23413, 7779, 38708, 40301, 16544, 1919, 80033, 29947, 93475, 1375, 135168, 156926, 69211,\n  117128, 57078, 75276, 39285, 30819, 18464, 3044, 51097, 11169, 214069, 300112, 18592, 40938, 132884, 51336, 55473,\n  23935, 202263, 99605, 7252, 115201, 18984, 268130, 87746, 101155, 21993, 7612, 2978, 151034, 53745, 151729, 174929,\n  4835, 64678, 53387, 27068, 11231, 14136, 30257, 163776, 74550, 15754, 8669, 6350, 89388, 45349, 422995, 68021,\n  59951, 87642, 86425, 54667, 91704, 28427, 56079, 64527, 107312, 2367, 6715, 32058, 167882, 83377, 9472, 24984,\n  115062, 35722, 33140, 156862, 12732, 24084, 23697, 34539, 72738, 20672, 102578, 11210, 88703, 7244, 19853, 19168,\n  464019, 27128, 46941, 50269, 158267, 8850, 158112, 51669, 57995, 41368, 58379, 14134, 60496, 91738, 13630, 44359,\n  737, 15344, 120328, 46261, 14371, 8214, 53796, 49253, 123867, 56387, 104801, 7333, 4174, 48503, 43922, 3083,\n  243339, 116418, 479757, 153147, 159946, 19349, 47019, 17868, 7568, 17831, 7985, 56769, 16025, 112323, 7079, 40969,\n  134556, 11297, 18538, 58669, 110916, 153620, 73377, 72354, 38103, 205536, 68495, 102706, 191, 10869, 164292, 31753,\n  80226, 87342, 114379, 12760, 88794, 19334, 85112, 20828, 29688, 22880, 32405, 3197, 27230, 29826, 77087, 46535,\n  10454, 11432, 110215, 23620, 76308, 72189, 116329, 168613, 57647, 19673, 10378, 1049, 77409, 28757, 24133, 588,\n  113483, 16684, 61242, 31088, 66864, 24674, 161602, 3529, 14745, 90530, 299150, 6673, 19808, 84006, 14057, 114223,\n  12023, 167545, 57708, 91489, 46583, 15662, 2782, 13163, 84805, 1309, 47528, 68166, 16015, 48871, 44523, 145426,\n  17102, 65184, 54856, 101626, 2231, 162868, 38087, 134570, 20611, 72893, 296437, 103821, 3547, 51502, 32402, 63371,\n  95740, 8947, 63165, 25224, 250131, 70323, 10235, 39906, 34559, 51697, 134092, 90702, 108894, 201322, 13521, 98255,\n  8498, 173210, 61323, 5939, 15853, 2071, 83348, 11131, 159169, 47234, 2625, 1728, 148920, 59236, 14351, 20915,\n  20942, 19005, 8569, 220082, 2813, 129877, 76369, 208632, 93160, 15477, 19266, 71454, 45188, 37118, 21981, 734,\n  210613, 24054, 1267, 258926, 45531, 14333, 1358, 4214, 52587, 73176, 70405, 3934, 149062, 67102, 129336, 24604,\n  39782, 144525, 88004, 81838, 28194, 51093, 36216, 42928, 57849, 8118, 2715, 191067, 60965, 105811, 65180, 7052,\n  84954, 70694, 46912, 219608, 89766, 22029, 26626, 102536, 84453, 50777, 25605, 105083, 100927, 20688, 87599, 26842,\n  16501, 4589, 1582, 37485, 27658, 50645, 120746, 2335, 165311, 11419, 118946, 1635, 103841, 81324, 26376, 135646,\n  54192, 116632, 21545, 33403, 207341, 58353, 177692, 33129, 19558, 9632, 75823, 7780, 20084, 107884, 116296, 109946,\n  319622, 58315, 14925, 134360, 5672, 15528, 113198, 68474, 205467, 66116, 49681, 2705, 98462, 83417, 21258, 159469,\n  61849, 81586, 62636, 15482, 36279, 20980, 9940, 193129, 13609, 130807, 18949, 73964, 147177, 131897, 86637, 146769,\n  24726, 30328, 30775, 29789, 165015, 16356, 4333, 5505, 209489, 79847, 8748, 132099, 59591, 103870, 50045, 162834,\n  31157, 71923, 122346, 6112, 6551, 139841, 45179, 43676, 117580, 19506, 44727, 106994, 75060, 69628, 17203, 46010,\n  141146, 9659, 247052, 66602, 277310, 21659, 46258, 176126, 21072, 87, 20184, 63737, 22023, 124145, 55015, 107649,\n  106474, 147290, 65612, 13076, 63041, 16396, 150430, 62688, 137443, 6987, 49604, 88814, 122965, 88723, 27058, 177180,\n  68371, 34502, 30567, 11200, 5383, 48204, 26504, 19554, 42146, 47062, 6975, 51017, 98961, 25976, 71879, 161741,\n  113467, 13050, 91074, 277058, 30863, 61884, 41533, 46948, 23794, 16521, 149829, 35815, 4843, 40881, 56017, 95769,\n  99630, 72286, 99851, 13623, 30392, 51474, 63363, 63865, 82679, 1059, 168866, 25195, 13699, 121522, 234449, 35601,\n  241612, 30212, 73616, 264919, 33601, 161573, 60734, 72643, 93146, 104874, 19083, 97309, 24319, 146272, 53100, 87181,\n  18643, 3074, 12143, 84691, 32155, 10902, 38113, 83987, 95669, 22320, 37308, 44763, 40440, 203540, 152769, 7319,\n  15333, 37687, 43812, 63607, 34089, 899, 246178, 71268, 67799, 16016, 114972, 58528, 142144, 3955, 144552, 72635,\n  58245, 136701, 104014, 243, 38633, 62199, 14295, 9747, 114531, 27309, 21640, 159861, 117400, 124053, 13195, 210463,\n  77861, 81073, 239628, 226797, 188726, 25428, 49381, 139825, 5507, 45355, 15269, 48541, 2568, 12101, 40308, 1768,\n  8853, 78278, 55853, 27498, 10987, 12866, 22855, 16207, 107222, 28940, 68976, 28505, 2663, 277982, 71506, 191712,\n  2421, 165066, 37699, 52827, 11530, 112085, 187070, 14784, 13345, 2370, 197969, 71689, 30075, 93786, 97183, 71992,\n  41785, 19656, 26541, 5218, 118661, 37497, 14909, 185795, 104786, 64176, 31138, 67561, 17459, 21130, 111703, 11368,\n  12490, 45880, 38409, 147530, 16281, 12336, 20898, 10505, 71936, 39455, 49254, 62813, 193555, 86430, 18811, 97787,\n  17431, 50448, 85973, 4047, 5944, 9900, 65788, 238170, 71758, 45771, 89284, 65578, 26485, 49627, 32381, 33713,\n  77317, 8559, 35413, 14870, 20803, 34468, 81897, 94234, 367167, 24080, 137854, 191387, 158, 7578, 65751, 15809,\n  7362, 17010, 196493, 65502, 93430, 391382, 2879, 10420, 11735, 7147, 23542, 17615, 172445, 156086, 37413, 42670,\n  46002, 31761, 57780, 41672, 11532, 25360, 90866, 49967, 54482, 3553, 67022, 173415, 930, 48911, 25321, 44848,\n  62911, 34519, 229774, 187702, 2235, 26813, 21693, 1315, 23004, 97752, 23681, 170907, 179236, 168028, 11780, 33446,\n  4764, 8196, 13633, 286646, 101859, 29094, 37084, 18677, 208113, 11037, 67253, 68845, 22477, 60395, 22179, 83654,\n  55163, 30814, 111690, 84894, 95579, 111070, 15123, 2301, 14098, 14628, 22693, 64944, 67320, 32427, 113228, 8450,\n  162556, 30175, 61058, 80543, 90709, 143529, 88741, 208523, 156949, 1923, 33966, 23151, 3826, 241299, 16138, 83350,\n  57492, 27183, 107353, 138052, 4025, 107597, 35297, 67773, 34092, 30452, 43300, 6957, 87442, 94684, 16965, 217438,\n  104565, 70559, 98891, 21648, 6718, 16784, 149691, 99066, 186015, 19497, 66551, 37693, 28214, 16720, 64083, 40532,\n  14209, 87486, 1612, 145702, 10039, 70355, 14323, 130951, 107186, 119516, 74814, 104148, 233912, 48066, 30803, 17404,\n  58877, 26118, 50223, 44594, 81637, 205665, 99360, 81833, 55265, 26920, 28438, 30781, 39828, 1038, 31826, 48903,\n  6194, 56604, 14761, 59828, 145813, 74771, 74706, 51758, 50831, 37050, 3597, 24506, 105849, 6593, 4154, 16139,\n  4974, 46766, 28473, 30674, 88319, 27775, 32504, 6677, 122296, 25830, 25628, 152679, 10272, 18637, 3167, 49269,\n  197216, 13892, 17101, 74035, 95714, 67486, 53321, 82319, 51540, 39761, 17803, 187333, 72418, 71349, 30143, 35120,\n  23324, 149892, 42804, 9890, 91555, 30670, 7507, 27360, 8743, 12725, 15462, 94244, 140452, 44821, 17416, 38926,\n  250249, 54572, 82822, 54752, 51666, 63387, 47442, 57021, 34124, 37290, 40715, 29430, 7229, 111417, 75006, 22299,\n  38592, 3207, 31696, 25882, 129641, 85221, 119327, 11951, 78169, 25237, 51044, 149983, 174242, 9947, 220995, 4324,\n  22464, 397659, 78193, 25301, 149964, 59306, 234039, 11815, 51450, 116927, 58974, 159239, 14034, 75956, 10213, 91547,\n  10026, 88574, 19060, 33083, 95376, 47430, 31034, 61653, 26190, 36085, 5131, 14374, 120062, 15192, 280008, 9263,\n  14401, 19099, 200440, 66652, 8700, 156222, 62663, 66966, 265, 110, 148040, 36034, 31386, 104323, 17822, 32638,\n  143573, 164335, 16580, 50402, 7203, 38721, 213812, 21515, 229889, 8504, 38602, 75516, 61567, 60579, 12745, 46326,\n  4227, 18582, 60229, 59397, 140981, 39037, 55638, 17735, 2466, 3755, 51288, 30552, 72052, 186323, 70031, 82764,\n  10787, 256, 117464, 143130, 10062, 6313, 63167, 28509, 30958, 1511, 26452, 130270, 6099, 62843, 2008, 134723,\n  38471, 103714, 11981, 137269, 30103, 21650, 155870, 27623, 23202, 21416, 31748, 136202, 208101, 42177, 21612, 97179,\n  70847, 80823, 26151, 15957, 467, 19669, 80201, 152985, 58934, 49413, 43187, 165152, 32271, 3413, 278897, 95326,\n  32984, 22407, 4165, 5889, 36637, 54267, 154498, 84424, 24107, 32263, 13642, 61899, 30771, 48906, 53541, 77288,\n  17109, 68812, 133945, 23919, 73353, 73829, 91032, 251994, 13650, 62276, 107145, 232161, 2098, 1645, 1664, 247395,\n  157040, 42258, 5942, 117930, 67366, 16060, 9794, 122685, 66904, 16976, 197964, 13983, 106018, 68009, 103583, 28958,\n  265380, 17355, 73225, 43935, 107238, 21443, 155998, 64685, 18535, 31098, 26652, 188152, 44025, 21291, 51390, 24741,\n  32681, 22989, 67962, 69432, 144983, 171068, 156235, 7891, 62505, 30254, 83172, 66755, 91295, 123868, 35802, 115707,\n  56120, 334807, 135497, 21871, 3082, 226529, 127778, 48841, 77508, 143672, 108714, 27565, 10322, 144014, 44830, 149778,\n  63023, 9719, 13437, 27943, 36700, 13695, 163539, 196344, 81885, 30099, 44647, 4703, 224127, 11553, 28255, 159827,\n  16721, 24326, 85789, 18228, 45023, 10808, 22936, 17273, 239261, 46240, 15558, 55286, 111272, 53778, 10007, 200688,\n  13852, 33199, 25937, 118127, 7866, 95568, 13550, 69075, 149243, 18187, 18054, 139272, 204199, 48032, 9916, 53168,\n  32309, 66646, 20390, 30523, 22084, 55674, 32559, 215681, 42029, 99514, 103068, 63726, 38316, 8856, 122667, 9308,\n  126644, 295281, 11559, 40999, 104973, 114406, 69105, 9022, 14406, 80819, 104640, 60160, 43454, 8575, 34276, 11096,\n  67322, 37022, 36926, 101052, 61310, 36620, 61086, 109693, 15789, 9610, 221009, 16189, 40285, 3194, 57111, 7696,\n  24026, 1071, 17787, 219517, 181047, 102229, 1436, 19143, 6301, 110183, 37601, 45487, 70927, 56572, 105459, 74084,\n  23319, 69989, 91217, 16551, 115823, 99155, 38977, 40934, 27248, 94397, 86590, 107504, 66693, 29641, 1379, 47255,\n  115875, 1054, 8435, 39144, 278566, 3140, 317123, 121774, 63007, 54, 8414, 27632, 146844, 17916, 144167, 46464,\n  56841, 9985, 60753, 54973, 59007, 15854, 105030, 302270, 87368, 102284, 52117, 2320, 180001, 24004, 45415, 28122,\n  22370, 12080, 4179, 143103, 42114, 5196, 9147, 23819, 80605, 58583, 158409, 10286, 12022, 7119, 150321, 118598,\n  10374, 25544, 101645, 10354, 308, 97195, 61157, 56511, 25079, 3266, 28236, 118492, 14689, 20295, 135126, 19093,\n  12618, 57448, 107655, 29480, 63368, 199518, 134395, 42712, 7936, 62939, 58228, 35501, 264973, 47880, 112138, 63936,\n  212291, 63680, 36241, 9561, 136713, 9208, 3926, 120889, 95999, 43551, 83774, 6921, 105801, 11525, 3247, 91697,\n  18965, 18822, 61436, 115290, 32075, 47003, 24387, 26636, 48700, 190949, 19812, 48361, 52230, 62488, 108527, 105631,\n  35119, 118159, 8412, 2552, 96912, 124705, 45876, 32587, 32992, 107747, 77489, 51983, 8586, 88880, 11803, 52063,\n  16606, 162643, 143626, 89658, 101333, 22654, 101310, 38641, 101812, 20259, 123750, 2503, 14969, 219100, 8690, 57801,\n  39930, 59910, 37399, 71781, 759, 10810, 116498, 88252, 193090, 2214, 139472, 14511, 27387, 12596, 1241, 7718,\n  42914, 11603, 116092, 73428, 12937, 23266, 15835, 53439, 5058, 18649, 34255, 102275, 62646, 29092, 74301, 111969,\n  64528, 103339, 89133, 263917, 38624, 31458, 186803, 51532, 25743, 71285, 12736, 12343, 37502, 180824, 143025, 172311,\n  3716, 6203, 6498, 22229, 4435, 2166, 66689, 87857, 30352, 26521, 32385, 19406, 178687, 47754, 51273, 121646,\n  26461, 8198, 36440, 4640, 132611, 45114, 31837, 69521, 42002, 24437, 25080, 46669, 138442, 89271, 46945, 24420,\n  35833, 124503, 8025, 46899, 59582, 24849, 44172, 115277, 16345, 29941, 42848, 14801, 8048, 26136, 36090, 41362,\n  60319, 2074, 33712, 41656, 49349, 63229, 13209, 66031, 309, 4824, 48391, 36461, 47800, 73514, 39421, 155688,\n  49739, 46104, 1216, 56340, 90482, 5712, 163879, 113513, 26405, 9919, 71117, 80878, 34470, 7576, 186, 167527,\n  63786, 17343, 68724, 45616, 32479, 50203, 8150, 47235, 85028, 41439, 143352, 4168, 39866, 18661, 19475, 52046,\n  47846, 51344, 13929, 353722, 11649, 34406, 89897, 29002, 23934, 68639, 14094, 75872, 29466, 43863, 63280, 169603,\n  2816, 5244, 32027, 29855, 42864, 45790, 121470, 68468, 31828, 7242, 12594, 14488, 7410, 33485, 88169, 76478,\n  74885, 61809, 68536, 70978, 49632, 26100, 42262, 112129, 47629, 15034, 77852, 1153, 111801, 32807, 15276, 117727,\n  90749, 35188, 38118, 105626, 19536, 124809, 8721, 101778, 18767, 7320, 62401, 5488, 105764, 8155, 101412, 36533,\n  59606, 23477, 13883, 40321, 21223, 13491, 12275, 43235, 10746, 12781, 61840, 152362, 76298, 7826, 23347, 19020,\n  22220, 93982, 66332, 35455, 39408, 6329, 112746, 96397, 7190, 38758, 5458, 105620, 79654, 98403, 59395, 11902,\n  64856, 56883, 35273, 53643, 11602, 20326, 70616, 82969, 82156, 35788, 123268, 58910, 272765, 24592, 15867, 1454,\n  17079, 21042, 67057, 18817, 70089, 24840, 111862, 91164, 245473, 26466, 103325, 34583, 51813, 59727, 75940, 43370,\n  184407, 39378, 10508, 122637, 384678, 128473, 172589, 103341, 1576, 55027, 79993, 6639, 122249, 56459, 5014, 77265,\n  5064, 51717, 32582, 2149, 27481, 34880, 18933, 503, 6188, 76698, 48184, 81280, 25790, 6378, 5599, 159007,\n  74361, 6010, 125775, 18286, 27541, 83541, 66715, 25065, 318284, 67687, 26494, 145603, 45430, 73737, 1093, 24588,\n  31488, 141097, 46614, 41796, 620, 39230, 75054, 18365, 93579, 36160, 184470, 32372, 45723, 48418, 250572, 261817,\n  192118, 22725, 77160, 79580, 22670, 4248, 83282, 74287, 51913, 89394, 15782, 18868, 4162, 31369, 195445, 114671,\n  70244, 80847, 32760, 73941, 35966, 33327, 48176, 61263, 26397, 21891, 35782, 51428, 16199, 17361, 60996, 162215,\n  50899, 70443, 196905, 14327, 209613, 277476, 31457, 115726, 121702, 1643, 41064, 101937, 287507, 200215, 40259, 17132,\n  2993, 39858, 66709, 78788, 36101, 45516, 276535, 10475, 132229, 74041, 85837, 4489, 67345, 47555, 70268, 21923,\n  33062, 17585, 37566, 31019, 76295, 41197, 33727, 44308, 118628, 54158, 74493, 8091, 78705, 83923, 8776, 31089,\n  52316, 104384, 21180, 13077, 34375, 98798, 124584, 38929, 107083, 5305, 11827, 45799, 107454, 122628, 99613, 39711,\n  44863, 77878, 47979, 163774, 127561, 55355, 79908, 233991, 33964, 8846, 147975, 196384, 3073, 181199, 4641, 18878,\n  154010, 234469, 1978, 29642, 190914, 72852, 147040, 33070, 55967, 226887, 13739, 90555, 39074, 42255, 11101, 11143,\n  6272, 2958, 5785, 149827, 31047, 148068, 44726, 20098, 5550, 34454, 68139, 117608, 41123, 74247, 21830, 126493,\n  26154, 125253, 9928, 34238, 98638, 40988, 315243, 29780, 47110, 42038, 38685, 1249, 19998, 18504, 2563, 17213,\n  148091, 6500, 13838, 19244, 50229, 4746, 251846, 112081, 31329, 48587, 8296, 216791, 59900, 99134, 13938, 168292,\n  195442, 43920, 20408, 15133, 19106, 21571, 58002, 11833, 61347, 98426, 10306, 95246, 73497, 108255, 62936, 13502,\n  70015, 18245, 80358, 41111, 682, 47734, 11486, 103861, 45850, 5615, 51099, 134183, 25776, 191909, 70530, 132159,\n  38022, 64318, 63079, 172030, 148951, 284196, 101745, 31146, 6288, 10262, 10014, 172794, 37411, 22511, 4387, 112723,\n  232526, 23910, 161525, 17672, 109277, 67584, 32161, 96383, 27286, 345858, 68047, 143833, 32342, 125891, 44280, 13086,\n  9262, 166694, 69189, 41261, 5220, 24538, 15818, 21924, 16651, 109563, 5340, 30385, 23175, 91017, 49288, 45540,\n  46740, 114503, 244673, 25970, 129438, 46907, 33785, 227986, 78614, 21905, 31585, 114441, 121925, 1940, 19917, 21156,\n  66914, 81575, 3244, 30495, 88710, 29655, 12313, 83379, 127952, 105486, 99459, 88635, 5563, 32187, 8229, 94749,\n  21500, 48758, 166385, 14479, 34521, 359597, 72504, 153813, 10739, 78835, 39295, 138067, 14863, 122543, 48540, 34380,\n  191006, 11035, 196034, 9752, 62956, 65440, 80639, 387, 17359, 20899, 93399, 207191, 16749, 28093, 88121, 92904,\n  67027, 59025, 67931, 87918, 56284, 135160, 87875, 81632, 69134, 75164, 29710, 188499, 43301, 19047, 13422, 106967,\n  35039, 65093, 55023, 107550, 58883, 53155, 1578, 14587, 54466, 100984, 69351, 32950, 60823, 25977, 174836, 15869,\n  404451, 6689, 11576, 4477, 75743, 45266, 31052, 16005, 59856, 29472, 81237, 29067, 86979, 42164, 23945, 46676,\n  7923, 90552, 46853, 182972, 34273, 42374, 17945, 13686, 83785, 52585, 13309, 23870, 32142, 64343, 98952, 28074,\n  7693, 4539, 24893, 39020, 268986, 16664, 39061, 84393, 197428, 80361, 205940, 1224, 282681, 6882, 9445, 49939,\n  17049, 191596, 29434, 55100, 22346, 54975, 127831, 732, 22990, 126521, 11455, 86007, 92245, 138159, 51749, 151336,\n  107180, 1069, 19546, 41449, 3357, 159316, 6574, 4724, 37104, 15238, 26063, 24160, 96724, 37317, 18138, 7223,\n  49153, 51769, 152694, 7631, 7683, 64472, 8352, 2685, 31197, 127743, 6860, 92869, 43267, 85011, 42057, 23724,\n  82231, 8741, 18674, 7910, 164276, 4096, 12771, 7586, 23696, 47054, 195099, 1416, 20848, 13504, 357403, 2764,\n  188364, 105560, 295, 178445, 22309, 57234, 22103, 107666, 24821, 35099, 28676, 58490, 158707, 25657, 23518, 61519,\n  1018, 46602, 17455, 53294, 22514, 62556, 170305, 115366, 70922, 69405, 15098, 71322, 27792, 76230, 27885, 2441,\n  45589, 36981, 150699, 24146, 59709, 81228, 22766, 66205, 10765, 37617, 9373, 49056, 736, 99650, 67177, 559,\n  35218, 47852, 5803, 7500, 63479, 81545, 7010, 84110, 51987, 114840, 24620, 8163, 24275, 88890, 163648, 134506,\n  63588, 23081, 142828, 65953, 55361, 67896, 114542, 9127, 92929, 19906, 111372, 38827, 81964, 49480, 42737, 12268,\n  4658, 112744, 27101, 301, 20122, 14673, 94899, 206599, 12330, 76979, 31622, 74309, 44058, 128517, 56436, 14073,\n  13065, 23339, 21315, 103178, 311456, 16278, 14920, 198146, 72224, 420550, 41727, 777, 8337, 104777, 24184, 25793,\n  211229, 26740, 119387, 100011, 38979, 100498, 23747, 45421, 22590, 8336, 22845, 14459, 138478, 53166, 57049, 20497,\n  52757, 82151, 2460, 50662, 32595, 50914, 9779, 140220, 133600, 20746, 24104, 216217, 8838, 122361, 11593, 28760,\n  31549, 816, 28187, 5501, 94412, 60114, 28281, 153116, 43391, 8488, 90398, 47350, 90056, 27922, 39104, 94601,\n  1585, 8966, 10638, 10171, 94802, 8318, 14529, 110590, 127271, 73877, 11430, 2830, 6223, 27005, 16811, 21014,\n  31889, 241922, 77341, 77320, 137038, 18139, 50332, 123737, 132910, 94235, 16743, 82586, 2165, 47123, 21947, 68249,\n  57616, 1395, 50542, 129396, 230152, 209588, 78454, 147757, 6080, 219127, 4180, 9021, 10748, 81158, 64973, 29190,\n  36737, 228622, 98804, 17829, 74579, 16417, 183595, 101604, 134062, 17306, 3644, 19380, 50525, 72396, 159940, 117382,\n  180532, 78857, 55739, 98983, 119270, 38236, 8379, 25607, 34556, 33219, 34803, 98799, 76155, 37523, 75966, 6648,\n  82394, 4084, 98676, 3845, 52595, 13580, 58240, 1922, 29258, 10438, 105425, 26130, 31435, 85783, 87939, 115936,\n  87820, 77028, 181067, 59464, 67996, 9819, 19251, 40273, 26943, 18184, 84410, 39092, 183878, 10146, 8789, 33548,\n  38007, 71479, 208117, 24698, 2410, 113333, 13181, 6605, 13526, 49339, 7061, 64271, 180297, 17014, 2971, 168674,\n  69856, 33945, 110699, 265836, 3503, 115232, 136418, 50952, 187396, 40638, 4807, 156118, 167700, 13849, 57520, 81231,\n  7838, 11640, 12170, 5741, 16701, 16659, 125534, 15317, 9199, 52795, 24781, 6825, 56267, 83437, 204926, 74158,\n  3661, 59223, 14235, 194403, 37407, 20530, 23146, 12357, 65994, 11931, 56380, 259451, 23767, 79929, 18293, 110440,\n  5708, 110566, 1381, 116346, 62508, 48437, 65252, 42437, 221700, 23408, 20821, 78800, 67088, 5214, 80178, 40659,\n  86978, 3139, 87525, 38590, 46776, 96503, 7226, 124649, 84434, 21210, 52718, 39533, 32088, 11610, 48883, 48993,\n  5612, 36169, 74879, 111083, 9149, 156582, 123119, 79206, 88244, 36781, 6276, 121833, 21685, 67708, 562, 32969,\n  95151, 49905, 11821, 49025, 46750, 363738, 60238, 7126, 189612, 23817, 135205, 79928, 2979, 54100, 109851, 73077,\n  506311, 12222, 150050, 90908, 2594, 81368, 57202, 25388, 3628, 28737, 8460, 86804, 40074, 10968, 92876, 5499,\n  105039, 2695, 47351, 172227, 78243, 121715, 27084, 78833, 28523, 73676, 464, 68232, 6651, 130040, 127800, 48799,\n  38058, 37843, 5052, 96560, 71999, 133710, 27378, 191856, 30992, 147444, 29030, 53817, 12764, 121245, 60444, 26643,\n  68261, 39242, 16699, 155639, 108991, 19332, 42990, 80805, 6165, 95293, 82667, 375680, 26450, 33561, 31227, 248811,\n  61961, 7643, 142037, 7514, 13400, 107606, 34976, 50694, 22426, 151745, 198926, 23162, 7490, 69785, 8890, 277275,\n  60890, 30537, 37432, 49609, 109623, 3559, 109101, 157822, 2070, 19341, 18250, 88785, 12958, 30738, 47073, 37163,\n  50355, 61092, 55664, 18154, 67979, 11874, 16017, 16832, 257096, 63841, 46836, 35435, 7213, 39562, 77677, 20617,\n  42578, 32643, 98441, 139236, 52121, 64862, 68450, 282715, 35716, 2199, 97719, 13226, 65461, 127411, 66119, 58368,\n  7516, 8148, 55990, 6956, 124758, 9239, 3153, 62014, 39268, 163536, 46944, 43855, 302, 6682, 207287, 15207,\n  64712, 56673, 22223, 78977, 14977, 22415, 238137, 21853, 1467, 6198, 107406, 33222, 219452, 21709, 119024, 34391,\n  2840, 1157, 34974, 22756, 34229, 50276, 12565, 13069, 11121, 120511, 69104, 16271, 21602, 41109, 62931, 15756,\n  19270, 52519, 17405, 24235, 63574, 6789, 324542, 136115, 8024, 15348, 17892, 47562, 1532, 70350, 35583, 71230,\n  17331, 3309, 46253, 26611, 79839, 99277, 117997, 65915, 78885, 32688, 25828, 19004, 52029, 50625, 9248, 17400,\n  180767, 38886, 29357, 68385, 57957, 5909, 37897, 76460, 6069, 20372, 5141, 50706, 91265, 87494, 32650, 234722,\n  61380, 65571, 34714, 45634, 55767, 26279, 65231, 106901, 8927, 283, 16073, 103627, 32881, 18500, 150143, 38519,\n  287603, 17485, 853, 34227, 22149, 485770, 39484, 23090, 35029, 31381, 51798, 78528, 68876, 38737, 36453, 236345,\n  6428, 12075, 1812, 27252, 199567, 13210, 14175, 2341, 46926, 622, 28321, 38887, 13412, 97447, 15960, 114377,\n  104132, 9242, 11929, 173622, 21434, 107890, 50877, 49000, 366616, 878, 47215, 100194, 45060, 104282, 141046, 35203,\n  110046, 219551, 85771, 84943, 81924, 108674, 74715, 12699, 128910, 32654, 6935, 167969, 45886, 48348, 61573, 81800,\n  52821, 34060, 4242, 56585, 130416, 152475, 207991, 171093, 29416, 186493, 59505, 34175, 77342, 15376, 12990, 99902,\n  21762, 74649, 5423, 65516, 67329, 11829, 84139, 241464, 121432, 34713, 85742, 187730, 79924, 6579, 77428, 24207,\n  11724, 110158, 32973, 112280, 38625, 29086, 83056, 3907, 81006, 88966, 16041, 71498, 102033, 825, 26490, 10662,\n  28338, 69696, 48093, 65072, 13326, 134496, 36471, 61179, 3250, 65892, 28533, 314299, 82056, 101706, 7567, 64574,\n  82526, 61878, 9810, 151779, 38212, 40297, 107886, 9224, 21112, 83917, 6731, 127019, 12382, 20817, 46524, 7526,\n  111495, 45460, 29077, 14716, 3263, 2776, 32734, 117361, 7414, 4263, 57298, 257932, 86274, 32666, 76331, 77614,\n  93490, 72983, 103093, 41179, 40844, 68943, 116063, 4284, 30224, 160402, 11643, 2596, 45212, 159780, 15217, 214380,\n  24019, 8607, 90193, 25716, 48411, 93174, 97695, 187108, 71367, 40950, 51935, 149531, 24941, 24881, 32250, 21110,\n  76729, 22520, 11901, 44780, 57776, 164255, 34822, 2491, 3769, 55143, 92422, 73099, 38114, 63649, 64110, 240212,\n  202019, 107803, 52205, 22566, 197745, 21239, 67424, 3015, 31953, 41591, 28285, 76949, 237533, 40323, 293650, 232903,\n  33270, 251467, 176985, 24164, 201580, 38564, 156136, 59809, 255648, 80672, 240807, 90052, 100798, 140429, 105726, 10493,\n  44741, 91259, 58405, 10701, 32241, 77032, 19646, 28622, 98468, 71458, 27207, 84089, 106931, 6037, 21906, 10904,\n  10085, 71638, 18970, 12327, 15090, 155131, 570, 57108, 170358, 184285, 20866, 9713, 33154, 17127, 1501, 66684,\n  66787, 23409, 12207, 87238, 18819, 102498, 86382, 527, 69760, 37855, 28336, 40134, 25061, 472, 119634, 283057,\n  234005, 72393, 63914, 13795, 82660, 81969, 21503, 42354, 6295, 133186, 18259, 34816, 131975, 111080, 119914, 6227,\n  16874, 28237, 109468, 13462, 9076, 139909, 173435, 140650, 4094, 59998, 72608, 46830, 25005, 51675, 154533, 146622,\n  17740, 201648, 55660, 9846, 40908, 71868, 61190, 22963, 19533, 38545, 29300, 44101, 220019, 36593, 119629, 19665,\n  44330, 108853, 121109, 89385, 99792, 69972, 191515, 2180, 50040, 29432, 18069, 77343, 19619, 123487, 256669, 76631,\n  13950, 296596, 1597, 129830, 55228, 1167, 160849, 18579, 24423, 59175, 11879, 3471, 31253, 98945, 59597, 119156,\n  95308, 79988, 122939, 9124, 103177, 84168, 28969, 42697, 184795, 16008, 50199, 163322, 28590, 6494, 60509, 135058,\n  82285, 113064, 23838, 104824, 5059, 80031, 14223, 11317, 3210, 366149, 3627, 19284, 75525, 82629, 76433, 17398,\n  49894, 214741, 20201, 17960, 70007, 4469, 41765, 94300, 56178, 35669, 3059, 41367, 10580, 141243, 173468, 16012,\n  36051, 146008, 6174, 145965, 139681, 7800, 110797, 7035, 21617, 33212, 25669, 13652, 98736, 51362, 38127, 761,\n  3555, 31131, 121667, 108117, 106306, 16338, 122989, 66956, 164189, 15339, 82154, 24542, 37352, 59255, 110432, 16682,\n  63915, 228093, 103923, 44235, 47824, 168857, 93914, 68839, 24883, 16577, 41048, 298253, 145530, 10841, 15100, 232215,\n  61904, 5837, 125998, 35069, 28444, 58263, 14138, 85433, 11483, 143759, 34386, 73214, 19837, 19344, 20822, 8109,\n  145446, 6859, 87391, 91712, 30420, 47415, 145201, 71828, 112972, 41730, 28283, 170664, 85939, 141658, 70333, 124812,\n  11835, 2977, 84882, 9672, 191233, 7890, 112346, 19182, 2262, 159541, 16980, 12043, 20705, 67775, 24464, 209857,\n  58630, 270281, 312308, 672, 1753, 46565, 82263, 33826, 148334, 55096, 120377, 20727, 1197, 4386, 5122, 5934,\n  144714, 56754, 767, 46661, 6887, 16011, 3279, 258372, 11223, 169694, 25814, 42211, 107667, 126684, 25371, 63630,\n  60879, 20178, 24287, 89912, 77914, 7710, 134186, 56763, 4151, 13041, 161212, 270864, 57417, 45691, 139371, 26391,\n  81594, 36360, 47120, 2894, 96681, 102899, 35717, 25696, 169430, 114986, 52356, 18242, 1784, 96852, 53673, 123031,\n  20444, 64937, 107271, 5906, 95138, 129637, 2569, 61992, 254041, 52369, 35639, 117271, 27038, 96678, 122654, 59573,\n  596, 42424, 23209, 68851, 7117, 86087, 20253, 129099, 72808, 8253, 236489, 10640, 13759, 33512, 12847, 68886,\n  3353, 51042, 54954, 88292, 126776, 35156, 39154, 26608, 21074, 3070, 132841, 36168, 55322, 31705, 21862, 73120,\n  27081, 96769, 100873, 33028, 36942, 66613, 15763, 33080, 39547, 359328, 23281, 74973, 139830, 177478, 3930, 86190,\n  179275, 148581, 122851, 1431, 4453, 146240, 239658, 55165, 713, 274, 94886, 73822, 8722, 26916, 78701, 67472,\n  71399, 84867, 279082, 235, 19204, 9012, 17044, 1382, 25785, 9114, 9013, 22506, 22794, 59383, 85470, 19980,\n  23923, 137385, 187894, 268567, 104114, 23511, 100004, 3566, 11291, 14071, 28270, 6390, 25458, 111325, 4382, 14700,\n  102309, 41377, 7731, 3431, 88396, 37035, 150133, 15643, 75288, 106289, 2777, 70941, 230440, 48316, 25116, 63976,\n  206396, 108620, 37151, 125702, 104551, 113811, 119436, 24384, 58447, 4370, 24435, 50488, 130857, 124278, 18387, 112999,\n  37247, 26953, 4538, 30899, 94734, 101716, 114630, 179272, 31548, 49963, 38658, 24697, 176529, 190718, 62623, 4144,\n  226077, 300866, 53306, 58044, 65159, 50710, 63541, 128908, 20104, 14650, 142818, 6874, 10096, 32173, 44239, 137621,\n  66881, 7672, 38865, 45456, 94191, 63198, 21654, 91466, 237909, 17433, 116850, 23799, 27109, 61860, 54732, 29400,\n  37404, 38958, 56953, 81848, 1520, 34230, 4135, 97322, 27421, 31838, 21240, 26409, 25220, 95856, 25488, 56829,\n  113003, 1614, 126, 147771, 23423, 14373, 49546, 49817, 24884, 86146, 38695, 42648, 50585, 27147, 193187, 63419,\n  6286, 46605, 45100, 136759, 231877, 33670, 291180, 89716, 150800, 7898, 65327, 43541, 11789, 18785, 15127, 92917,\n  3226, 15816, 97588, 148034, 90004, 14309, 143531, 120478, 60642, 53426, 39390, 100241, 5053, 47683, 6092, 593,\n  202400, 56336, 48570, 70208, 61442, 84297, 267745, 16889, 132531, 63667, 41905, 51392, 175329, 104653, 24808, 36173,\n  57138, 33742, 25613, 30817, 30116, 31004, 44827, 110763, 103847, 17367, 29721, 39397, 9973, 205794, 68528, 30464,\n  75367, 6167, 3182, 143724, 16452, 179801, 44257, 60822, 32360, 50545, 12909, 46081, 59119, 5222, 30976, 74231,\n  21246, 4141, 25122, 44442, 10191, 152872, 60307, 6528, 164804, 64131, 52788, 203594, 23305, 109174, 33076, 95817,\n  61051, 86156, 81508, 7369, 37348, 36961, 59494, 6598, 154530, 185385, 273203, 32275, 13214, 173245, 225200, 147861,\n  5468, 57563, 4172, 27997, 50403, 22253, 19697, 3607, 66754, 52590, 44551, 213850, 130976, 17828, 3407, 9965,\n  50559, 26417, 20257, 207504, 80515, 11064, 40718, 15057, 14436, 175751, 41158, 92093, 155492, 7541, 10270, 291817,\n  84017, 120763, 131324, 93378, 5472, 128009, 141787, 144291, 43107, 11112, 64353, 20597, 41240, 29285, 7429, 182466,\n  2890, 9936, 4645, 26881, 90431, 118441, 79842, 3776, 70188, 15995, 35014, 25366, 382, 86180, 8302, 14503,\n  76234, 35504, 66433, 25753, 48040, 723, 30764, 17878, 50211, 19521, 103260, 1405, 281038, 12735, 16639, 6710,\n  237007, 94746, 1277, 43465, 32115, 22848, 2422, 33178, 142178, 8284, 101691, 76065, 1536, 28121, 15450, 56901,\n  22761, 37468, 57257, 336438, 96429, 11719, 1339, 3953, 1811, 118327, 157186, 30335, 31243, 47049, 38381, 35215,\n  1679, 161267, 29632, 17925, 49143, 35370, 24607, 25287, 55209, 163958, 71839, 121011, 17402, 66842, 70491, 9817,\n  235054, 64483, 2945, 109216, 61494, 17696, 18951, 2128, 7462, 147844, 39181, 147057, 77030, 240256, 162500, 11568,\n  34925, 71572, 23258, 33113, 87609, 57032, 31715, 36819, 78002, 84868, 113775, 145786, 9499, 100577, 142045, 35652,\n  9027, 79217, 24550, 93584, 73289, 21361, 23766, 32016, 201078, 16815, 17921, 88359, 101379, 56165, 78318, 16489,\n  63544, 35992, 463196, 76115, 27666, 30809, 69632, 109853, 5469, 105799, 39876, 72304, 10642, 81042, 91087, 82633,\n  30029, 3451, 39557, 9601, 49816, 43559, 44570, 24502, 132979, 33107, 74019, 68885, 95620, 43778, 22107, 80168,\n  58086, 115607, 53717, 44189, 351930, 66820, 12176, 349081, 116300, 90000, 19710, 15777, 2110, 12072, 7937, 100473,\n  2043, 23575, 189759, 185285, 30845, 204583, 141343, 98357, 6154, 24850, 10033, 166394, 11279, 9588, 63358, 66619,\n  16727, 29173, 29298, 22369, 4122, 1113, 93975, 2373, 2277, 6248, 25424, 144362, 27281, 10791, 31674, 136149,\n  4971, 5091, 109071, 28111, 3650, 74833, 33069, 99452, 39060, 31553, 103088, 6083, 61970, 35073, 42159, 39447,\n  65951, 82331, 17467, 274725, 39674, 192758, 99239, 74038, 75686, 221820, 29305, 145449, 38151, 141438, 74464, 8701,\n  11370, 40356, 35644, 219664, 130809, 33760, 32012, 65616, 177895, 96022, 44668, 36789, 32665, 181104, 107837, 21508,\n  63725, 164836, 5861, 54679, 122267, 20346, 83568, 92187, 7857, 2055, 91980, 45529, 39618, 46036, 44095, 43635,\n  118483, 55547, 30683, 9026, 44792, 15349, 9572, 31258, 157755, 62006, 13108, 41088, 178624, 42632, 108286, 57576,\n  136994, 75081, 20067, 213455, 24260, 59651, 156381, 28506, 41308, 51673, 109778, 35539, 22471, 31926, 60313, 141628,\n  12404, 177355, 186764, 8270, 21707, 53992, 20210, 175836, 12486, 35418, 68014, 148679, 30473, 15016, 74384, 2134,\n  52781, 50454, 39034, 16954, 50246, 149675, 90227, 90639, 20247, 105483, 42840, 84149, 39065, 6265, 28880, 153724,\n  909, 158044, 52031, 189995, 56825, 89732, 14963, 79537, 103158, 77948, 193052, 23904, 128603, 35173, 103922, 50144,\n  31542, 77257, 10193, 261793, 1089, 61599, 83679, 56827, 41935, 34672, 1669, 32964, 32744, 192677, 84032, 84980,\n  12428, 221609, 53227, 16700, 37963, 17089, 18238, 394, 84420, 5956, 18576, 76244, 33134, 135230, 52741, 9872,\n  72921, 31874, 99863, 233313, 208449, 55160, 197159, 30521, 42622, 223154, 80731, 30948, 168151, 65889, 42412, 23756,\n  127335, 110467, 63177, 112577, 147107, 45515, 164144, 8147, 46699, 185194, 12846, 5150, 38216, 15288, 59319, 209454,\n  12591, 1396, 2748, 213994, 94342, 174981, 9164, 7542, 85814, 79347, 3079, 43844, 31423, 356287, 9839, 64046,\n  24944, 181828, 21425, 105878, 2605, 75931, 24468, 28548, 87542, 72786, 33573, 9795, 67473, 52048, 18016, 14242,\n  192551, 248913, 95190, 112505, 4496, 31534, 647, 69179, 56321, 161887, 101346, 161387, 91819, 19636, 11691, 343909,\n  17630, 27347, 151697, 2034, 6300, 29522, 1714, 19625, 256183, 30736, 41363, 146757, 114569, 40479, 15465, 2041,\n  202090, 13378, 121579, 195034, 33209, 67524, 29264, 68859, 35289, 9132, 124566, 11834, 34897, 23701, 17860, 41618,\n  24967, 44272, 55538, 9772, 40520, 67880, 13672, 5691, 43470, 43146, 59144, 18400, 5344, 99162, 20283, 21126,\n  10199, 286754, 157014, 57352, 34810, 134947, 22482, 13869, 14283, 3260, 39498, 50188, 10381, 85601, 130984, 2037,\n  10017, 115073, 41784, 35604, 62923, 26892, 47516, 14669, 49924, 117650, 194265, 354551, 23233, 13596, 123144, 1265,\n  64539, 13442, 26226, 983, 13051, 82353, 130403, 88007, 35686, 34010, 54566, 1384, 19698, 66960, 132131, 70625,\n  11570, 29263, 50727, 110849, 135555, 4078, 19496, 118621, 120868, 32514, 188800, 161569, 44924, 24501, 105062, 111736,\n  87065, 308308, 30954, 10824, 52318, 42959, 6951, 9830, 52335, 136608, 31619, 248564, 47586, 44794, 93623, 23889,\n  140906, 33780, 30924, 50467, 245885, 88351, 90491, 46859, 109834, 48432, 37672, 25466, 78668, 2856, 51536, 53156,\n  9065, 1466, 166162, 149156, 46990, 132982, 13320, 58757, 25258, 298, 22182, 22431, 72022, 12639, 39287, 100922,\n  61243, 26416, 20111, 29015, 40838, 101281, 1681, 96725, 4545, 9838, 11567, 53063, 146387, 341555, 34114, 20033,\n  10537, 143943, 157042, 19848, 11557, 42577, 57214, 27640, 17470, 179231, 12836, 195453, 36930, 46768, 313283, 35513,\n  68104, 39738, 86287, 104695, 46711, 4413, 25433, 60207, 24264, 18023, 111517, 45375, 79401, 20865, 226464, 27841,\n  81043, 41593, 204624, 25039, 18225, 20244, 170119, 22971, 120488, 189962, 74489, 159216, 24746, 58887, 156006, 65825,\n  84338, 9196, 33923, 25183, 81652, 80939, 67675, 13888, 28266, 18067, 6244, 68109, 13776, 69394, 105951, 38639,\n  21878, 12025, 34471, 14990, 46973, 71457, 38263, 85696, 1047, 50364, 18100, 216604, 230465, 75354, 183859, 29794,\n  73357, 27757, 58872, 122255, 95777, 108826, 40410, 784, 24973, 20666, 10256, 47191, 210160, 225901, 92342, 20564,\n  62210, 15357, 81223, 47348, 58404, 136370, 87219, 182975, 110633, 231019, 5557, 114090, 169651, 152695, 39659, 10697,\n  6937, 15420, 20820, 60557, 41870, 16729, 133108, 27320, 9909, 108465, 192359, 16498, 26822, 325219, 33762, 172522,\n  191062, 29716, 26412, 2097, 76553, 124900, 73484, 69292, 27519, 32870, 80707, 31445, 96256, 2314, 70692, 4058,\n  239070, 10821, 41413, 95014, 2478, 35503, 100322, 236799, 205678, 14889, 48762, 33792, 67955, 41529, 176353, 46713,\n  58532, 62997, 179242, 111905, 20601, 174290, 2473, 21736, 50120, 80978, 284366, 50101, 19148, 151810, 71043, 69116,\n  78501, 13969, 1032, 82510, 195724, 299148, 161084, 64084, 110740, 1411, 917, 60413, 8249, 4449, 10658, 28635,\n  109665, 28104, 30492, 131970, 27446, 20499, 71921, 6814, 30568, 42498, 32084, 9024, 57631, 161122, 111788, 30728,\n  31425, 149345, 39864, 222740, 49752, 100795, 1957, 8606, 32820, 154188, 210448, 11604, 65504, 95671, 26463, 47243,\n  50079, 54263, 5121, 8044, 3663, 137567, 25561, 3942, 102256, 169116, 15687, 13454, 219898, 132483, 29600, 88533,\n  23849, 44708, 41198, 121112, 211315, 30822, 9110, 14874, 14645, 19626, 55733, 131599, 4359, 111315, 126666, 2148,\n  91767, 12358, 87695, 65691, 9528, 60012, 39959, 13807, 12449, 60771, 165784, 80519, 49366, 58389, 57808, 299274,\n  7941, 94765, 85206, 7523, 49763, 49374, 51040, 4812, 107848, 65929, 26938, 37068, 8930, 3191, 21092, 30208,\n  27086, 3979, 56324, 7705, 50686, 214096, 86621, 19678, 9744, 23869, 7714, 49971, 10447, 184404, 140264, 142028,\n  81935, 37, 202638, 112289, 39513, 2767, 321704, 16548, 46514, 195686, 36295, 202214, 1670, 15988, 55688, 23659,\n  29229, 21347, 47074, 163169, 6172, 123566, 96740, 17816, 22312, 79026, 119292, 332453, 137280, 39511, 41020, 11253,\n  97759, 113084, 67597, 99824, 9806, 100148, 19488, 91425, 14445, 10529, 86640, 119945, 22976, 1450, 21578, 8642,\n  56458, 34421, 23850, 768, 73391, 11534, 64803, 221561, 34983, 50337, 3048, 86930, 93760, 26610, 60674, 110754,\n  174219, 46834, 94439, 84023, 52573, 9508, 44750, 79062, 33149, 17148, 39204, 179378, 59747, 33608, 33811, 72388,\n  2429, 27413, 53657, 1209, 136277, 15611, 10977, 18270, 75123, 18305, 73001, 65038, 165263, 120353, 2992, 111846,\n  91040, 8711, 81068, 66699, 7446, 2463, 19348, 218110, 57632, 110134, 4755, 34160, 48633, 72482, 249, 46281,\n  97140, 33462, 11352, 40714, 246081, 28361, 46130, 98911, 84766, 36082, 51109, 34148, 151684, 2936, 76243, 94584,\n  79918, 12929, 460, 42550, 93268, 134209, 37100, 16896, 120346, 21124, 21414, 16833, 54059, 191099, 201522, 102272,\n  54875, 84073, 3895, 2436, 77858, 10986, 154654, 5409, 32996, 56761, 49453, 346111, 103590, 58996, 21227, 37368,\n  45276, 61068, 74997, 6502, 11968, 190483, 2851, 4516, 19600, 140163, 119135, 18019, 25849, 122333, 26208, 1253,\n  17159, 181641, 62390, 34359, 132907, 44619, 54140, 33110, 42828, 34002, 172033, 159324, 16817, 22862, 123567, 246066,\n  4913, 39475, 57181, 11836, 99462, 39965, 20158, 295279, 103303, 15191, 12523, 31976, 27395, 89881, 26366, 36188,\n  5737, 4209, 27937, 51814, 74184, 36752, 26910, 75407, 20749, 114757, 80471, 12921, 21160, 166449, 33748, 61876,\n  14377, 111451, 28376, 51624, 77062, 4759, 31489, 8667, 131403, 35903, 220511, 203998, 158735, 57711, 23070, 54147,\n  10999, 74048, 6529, 32621, 27799, 92313, 30581, 51320, 77785, 63583, 107525, 10443, 9320, 51511, 19427, 121556,\n  34366, 33241, 41042, 128493, 51593, 169332, 49002, 178217, 61070, 171, 83380, 12254, 33746, 11674, 26248, 60875,\n  47048, 3811, 107521, 60945, 29268, 895, 49016, 21834, 36675, 58110, 5989, 35500, 30262, 101556, 212477, 10165,\n  53297, 39091, 41022, 9791, 9832, 14567, 19009, 19068, 82000, 3875, 37180, 186532, 20188, 14835, 74440, 7293,\n  122292, 25795, 49957, 53535, 39917, 123027, 87789, 17677, 7331, 89007, 2300, 35386, 18160, 6491, 51684, 21618,\n  68301, 13263, 285552, 298645, 185935, 298900, 126950, 20478, 134830, 182343, 19829, 12011, 15031, 116530, 76262, 15413,\n  4935, 40625, 164987, 49386, 10004, 44236, 39740, 43773, 165845, 43832, 56688, 2815, 185534, 81592, 56245, 1437,\n  46923, 129294, 23698, 129303, 30109, 58443, 14904, 122152, 44134, 27588, 5195, 37064, 122631, 43995, 372314, 387837,\n  18874, 47379, 277, 22234, 22903, 9497, 40286, 16763, 112790, 89200, 17537, 20682, 26561, 7025, 122064, 142767,\n  18549, 18358, 38049, 62248, 348902, 41526, 76877, 7321, 82871, 209789, 117544, 83895, 140345, 134154, 56621, 61740,\n  255565, 75916, 191295, 230290, 135390, 60673, 50087, 3175, 63556, 59497, 24739, 20520, 103747, 5481, 54327, 78229,\n  145055, 27141, 91354, 101583, 179600, 37968, 51679, 147604, 145662, 21758, 1468, 32673, 296111, 37226, 10401, 244665,\n  61661, 62743, 33793, 21290, 211987, 31229, 36498, 109014, 23952, 5664, 68430, 117386, 52342, 279268, 1383, 16178,\n  126343, 21917, 67779, 80496, 48450, 28456, 37591, 11298, 32919, 75914, 48144, 42628, 44277, 135351, 43365, 68058,\n  82185, 31919, 36044, 33488, 9591, 46231, 87880, 19683, 62139, 164744, 13946, 67759, 205363, 64547, 24950, 14744,\n  376969, 125444, 36207, 34787, 394874, 9391, 29970, 31633, 108461, 29004, 95508, 16726, 18040, 1474, 161241, 87333,\n  120885, 78180, 1312, 156395, 14798, 49849, 30378, 61417, 39863, 215063, 70563, 17245, 16571, 4898, 117368, 45833,\n  16794, 119877, 56493, 56667, 58271, 114337, 11790, 85404, 81025, 1115, 70207, 196483, 55206, 75037, 286099, 52410,\n  14640, 28529, 108282, 19807, 118656, 48399, 13926, 14142, 6361, 12773, 19250, 37526, 44092, 14182, 3300, 24788,\n  85970, 100512, 5089, 93502, 6262, 1470, 30526, 6736, 153863, 47611, 5419, 5204, 108244, 23917, 15546, 201845,\n  180200, 9222, 61948, 51408, 72264, 60586, 13704, 87398, 79947, 75005, 105096, 35548, 38044, 163143, 46082, 43224,\n  10050, 223780, 42559, 63853, 5735, 24066, 14942, 134623, 61221, 29913, 32948, 152876, 80712, 15291, 19415, 47687,\n  5471, 16468, 19049, 875, 115689, 4926, 141440, 86953, 11391, 96224, 41116, 29097, 11661, 9977, 16554, 59410,\n  184257, 4916, 59752, 123609, 20010, 44968, 127762, 3094, 60116, 31503, 22578, 77738, 30320, 46196, 21138, 9271,\n  19327, 143121, 101458, 26727, 134598, 33180, 123460, 124908, 45455, 1725, 24171, 1975, 27542, 3320, 81552, 83876,\n  18004, 21115, 5583, 180685, 125092, 158497, 38663, 698, 452272, 14139, 42821, 65816, 1549, 15658, 88083, 33362,\n  91523, 14865, 6630, 176968, 46567, 36614, 16181, 20495, 180063, 61084, 102959, 47886, 156026, 28065, 8610, 114642,\n  2608, 73306, 8419, 8283, 11174, 348806, 348428, 8950, 58848, 3040, 12266, 87926, 37788, 7990, 32289, 57688,\n  65907, 28786, 408131, 92280, 80194, 123266, 156847, 70303, 30490, 3057, 70321, 174337, 5786, 5649, 71496, 65938,\n  40775, 32358, 26015, 20333, 119519, 11504, 86693, 47220, 106241, 179717, 45913, 80350, 11323, 10871, 42117, 44122,\n  156297, 8264, 34534, 74130, 8425, 20168, 19195, 95738, 61495, 86901, 91525, 56486, 2617, 21807, 76315, 32644,\n  29675, 132700, 187527, 94065, 2425, 48583, 146946, 19438, 59886, 21696, 112525, 185026, 112582, 107474, 21779, 520,\n  49142, 27517, 27611, 26275, 59618, 68585, 34382, 269197, 4863, 78549, 51824, 198549, 50597, 91695, 79132, 75817,\n  86710, 86822, 13732, 13511, 50650, 3411, 18621, 279970, 168632, 42104, 4038, 32572, 27693, 8881, 65349, 54005,\n  85641, 7547, 8478, 41579, 83643, 30439, 9416, 5869, 18993, 49065, 16745, 12818, 25768, 25667, 58681, 44991,\n  84284, 204061, 61201, 50637, 28090, 5082, 34635, 107900, 93592, 201432, 170018, 36616, 36627, 200119, 6933, 53709,\n  312804, 36724, 17312, 3158, 43381, 5167, 26919, 23400, 9887, 26673, 28631, 66018, 9402, 230847, 24255, 102572,\n  100931, 154504, 170013, 201115, 97165, 34404, 357, 179763, 3311, 108, 53023, 171976, 173330, 95887, 211961, 23099,\n  66805, 113640, 18352, 46361, 28935, 107138, 46668, 51711, 4963, 45839, 54816, 7932, 184460, 1611, 103983, 141455,\n  3201, 270150, 175156, 43537, 78102, 12443, 37971, 414715, 19126, 6340, 130684, 52220, 21607, 284399, 102147, 95375,\n  37496, 136001, 219663, 16689, 24938, 7390, 85416, 109375, 22615, 13046, 57826, 15407, 16153, 137199, 62614, 211231,\n  32862, 32298, 16119, 175170, 134792, 46807, 3951, 27849, 153318, 105648, 120022, 22136, 61120, 56637, 91935, 136213,\n  6067, 4114, 134337, 42278, 2812, 85502, 6569, 159359, 12826, 125922, 25619, 62295, 12792, 79563, 100822, 11222,\n  23825, 49867, 29919, 872, 37559, 4587, 112918, 136034, 64662, 126530, 131167, 14498, 202250, 56243, 23092, 121186,\n  102694, 22868, 89387, 64332, 155488, 39744, 156087, 176575, 85881, 39781, 47236, 12249, 149193, 26406, 1951, 155992,\n  46233, 184401, 41366, 8036, 65383, 139356, 189733, 213982, 15521, 49577, 159577, 2521, 106982, 58186, 55467, 51702,\n  11358, 8682, 17785, 29934, 176786, 109645, 122828, 41281, 25752, 29762, 94798, 25186, 39717, 17547, 52095, 8022,\n  34208, 129165, 49581, 119910, 24510, 12967, 247959, 15952, 32464, 81364, 137598, 14637, 77742, 123065, 16222, 61255,\n  39371, 43724, 57019, 24082, 72028, 104622, 27929, 89643, 138229, 10055, 122728, 41443, 60688, 136821, 3274, 7812,\n  71386, 67606, 3295, 100611, 102834, 3428, 102932, 35148, 132477, 142278, 25402, 33288, 2208, 132017, 146591, 21568,\n  11548, 73095, 756, 36537, 63670, 246597, 20653, 141984, 271279, 12711, 23553, 27463, 28351, 23214, 77413, 75614,\n  30338, 23444, 235758, 28565, 38620, 46299, 28150, 5788, 32491, 43962, 168549, 29503, 99845, 200267, 70204, 12986,\n  143885, 941, 50969, 55284, 152266, 187576, 3532, 57733, 13252, 143761, 54421, 60086, 2825, 16104, 18211, 69263,\n  178663, 103869, 8702, 98648, 108097, 15531, 162361, 61008, 1775, 84427, 119944, 23016, 78201, 82106, 24005, 236154,\n  14897, 34582, 63819, 36233, 113573, 102759, 41120, 42814, 163346, 29508, 164161, 54185, 62292, 9036, 39296, 6640,\n  171129, 26814, 9984, 294489, 22183, 40191, 69406, 90599, 96598, 18066, 85600, 87824, 38733, 247243, 7387, 161131,\n  64971, 38204, 92974, 85988, 166776, 29624, 69098, 72876, 117445, 68760, 22363, 52379, 9968, 148571, 26622, 186006,\n  146393, 31071, 60120, 13612, 44677, 19448, 68338, 7874, 74867, 64490, 29421, 124401, 20908, 16585, 60838, 7384,\n  97328, 50410, 20319, 19156, 12761, 5816, 351477, 2786, 25656, 165861, 173732, 7123, 26785, 149182, 20793, 27143,\n  9148, 25949, 18006, 7795, 112344, 192537, 14513, 5682, 26115, 40202, 70306, 48084, 99176, 7153, 108473, 44332,\n  110121, 9428, 8180, 27860, 22437, 60581, 205918, 99858, 49547, 116936, 35145, 8901, 6180, 5175, 18803, 16208,\n  79320, 28649, 38726, 54774, 5835, 30655, 86440, 25966, 31392, 70939, 20843, 111672, 43328, 94380, 88995, 15321,\n  33377, 2984, 16233, 43332, 75870, 19044, 156499, 127031, 119860, 122514, 65060, 17517, 69497, 64192, 44374, 6455,\n  80273, 40630, 92629, 46425, 7325, 37171, 79359, 140226, 155219, 32133, 40753, 22059, 43167, 16881, 38630, 50086,\n  111173, 44484, 5941, 101815, 28347, 373200, 356553, 74832, 20222, 177340, 108041, 180076, 3763, 27194, 171523, 10928,\n  71752, 148205, 39888, 74776, 55041, 6358, 148477, 294704, 47252, 52974, 89175, 4682, 14618, 39392, 58585, 50619,\n  28088, 100276, 36110, 31596, 15012, 93646, 4953, 6629, 97805, 46485, 18765, 9249, 194698, 52307, 85352, 33772,\n  54636, 209534, 25378, 210, 2036, 151416, 255499, 40976, 41349, 134520, 150432, 11157, 6173, 62536, 56094, 34646,\n  96604, 85745, 27243, 6622, 61530, 18737, 8699, 115599, 51859, 41290, 143452, 40201, 43782, 14061, 74656, 29726,\n  13361, 136026, 23149, 4742, 24334, 18683, 24925, 85168, 22668, 224320, 16450, 76194, 24792, 35366, 2119, 56976,\n  7070, 16021, 24155, 51463, 23441, 3622, 46105, 126702, 16789, 276646, 86393, 21589, 3209, 111511, 12134, 13169,\n  36211, 227939, 16170, 16148, 208475, 99712, 10351, 419718, 26242, 79670, 44112, 4569, 32880, 339579, 30648, 97335,\n  122181, 70716, 13387, 85134, 182407, 26932, 273051, 12495, 21444, 28811, 92202, 62532, 31060, 48235, 131669, 47086,\n  88459, 54224, 9712, 80410, 29929, 35255, 5466, 174314, 77907, 10011, 1541, 31577, 12716, 153148, 263135, 100373,\n  10934, 79991, 36589, 35238, 97005, 23398, 171539, 8580, 20599, 128843, 2723, 53858, 31690, 44768, 11242, 19051,\n  8403, 12581, 30429, 200097, 58445, 64447, 17535, 77337, 30303, 7870, 87634, 120825, 22700, 347, 32033, 8588,\n  10336, 47933, 95540, 18314, 86731, 43480, 122415, 48270, 103115, 61655, 3386, 11664, 337709, 27487, 202769, 59646,\n  72556, 173070, 8469, 81115, 46788, 18684, 133404, 96594, 112566, 86812, 64663, 85306, 47684, 65109, 21999, 787,\n  67089, 42642, 9467, 104964, 53548, 77932, 89601, 50531, 36874, 103369, 55381, 55386, 56487, 110574, 42321, 104493,\n  41387, 87478, 10390, 37145, 125985, 271334, 8940, 28636, 26893, 223188, 56969, 202288, 40071, 34929, 116962, 28213,\n  106683, 28231, 42013, 24525, 73712, 66578, 95581, 82535, 18787, 2469, 64097, 192370, 40105, 33082, 137529, 8248,\n  72992, 28876, 9399, 7582, 67246, 4830, 5079, 188992, 137276, 8793, 145644, 146116, 50802, 69878, 200577, 15640,\n  36790, 214109, 63824, 55941, 70328, 47477, 2167, 52953, 138827, 24284, 37429, 16033, 22466, 117793, 20960, 43422,\n  39263, 48912, 81141, 192574, 183295, 1837, 14713, 28579, 29858, 381, 62358, 27575, 50975, 47277, 158226, 20747,\n  9322, 21799, 8759, 19551, 57397, 25924, 60257, 23908, 10654, 24152, 18912, 12247, 24364, 134961, 117953, 43806,\n  30383, 28739, 36894, 57851, 55799, 12140, 208514, 12059, 41600, 16395, 47450, 48286, 23584, 118890, 25589, 8681,\n  127295, 234074, 47071, 125810, 296610, 11331, 18254, 15170, 129078, 16080, 226323, 40895, 143558, 94050, 23705, 131198,\n  244131, 60925, 25356, 21260, 86397, 300199, 46792, 88237, 36049, 206902, 15590, 21351, 1085, 93619, 11791, 83320,\n  80677, 34168, 26403, 64840, 3820, 15926, 1847, 16734, 108139, 3510, 11982, 209610, 5476, 22002, 108428, 55260,\n  34767, 29252, 98069, 88530, 24683, 25427, 54524, 21159, 7758, 58183, 73508, 29449, 13060, 45920, 148846, 105330,\n  7239, 2883, 81088, 12697, 131671, 7549, 43047, 4805, 250593, 12157, 34279, 12914, 59556, 76223, 25084, 20506,\n  103392, 43609, 100817, 171460, 29810, 37880, 81256, 174784, 4188, 149828, 64134, 59705, 252323, 25997, 44940, 97369,\n  39404, 5069, 90268, 85619, 116877, 19634, 56035, 36905, 7651, 33380, 130707, 133829, 43600, 25142, 75703, 40295,\n  40338, 60316, 24687, 44342, 13554, 8678, 9961, 1732, 157253, 93469, 29687, 49688, 39196, 21767, 41224, 21529,\n  25978, 36956, 66355, 33481, 144387, 50146, 129773, 13311, 61211, 62169, 77703, 101581, 234, 27986, 9318, 13341,\n  50104, 58984, 15733, 9924, 6129, 59308, 32036, 85687, 10449, 47782, 8891, 25720, 93777, 35277, 8953, 13811,\n  9240, 22192, 6432, 17202, 356378, 52015, 66393, 12508, 274148, 255059, 67115, 30737, 4439, 11480, 231776, 166051,\n  72970, 82790, 96236, 26126, 3724, 86291, 14281, 11950, 147770, 105431, 20726, 77543, 78680, 17490, 13496, 21992,\n  62570, 4476, 98692, 112842, 115877, 74277, 124883, 83834, 40027, 21132, 19464, 47232, 40547, 89457, 28687, 14573,\n  36817, 103723, 300665, 15319, 224392, 26400, 40495, 22877, 64609, 18201, 23154, 72374, 34795, 27583, 78778, 23667,\n  165027, 32508, 73622, 56731, 67440, 2495, 103298, 105353, 2477, 41716, 11030, 8686, 37206, 79590, 125885, 13625,\n  23431, 4395, 220465, 150736, 50754, 5523, 27215, 232561, 164797, 91433, 63055, 7083, 46018, 251531, 40722, 70383,\n  94995, 7924, 77757, 28613, 170982, 867, 21717, 13321, 27051, 21566, 114874, 18681, 7957, 7438, 19655, 84979,\n  22767, 101166, 277403, 47583, 3674, 112331, 65307, 4882, 27900, 40861, 34152, 26594, 56419, 29707, 25132, 78891,\n  18930, 58166, 23382, 32025, 60701, 65952, 21108, 607, 41302, 44913, 98469, 73043, 2692, 100592, 76874, 140991,\n  84749, 15560, 29248, 219368, 339721, 48121, 96609, 79943, 61996, 45630, 28536, 16244, 111094, 26428, 57889, 25111,\n  80221, 69552, 27326, 124506, 50129, 75574, 64173, 83505, 1045, 142814, 170324, 19671, 8153, 208336, 12576, 12623,\n  62945, 184743, 32415, 73714, 19202, 2698, 136438, 116392, 8250, 15337, 70178, 157991, 37208, 8242, 26035, 58589,\n  37418, 6014, 58480, 1274, 32560, 127652, 47847, 148702, 79477, 92504, 29034, 87904, 41106, 61295, 72948, 79082,\n  88569, 164147, 34772, 53574, 33963, 129292, 2501, 7461, 36693, 68888, 18880, 65806, 5892, 424331, 17516, 24390,\n  30570, 2113, 9490, 25280, 1581, 110856, 24330, 24537, 66471, 15890, 104155, 126634, 49647, 82695, 115436, 114480,\n  11922, 54150, 34729, 37512, 160717, 69615, 2014, 40558, 29442, 49537, 9489, 90588, 5643, 197221, 9955, 87575,\n  114865, 94728, 2057, 19542, 82962, 71746, 2865, 8021, 95982, 61016, 32535, 150782, 132098, 15408, 30334, 114765,\n  22633, 27477, 74001, 34329, 22838, 9812, 99985, 6414, 94726, 41615, 168290, 212638, 54556, 24532, 127124, 32488,\n  28566, 631, 37608, 9436, 205039, 166709, 41813, 62681, 162340, 51007, 104187, 135517, 33216, 370029, 46677, 42823,\n  16849, 22305, 32170, 4155, 35847, 216420, 4908, 9704, 221339, 1461, 36764, 69322, 94851, 163847, 168141, 1238,\n  26533, 64284, 196577, 46554, 71469, 97500, 18030, 75035, 1805, 59036, 59485, 22807, 3804, 35946, 47500, 82026,\n  12935, 1196, 59186, 36123, 45483, 48905, 122736, 84743, 71020, 21859, 105891, 19409, 36310, 14933, 324632, 9477,\n  65381, 15301, 17544, 116221, 192960, 28345, 33914, 9479, 34240, 10843, 107872, 10760, 35165, 170015, 15849, 66429,\n  59773, 117561, 48895, 53810, 1248, 297457, 78131, 22215, 46954, 15473, 66440, 19176, 155332, 67372, 63874, 27562,\n  96864, 44731, 33316, 68027, 4246, 61528, 60417, 153158, 388800, 242889, 139912, 30680, 16129, 184234, 14284, 220334,\n  57133, 2684, 29537, 163409, 74592, 22341, 14608, 7820, 44807, 52082, 34669, 735, 442014, 5199, 156652, 115585,\n  38203, 46928, 26751, 41163, 42574, 23000, 40485, 193202, 80818, 24685, 30063, 46336, 91592, 38350, 16019, 204886,\n  26377, 35729, 24114, 14839, 36424, 82137, 58468, 208317, 65760, 107517, 111976, 169534, 977, 88148, 88506, 104279,\n  77387, 49741, 55001, 102462, 22628, 16787, 70803, 44152, 147610, 49926, 3305, 34988, 28018, 39850, 1762, 172940,\n  30561, 35822, 23734, 154547, 98454, 6287, 35558, 37540, 6969, 16948, 182134, 68275, 119628, 26385, 69050, 27987,\n  63648, 91787, 15241, 69688, 18170, 23405, 63549, 172789, 36854, 149944, 199582, 50387, 26601, 61662, 165764, 15740,\n  64018, 188861, 204663, 14506, 22027, 34003, 37949, 76827, 37279, 69128, 41728, 50954, 51395, 91070, 77327, 418272,\n  152934, 102026, 34299, 2147, 21153, 7074, 4236, 29765, 9430, 213559, 43803, 10595, 58760, 69911, 261653, 87745,\n  194742, 224, 344942, 28518, 5330, 188455, 29445, 39380, 55115, 37739, 135330, 40527, 34158, 67980, 2019, 20921,\n  28917, 61353, 29277, 143760, 174111, 25315, 233758, 5380, 13171, 38385, 49725, 63589, 122326, 12646, 695, 115120,\n  1526, 21427, 111543, 128260, 43896, 37771, 92334, 46393, 66094, 257494, 18659, 47526, 25325, 7287, 24994, 1200,\n  4234, 136264, 35864, 150235, 148354, 9687, 28790, 43378, 11450, 185999, 16029, 3010, 275, 54840, 18620, 5465,\n  18999, 14941, 133430, 7102, 112191, 67383, 37978, 43984, 44365, 118346, 5294, 4294, 22723, 21609, 95097, 56653,\n  68409, 57456, 462, 22817, 8733, 4115, 95791, 28344, 57746, 79153, 1397, 207599, 96565, 211156, 90894, 88357,\n  75007, 67110, 7600, 143795, 14196, 17993, 7370, 47401, 108844, 40816, 2129, 578, 29475, 1352, 164155, 115861,\n  88599, 265011, 72917, 44900, 177563, 66133, 61076, 81186, 100792, 66415, 27198, 24480, 106156, 32719, 8226, 19302,\n  86323, 65704, 91571, 74710, 93726, 40774, 166720, 71206, 14248, 159482, 104866, 13711, 135341, 12882, 22933, 26886,\n  194131, 14226, 57391, 10865, 40126, 114370, 59004, 62802, 47099, 37870, 61471, 61712, 14779, 23150, 60956, 17913,\n  8272, 31742, 43627, 355564, 39597, 43789, 24868, 17215, 95983, 10850, 171578, 95826, 171398, 43329, 52382, 39205,\n  65882, 22816, 30560, 5482, 28052, 257734, 116033, 49489, 10393, 42391, 140158, 74221, 47213, 10652, 133629, 42182,\n  40689, 31081, 114221, 24833, 22120, 71238, 95884, 1589, 72212, 29981, 49555, 59882, 106829, 22147, 12985, 19337,\n  34964, 98868, 7993, 32641, 109146, 79730, 82886, 12040, 753, 26623, 20550, 6160, 648, 37626, 156500, 74280,\n  21660, 112069, 102650, 29846, 30047, 37920, 38707, 22416, 17527, 43165, 20567, 16777, 181025, 163230, 77041, 93275,\n  5619, 104536, 14442, 35376, 145357, 711, 91293, 267964, 4085, 61569, 2548, 27538, 216883, 57568, 2256, 60727,\n  9359, 183328, 33919, 77609, 186951, 2807, 102609, 77085, 24779, 43042, 7697, 75938, 53931, 15103, 12294, 16402,\n  24545, 7447, 558, 128098, 36197, 23062, 46707, 17077, 223296, 66504, 27982, 13141, 62628, 55296, 54207, 95832,\n  168101, 45485, 3146, 80848, 4243, 2868, 16953, 33358, 107313, 27188, 53837, 35648, 30321, 5098, 8014, 6864,\n  26642, 216648, 15542, 69518, 13049, 164033, 260760, 92714, 51059, 3646, 38963, 53961, 31027, 65718, 8441, 195966,\n  107912, 99428, 28516, 18239, 807, 22455, 35712, 38565, 73550, 133659, 118825, 32367, 26551, 30301, 28367, 11762,\n  84369, 86004, 37814, 44184, 122422, 57026, 4072, 40865, 165872, 25809, 54060, 35341, 49754, 17581, 103700, 118548,\n  74213, 178685, 2053, 49373, 234264, 17223, 35164, 99392, 33151, 130808, 2338, 24598, 52014, 213186, 156444, 16006,\n  33100, 87907, 2116, 183683, 87183, 121897, 25550, 4995, 22365, 1221, 128172, 24344, 52500, 5554, 89782, 2016,\n  40013, 70221, 66896, 49588, 23302, 76353, 61452, 21765, 5652, 195585, 31863, 21028, 72723, 127694, 101106, 10744,\n  21404, 46840, 4864, 158406, 26107, 219205, 22949, 68216, 48434, 46124, 8871, 21467, 587, 110874, 46178, 110709,\n  94049, 110687, 194252, 73380, 168493, 40871, 84591, 4279, 96418, 78366, 113568, 80733, 32871, 103415, 9257, 39835,\n  70860, 74701, 43788, 318366, 31709, 7528, 5382, 22765, 25128, 2525, 52257, 20911, 443, 56027, 55517, 12403,\n  71597, 15617, 196829, 263547, 166253, 113889, 151910, 27229, 15670, 56695, 27118, 39691, 70994, 5859, 9227, 98270,\n  26341, 176547, 121365, 69700, 133675, 164631, 110015, 41477, 28280, 6013, 20657, 210461, 75491, 126050, 3380, 248649,\n  54756, 7374, 93034, 88191, 47955, 22642, 141231, 44151, 56028, 10051, 42742, 54389, 26182, 179888, 17595, 29573,\n  11952, 45860, 19676, 264, 113272, 40733, 10627, 68835, 472197, 159006, 64051, 34066, 64640, 150352, 25206, 68762,\n  110753, 23633, 22112, 20042, 17919, 163270, 55949, 19557, 337, 124601, 60155, 130764, 50642, 63188, 8357, 143714,\n  22576, 35676, 36362, 24812, 142, 40272, 89438, 24448, 87371, 105259, 16947, 36015, 53391, 136, 23199, 36073,\n  93210, 18431, 41934, 10593, 126694, 48847, 17533, 34029, 15285, 65070, 33592, 113537, 19642, 73194, 284546, 137425,\n  85667, 129350, 26968, 6511, 14148, 31670, 30205, 11076, 1506, 220046, 7034, 329567, 42092, 19955, 30867, 21935,\n  52962, 31820, 69932, 14236, 33243, 12574, 10827, 39690, 11970, 174135, 28153, 146891, 20734, 126712, 21323, 40265,\n  135843, 199355, 58115, 49038, 57044, 54396, 16409, 31133, 58880, 32408, 26984, 27298, 13002, 35976, 171154, 61387,\n  219134, 82951, 17625, 78088, 22876, 4261, 5497, 9679, 64754, 2492, 263964, 159492, 232519, 20547, 74430, 377501,\n  4257, 30374, 461, 33465, 43120, 162710, 65294, 50518, 321573, 5955, 131205, 93895, 24799, 9658, 5858, 13871,\n  64526, 19652, 2901, 70075, 124728, 146097, 98082, 100551, 52579, 153823, 113631, 22528, 81472, 25792, 60475, 32767,\n  70831, 74749, 72861, 41755, 276848, 7157, 25389, 110028, 17403, 27510, 251623, 58039, 74359, 18091, 50708, 89467,\n  23021, 20850, 106672, 3962, 182101, 38811, 122104, 32394, 74597, 3381, 18651, 101115, 23744, 97817, 110293, 37253,\n  148267, 36198, 3519, 55601, 12055, 42944, 34271, 133263, 7976, 95413, 91635, 5598, 5349, 58679, 57950, 154564,\n  11772, 149366, 22890, 8626, 67540, 3799, 18687, 5012, 167347, 116945, 44732, 33287, 65318, 71035, 71417, 65941,\n  18720, 30185, 48199, 202749, 127832, 1587, 3246, 105625, 108238, 117159, 28014, 104782, 22828, 55738, 81738, 11163,\n  90233, 17250, 4750, 188510, 9987, 20638, 16031, 14461, 259080, 49305, 190390, 14691, 118185, 22004, 72005, 37574,\n  73209, 86700, 86886, 144339, 79270, 53654, 14505, 129204, 13775, 25931, 7131, 15330, 90100, 52622, 10877, 9834,\n  137742, 2258, 125407, 10878, 90799, 219424, 85936, 9073, 70569, 42871, 11487, 17205, 15699, 176689, 145652, 13840,\n  19961, 3187, 108771, 19907, 9087, 61130, 38770, 130505, 67475, 29769, 18202, 59283, 57872, 91097, 48087, 6535,\n  39731, 194914, 82462, 72799, 8810, 20369, 69590, 161138, 134897, 1655, 228453, 124246, 131868, 32125, 24266, 32982,\n  146849, 36964, 41316, 2497, 19898, 151088, 186502, 25460, 3334, 5126, 116461, 28025, 2281, 35537, 44808, 12910,\n  167061, 87358, 186367, 9640, 91073, 100691, 122545, 45892, 60356, 46145, 149118, 90693, 467742, 151743, 138009, 53160,\n  74712, 7571, 311165, 28817, 188, 2377, 69313, 29598, 53179, 50217, 129275, 459470, 137679, 65308, 18477, 51126,\n  92769, 135453, 6508, 23061, 29241, 3159, 63876, 36946, 9537, 41270, 4306, 50909, 132595, 108954, 42730, 19664,\n  80119, 116744, 47895, 141726, 1041, 20154, 230804, 208216, 88962, 27133, 7095, 34643, 5976, 24608, 31719, 12859,\n  40171, 32072, 88409, 11313, 44911, 91010, 24472, 25842, 102859, 76732, 14848, 25181, 139059, 102051, 109383, 112500,\n  104558, 41471, 92391, 7314, 98987, 4288, 8166, 373942, 47761, 86881, 41222, 3712, 19272, 32290, 21185, 46273,\n  71472, 64765, 57109, 135608, 113864, 48751, 60216, 15724, 175377, 27567, 112796, 18273, 73338, 51592, 245687, 100900,\n  10857, 55010, 31720, 50806, 23402, 71732, 1067, 129268, 23758, 39673, 37515, 71954, 1591, 31733, 27822, 35424,\n  139864, 46227, 8017, 50399, 5644, 74021, 28076, 85584, 4076, 127136, 37464, 102260, 118760, 24879, 11109, 28407,\n  16427, 136669, 88300, 8782, 134198, 49502, 5217, 243528, 18853, 31871, 85719, 9313, 20291, 111347, 8859, 232793,\n  100849, 152830, 105869, 31365, 37423, 46174, 5288, 386390, 22038, 11906, 5770, 10139, 36677, 146746, 11499, 81033,\n  19071, 79322, 71912, 26542, 195521, 10379, 25001, 31339, 57445, 2750, 6263, 58554, 11069, 15459, 87289, 89651,\n  31869, 529, 435067, 57142, 55718, 10724, 15530, 50660, 66882, 102319, 10462, 143371, 148490, 217411, 10252, 44760,\n  44, 24999, 38673, 7037, 41296, 7080, 103758, 32647, 75242, 101191, 76455, 28603, 49704, 54470, 60157, 16716,\n  166810, 63760, 52521, 49375, 9906, 135040, 4540, 38220, 20943, 103257, 50219, 154213, 122258, 73230, 121482, 29653,\n  49112, 43518, 71058, 63793, 105667, 44288, 91681, 25034, 15969, 72202, 23056, 81246, 10344, 93662, 911, 44819,\n  6408, 52562, 5953, 16497, 187694, 1131, 63578, 47977, 21399, 61396, 149533, 57971, 72742, 5611, 13207, 221621,\n  58970, 79728, 27059, 171306, 14867, 7768, 72956, 52885, 14376, 30921, 9280, 8158, 81889, 33376, 39155, 71120,\n  41856, 131166, 105010, 30693, 23225, 58453, 31791, 3690, 15042, 11816, 43900, 117272, 56993, 64225, 105202, 54205,\n  16074, 71491, 22908, 25691, 131389, 59527, 11646, 42043, 74276, 34270, 28537, 26163, 72407, 41791, 219412, 115141,\n  53875, 38258, 76312, 84827, 383108, 40765, 11202, 132777, 53597, 167648, 158387, 30192, 37363, 40773, 1146, 72250,\n  68993, 32806, 59487, 128806, 44854, 6158, 96774, 39870, 122548, 5997, 50579, 45575, 430927, 3282, 94975, 100509,\n  198279, 200501, 32872, 18750, 38430, 107646, 104178, 8936, 80409, 100084, 192864, 160858, 12245, 67627, 83578, 90755,\n  2981, 54132, 8983, 55539, 628, 33889, 292355, 74386, 2818, 172034, 214107, 19271, 17760, 834, 34352, 169686,\n  37437, 145284, 73189, 54617, 238229, 4948, 71657, 94135, 7968, 30905, 23213, 304209, 46892, 61572, 104947, 117623,\n  2200, 107472, 204184, 88505, 3730, 10311, 20501, 150712, 34190, 70936, 38672, 37360, 65983, 2571, 19225, 134448,\n  37959, 151534, 4637, 20807, 112291, 80673, 5980, 35705, 87850, 61874, 47965, 31875, 70827, 182878, 35126, 164376,\n  6522, 43040, 97902, 71998, 20750, 38267, 227637, 76251, 73913, 116387, 6656, 46715, 111621, 13498, 6684, 248541,\n  41652, 32337, 11354, 14685, 19587, 16826, 46225, 7338, 2780, 13317, 78374, 44055, 58668, 1088, 55437, 86278,\n  25916, 40461, 78119, 116159, 85259, 146157, 14297, 2255, 18200, 39030, 6734, 42798, 168962, 119973, 38038, 22310,\n  95781, 125342, 77701, 24562, 42445, 51140, 84077, 79797, 102050, 55904, 96004, 87841, 7776, 193841, 23065, 73430,\n  57662, 41418, 52176, 99003, 103313, 45282, 85005, 26027, 47742, 65487, 4547, 20906, 96358, 53110, 36530, 18902,\n  41964, 66288, 159127, 54902, 66174, 22317, 184026, 50221, 100396, 167624, 175279, 22979, 29069, 146485, 480, 42086,\n  204735, 209840, 27750, 486, 19679, 2874, 101071, 35317, 27978, 40196, 245641, 90054, 7479, 4028, 52060, 61770,\n  40264, 884, 39262, 47984, 22534, 2991, 111271, 48232, 61183, 27973, 80376, 56009, 36081, 165143, 131566, 47390,\n  107436, 17924, 139245, 18948, 58223, 25723, 60245, 119466, 14680, 77779, 96719, 17119, 23002, 182396, 70393, 3161,\n  101311, 78419, 54640, 23621, 24716, 19555, 111633, 409, 124108, 27386, 2245, 258216, 12908, 23526, 10212, 69858,\n  5646, 124783, 685, 22255, 31750, 16915, 43000, 28583, 40380, 54912, 117699, 74670, 14215, 28794, 179610, 6571,\n  232799, 21298, 4374, 40448, 102772, 82421, 69208, 18356, 14122, 42989, 68207, 134104, 96775, 342439, 22630, 77974,\n  61398, 44393, 92954, 93632, 50917, 174764, 71894, 24307, 12096, 8836, 209934, 117370, 149880, 80277, 3249, 24377,\n  67833, 1203, 220478, 45163, 598749, 19930, 49756, 19462, 124194, 104517, 87257, 36828, 155871, 228667, 44446, 48887,\n  49216, 262088, 45585, 33699, 790, 142940, 1214, 51939, 14677, 49283, 82736, 30811, 65319, 13215, 29155, 8388,\n  56917, 46741, 80552, 21318, 7440, 61972, 13877, 113912, 145744, 1135, 64582, 45451, 95701, 94255, 93908, 15993,\n  12206, 4906, 63468, 345616, 49405, 22021, 38717, 72500, 129269, 41952, 6995, 118167, 76199, 30271, 54602, 17741,\n  45732, 43176, 108447, 54078, 9767, 2976, 31141, 98669, 11058, 3418, 36920, 28316, 9047, 12901, 81784, 44333,\n  210885, 31029, 19486, 48518, 11051, 76288, 43203, 81787, 7392, 48679, 35182, 66212, 26307, 52539, 2090, 49456,\n  2130, 146238, 10565, 420461, 8132, 25081, 22634, 263972, 147526, 30634, 102378, 79556, 20802, 111069, 161896, 208679,\n  232698, 76981, 47548, 35236, 115660, 54019, 196404, 365534, 50060, 190162, 23999, 64445, 59789, 24002, 10716, 4605,\n  57344, 32663, 9089, 10394, 107623, 22597, 164592, 49576, 80343, 5393, 4211, 9135, 112676, 3507, 56842, 26209,\n  23291, 13451, 13815, 72724, 9866, 28546, 4585, 11238, 160971, 144491, 17045, 4629, 34032, 57499, 26471, 40064,\n  118291, 51528, 233736, 42900, 15719, 86514, 25147, 31587, 59730, 27331, 34546, 93487, 164911, 55981, 1017, 52398,\n  28975, 111773, 14576, 7163, 2659, 23748, 94127, 7591, 58046, 118031, 293274, 2302, 78480, 108856, 26363, 33313,\n  21854, 78915, 9334, 18530, 66209, 195667, 8136, 17789, 53863, 87424, 64346, 25683, 109085, 21080, 41596, 10885,\n  116045, 55411, 15616, 32700, 29021, 102829, 16981, 4307, 46481, 113835, 166601, 106369, 107552, 19257, 124248, 5139,\n  22130, 56921, 41150, 3696, 18764, 5694, 250839, 81058, 70254, 74576, 7048, 33695, 31272, 9587, 51251, 12329,\n  11300, 219240, 77500, 229429, 52460, 62159, 41229, 11359, 43933, 8689, 31439, 145750, 84738, 78427, 136685, 118384,\n  20721, 79633, 31973, 11098, 53869, 52988, 3196, 72237, 190840, 185112, 79139, 28639, 79673, 97047, 9398, 15414,\n  105300, 137313, 85877, 40993, 7561, 3929, 57151, 108868, 321817, 76740, 180609, 35166, 66924, 90464, 82436, 5838,\n  13940, 45290, 67026, 19641, 33281, 26857, 36996, 98291, 101046, 54893, 50303, 114759, 183181, 305580, 14099, 33514,\n  32176, 17094, 121586, 67669, 71878, 42975, 11177, 90273, 5678, 12886, 12867, 27433, 62924, 67753, 13445, 21183,\n  79535, 24720, 155338, 122583, 56646, 51283, 120295, 43762, 40303, 86530, 14604, 190243, 19559, 88421, 25961, 150460,\n  27703, 51292, 26294, 109748, 93042, 39631, 12236, 40405, 73368, 57016, 74750, 36429, 42187, 74845, 176283, 98118,\n  3670, 19744, 24913, 39170, 37376, 11919, 150215, 7637, 46440, 61291, 85017, 262212, 7023, 214701, 15499, 13794,\n  36816, 64790, 2778, 127954, 109628, 14013, 60615, 35098, 20680, 32322, 6631, 27129, 5940, 3801, 64451, 3605,\n  276440, 16166, 42526, 46620, 275233, 3268, 98778, 42589, 170848, 13985, 52719, 40320, 112093, 58444, 41626, 122502,\n  136996, 26123, 73872, 45093, 14984, 31647, 91921, 180982, 20226, 196060, 19058, 85542, 111441, 139969, 139431, 39188,\n  77693, 106755, 134828, 38509, 112960, 28035, 81045, 32920, 48577, 41211, 1169, 51509, 39370, 57152, 7562, 65585,\n  55707, 16633, 123632, 42194, 50314, 21232, 7589, 10730, 123404, 177035, 1102, 100263, 26570, 53756, 25965, 84962,\n  54281, 98616, 1761, 302765, 61372, 4231, 11004, 6580, 123391, 152361, 53908, 15894, 4857, 138528, 185271, 79781,\n  35928, 183068, 199461, 71306, 246740, 25571, 212575, 29887, 132507, 135536, 39243, 171966, 106646, 38340, 64208, 46548,\n  44241, 12489, 59841, 52248, 7196, 49745, 18871, 214620, 92258, 92083, 128377, 10678, 9825, 273, 124186, 8170,\n  37688, 47121, 81217, 46232, 51197, 22560, 24038, 76445, 303141, 269387, 168244, 7423, 5590, 148765, 8018, 44136,\n  15476, 24093, 81595, 151484, 132986, 88790, 24759, 249112, 10955, 113624, 1490, 61893, 85782, 267543, 81516, 155220,\n  34486, 85773, 20198, 5827, 26696, 182958, 47877, 133459, 7991, 47474, 35921, 5055, 28813, 58299, 36457, 2282,\n  18858, 199851, 25971, 38032, 39546, 9892, 80469, 94210, 11703, 7530, 262048, 119116, 11365, 73348, 20636, 76662,\n  38185, 147830, 33090, 12842, 5716, 136557, 29208, 2738, 93555, 29435, 37866, 29232, 11925, 18290, 200392, 9150,\n  40121, 28353, 66557, 42934, 60002, 7949, 165121, 44607, 6985, 46265, 88952, 117927, 10976, 127994, 45713, 196202,\n  171384, 16237, 17072, 82678, 3887, 53943, 11497, 25289, 43394, 194558, 17520, 13713, 13337, 10319, 13519, 27977,\n  56346, 1512, 69563, 16655, 6381, 207119, 32722, 52407, 252336, 7634, 295451, 137340, 39573, 12588, 51167, 91362,\n  75042, 12378, 44599, 44996, 53711, 62621, 59425, 154573, 1028, 6863, 70608, 89277, 31781, 37585, 33115, 45438,\n  44295, 19441, 13395, 85115, 95925, 51396, 98398, 31173, 131713, 76310, 2356, 18575, 7214, 48396, 22367, 234325,\n  68125, 225602, 25129, 98668, 43571, 24981, 27341, 97198, 70954, 116350, 138790, 6397, 213234, 6496, 199647, 33078,\n  1628, 16810, 38131, 5432, 8760, 45379, 187797, 54575, 13391, 66830, 185263, 43959, 65485, 1291, 64470, 193537,\n  17320, 32341, 19589, 46922, 56038, 16790, 33933, 93128, 1710, 22162, 60010, 166501, 25248, 110735, 133168, 19601,\n  60803, 25674, 33996, 3691, 57399, 83385, 754, 371286, 19839, 26834, 28124, 75623, 3870, 66122, 97406, 47346,\n  326, 7492, 166, 56406, 281556, 73496, 63104, 70066, 50945, 17847, 47599, 57275, 72400, 26598, 25290, 133091,\n  21460, 6170, 26197, 90337, 316244, 23380, 15810, 44542, 75619, 115807, 61180, 160228, 56246, 187764, 113793, 119939,\n  98775, 14502, 129669, 102901, 481, 18772, 33749, 181939, 13513, 80163, 57426, 95677, 55765, 123256, 156375, 131050,\n  50427, 85036, 176699, 53355, 7388, 116459, 9415, 65345, 123519, 14467, 53003, 35892, 32929, 29108, 141336, 7280,\n  57908, 121975, 16321, 66321, 27124, 17980, 13278, 64623, 61316, 27319, 33770, 106870, 101097, 65509, 32584, 7662,\n  57467, 42561, 35131, 72066, 30228, 57341, 330807, 12061, 48792, 30042, 47357, 5873, 10788, 40943, 43598, 71460,\n  20402, 3772, 196771, 8512, 37318, 98225, 52470, 20068, 50526, 32163, 6724, 21, 155730, 109241, 153690, 41562,\n  34456, 4040, 322, 2322, 158065, 82495, 155777, 84593, 145305, 52472, 4167, 12757, 17832, 20800, 6523, 97949,\n  43733, 5158, 13272, 52760, 64052, 64053, 5758, 88849, 4506, 28625, 252038, 68417, 35072, 144810, 45051, 20202,\n  205355, 88775, 28776, 58617, 177028, 20250, 77055, 25756, 184004, 13595, 134521, 29706, 187081, 41138, 39350, 69874,\n  68616, 45852, 200508, 35308, 35938, 187989, 19158, 97, 83703, 30783, 33740, 8875, 10367, 31971, 9154, 23524,\n  36892, 35352, 34135, 16609, 93186, 10325, 61501, 123818, 260137, 38611, 132695, 10376, 51934, 40069, 47671, 13891,\n  89970, 27882, 128001, 251194, 4985, 3138, 130144, 157048, 23445, 50690, 120275, 98986, 26755, 15060, 110524, 20070,\n  21558, 21044, 241916, 81443, 7948, 110867, 98839, 117178, 78741, 134771, 8767, 9438, 23376, 10179, 78727, 73418,\n  124405, 70709, 73897, 174550, 85594, 44683, 44048, 151892, 68596, 110549, 32110, 143310, 57536, 6531, 94425, 3086,\n  49351, 16758, 85882, 1621, 12619, 28857, 47203, 30663, 56593, 71986, 13128, 49100, 132668, 101411, 14597, 17845,\n  99924, 49653, 254641, 68928, 109728, 11860, 46362, 38227, 71844, 106860, 76428, 22535, 71935, 47939, 100970, 214387,\n  196018, 26420, 64000, 108949, 65464, 85292, 57337, 107755, 17617, 127677, 45676, 32224, 14987, 15885, 23365, 73603,\n  89701, 45904, 16644, 214947, 143773, 45929, 4638, 50137, 33997, 6717, 227758, 15712, 8687, 13499, 81744, 240749,\n  22701, 43383, 31416, 14599, 33258, 22158, 46890, 13056, 2914, 36843, 11727, 56468, 4436, 2709, 77185, 66068,\n  72108, 79794, 13174, 6017, 85610, 25092, 117935, 33783, 9671, 20404, 190908, 59000, 49067, 32677, 203049, 32652,\n  2327, 64872, 122696, 32308, 82988, 180624, 3995, 109656, 1361, 89288, 58639, 34932, 1672, 23129, 114033, 56989,\n  44033, 18540, 122789, 23587, 35777, 124932, 162078, 37243, 30269, 38337, 87579, 108472, 24057, 7318, 56171, 14522,\n  10605, 36398, 2675, 68455, 82236, 229893, 28011, 180822, 616, 32685, 24540, 51512, 15793, 167325, 12485, 108625,\n  13919, 125674, 46942, 46777, 47249, 192801, 19663, 7112, 112086, 41046, 136949, 15147, 116698, 102811, 103661, 220539,\n  9484, 36775, 262931, 43580, 80207, 119020, 20707, 35285, 90574, 74644, 25380, 59691, 33304, 112273, 100827, 37498,\n  68624, 28392, 22953, 10192, 93127, 6246, 78709, 81865, 56101, 3539, 141381, 87190, 42210, 15605, 33843, 301219,\n  160929, 15074, 16495, 322258, 4827, 113897, 61108, 7004, 38995, 49556, 40164, 186048, 38095, 7638, 85669, 24310,\n  4701, 41162, 181937, 6723, 125119, 103514, 13105, 42284, 5027, 699, 66990, 9452, 33680, 16754, 14243, 12215,\n  9236, 9693, 21846, 11245, 231236, 26285, 119411, 107569, 14135, 13418, 13188, 12438, 87837, 154259, 13184, 45250,\n  23318, 104289, 32255, 140998, 70261, 10596, 72378, 28503, 78893, 204776, 26664, 107431, 30151, 53770, 139833, 72090,\n  81482, 31259, 9478, 50013, 14332, 4473, 8040, 96916, 1084, 3459, 15193, 216567, 74256, 68159, 8514, 64488,\n  27532, 4063, 51181, 118473, 46644, 135301, 17479, 19499, 79185, 32968, 60750, 136481, 3148, 433, 1609, 42629,\n  62615, 19220, 27930, 149236, 6981, 35309, 3835, 52812, 55672, 37988, 64541, 83189, 31668, 21678, 96359, 51037,\n  36825, 16611, 55113, 22398, 1849, 16045, 71184, 149329, 14536, 231005, 89158, 27040, 37446, 89933, 98572, 9183,\n  14738, 180870, 66669, 119194, 23779, 41333, 133198, 165958, 43058, 12753, 4695, 25960, 162749, 13009, 104735, 168462,\n  72199, 56087, 30780, 17289, 1168, 63376, 32319, 148939, 21346, 183499, 57766, 111111, 5592, 163921, 51902, 6385,\n  85932, 38348, 98269, 48430, 85302, 6828, 144609, 62182, 9668, 31728, 14877, 74838, 18351, 19716, 44331, 8938,\n  57135, 111212, 35796, 196509, 150360, 14184, 81850, 64400, 2080, 43786, 89260, 297313, 228015, 4259, 2273, 106355,\n  77953, 79956, 258556, 39080, 34670, 38042, 9041, 17580, 119302, 94867, 12312, 65168, 151751, 14199, 84612, 41781,\n  31009, 41498, 2644, 8135, 106725, 11873, 65756, 50677, 84265, 100278, 19103, 25944, 45214, 71109, 29333, 199959,\n  59289, 28006, 82735, 73888, 74178, 9357, 31611, 55567, 113071, 91025, 22225, 16280, 263206, 143472, 82038, 1016,\n  111009, 3454, 111282, 6624, 4021, 148481, 82606, 3337, 44449, 87085, 117440, 117450, 188119, 96922, 66328, 69088,\n  192629, 7164, 177681, 13842, 123592, 13678, 3709, 1404, 392506, 88363, 34011, 3111, 292847, 35632, 135945, 165656,\n  114487, 28103, 36070, 105813, 12831, 13767, 283706, 20001, 205858, 222376, 26231, 74767, 9852, 14707, 55251, 21778,\n  20780, 81817, 61071, 27574, 79648, 73651, 59592, 26903, 75767, 1269, 47843, 22121, 357014, 1880, 118720, 33888,\n  97721, 25074, 162232, 165250, 18166, 101436, 126490, 14600, 21005, 87059, 98216, 138975, 67950, 11357, 183453, 60893,\n  33226, 31203, 30167, 34258, 204009, 158681, 64517, 2772, 16536, 8063, 37505, 72518, 2987, 13469, 1060, 70404,\n  11335, 58467, 606, 80478, 66717, 28334, 72244, 111835, 144910, 7759, 9382, 16929, 47950, 24768, 18442, 3812,\n  17262, 78772, 57860, 139250, 55060, 192875, 157943, 1432, 15063, 5317, 91497, 24602, 2934, 71481, 112610, 7454,\n  51038, 67723, 15783, 27576, 26775, 96465, 16801, 41801, 178497, 1952, 4258, 35229, 66008, 12359, 80274, 39191,\n  3427, 79381, 23113, 37373, 49433, 369, 197495, 44949, 128592, 41764, 85267, 26089, 20036, 84751, 45080, 183648,\n  157553, 6777, 354790, 8756, 63861, 32306, 73479, 133947, 3089, 129130, 28938, 68599, 23015, 83388, 4921, 46304,\n  51210, 118961, 162098, 13808, 28696, 56249, 178796, 65420, 35933, 130109, 17053, 154383, 49942, 34368, 45185, 215004,\n  71135, 72056, 58502, 92030, 231518, 3061, 31419, 84551, 99620, 59670, 13439, 24874, 17248, 49981, 120, 101486,\n  21835, 11954, 21387, 80202, 176536, 69099, 25576, 83929, 20676, 54972, 21235, 121229, 16944, 207747, 17151, 62192,\n  38700, 14914, 67294, 97250, 165831, 65091, 88309, 65140, 233253, 78072, 119737, 2388, 295625, 75403, 48047, 5295,\n  36723, 97958, 31105, 11399, 13023, 94081, 105941, 87375, 52745, 78093, 142695, 58118, 10907, 36936, 47744, 98453,\n  19423, 63195, 135090, 155076, 67972, 116671, 181141, 76674, 125868, 7497, 7282, 18173, 95473, 37926, 40931, 83084,\n  82875, 9577, 10786, 82123, 1183, 13043, 25845, 7930, 108455, 108021, 144839, 298080, 52685, 25893, 74303, 83892,\n  33417, 167899, 3363, 124169, 64095, 3491, 11574, 30740, 21433, 19985, 31353, 13355, 52438, 74347, 30435, 24346,\n  33191, 43579, 92911, 14343, 127809, 55919, 202307, 87794, 44505, 85592, 45, 37946, 211823, 75477, 10315, 11020,\n  7810, 8418, 14824, 32246, 2752, 43445, 78058, 51648, 95548, 28128, 139532, 78431, 162031, 54035, 118501, 105304,\n  7185, 33563, 841, 39346, 91196, 67423, 12694, 225158, 47563, 63637, 48178, 53247, 61721, 57205, 32651, 77002,\n  33359, 256934, 6389, 100897, 17897, 60470, 2058, 38569, 23682, 58623, 3141, 225129, 42806, 36558, 74186, 65297,\n  178101, 65934, 727, 11385, 22874, 28253, 252846, 104582, 49707, 66565, 52743, 129552, 199897, 4526, 6020, 48400,\n  75419, 48628, 13529, 146713, 82456, 3396, 19131, 77933, 8618, 26055, 136494, 270517, 11171, 161242, 27374, 10081,\n  79712, 4483, 132351, 34334, 116847, 98238, 115123, 62251, 18783, 13247, 236033, 17204, 44190, 86807, 31546, 3315,\n  46564, 61125, 188041, 5405, 5346, 199954, 2749, 50374, 59046, 179633, 124580, 35456, 95032, 68263, 16037, 104183,\n  7893, 68877, 23745, 4536, 14916, 44942, 88134, 154142, 3214, 4074, 126680, 444, 26800, 13417, 122265, 141794,\n  24172, 9594, 4737, 198047, 121453, 10533, 56408, 70714, 34362, 74346, 24830, 15909, 10250, 226352, 86319, 65102,\n  17408, 113698, 65723, 192701, 18888, 29804, 92420, 119089, 4840, 52158, 6809, 47211, 68696, 127333, 9079, 122944,\n  22831, 10761, 65707, 48241, 13162, 83275, 41056, 127568, 36005, 52744, 10097, 2969, 32512, 44770, 40452, 180033,\n  14800, 160155, 1451, 16499, 62357, 50678, 47022, 118784, 41723, 26067, 60563, 169681, 45046, 58619, 46085, 32423,\n  27247, 64149, 46183, 1743, 37486, 3802, 17194, 24647, 5372, 19756, 118649, 4609, 2564, 83610, 112562, 46541,\n  34261, 17420, 81688, 66264, 298500, 194042, 239563, 21230, 66509, 23479, 154376, 33179, 133920, 158984, 47967, 146524,\n  89138, 72960, 127604, 25358, 31305, 13512, 95336, 27420, 117697, 9777, 159295, 2091, 19097, 4938, 15518, 81702,\n  108304, 448058, 126466, 7371, 81386, 239535, 1607, 211558, 84106, 53806, 374, 125065, 23802, 113479, 52151, 46803,\n  46411, 21764, 51063, 22432, 63304, 31295, 6642, 26992, 946, 58917, 74562, 10672, 51417, 1090, 157283, 6175,\n  41777, 30873, 49434, 31205, 41041, 70979, 28851, 11292, 19501, 20377, 16444, 125033, 115864, 49848, 35298, 117499,\n  60743, 35553, 7657, 117188, 294354, 1111, 19913, 107692, 37955, 25543, 107874, 180298, 94165, 181537, 43123, 3058,\n  18116, 7886, 11895, 8962, 1156, 81655, 22350, 1372, 17937, 241608, 114745, 32122, 20645, 31944, 32077, 3682,\n  57114, 6050, 45126, 4535, 90804, 42423, 18205, 88298, 58042, 4218, 130816, 58944, 48643, 192539, 3516, 129850,\n  92288, 67482, 5645, 6008, 9861, 19038, 25523, 48393, 2557, 163977, 7711, 69978, 88546, 98350, 106098, 5102,\n  61333, 26201, 45643, 21353, 101008, 50380, 9018, 90864, 12853, 151908, 45670, 48604, 5148, 32715, 39819, 1925,\n  87856, 45697, 2007, 66226, 4152, 9542, 6588, 36053, 144503, 58516, 41489, 32328, 73841, 5629, 33075, 228550,\n  18718, 1278, 118540, 138339, 9789, 1171, 99245, 73118, 147565, 168255, 51267, 5701, 10846, 18000, 6368, 25481,\n  42085, 30996, 30750, 21874, 12789, 33285, 67958, 162991, 30223, 14020, 26867, 21295, 8993, 66175, 79515, 148442,\n  56352, 397258, 104422, 69338, 67203, 81, 103746, 192218, 2448, 103541, 4268, 26498, 28215, 26795, 119536, 166999,\n  6052, 116957, 18923, 77982, 23540, 54054, 31372, 18430, 126319, 39890, 1756, 5893, 75933, 40146, 271195, 76657,\n  36689, 21496, 89710, 61547, 80235, 15197, 81995, 39003, 23231, 6321, 26632, 19783, 23561, 14948, 63802, 56505,\n  21383, 38408, 16252, 72824, 38800, 196129, 74267, 8127, 77548, 48102, 87833, 36171, 102798, 47900, 15495, 173684,\n  21234, 30001, 52403, 46069, 31468, 16788, 57124, 45489, 158608, 82654, 59957, 10410, 46188, 171714, 31155, 59538,\n  63960, 149773, 98372, 22924, 191679, 82803, 49057, 16752, 8051, 157358, 24903, 23142, 67014, 23023, 30666, 6199,\n  11185, 61761, 108153, 49193, 170078, 64795, 286604, 157605, 42186, 22327, 189946, 54197, 28827, 199449, 44686, 59637,\n  34777, 152898, 16645, 83206, 41930, 102775, 24648, 36524, 212079, 95709, 1548, 100504, 12421, 68448, 31268, 474576,\n  34750, 218355, 92781, 134981, 24111, 67882, 54747, 174240, 110344, 94961, 114973, 72370, 73918, 15923, 15159, 7647,\n  45171, 65568, 43530, 34464, 70826, 34474, 60365, 197139, 141949, 210472, 46891, 121996, 40063, 94408, 12981, 134679,\n  23979, 51874, 24714, 19995, 24254, 36223, 157770, 7326, 37309, 94133, 22106, 78205, 26724, 2537, 25382, 106656,\n  27179, 66311, 110415, 22901, 24718, 57112, 55550, 53766, 83648, 13063, 9413, 49639, 54938, 59353, 51453, 13425,\n  14591, 124743, 17157, 12381, 17425, 61233, 6845, 73147, 29525, 129664, 27744, 5277, 102675, 54090, 98234, 13352,\n  48975, 17754, 16594, 102750, 48654, 39678, 70262, 34873, 12316, 8508, 46395, 134713, 8929, 37841, 2872, 44089,\n  60640, 45964, 41710, 35853, 41709, 32561, 10847, 30533, 50168, 131914, 35502, 7179, 63264, 101004, 13098, 13461,\n  89812, 195792, 68289, 50907, 50716, 618, 42226, 56670, 48632, 3817, 23883, 6968, 38755, 21629, 7154, 3872,\n  138583, 91142, 62213, 50389, 160123, 68183, 5493, 38, 55579, 58839, 15930, 157836, 71829, 40468, 28030, 16196,\n  24230, 33693, 43412, 1608, 233277, 6049, 16708, 17549, 46322, 16760, 153973, 62078, 39650, 117125, 26112, 36797,\n  166388, 166224, 101342, 69645, 34718, 6450, 41096, 88450, 24108, 54215, 7626, 56703, 98252, 7498, 5996, 104382,\n  7031, 18513, 1464, 20355, 106695, 12121, 15785, 39445, 62498, 113, 143048, 42438, 18258, 69031, 20970, 28430,\n  35062, 185809, 306428, 189608, 217827, 3480, 29084, 79447, 78731, 32985, 65014, 127203, 34824, 4550, 257781, 321144,\n  33354, 3217, 218324, 88938, 19520, 11596, 43514, 141333, 60852, 65248, 6297, 11095, 2432, 14119, 13748, 7469,\n  60224, 12819, 57422, 64540, 8587, 52981, 73978, 23601, 2836, 30776, 142181, 19639, 62955, 10337, 595, 211745,\n  702, 140990, 56342, 19255, 20227, 135292, 29499, 348456, 42285, 59021, 23153, 398, 40560, 12943, 20085, 118311,\n  95592, 31441, 30421, 18709, 62486, 96516, 37157, 85251, 11094, 115980, 17285, 128523, 53035, 4890, 10141, 87821,\n  143291, 78302, 59857, 33639, 18842, 69975, 11769, 10009, 46177, 505118, 54757, 192067, 77994, 12960, 50591, 24130,\n  1770, 3662, 133316, 209915, 9657, 48891, 39791, 15630, 107422, 16844, 81827, 8655, 172915, 60826, 36740, 246774,\n  32655, 23684, 174097, 93563, 128716, 9168, 16463, 138739, 25886, 3373, 1869, 35842, 25164, 41241, 1126, 17486,\n  156740, 84370, 68201, 98020, 119928, 18998, 6457, 120651, 165875, 3291, 58021, 5480, 85817, 5424, 7918, 43877,\n  11007, 125299, 24181, 67060, 89110, 233405, 35096, 471, 33956, 19798, 152016, 168120, 12652, 156405, 133111, 116254,\n  65156, 42113, 9958, 120153, 180266, 111540, 269252, 123200, 8494, 34196, 8578, 82607, 36889, 12572, 69053, 33057,\n  19958, 67796, 22249, 3640, 20955, 15759, 9894, 33572, 96, 8969, 80871, 33260, 1264, 67165, 9108, 87451,\n  118288, 65977, 59131, 17708, 135769, 66193, 98679, 61993, 44754, 23134, 122439, 76614, 86671, 113511, 7544, 55848,\n  5632, 21119, 183800, 40580, 19026, 82001, 99485, 55491, 168220, 108940, 236173, 16220, 289120, 163513, 75470, 32902,\n  33569, 88755, 3113, 96883, 93821, 299927, 114933, 5574, 66144, 80618, 43070, 125428, 70635, 119887, 3673, 55958,\n  7687, 101495, 5831, 97794, 5642, 23968, 7105, 10753, 2714, 39381, 104590, 82035, 55445, 30394, 30985, 36078,\n  56636, 42720, 49190, 134117, 71545, 2558, 567, 53812, 184182, 144, 41897, 149050, 93133, 9426, 48576, 19715,\n  7332, 68965, 74846, 31701, 37389, 27344, 9014, 157686, 12643, 17067, 29166, 15457, 52315, 133218, 97956, 26560,\n  22729, 19455, 100687, 66306, 11014, 31241, 157229, 1036, 158742, 1911, 18856, 8404, 17050, 49637, 105257, 26263,\n  152889, 33300, 24194, 15449, 50178, 57835, 89431, 93344, 34601, 52068, 6811, 39076, 41945, 41909, 38286, 221235,\n  52136, 190373, 62204, 7398, 9948, 20577, 17514, 97470, 26914, 13538, 27727, 115631, 63548, 60637, 26694, 36204,\n  95721, 237466, 17635, 8311, 115951, 155407, 372775, 119613, 40759, 7149, 153893, 29766, 8960, 16679, 2573, 75649,\n  158258, 17939, 56612, 138333, 38938, 4371, 39651, 46863, 49232, 4029, 76050, 62734, 48325, 4870, 8916, 70189,\n  42234, 482, 51761, 85517, 81523, 299332, 91771, 91710, 253019, 32687, 95521, 66713, 66128, 29849, 16707, 26650,\n  40978, 43719, 4139, 42193, 20048, 230595, 55007, 13024, 238048, 4557, 73590, 107873, 38760, 29575, 21439, 27927,\n  62928, 129083, 22364, 3858, 122560, 50006, 32925, 40998, 118532, 6970, 5412, 10487, 43687, 53543, 72899, 67285,\n  137472, 16857, 46509, 32903, 163689, 209351, 336887, 206325, 26680, 147850, 10276, 166671, 9878, 111570, 4130, 56293,\n  17448, 129038, 49791, 3323, 51035, 77462, 50111, 20907, 16211, 5982, 24162, 56278, 60834, 28521, 209493, 95578,\n  36749, 39356, 52739, 208999, 29178, 58645, 19127, 12057, 14241, 39982, 78123, 80813, 59868, 6719, 15571, 19762,\n  150086, 20349, 278029, 2666, 2305, 133772, 121203, 3570, 26477, 55785, 32824, 6151, 42422, 310941, 94923, 18190,\n  34342, 18288, 70657, 25029, 165341, 34909, 320097, 33308, 83279, 75404, 45112, 17301, 33894, 4577, 18669, 9219,\n  14257, 107253, 512, 36710, 29928, 16653, 7279, 43478, 12743, 3862, 3899, 37090, 13957, 212990, 2895, 53197,\n  125571, 40119, 7450, 95395, 89134, 18938, 54751, 39220, 66712, 44978, 98747, 35334, 10952, 9840, 217378, 35750,\n  16507, 209521, 52915, 36820, 147839, 56525, 13285, 1981, 30146, 51236, 7364, 104143, 7249, 222095, 6399, 165008,\n  16565, 13029, 27969, 105952, 45399, 41770, 169129, 53714, 39874, 7853, 68938, 61382, 114565, 59737, 77275, 29135,\n  215780, 6342, 153711, 36717, 31990, 50742, 2834, 52961, 230881, 31804, 87897, 73954, 171477, 9339, 91416, 34110,\n  102, 54930, 1613, 11876, 196546, 591, 20460, 50406, 44538, 17056, 34267, 74596, 10880, 9193, 96244, 29689,\n  84948, 20424, 26253, 45632, 281705, 119042, 185961, 44497, 86651, 192207, 11795, 114742, 10617, 265712, 62568, 92499,\n  31395, 217897, 187475, 50383, 2342, 23312, 42405, 26096, 453658, 416, 133446, 93547, 43569, 10623, 121978, 21757,\n  60561, 74826, 42853, 104403, 132901, 72040, 67234, 59013, 21845, 102518, 153642, 11146, 17727, 102632, 86313, 72775,\n  58556, 407048, 21027, 6844, 258242, 89512, 3527, 107940, 22262, 23956, 4850, 30270, 58728, 16998, 117875, 20689,\n  4008, 14646, 93000, 1170, 77997, 167859, 54531, 246835, 11806, 26637, 167713, 64014, 37431, 88103, 62362, 304585,\n  30599, 44120, 31653, 42563, 81375, 43712, 1534, 49941, 109137, 145866, 103885, 146125, 185787, 22202, 33673, 3681,\n  114085, 22277, 2072, 10477, 217292, 47874, 25630, 61064, 97453, 94351, 180344, 34224, 169085, 68184, 1881, 53451,\n  30593, 100128, 39311, 3509, 60212, 90102, 7297, 23473, 11544, 261844, 8370, 27945, 102056, 100221, 39918, 115112,\n  65580, 27264, 10582, 66982, 2384, 29292, 51255, 8837, 91655, 60384, 127046, 34788, 4855, 82574, 50338, 58959,\n  95725, 135206, 28047, 308666, 7295, 41193, 95306, 61581, 157994, 185542, 36976, 28033, 16228, 38830, 10448, 15213,\n  20669, 49883, 2493, 9951, 53276, 25223, 13971, 17396, 141590, 48264, 32377, 28668, 105246, 22993, 20557, 139621,\n  17334, 37996, 19658, 20744, 25440, 34122, 116482, 22910, 76067, 36796, 67819, 11102, 17967, 9536, 55606, 117501,\n  39321, 17563, 65478, 3571, 38911, 73504, 54583, 10444, 11362, 66927, 89439, 14702, 28559, 7682, 1513, 70102,\n  63807, 20057, 46270, 21001, 21627, 256959, 184942, 165920, 26468, 36183, 112227, 4448, 85816, 65617, 77464, 8502,\n  40120, 56527, 77638, 3102, 1025, 32749, 21811, 153766, 15234, 14725, 328941, 53852, 58319, 90203, 39231, 68729,\n  69516, 3450, 70578, 52687, 66512, 8474, 90859, 4090, 124548, 66064, 39981, 28642, 75845, 40634, 22064, 107475,\n  78873, 112238, 18036, 60258, 22137, 89278, 35142, 92257, 46681, 60200, 168934, 5658, 51242, 3324, 71459, 64772,\n  85683, 32, 475, 18068, 32909, 134334, 1380, 31213, 76747, 9749, 4201, 23438, 35555, 83518, 23878, 30619,\n  43396, 224662, 33147, 28171, 101465, 60063, 34256, 71664, 1765, 160809, 93427, 22239, 73094, 35152, 17172, 38091,\n  1077, 83764, 93545, 57605, 2962, 9185, 13119, 81080, 39028, 85967, 49835, 9330, 66777, 27605, 184827, 77443,\n  57831, 49230, 57654, 174766, 42048, 200323, 166050, 27249, 15828, 76305, 4194, 44524, 13962, 51363, 67697, 14701,\n  36041, 69963, 72263, 4470, 63657, 47301, 159567, 22495, 52412, 69094, 411, 3653, 5242, 4607, 116518, 99099,\n  58846, 58552, 89470, 53229, 2141, 273007, 27018, 137017, 5506, 4365, 159178, 120422, 219012, 127162, 69641, 26407,\n  134451, 42927, 9321, 12622, 3936, 145843, 24141, 64837, 182230, 170529, 104842, 135255, 17558, 17348, 53327, 12872,\n  17153, 10391, 30, 74060, 152237, 14185, 205380, 31566, 22621, 30796, 108736, 26638, 49377, 673, 90154, 51194,\n  170216, 63571, 45050, 32131, 35257, 17360, 55199, 20393, 68233, 118377, 63209, 4669, 65374, 65781, 84411, 92579,\n  6510, 108160, 56952, 192831, 11126, 55557, 110245, 73583, 212151, 16429, 369879, 20590, 7184, 24497, 41359, 86934,\n  2480, 131718, 116501, 37833, 22517, 9731, 10757, 78661, 3437, 19565, 6471, 13896, 33073, 74906, 286, 53375,\n  30156, 29608, 44034, 13989, 16557, 36336, 11786, 9016, 3768, 30883, 52210, 33318, 55067, 37827, 143891, 319150,\n  86829, 93201, 25144, 48395, 91000, 56891, 94800, 60129, 12350, 105311, 185, 78672, 148650, 2793, 13582, 54814,\n  66017, 22898, 190292, 69218, 79424, 1785, 10144, 90001, 70885, 6226, 65791, 123504, 49066, 19757, 151381, 633,\n  28250, 21135, 4879, 91112, 21369, 79333, 54846, 138302, 51213, 7684, 96590, 49597, 34533, 30172, 13591, 193897,\n  11510, 1702, 73010, 42908, 3258, 13889, 151689, 47726, 18176, 159526, 179101, 31058, 18465, 26752, 188829, 15744,\n  84413, 58916, 38458, 15452, 6315, 50155, 89783, 5933, 36411, 8754, 11471, 15409, 163765, 12966, 2808, 36697,\n  4346, 161209, 70415, 56116, 356, 211098, 14356, 36846, 107618, 53672, 48457, 30017, 598, 176513, 81011, 18982,\n  13727, 86974, 48130, 58055, 285026, 119331, 69388, 22734, 162695, 127129, 6676, 10209, 8749, 19120, 28354, 35996,\n  14583, 2294, 21774, 7098, 7132, 30506, 68020, 26105, 63521, 287047, 31652, 29144, 184253, 45019, 59739, 54276,\n  32378, 4681, 28618, 155387, 25991, 60268, 28085, 115514, 5604, 89273, 73475, 54698, 30961, 26093, 14648, 29343,\n  53675, 45157, 6691, 46637, 4874, 13617, 45597, 95292, 84693, 71181, 195063, 4205, 5086, 45424, 49483, 57401,\n  34811, 81433, 10920, 60312, 26978, 122016, 164823, 61302, 56564, 35695, 36714, 67995, 7904, 42503, 11148, 636,\n  33519, 45175, 78078, 5252, 51221, 95264, 51178, 64304, 113942, 105499, 51841, 54146, 69253, 1646, 75338, 105535,\n  6664, 10892, 158642, 62272, 125563, 215912, 33549, 19391, 22055, 105382, 20979, 20764, 220680, 38079, 4062, 13641,\n  102008, 4203, 20143, 28206, 742, 47639, 13458, 8201, 51930, 16197, 22187, 25787, 19494, 75134, 114304, 94871,\n  176108, 45555, 116, 160484, 44424, 12397, 146985, 10330, 35123, 239546, 28027, 7835, 13025, 82191, 412132, 7092,\n  75685, 170210, 25010, 106234, 11759, 43065, 8341, 715, 74335, 50832, 12326, 62728, 22250, 132367, 15166, 1485,\n  181453, 100489, 159053, 49558, 131147, 218225, 72843, 179732, 16984, 57645, 5036, 111986, 132115, 50930, 114625, 1202,\n  154311, 67481, 16722, 47767, 11991, 40423, 208598, 57602, 76452, 34425, 3714, 48128, 52609, 81295, 9952, 36845,\n  85351, 16065, 20654, 19823, 196, 24873, 26870, 1297, 30969, 9296, 54228, 102469, 9198, 72519, 70039, 108396,\n  74919, 85172, 66125, 101377, 2529, 117805, 96810, 24778, 56838, 145070, 22575, 3889, 71779, 55500, 69200, 56256,\n  29187, 1545, 88869, 2923, 116304, 4719, 101420, 2691, 3504, 4334, 13196, 24283, 62330, 11167, 46433, 98976,\n  41190, 4304, 38379, 134621, 86153, 55398, 18685, 16560, 28393, 104952, 236521, 190161, 254926, 97238, 29381, 35076,\n  104228, 132048, 21165, 43831, 105189, 81338, 60610, 75143, 13264, 30942, 42614, 10992, 84359, 171469, 36755, 2955,\n  3574, 50858, 7720, 113363, 12415, 1082, 8309, 16640, 8534, 89729, 1994, 39280, 57147, 259158, 159887, 14424,\n  10175, 59116, 66944, 434056, 188174, 112776, 24021, 39757, 59504, 17275, 18210, 6474, 60932, 53833, 48968, 4909,\n  66318, 8851, 66549, 14450, 16407, 3384, 60036, 132244, 107921, 15561, 173708, 120543, 17638, 31452, 27253, 351,\n  99103, 3968, 104995, 54896, 49278, 134414, 51028, 59123, 28403, 11528, 46089, 883, 39786, 58165, 83022, 52349,\n  145865, 50737, 25618, 47214, 8462, 6871, 83132, 9635, 3558, 132475, 8680, 97166, 43406, 3898, 139071, 89536,\n  142271, 8320, 29089, 83232, 29139, 37374, 11887, 13573, 21989, 22330, 18987, 8277, 36552, 94008, 13402, 19357,\n  93955, 192242, 23973, 19276, 72365, 83440, 43343, 20913, 7176, 15598, 107084, 9241, 13556, 46936, 46456, 48864,\n  106185, 54904, 62326, 15469, 37957, 3365, 221144, 71002, 321774, 79203, 35192, 114690, 17782, 21700, 10335, 97643,\n  129017, 125386, 115842, 123788, 51154, 15859, 74495, 30765, 27938, 35855, 55933, 25082, 24952, 27639, 71742, 23512,\n  1935, 32522, 98612, 72854, 39366, 29090, 7051, 75719, 2791, 156786, 23966, 41744, 33489, 127417, 36727, 13017,\n  41582, 128016, 125842, 141281, 56078, 108220, 31920, 77429, 24558, 59290, 9558, 18760, 9311, 51229, 19776, 17252,\n  5449, 45702, 18396, 21552, 218786, 72761, 87355, 23965, 27808, 90969, 38872, 26050, 190429, 178071, 13825, 15009,\n  68013, 27591, 38972, 14110, 36020, 50172, 200538, 281255, 86003, 53465, 47708, 215042, 29735, 28534, 1368, 69656,\n  3404, 24318, 47650, 37653, 87348, 40656, 8697, 25748, 119357, 39951, 51347, 22849, 115714, 1560, 13392, 73201,\n  2324, 35889, 27677, 41987, 86796, 378138, 63587, 34445, 81973, 5437, 94808, 11707, 40992, 27780, 19572, 62130,\n  43376, 35564, 204011, 21987, 93621, 4561, 146551, 233073, 28784, 56146, 1533, 99739, 16808, 78879, 204037, 27916,\n  36367, 31905, 55776, 19527, 2517, 49088, 49061, 67853, 2909, 67751, 72529, 12945, 191926, 57369, 47731, 345715,\n  24978, 37675, 6961, 26371, 55303, 17783, 45945, 57303, 53308, 102816, 50376, 152609, 205724, 29088, 100615, 14981,\n  60068, 20755, 67912, 22984, 3098, 119389, 76407, 31834, 21375, 86387, 71132, 54368, 64784, 154591, 7007, 38915,\n  23949, 15688, 86044, 32410, 26579, 72957, 140702, 2534, 63121, 109577, 36571, 7087, 12319, 38027, 139635, 69422,\n  80145, 58104, 77565, 134884, 39967, 128121, 122239, 98149, 97861, 77841, 122108, 53941, 6757, 105412, 5433, 45309,\n  70143, 41083, 108846, 68195, 67642, 48548, 22786, 15898, 37082, 16924, 108012, 18926, 34698, 130920, 7208, 84736,\n  69140, 115981, 3166, 30758, 122883, 16988, 18278, 9920, 46151, 31634, 162250, 22353, 62187, 128316, 15612, 158856,\n  80934, 678, 6963, 76542, 429, 111036, 69613, 18534, 19437, 41943, 186274, 23104, 135071, 64054, 152408, 69055,\n  137885, 55427, 70719, 41478, 222647, 50820, 94953, 48990, 13331, 245898, 18180, 15149, 154065, 124925, 217145, 82559,\n  327, 139288, 191206, 14470, 61778, 6536, 73668, 129358, 74257, 25611, 26141, 105172, 40116, 65034, 30807, 96573,\n  37493, 33559, 28049, 4551, 14855, 7513, 48252, 20443, 85079, 69697, 8617, 95869, 237641, 48366, 36858, 128756,\n  42342, 3347, 3587, 16403, 102164, 201481, 17664, 68064, 199965, 62177, 224396, 15650, 71204, 12089, 125579, 76206,\n  4662, 192158, 115192, 18064, 29368, 28388, 88784, 93189, 5042, 144274, 26733, 112088, 113914, 8714, 3328, 85297,\n  122214, 129118, 14482, 6034, 8955, 1500, 17059, 143211, 13149, 46390, 180700, 11460, 102503, 31711, 124947, 75478,\n  43173, 42126, 146701, 30953, 5659, 29827, 78342, 38880, 163787, 38389, 57177, 12232, 69003, 35027, 31713, 32846,\n  307084, 9190, 1177, 53022, 63392, 36783, 49720, 204857, 171080, 2218, 24668, 46908, 21390, 44902, 5316, 16460,\n  81918, 10429, 22493, 40140, 86666, 28478, 19197, 39367, 36622, 197757, 35536, 74, 24126, 27886, 49478, 60977,\n  28887, 159663, 25478, 34942, 5736, 100422, 11653, 280716, 28054, 76213, 269086, 56854, 207170, 12900, 26987, 34564,\n  163428, 35718, 204153, 14178, 79891, 154374, 93383, 82977, 346467, 2260, 194527, 234413, 95363, 223815, 84524, 24639,\n  38980, 45400, 11669, 39361, 111806, 107478, 23180, 284178, 80828, 13760, 60535, 160002, 9200, 111334, 9377, 23027,\n  19288, 10467, 219338, 9403, 294896, 38891, 13604, 6964, 114468, 33089, 246026, 89623, 87405, 73198, 53282, 51034,\n  111715, 3542, 21564, 14671, 141705, 108308, 240720, 1039, 7015, 84375, 20894, 62644, 72754, 61580, 52142, 32302,\n  68463, 27046, 8380, 114459, 48738, 174003, 101876, 70865, 243147, 15573, 1008, 73339, 33397, 75662, 295288, 97483,\n  101210, 83260, 287998, 315229, 37051, 33599, 14151, 14676, 98801, 6611, 61888, 45855, 82847, 52987, 104357, 56918,\n  20397, 29312, 1971, 1398, 4940, 37732, 8028, 358536, 185559, 183958, 188192, 3892, 18716, 73119, 6906, 4369,\n  54718, 83934, 109096, 203506, 83491, 133450, 4849, 4027, 11725, 13003, 142499, 87752, 40803, 56197, 37560, 36968,\n  1128, 46164, 119031, 23432, 12128, 100279, 84518, 28176, 23060, 41295, 20799, 1558, 5174, 23677, 97773, 39548,\n  7745, 10446, 105114, 10769, 67007, 87718, 236680, 161719, 46701, 32017, 4931, 19125, 1571, 28423, 43674, 64085,\n  27807, 77944, 8529, 13223, 180186, 17974, 13548, 140128, 256996, 51253, 43890, 57544, 18975, 7744, 44658, 28313,\n  16837, 105, 127130, 126370, 7877, 20389, 133921, 174075, 212758, 64619, 11797, 47857, 250379, 30209, 1917, 86594,\n  15440, 21744, 135164, 34325, 87954, 11946, 12540, 311, 57755, 56815, 231078, 40529, 24719, 141657, 31438, 81877,\n  124057, 251942, 13765, 33986, 83461, 63216, 7231, 198398, 258, 90044, 88181, 173923, 50864, 61645, 10174, 54553,\n  8874, 28481, 1537, 50513, 29038, 39872, 84988, 57246, 71289, 12015, 94709, 4871, 31627, 279590, 81311, 43545,\n  15429, 59109, 71443, 10416, 9005, 6896, 26184, 104749, 4061, 38580, 23344, 2875, 113851, 13804, 63848, 29618,\n  107716, 136811, 54885, 33689, 82819, 50624, 149592, 114467, 13651, 11306, 73580, 85777, 79656, 166366, 222515, 39565,\n  117851, 47704, 43581, 137265, 17539, 25867, 43261, 1034, 111446, 117360, 32008, 3664, 12938, 250542, 16992, 14203,\n  39724, 83746, 187150, 20582, 190787, 110150, 10914, 42740, 4352, 122213, 31831, 49606, 15402, 8583, 34572, 18519,\n  21070, 72128, 605, 14069, 62708, 68579, 26360, 45158, 8539, 33700, 23921, 174967, 23777, 21086, 47035, 21403,\n  73853, 29070, 14402, 55968, 13552, 25123, 132516, 99114, 38810, 83727, 93287, 108584, 86117, 4037, 69026, 148748,\n  16285, 151286, 2526, 67336, 56400, 114949, 38156, 64061, 1718, 14168, 68963, 19987, 75342, 72606, 92460, 25819,\n  142863, 865, 10759, 102417, 29033, 128297, 176851, 239106, 378, 3476, 126764, 880, 110113, 35294, 142380, 60787,\n  180321, 12139, 33148, 3243, 32586, 75807, 8895, 69743, 23606, 76161, 0, 32234, 26393, 15253, 101159, 37444,\n  160984, 100458, 106798, 118153, 207987, 94453, 31068, 199369, 23783, 55406, 72063, 196753, 8406, 65985, 6649, 169369,\n  16904, 2912, 14378, 60219, 24596, 44552, 22129, 79241, 47274, 46556, 155072, 25, 11693, 93339, 175196, 82189,\n  46539, 25983, 55777, 39522, 60524, 133678, 18470, 77553, 78595, 83411, 33676, 121561, 48423, 93395, 74963, 17181,\n  31718, 50927, 45519, 1283, 20170, 4973, 55435, 106949, 9009, 50903, 7663, 1685, 146268, 116269, 1759, 101910,\n  15183, 77271, 25151, 101108, 191060, 44211, 30237, 101323, 172765, 81369, 7540, 8670, 1349, 2983, 72423, 57110,\n  138436, 10840, 116808, 148570, 37365, 13235, 144011, 326438, 10970, 137859, 245169, 166948, 40509, 8825, 6884, 140489,\n  225817, 339638, 308668, 14440, 20021, 172262, 20842, 35348, 70394, 77862, 44480, 114795, 152138, 205967, 80249, 66813,\n  21541, 21337, 74233, 246096, 66559, 255232, 7873, 74405, 66544, 78592, 41670, 16122, 89352, 272783, 66583, 16290,\n  2725, 97449, 74073, 152635, 17258, 14662, 164479, 7400, 91345, 77718, 116341, 23495, 7313, 145703, 66781, 95536,\n  3815, 59962, 62075, 48667, 115868, 88403, 11136, 31573, 8660, 48458, 10303, 30913, 40362, 76502, 54728, 210919,\n  4071, 10395, 14132, 19281, 103524, 46479, 2475, 9346, 39388, 11097, 7103, 61594, 118275, 49094, 17865, 16935,\n  21950, 49474, 38996, 44270, 6549, 83808, 6663, 54784, 38226, 40402, 13514, 51690, 32754, 33017, 146868, 3834,\n  209574, 31460, 2290, 5991, 29201, 189025, 95100, 116204, 43495, 37630, 621, 42790, 18028, 147636, 74713, 72101,\n  20296, 39620, 52377, 149079, 40597, 71087, 48840, 41861, 18370, 78232, 9624, 43707, 47520, 67447, 30945, 84196,\n  202450, 110891, 61689, 177365, 24134, 22168, 57538, 47780, 2219, 96079, 30892, 4049, 8195, 17695, 2313, 196966,\n  69545, 7785, 159038, 116984, 38041, 85191, 95576, 35677, 136934, 87868, 8522, 47264, 46374, 90011, 2454, 121060,\n  19041, 15646, 218596, 20647, 159811, 5273, 78222, 5790, 84865, 690, 36264, 169096, 58620, 49769, 19870, 56574,\n  846, 44944, 30096, 21418, 98749, 62549, 49755, 90559, 13569, 65527, 23045, 35183, 30714, 1120, 129237, 133919,\n  97246, 73893, 1242, 5886, 32186, 73097, 9292, 172076, 4479, 48341, 159618, 10702, 27355, 9327, 3896, 145089,\n  92973, 127562, 80631, 140609, 35214, 40087, 6621, 60953, 151491, 93233, 133991, 5681, 75963, 13834, 189749, 48238,\n  37631, 42943, 70301, 22025, 1561, 101790, 52288, 23519, 27200, 15594, 330, 128333, 238083, 77116, 27436, 14656,\n  23182, 176130, 43018, 93766, 60756, 68727, 36117, 110670, 12291, 90265, 17003, 86775, 25766, 50378, 97783, 72630,\n  39355, 51597, 76915, 9532, 102333, 333464, 26234, 91954, 87362, 18461, 14063, 123415, 65741, 87119, 13821, 69651,\n  59906, 29250, 5334, 111676, 19538, 14466, 71314, 49631, 201575, 100994, 81169, 99402, 48772, 1958, 86381, 84313,\n  102938, 3927, 14847, 115137, 24438, 1719, 106468, 14344, 292580, 113808, 25709, 4422, 39964, 14448, 9781, 167464,\n  66366, 38612, 21306, 135701, 9004, 3967, 14882, 60987, 61379, 70755, 79621, 230123, 50548, 251137, 45013, 68059,\n  37622, 8601, 52714, 131016, 38732, 161564, 5054, 17043, 28379, 100315, 11542, 22026, 68180, 40581, 195387, 5840,\n  76622, 286510, 15220, 21299, 17488, 10435, 34592, 77414, 69849, 292262, 92100, 61536, 5963, 40657, 72834, 85029,\n  7219, 137580, 32702, 24398, 48143, 18315, 7679, 10221, 43413, 55964, 56264, 22174, 55358, 421, 32944, 33586,\n  540, 28638, 297324, 19055, 58691, 13123, 1457, 13545, 29506, 12292, 90917, 28767, 19245, 95156, 15265, 9677,\n  52193, 329199, 120474, 31550, 48621, 32454, 173844, 6940, 5518, 104662, 27465, 11002, 13048, 23406, 127455, 219189,\n  118625, 966, 55994, 71978, 44755, 44425, 58484, 81947, 191081, 71933, 4128, 149448, 42061, 45036, 34993, 81007,\n  89197, 17973, 12644, 20286, 2259, 12086, 128406, 38420, 60665, 7439, 63696, 63513, 66994, 154461, 3204, 269842,\n  71210, 72373, 47920, 147744, 51232, 11668, 11964, 5455, 3585, 62466, 87325, 135079, 142096, 6038, 3351, 59851,\n  55024, 90797, 96831, 151965, 7892, 59192, 18848, 84506, 8345, 62542, 50046, 26538, 58653, 123823, 70584, 33087,\n  463307, 52217, 94498, 162262, 65658, 37813, 1798, 133237, 64319, 20468, 342279, 2483, 137941, 174532, 134882, 13053,\n  136323, 101319, 14858, 315661, 53499, 38349, 1883, 36549, 12746, 4783, 17315, 26629, 43492, 1433, 30848, 103477,\n  6978, 53491, 254027, 59138, 95163, 23047, 130383, 71358, 29925, 104048, 147110, 20605, 60175, 141493, 1502, 26372,\n  5128, 8043, 160154, 205752, 7352, 24589, 41005, 8787, 41463, 180084, 35056, 128767, 184756, 116446, 216131, 52109,\n  121146, 31824, 120507, 78611, 20473, 80909, 52814, 53045, 18426, 47765, 19434, 251918, 4598, 37752, 2736, 30186,\n  5309, 104505, 61873, 39702, 54580, 60995, 6795, 78461, 14277, 102209, 56595, 76365, 121151, 84271, 40571, 22053,\n  10691, 60167, 8833, 12920, 56711, 2593, 16106, 101890, 43880, 47882, 105443, 26296, 63409, 2286, 236404, 3535,\n  76682, 31275, 91877, 94825, 11830, 60322, 77261, 14017, 172218, 120226, 23764, 296, 264898, 128743, 243138, 11474,\n  32632, 32455, 30389, 37844, 66536, 221177, 32878, 17990, 81062, 25157, 197499, 6108, 31649, 68174, 4883, 39604,\n  25788, 24670, 22233, 11063, 92774, 167596, 40860, 103202, 60222, 67201, 150525, 69109, 11100, 21724, 207627, 23699,\n  63159, 50235, 17317, 132722, 9432, 137156, 14594, 85114, 224657, 60669, 32727, 134466, 25240, 42617, 6453, 86119,\n  53613, 52551, 39633, 95001, 152, 22181, 33930, 6888, 138620, 139630, 14275, 67967, 163829, 44096, 23693, 35554,\n  2397, 2230, 20289, 26508, 85345, 44002, 373, 23558, 12501, 6393, 128738, 2065, 37507, 108535, 43648, 37304,\n  64932, 28919, 39223, 9316, 38575, 60236, 72946, 52874, 43522, 3500, 42635, 18532, 65789, 350700, 113725, 232391,\n  80198, 62151, 18623, 5216, 78796, 80102, 187580, 46871, 35226, 102412, 1673, 53825, 3851, 294484, 119721, 213745,\n  108891, 1551, 16270, 77, 73311, 86689, 90501, 11580, 3060, 174403, 54046, 2060, 28391, 42872, 40600, 5734,\n  93671, 48215, 33532, 19766, 39663, 848, 33334, 33841, 46142, 2841, 116488, 9276, 30982, 41267, 161026, 52345,\n  66041, 22012, 75546, 14211, 37281, 137475, 48692, 71432, 68157, 27935, 25905, 26558, 26553, 91667, 162874, 41931,\n  71872, 49342, 134603, 3964, 81142, 58684, 69664, 61624, 211527, 194930, 43281, 38136, 39747, 141202, 109912, 103720,\n  118119, 105830, 244717, 53752, 22695, 3660, 15950, 115237, 2859, 29995, 32157, 26681, 11066, 63677, 2677, 27475,\n  20232, 20055, 83960, 187268, 168911, 71409, 21339, 67656, 7933, 3860, 3943, 4936, 197005, 39134, 94952, 21684,\n  17066, 56970, 61053, 6076, 111071, 9161, 30747, 75947, 44434, 9778, 40744, 3960, 133994, 16681, 158292, 120209,\n  120798, 124190, 20560, 28017, 12766, 9520, 51106, 98867, 227798, 634, 8951, 16361, 45756, 34211, 71984, 20818,\n  132852, 2771, 8039, 31695, 29917, 46819, 43140, 4911, 36076, 31350, 146547, 12832, 55352, 87682, 102259, 20181,\n  65281, 125529, 76789, 74087, 129800, 20270, 210263, 10610, 41958, 199960, 136842, 106466, 18944, 91106, 109596, 45385,\n  84678, 1826, 26239, 13942, 18580, 74780, 96474, 109106, 168093, 58817, 77576, 139329, 132621, 264328, 131918, 3004,\n  39997, 277046, 10657, 188062, 54092, 9389, 208482, 138342, 27740, 112130, 141428, 159919, 32354, 78912, 10848, 248488,\n  3770, 58675, 143326, 309222, 114118, 121341, 21213, 104326, 103242, 247904, 10251, 17363, 43918, 50107, 99756, 9914,\n  15899, 1529, 57591, 10958, 18574, 191645, 27047, 33819, 145944, 50973, 10931, 515, 3190, 56895, 26750, 118357,\n  123469, 6582, 232402, 185264, 219903, 14816, 104060, 2257, 24169, 2672, 34078, 85037, 100571, 54688, 18794, 11296,\n  62403, 48268, 85546, 58594, 16776, 5744, 7336, 60494, 92779, 55136, 31725, 41292, 14535, 43085, 170495, 62016,\n  17168, 20160, 13301, 31775, 16475, 23866, 68028, 7708, 14304, 27024, 412982, 50360, 37231, 31172, 8313, 18133,\n  1712, 149874, 165108, 53176, 28218, 60812, 11433, 110651, 242754, 239758, 103026, 54413, 61688, 60159, 42554, 63279,\n  28980, 26817, 24147, 239906, 1318, 94868, 66949, 9143, 51359, 25429, 40100, 150526, 222657, 6742, 15209, 35877,\n  99200, 23325, 5454, 116860, 67989, 20127, 66101, 152710, 31772, 35795, 93237, 22499, 23932, 217156, 63347, 85225,\n  35351, 44967, 43097, 63722, 201251, 232588, 42922, 76661, 49041, 51431, 91264, 26250, 27306, 16146, 171707, 8346,\n  19128, 15883, 46818, 14147, 40135, 98017, 121209, 5750, 3986, 4803, 194061, 109091, 77333, 135407, 15726, 139517,\n  19649, 240604, 296254, 18468, 120683, 261045, 15054, 49607, 151927, 90876, 33988, 94815, 21081, 4338, 3114, 25278,\n  7076, 168237, 197598, 5263, 78375, 28858, 96610, 1656, 77501, 139877, 164638, 29453, 101599, 77549, 15067, 106520,\n  8011, 191624, 67048, 47927, 89585, 15567, 16358, 40740, 96715, 19262, 3368, 257227, 58179, 82342, 164701, 77237,\n  5378, 183488, 891, 51832, 102138, 1421, 126828, 72223, 106793, 152999, 9464, 38181, 26051, 369537, 47723, 127195,\n  217276, 19701, 87052, 2899, 4197, 91519, 1222, 71232, 16297, 58674, 236388, 7640, 27014, 38262, 53246, 56437,\n  46721, 45960, 154554, 93517, 13322, 57858, 23476, 62092, 22806, 29494, 60980, 59522, 5278, 152497, 10089, 42687,\n  29629, 152505, 1415, 65715, 70632, 27834, 5144, 69061, 9647, 106305, 17509, 83636, 71519, 6066, 32864, 49020,\n  58818, 62070, 83328, 51524, 40603, 27209, 14130, 13006, 128530, 34289, 191758, 175447, 8903, 6644, 258111, 1630,\n  36770, 19694, 13099, 93412, 56900, 8695, 92739, 9361, 31483, 22727, 24402, 12783, 26935, 64112, 50162, 73354,\n  43845, 97824, 38035, 43333, 34265, 4521, 118246, 36777, 34920, 27802, 62580, 75613, 87658, 36480, 37311, 41140,\n  6114, 54859, 37921, 25174, 84767, 123137, 100067, 76401, 64250, 31608, 5782, 50390, 47318, 8602, 146787, 57571,\n  50720, 184949, 26374, 49411, 19264, 59669, 72340, 61, 162514, 37868, 20961, 23322, 33357, 104140, 12370, 75813,\n  13117, 173944, 10984, 8143, 6705, 185922, 4223, 25479, 46696, 78515, 10296, 173037, 75032, 3611, 146130, 87547,\n  71054, 20284, 76208, 179291, 87004, 88099, 25915, 10612, 42035, 58634, 8935, 45162, 69138, 29960, 4954, 9827,\n  11903, 75332, 189060, 145940, 99854, 68852, 2428, 35935, 102328, 55387, 95597, 31446, 19611, 66526, 25614, 75226,\n  34525, 91178, 34821, 57507, 69312, 5965, 54613, 73567, 6431, 38968, 305485, 72661, 49842, 46229, 13066, 35961,\n  101600, 6117, 6625, 94731, 133178, 5938, 14272, 71096, 108751, 55431, 8310, 74568, 41829, 15997, 69572, 115173,\n  89939, 33817, 27169, 164256, 225664, 113979, 208705, 24886, 48916, 4745, 105265, 2285, 99556, 76020, 16691, 17685,\n  9195, 67243, 29412, 15704, 130387, 12347, 87154, 6073, 5960, 22667, 45766, 126328, 36857, 50552, 563, 58566,\n  116724, 31042, 63335, 55856, 53518, 24055, 44320, 132215, 94002, 7583, 31931, 161536, 39077, 14213, 37853, 130359,\n  53996, 47829, 71470, 59662, 6945, 70919, 15101, 29373, 22261, 65721, 32624, 111143, 64291, 96324, 23614, 39737,\n  8314, 9557, 132103, 65689, 152785, 54960, 122712, 73272, 57588, 3782, 8427, 101263, 16522, 3063, 1332, 9763,\n  9091, 103598, 131811, 79941, 5048, 53350, 22985, 72314, 87671, 137942, 20832, 32726, 35441, 97544, 14838, 32661,\n  39509, 25235, 12815, 229677, 1945, 18478, 104804, 53001, 12423, 99415, 90412, 47427, 158923, 19643, 66679, 33927,\n  178413, 13851, 2378, 163553, 37549, 4735, 113147, 13151, 14095, 34868, 84260, 49719, 1475, 55719, 70677, 22297,\n  73188, 7304, 101811, 35472, 62878, 110472, 31193, 7011, 4819, 44319, 37242, 22235, 24012, 34311, 34630, 8117,\n  68534, 47855, 55542, 88606, 42606, 10807, 64311, 44304, 4010, 54889, 48956, 37274, 120809, 12117, 36576, 15154,\n  57497, 55581, 76707, 88824, 59564, 29146, 75878, 346295, 101758, 137754, 84121, 153651, 103718, 85489, 61427, 59883,\n  32701, 4692, 17006, 92343, 80116, 63122, 3829, 201429, 12345, 10158, 29504, 164968, 95834, 119755, 125824, 142638,\n  46918, 23943, 90123, 20494, 21468, 29167, 157195, 24079, 53213, 49163, 19311, 138007, 15665, 149198, 44724, 55347,\n  31200, 1573, 21255, 26337, 3867, 100570, 205427, 109262, 5140, 8979, 83224, 17644, 96013, 1279, 32509, 16380,\n  250744, 103649, 111338, 4321, 21016, 68917, 10756, 39197, 10069, 10563, 184865, 35905, 13968, 1109, 7847, 19871,\n  35449, 21656, 7996, 38626, 180829, 25293, 37599, 10356, 27683, 46005, 32258, 8111, 39704, 15702, 161889, 13627,\n  59956, 21006, 29672, 64295, 22893, 319443, 755, 33239, 3115, 11630, 35242, 316161, 26293, 180051, 34293, 25262,\n  32785, 45248, 4291, 1345, 75934, 380808, 185068, 5400, 62445, 95085, 113696, 37657, 141162, 2763, 1716, 31145,\n  62720, 101394, 197152, 222158, 2018, 103950, 53054, 8291, 83638, 37618, 74005, 127265, 19949, 171632, 21168, 31182,\n  114012, 109942, 16057, 103239, 95006, 48470, 141582, 50740, 3330, 57743, 91063, 68640, 99829, 25131, 192726, 1408,\n  130935, 113922, 160076, 66999, 309272, 153746, 62089, 54683, 9565, 23036, 233538, 39614, 55874, 51238, 28998, 51475,\n  121727, 56411, 33932, 53786, 37017, 49406, 91778, 26837, 23586, 252174, 2540, 47569, 319858, 177485, 2308, 5581,\n  40970, 118880, 34878, 1602, 27602, 64100, 36001, 13488, 8625, 28038, 116561, 45356, 112329, 100, 159062, 48033,\n  61060, 53312, 14278, 30173, 100088, 27580, 20456, 230013, 118525, 51822, 34883, 100756, 25922, 52426, 18317, 13881,\n  16232, 8187, 317935, 69863, 1907, 53514, 75569, 36902, 60671, 5105, 60024, 76920, 51583, 106419, 20458, 110614,\n  44553, 36111, 187025, 173919, 80993, 52249, 116521, 11851, 5262, 26289, 48960, 29999, 94679, 33367, 125032, 72126,\n  8676, 211498, 44721, 235091, 940, 97176, 26565, 5948, 20736, 10278, 50485, 12407, 11823, 41971, 135546, 103878,\n  3020, 21249, 253851, 97728, 16476, 7536, 49750, 6746, 12340, 94756, 71789, 16549, 152600, 40488, 30681, 120494,\n  97416, 90981, 75736, 36235, 3703, 36522, 4051, 90148, 25744, 143233, 74114, 50674, 66826, 186399, 55544, 63905,\n  16245, 17811, 43885, 57562, 16876, 12660, 11009, 92234, 46446, 722, 137637, 44043, 84798, 27042, 5314, 21312,\n  74227, 10917, 92213, 211986, 176020, 52818, 44610, 174541, 45192, 85977, 66236, 78509, 61955, 14788, 256627, 12032,\n  75496, 83996, 101534, 82235, 23946, 104883, 3183, 12850, 23626, 57697, 3225, 16042, 40372, 9541, 108356, 126495,\n  26036, 101893, 24582, 39880, 6149, 95087, 46546, 59092, 11822, 168583, 82335, 18729, 30582, 146256, 6074, 39807,\n  16541, 11986, 80148, 61456, 41914, 80721, 142480, 21004, 82385, 83655, 47670, 4769, 232823, 41862, 437909, 4116,\n  40921, 59664, 133104, 38104, 80773, 101843, 38426, 90874, 14930, 55522, 12793, 23708, 3631, 8582, 3112, 415975,\n  7517, 106586, 112390, 31555, 39619, 56075, 6299, 30930, 4348, 38188, 23437, 11888, 36180, 29057, 78844, 52556,\n  126106, 24776, 65214, 92664, 138939, 39642, 153427, 17494, 62611, 31501, 49371, 27056, 1477, 16503, 156270, 23995,\n  113512, 205238, 84709, 77316, 47321, 67623, 42436, 36548, 25052, 10369, 19122, 181758, 14546, 6743, 124696, 124095,\n  118881, 58058, 29158, 24211, 29060, 38102, 144694, 42736, 23589, 64142, 131963, 43763, 128322, 42128, 13330, 35824,\n  36795, 108915, 43897, 15657, 18401, 58900, 14806, 118110, 137921, 30097, 47026, 4142, 104699, 4185, 87711, 85997,\n  267929, 153261, 228359, 20660, 36194, 54339, 43073, 5692, 172791, 8213, 26146, 5686, 18113, 28694, 17786, 77352,\n  4766, 1852, 168140, 76409, 188215, 2179, 198971, 53244, 30083, 37124, 32195, 48123, 332586, 62934, 88005, 15880,\n  94089, 68377, 87929, 133891, 5805, 11217, 130365, 104237, 77909, 44881, 6260, 14391, 22194, 42271, 49170, 261884,\n  68234, 79361, 14141, 107542, 154976, 30425, 14602, 73251, 43220, 47978, 4990, 19457, 40660, 21608, 104477, 3582,\n  70001, 38324, 113052, 201756, 184893, 168071, 1921, 43965, 138095, 106316, 100248, 3825, 11128, 115487, 18833, 101956,\n  103010, 11802, 30806, 12615, 22663, 5074, 17663, 19426, 5108, 141373, 42930, 183720, 212615, 34077, 17051, 59686,\n  8485, 22524, 8691, 78244, 5565, 124298, 80099, 217111, 49222, 20498, 66793, 529503, 54614, 4186, 75927, 40419,\n  26530, 57883, 5327, 44876, 42639, 19706, 60003, 74433, 16319, 1599, 26748, 132682, 55062, 6955, 63969, 38461,\n  152662, 43166, 12979, 233, 105595, 18768, 75949, 56729, 21114, 135004, 23948, 42101, 22216, 320051, 21698, 23811,\n  10294, 826, 29297, 123324, 68158, 26264, 158791, 95573, 10436, 191222, 9993, 12298, 86950, 123108, 20858, 320830,\n  7206, 182464, 11757, 81755, 62115, 101508, 64002, 77412, 3977, 47597, 13370, 37935, 3657, 20526, 27967, 53371,\n  59874, 220318, 6962, 46594, 456, 88484, 47078, 50207, 118617, 53233, 59503, 10872, 18156, 12054, 11152, 77825,\n  106663, 95945, 18093, 1644, 112229, 13310, 264515, 9070, 80992, 55835, 162270, 15035, 17442, 111426, 61158, 71574,\n  8217, 10224, 82739, 45979, 55551, 15768, 183976, 64417, 5133, 165269, 38884, 710, 34344, 57175, 27784, 31790,\n  251927, 69733, 22676, 125462, 51153, 73708, 53147, 16750, 39364, 77866, 28089, 2461, 201321, 1010, 4858, 82482,\n  7816, 123565, 3065, 124019, 66803, 1441, 2105, 147722, 23057, 2238, 2465, 109286, 156724, 37091, 60022, 193667,\n  145664, 52352, 15876, 275211, 14276, 101280, 2609, 1583, 95705, 18345, 47036, 168953, 979, 1876, 17511, 99269,\n  2796, 7756, 45223, 209272, 6875, 13501, 19972, 3039, 13429, 88164, 40587, 48347, 212525, 23645, 107978, 39326,\n  50602, 71127, 74343, 5725, 26276, 95436, 69705, 115587, 28284, 114395, 42685, 63375, 3424, 66319, 70412, 12400,\n  19465, 68740, 40524, 83167, 52397, 11466, 284475, 42974, 46963, 1472, 38647, 63800, 31420, 5787, 41395, 21919,\n  51399, 116728, 34891, 76404, 206476, 116758, 145291, 39684, 92317, 182072, 3771, 102030, 48851, 66664, 589915, 408336,\n  637, 73775, 252578, 42675, 100820, 82225, 43433, 158753, 83349, 100070, 42160, 13599, 10317, 42154, 91152, 132379,\n  60227, 237752, 99758, 270587, 21972, 37249, 93833, 30614, 6908, 73035, 2132, 42490, 282439, 134241, 47775, 14940,\n  32857, 14647, 284209, 112665, 224767, 50372, 44452, 85605, 95629, 194385, 241460, 28172, 83882, 169721, 7505, 79753,\n  42106, 57611, 175719, 33441, 87338, 1110, 81138, 125252, 69757, 29461, 19692, 61492, 29840, 67754, 2077, 4100,\n  68709, 14021, 73781, 501, 37665, 25322, 62392, 106943, 45244, 60281, 4687, 224380, 114577, 31964, 38842, 6435,\n  49188, 3526, 19117, 97765, 175943, 38531, 30032, 27448, 54009, 25775, 5789, 30779, 186746, 7022, 85999, 42272,\n  106158, 428476, 5637, 191524, 70168, 172347, 5932, 69204, 3358, 12019, 9877, 55515, 234002, 64516, 10898, 36793,\n  50555, 139948, 27732, 39934, 9221, 14752, 203772, 22375, 129338, 7278, 3245, 117137, 9562, 29787, 9323, 102610,\n  20118, 12371, 39558, 8236, 32923, 70519, 19395, 17047, 78479, 97791, 16130, 89463, 118280, 22050, 37024, 89641,\n  65752, 52765, 71810, 108442, 4977, 44545, 69952, 19070, 10474, 23484, 18908, 21788, 102174, 82995, 4717, 97497,\n  60947, 27112, 3005, 36385, 129006, 15642, 16432, 25512, 10570, 43825, 108125, 73183, 83451, 75116, 95227, 44522,\n  8598, 15990, 22094, 1787, 8078, 14629, 33317, 78398, 159367, 125840, 12669, 67807, 123785, 64349, 37447, 22738,\n  80438, 10768, 15104, 98321, 16742, 22746, 11237, 41146, 5905, 13127, 47595, 35425, 5281, 12465, 54216, 37342,\n  181513, 107706, 142857, 10267, 42402, 87816, 7247, 28472, 6977, 228601, 32966, 2076, 163136, 1044, 31531, 56439,\n  93179, 59512, 313709, 36615, 42191, 80611, 121959, 23989, 14968, 38253, 2001, 194381, 50421, 88797, 45161, 11328,\n  112401, 85555, 7543, 130762, 105440, 130853, 18911, 12575, 33456, 139214, 29318, 62849, 57347, 85786, 171698, 27142,\n  121611, 1138, 80752, 54791, 4221, 77844, 47524, 140582, 94954, 18043, 313972, 120855, 36517, 63651, 18688, 30456,\n  24046, 74888, 58460, 70311, 27796, 50699, 84011, 20285, 6255, 200303, 74910, 57724, 33394, 16958, 104867, 22244,\n  72990, 7001, 57825, 20114, 135408, 43742, 54632, 30820, 116627, 34162, 194876, 27214, 1233, 2542, 89114, 33428,\n  57874, 24432, 73244, 13342, 25654, 36812, 42775, 137065, 95419, 3034, 109640, 69998, 68156, 15470, 40930, 43371,\n  401399, 12617, 9352, 26808, 313338, 55155, 36975, 17890, 55208, 52186, 226992, 16324, 45573, 22248, 14465, 65809,\n  93124, 76501, 130378, 8533, 119251, 28580, 43089, 52170, 47200, 44870, 76202, 54398, 38196, 30768, 33917, 36165,\n  11909, 25697, 353546, 54562, 130667, 372979, 149630, 9125, 45391, 144756, 57973, 19599, 73904, 2645, 258411, 25268,\n  64964, 61348, 128044, 132867, 167846, 141414, 52489, 108908, 4137, 41282, 39617, 33797, 115606, 493331, 11554, 30049,\n  52036, 71190, 77943, 31602, 62214, 2239, 12602, 19146, 7969, 18428, 131922, 852, 160925, 6259, 23383, 165390,\n  7187, 12808, 189017, 142381, 1132, 41841, 18701, 29043, 134835, 99, 15791, 9068, 40309, 98444, 127461, 27332,\n  73195, 112064, 5097, 39453, 64494, 72450, 24011, 7695, 80472, 162172, 41084, 177912, 444841, 55640, 51858, 96982,\n  61111, 3710, 41637, 100576, 26500, 116386, 75146, 6890, 45323, 42246, 54944, 26323, 40743, 9228, 36712, 134278,\n  53625, 8230, 40754, 28377, 52797, 241804, 26552, 261558, 22659, 53109, 11974, 49532, 15631, 300307, 18096, 92,\n  29739, 107565, 55632, 22306, 36706, 120177, 123369, 52145, 28841, 81811, 2967, 6374, 39147, 48191, 58003, 205210,\n  102836, 34591, 52967, 14473, 26794, 120917, 61270, 53041, 10536, 41117, 108058, 363097, 14845, 27166, 219697, 10564,\n  87305, 3185, 20437, 15052, 45874, 8849, 48484, 35021, 12241, 1310, 87883, 136400, 127587, 39626, 11562, 40667,\n  83833, 19748, 78478, 3152, 57183, 48701, 22123, 86751, 79722, 116436, 5100, 237306, 30844, 5999, 191075, 65796,\n  41304, 91788, 24098, 149740, 84655, 17286, 186934, 44080, 20825, 86063, 13887, 29758, 92500, 168321, 114890, 64965,\n  3722, 47787, 198506, 43466, 25655, 5407, 13240, 101325, 27811, 1251, 36859, 37980, 10157, 135970, 13500, 104703,\n  81634, 106088, 4011, 23578, 31362, 89054, 38594, 186633, 34088, 336505, 15479, 9229, 92487, 49521, 16527, 53016,\n  70123, 18389, 75248, 16479, 22190, 140271, 80094, 10382, 185100, 9051, 71918, 40905, 72658, 25068, 29185, 15832,\n  139035, 62499, 80063, 154077, 192523, 94489, 96542, 73906, 88241, 73266, 64690, 151133, 2078, 76322, 24201, 11290,\n  230490, 211312, 36153, 103, 44528, 9539, 36954, 4068, 85638, 788, 127939, 83761, 100198, 46098, 285530, 41414,\n  22088, 50928, 15371, 56983, 29982, 53638, 112051, 38452, 291233, 156894, 16748, 48674, 241062, 61341, 921, 24898,\n  13865, 8071, 235453, 118716, 4445, 177183, 19708, 21189, 137791, 14558, 145674, 60895, 37835, 46685, 36314, 3038,\n  107218, 25232, 61381, 204828, 31726, 43310, 143414, 32798, 19718, 11254, 127092, 88407, 38234, 37863, 143492, 19751,\n  72528, 6573, 60076, 8937, 23046, 86273, 12926, 43848, 19177, 134938, 18033, 102451, 66695, 155909, 57463, 34776,\n  5109, 25338, 58091, 2353, 17251, 3298, 36065, 271, 28077, 50946, 7379, 25203, 5617, 135531, 5335, 33853,\n  21554, 1514, 322875, 85207, 47839, 81931, 162589, 73080, 72425, 41666, 2205, 107217, 133825, 13839, 41951, 21025,\n  1486, 3869, 68800, 11775, 73065, 13658, 35920, 41391, 181275, 74450, 84216, 8800, 141508, 82895, 22465, 8542,\n  21768, 13000, 8240, 5971, 62971, 23798, 245635, 47169, 63082, 25334, 10884, 141547, 2512, 44744, 8650, 42190,\n  34200, 155357, 119815, 26059, 9904, 121764, 22752, 11476, 120309, 20694, 128696, 2930, 6392, 69057, 11264, 13880,\n  91243, 58841, 35178, 12534, 68416, 70963, 20428, 809, 268253, 4190, 31257, 66625, 41199, 52789, 24931, 112688,\n  116757, 6355, 182513, 90872, 138551, 2904, 50394, 19487, 185526, 10604, 30792, 10910, 41246, 165026, 42224, 113107,\n  28986, 50164, 19196, 60791, 4093, 348976, 132032, 123165, 19057, 48820, 65522, 51163, 17295, 95175, 4484, 1308,\n  4148, 239196, 12160, 143978, 245766, 14112, 90855, 4531, 122360, 139905, 44798, 12441, 35356, 12686, 74598, 10815,\n  112075, 44675, 49095, 131228, 20301, 124634, 94533, 9419, 75441, 56741, 243625, 2690, 10998, 35598, 155583, 1231,\n  7977, 46730, 242597, 113005, 19769, 157864, 288814, 15932, 62922, 81227, 227889, 46275, 937, 11294, 103072, 3033,\n  63547, 8861, 201131, 23991, 100196, 49148, 38402, 10013, 26427, 1584, 47267, 32310, 157820, 36321, 1694, 31226,\n  20983, 78184, 30061, 128167, 236696, 33413, 66741, 24836, 22935, 47910, 35635, 2678, 8140, 12435, 14911, 265634,\n  90315, 43108, 109685, 72546, 156004, 8866, 37002, 25727, 47204, 51301, 8652, 23492, 140973, 93561, 41906, 95949,\n  7726, 23391, 15506, 42212, 45097, 63870, 38047, 35887, 52725, 285299, 46733, 43623, 22636, 21753, 30231, 2194,\n  23436, 125735, 107590, 55499, 257282, 66930, 21546, 157729, 105247, 1991, 14483, 140680, 522, 45784, 342095, 166370,\n  88389, 122072, 21358, 24129, 216031, 54089, 2437, 107595, 202204, 163607, 26303, 41895, 46812, 40542, 78707, 2821,\n  211666, 62835, 14082, 13734, 19693, 1603, 38978, 130765, 68828, 24577, 173255, 173341, 81691, 26679, 29930, 3426,\n  45925, 32463, 13450, 24567, 11256, 19340, 65455, 7397, 30292, 9441, 111484, 57305, 372, 668, 19439, 90961,\n  5236, 16883, 27753, 170633, 167826, 153144, 144689, 113366, 88328, 50765, 15108, 221902, 232776, 9372, 46450, 174146,\n  151611, 40736, 105766, 1040, 5360, 65342, 48072, 55757, 82104, 206605, 5190, 78870, 18841, 118613, 78897, 18174,\n  80393, 27669, 110040, 158621, 25465, 12309, 35524, 25100, 18285, 9967, 2817, 4292, 20320, 37594, 50630, 17986,\n  72377, 87322, 63433, 19730, 31730, 51337, 57653, 20420, 33160, 147371, 43603, 49870, 45803, 188912, 85055, 11824,\n  38715, 173010, 66391, 15353, 27705, 31430, 7938, 120390, 37379, 123726, 25452, 345, 24163, 78121, 86371, 105015,\n  18360, 52480, 28116, 10182, 103586, 12625, 43431, 22706, 4015, 110996, 23635, 211386, 32305, 9669, 5607, 79602,\n  269494, 361, 52000, 75409, 91252, 16133, 217163, 25649, 20080, 40640, 108653, 52740, 36567, 24900, 6769, 93887,\n  54650, 108271, 21897, 49233, 7797, 97128, 54633, 281648, 57073, 36934, 16265, 167589, 12650, 209086, 62181, 5542,\n  31164, 122349, 81815, 67651, 42209, 38682, 31383, 122219, 6375, 11705, 72211, 22777, 261663, 21772, 69350, 85211,\n  105528, 83301, 31254, 16229, 81661, 5138, 1814, 117287, 106002, 97442, 104335, 3000, 2800, 69084, 40361, 68511,\n  5375, 11262, 76099, 146464, 17247, 106291, 8526, 92034, 43151, 22579, 624, 893, 4442, 9159, 34683, 63801,\n  15727, 54296, 36030, 7741, 194619, 26966, 57386, 521, 100855, 29101, 4249, 27495, 144898, 122045, 157745, 29287,\n  62320, 13800, 162790, 170925, 78465, 1720, 58206, 24580, 39929, 46731, 7089, 342751, 16454, 254942, 25844, 55945,\n  1967, 64379, 6774, 82424, 28311, 43620, 50135, 58126, 61363, 144665, 15325, 125247, 17219, 113505, 10215, 205466,\n  9395, 52783, 670, 169135, 8745, 37048, 58689, 91650, 121445, 22644, 27467, 23132, 76939, 233859, 30141, 24917,\n  80385, 41981, 8292, 35986, 162380, 57998, 43320, 212379, 22009, 3420, 17253, 49172, 54191, 105827, 25802, 3604,\n  44248, 112875, 6127, 145960, 16299, 26569, 47356, 14611, 122830, 30067, 21003, 192364, 48151, 121965, 327180, 5291,\n  74429, 11440, 101228, 65667, 78291, 16492, 12720, 3052, 64755, 138800, 114706, 157348, 14238, 155607, 17452, 62457,\n  44966, 41313, 98226, 78628, 2511, 99734, 74253, 133560, 17712, 1897, 74082, 2056, 67954, 146843, 392522, 79571,\n  93583, 59314, 13047, 43084, 829, 117157, 13262, 38703, 105899, 54574, 104172, 22161, 49935, 96314, 98235, 13239,\n  84750, 53580, 34154, 114889, 11591, 72967, 66707, 104862, 33185, 16902, 22355, 42766, 85447, 36865, 165090, 84531,\n  42717, 343264, 93849, 81105, 27409, 214283, 113392, 12987, 208542, 45776, 2947, 83062, 28965, 25376, 24971, 20612,\n  62052, 26121, 83563, 52492, 52525, 3766, 104113, 40486, 5597, 125, 87057, 6525, 25694, 6096, 199883, 183361,\n  65594, 40734, 5880, 182733, 16343, 16696, 86236, 796, 63224, 7501, 54031, 26465, 276188, 66868, 2954, 84925,\n  12475, 2514, 223628, 75284, 9331, 78770, 22694, 89261, 127507, 56323, 111184, 138073, 38522, 10128, 31041, 55066,\n  57287, 41322, 157136, 126272, 24128, 75696, 37221, 12395, 133161, 60386, 24760, 6499, 79723, 24499, 76440, 34317,\n  105548, 60338, 146011, 210310, 133695, 189639, 390311, 10417, 48917, 77547, 25558, 125695, 27558, 50249, 50758, 54053,\n  43278, 12651, 41946, 33000, 46520, 10764, 46950, 144684, 13778, 1185, 25117, 155135, 141954, 96252, 124109, 34349,\n  110785, 24351, 73685, 9493, 83366, 25352, 100253, 91513, 17715, 18369, 120888, 58948, 46317, 59607, 74045, 40939,\n  105763, 18522, 3886, 43064, 66298, 18918, 33778, 108305, 147013, 68203, 169050, 212793, 41086, 17383, 9620, 80428,\n  94180, 46324, 90898, 384293, 16478, 2162, 57856, 4565, 220447, 72458, 27818, 12844, 44611, 11585, 8997, 5614,\n  730, 93897, 76702, 124308, 19722, 10289, 81775, 44327, 78975, 156207, 11289, 31827, 117889, 212382, 163177, 125496,\n  125643, 46366, 29130, 40665, 26254, 99947, 10510, 84091, 16574, 120313, 104829, 138305, 18480, 16829, 8176, 17121,\n  65006, 22646, 16279, 64878, 15806, 31922, 5544, 11868, 38549, 32569, 219914, 15814, 246418, 24003, 289255, 313945,\n  46052, 157270, 10005, 11234, 36056, 153288, 35135, 63031, 8440, 1275, 43404, 298391, 34984, 44385, 45317, 14880,\n  30170, 5875, 12546, 45344, 3163, 4914, 1779, 66305, 59800, 72227, 6487, 36265, 4458, 73948, 78254, 47797,\n  115442, 39130, 71796, 11449, 4283, 30975, 181777, 25982, 41970, 19821, 110322, 41466, 33507, 69754, 31950, 489525,\n  104078, 4158, 69239, 85214, 1653, 56217, 34223, 9944, 22, 35473, 131427, 25058, 121158, 166086, 254762, 9745,\n  276486, 4120, 33379, 30250, 3655, 10419, 70458, 24518, 6338, 80002, 3419, 4757, 24048, 2139, 938, 210466,\n  133421, 8823, 35575, 1574, 23641, 94423, 17694, 113822, 2161, 40833, 49449, 5625, 24422, 131600, 516, 97149,\n  36006, 24910, 111249, 104788, 8086, 63142, 17790, 49461, 10675, 30015, 25712, 12492, 181474, 43374, 19331, 39246,\n  12307, 170327, 251360, 85956, 29514, 4826, 115208, 41680, 59143, 108007, 189711, 48650, 14729, 28727, 61638, 233522,\n  52509, 9807, 83278, 43091, 87128, 205247, 225046, 135671, 122470, 46278, 118683, 70557, 19446, 17394, 5920, 32166,\n  80852, 8067, 86203, 410557, 33314, 48904, 140515, 16642, 24573, 28653, 11481, 199433, 119864, 5958, 55298, 63357,\n  14237, 29162, 73299, 12246, 9652, 101149, 98618, 9611, 57779, 9592, 43988, 1014, 6612, 44197, 23629, 95201,\n  51851, 69205, 94416, 985, 15284, 36462, 143673, 5555, 98871, 71794, 26730, 9761, 90581, 198325, 133604, 57541,\n  124466, 1970, 23017, 51130, 156831, 80242, 24852, 47760, 21190, 76629, 13862, 175502, 22015, 38086, 18855, 52006,\n  71380, 1872, 6332, 88866, 161906, 10811, 92768, 111004, 87247, 58129, 1244, 4815, 69201, 134735, 125070, 78458,\n  18392, 146150, 4886, 66816, 17908, 31646, 6778, 69889, 108470, 70270, 87563, 7366, 72962, 13622, 24210, 28614,\n  40719, 40963, 61900, 8988, 14338, 191234, 63447, 35774, 17911, 12734, 257831, 101714, 95260, 78005, 17582, 88301,\n  43339, 8921, 3918, 82471, 20610, 84864, 253574, 21526, 78916, 58506, 1435, 433170, 20710, 147863, 28259, 4548,\n  72451, 2742, 1878, 156795, 11315, 75234, 32104, 46510, 31448, 15513, 60382, 37929, 17263, 142357, 16994, 34753,\n  58853, 23100, 69236, 5182, 178878, 2545, 32116, 152276, 48111, 71595, 81171, 93964, 116002, 57412, 4245, 19877,\n  45497, 156962, 37019, 27777, 80506, 87318, 64770, 13895, 82605, 511, 8366, 87800, 85880, 42605, 80454, 41603,\n  36300, 27404, 35498, 82743, 121755, 128166, 1871, 81847, 25215, 5995, 60337, 177660, 36118, 54831, 138197, 126290,\n  301929, 182977, 7852, 68390, 88728, 111588, 58683, 115820, 405223, 74730, 36671, 37592, 276136, 25471, 6538, 61648,\n  553, 89532, 101905, 27590, 34704, 25370, 42539, 28362, 212438, 98439, 26905, 4804, 49970, 60393, 7138, 33248,\n  78329, 11555, 51340, 1796, 922, 17391, 17952, 3534, 20711, 34703, 17977, 21148, 25036, 13075, 6201, 46397,\n  257130, 73731, 213188, 107033, 38295, 56744, 112539, 122324, 145369, 82762, 25343, 6279, 18128, 140444, 35989, 4474,\n  15385, 14399, 63732, 21041, 30829, 98387, 31090, 23985, 55656, 40284, 132675, 4230, 48345, 64072, 15739, 73537,\n  8012, 23754, 107906, 9060, 3561, 183232, 19339, 47011, 28004, 85175, 46305, 37773, 122041, 123221, 100918, 79448,\n  192900, 143005, 63829, 123166, 58338, 37779, 33298, 109415, 112508, 115553, 68473, 184384, 41085, 82184, 61692, 70292,\n  29976, 115765, 134590, 89398, 87040, 39038, 8330, 21348, 47117, 350, 39878, 167810, 23905, 28058, 42971, 15124,\n  4336, 12612, 11230, 18966, 92061, 59408, 12185, 128370, 138880, 27612, 27335, 49677, 97407, 61794, 36678, 60848,\n  42083, 7518, 89496, 57735, 172121, 74451, 85960, 144252, 6256, 110791, 28888, 21551, 25192, 5388, 80308, 1657,\n  172671, 42290, 48, 195157, 5, 36476, 3307, 89171, 93568, 157177, 7894, 66766, 1420, 14058, 167637, 30649,\n  12677, 121794, 69021, 13231, 31605, 230408, 111760, 67720, 56743, 31038, 52660, 61746, 40620, 81659, 12864, 14180,\n  6015, 215868, 90084, 141993, 78415, 116175, 52441, 7100, 231077, 112914, 39586, 51204, 31298, 52736, 64704, 3584,\n  80026, 74802, 13972, 215480, 13902, 93110, 20076, 42335, 19048, 41860, 36983, 169990, 24924, 34272, 70434, 20851,\n  170586, 12670, 115383, 39041, 32955, 71225, 30362, 30667, 176119, 19860, 10392, 48818, 87859, 7042, 111918, 36751,\n  36731, 38144, 156426, 19519, 6773, 997, 29515, 53787, 27711, 72672, 159500, 51584, 24658, 40226, 1920, 70951,\n  26475, 36713, 58252, 424939, 115216, 30508, 35252, 34310, 133207, 17198, 8490, 5530, 93250, 121485, 122775, 66308,\n  95820, 59227, 108938, 53397, 88522, 6280, 46904, 14869, 8317, 25024, 14413, 98196, 5714, 54882, 8596, 43570,\n  124047, 5657, 302052, 35, 55219, 105769, 57203, 241055, 86860, 6086, 121752, 2426, 19677, 79643, 9137, 36087,\n  23961, 35741, 73879, 95404, 22928, 151374, 193172, 7078, 162209, 225418, 143148, 102355, 8904, 2279, 71928, 20953,\n  225992, 15275, 49711, 9805, 359835, 337011, 5747, 97478, 56084, 49629, 13712, 164652, 96201, 13261, 69730, 256157,\n  29392, 154079, 57395, 17417, 96558, 76159, 89103, 154068, 86071, 1481, 55845, 81677, 93643, 5966, 26830, 128209,\n  55114, 215629, 46997, 96220, 13347, 6748, 42089, 26362, 8183, 87721, 60802, 344, 95129, 74756, 31533, 58592,\n  82012, 86256, 21385, 21021, 2017, 92952, 1400, 17103, 123336, 48961, 24557, 31513, 34219, 94330, 102993, 33899,\n  115554, 104210, 45821, 24373, 157159, 41476, 17357, 64836, 47747, 20243, 42746, 100702, 101684, 123185, 46219, 68593,\n  41008, 135956, 132526, 17386, 18735, 62966, 27255, 23471, 193781, 89150, 2616, 57853, 104151, 97883, 5292, 181287,\n  226906, 114560, 56557, 82841, 7552, 61282, 26131, 1854, 179874, 74127, 60152, 17376, 124113, 21668, 38821, 14260,\n  31159, 29704, 82096, 204953, 21162, 64569, 11540, 37899, 44010, 79498, 50023, 39667, 14771, 235800, 15254, 382134,\n  51268, 23240, 7289, 52385, 166128, 26710, 362, 239, 31382, 28658, 33227, 60344, 73124, 109004, 15966, 14103,\n  77438, 65958, 13394, 9762, 92830, 27896, 85690, 1773, 205709, 14225, 11061, 49451, 12113, 15690, 22771, 34399,\n  1292, 19355, 16900, 29634, 38937, 103120, 45588, 32502, 13114, 67382, 21201, 255605, 1334, 78137, 14683, 11960,\n  2118, 39992, 111625, 158751, 15597, 47752, 3544, 123201, 69581, 8045, 25346, 232034, 14449, 70422, 61526, 29243,\n  21934, 152079, 39735, 29007, 76618, 18195, 153, 27890, 48728, 123899, 68311, 48831, 67038, 51326, 21747, 8692,\n  14967, 4922, 69709, 15204, 51495, 12889, 28173, 172579, 24243, 12645, 53481, 33706, 87736, 191077, 102314, 17799,\n  147249, 101629, 161049, 4798, 26720, 45298, 89381, 76472, 11119, 5522, 59583, 86712, 46063, 85661, 57137, 135132,\n  43749, 6257, 4316, 44510, 5843, 232177, 211804, 97913, 44147, 11778, 5876, 129172, 152629, 43931, 5404, 124003,\n  133428, 97102, 297704, 57882, 65703, 24717, 67411, 23646, 14269, 13007, 172728, 4591, 45604, 57195, 12344, 102301,\n  57982, 61997, 95626, 254590, 28672, 129544, 121196, 14934, 55616, 30754, 102467, 25644, 45957, 41766, 105011, 59359,\n  8438, 80296, 37663, 282854, 95433, 8167, 10263, 65749, 37698, 56099, 237283, 25218, 220862, 42641, 90021, 45007,\n  132034, 144203, 26155, 333670, 39456, 63723, 27049, 39050, 61870, 153573, 33337, 28349, 4161, 99154, 19089, 5689,\n  26501, 109719, 53252, 38261, 73560, 103696, 77848, 61508, 56418, 8146, 14836, 30856, 9845, 7946, 131232, 127176,\n  4654, 201895, 63780, 158964, 20916, 91453, 54086, 43072, 10456, 54618, 169463, 46325, 88920, 26447, 165915, 26064,\n  119358, 76658, 11753, 55625, 9015, 143112, 11520, 269278, 65931, 121236, 179251, 9829, 96507, 5826, 140198, 247937,\n  48029, 31061, 53953, 19018, 38534, 95073, 117331, 37745, 21676, 22041, 2439, 21017, 109081, 12120, 58943, 64119,\n  43078, 113509, 30640, 37723, 34943, 350151, 79862, 143849, 25089, 16375, 77573, 16298, 6131, 168435, 40662, 50028,\n  28766, 133195, 55258, 45544, 23665, 5135, 54199, 18072, 5477, 69501, 106176, 37245, 10255, 33562, 9039, 7013,\n  16695, 29965, 30540, 106269, 67, 100273, 20386, 1936, 45778, 12653, 4617, 22300, 42443, 22525, 113152, 24837,\n  42770, 66959, 15725, 52734, 29534, 17022, 9388, 334890, 23733, 206600, 71568, 50746, 100513, 18013, 100834, 84319,\n  62617, 6595, 63101, 185162, 42630, 76641, 44106, 8165, 48746, 35407, 72152, 6974, 14191, 19580, 30414, 39009,\n  43753, 63797, 66647, 169610, 50295, 55790, 16670, 533, 26007, 9475, 35597, 110160, 8792, 8536, 3652, 9896,\n  57243, 120506, 37648, 15821, 43119, 131495, 35035, 35955, 54725, 31031, 169396, 210089, 164253, 337858, 11412, 77625,\n  58250, 28866, 7134, 37720, 112304, 27676, 81211, 65246, 131796, 9378, 94506, 130705, 25165, 11403, 69938, 129091,\n  4651, 244698, 53305, 17335, 3188, 92793, 26039, 26725, 24831, 59363, 5282, 15758, 47748, 53877, 45181, 5916,\n  3705, 107447, 7016, 107200, 19540, 12998, 120359, 9387, 13211, 7466, 190758, 9392, 102095, 49540, 128418, 188973,\n  5593, 50901, 14566, 196318, 18699, 54825, 76278, 15395, 23666, 36000, 88985, 17589, 32005, 23087, 139968, 578970,\n  117571, 145460, 7486, 3620, 33541, 117754, 26398, 27210, 60584, 18889, 20981, 1633, 74573, 38616, 14563, 6638,\n  86311, 86421, 25557, 42564, 99443, 36130, 97953, 1966, 25172, 83868, 86024, 136991, 27222, 67124, 48935, 48573,\n  168938, 36866, 83414, 114109, 7143, 95340, 16828, 116402, 11853, 106392, 138070, 12698, 53560, 1736, 35550, 51146,\n  18834, 22574, 37375, 59652, 19960, 32431, 133520, 38384, 86522, 43137, 73914, 52482, 28217, 63002, 68351, 25347,\n  53266, 74606, 37238, 64254, 117700, 2458, 69113, 78847, 72989, 4146, 51993, 68944, 34323, 36106, 26991, 208463,\n  18721, 68637, 46037, 28177, 66450, 253789, 306984, 98512, 34346, 8717, 62376, 80238, 74056, 18246, 43446, 108106,\n  47217, 76264, 2682, 95684, 202002, 20293, 22279, 7215, 46269, 5998, 50165, 12049, 9429, 33348, 73125, 27380,\n  68582, 110884, 139796, 3350, 75458, 44810, 10607, 55791, 37823, 11401, 91589, 124148, 82843, 54499, 20716, 21192,\n  96652, 231365, 33208, 41522, 32549, 31981, 17453, 40828, 145144, 39135, 25049, 9457, 27958, 103347, 32810, 43385,\n  19820, 53369, 126180, 23951, 158086, 100187, 144947, 109980, 31955, 45450, 139714, 69089, 201406, 73593, 53985, 61675,\n  135379, 20004, 20095, 20957, 31207, 58416, 82105, 5163, 192545, 15375, 4004, 14708, 12950, 3007, 33958, 201104,\n  51704, 2284, 38239, 215421, 9094, 170678, 68181, 18112, 248263, 264771, 5839, 65767, 76147, 15661, 13266, 123439,\n  64028, 57174, 54342, 51589, 110009, 117919, 35421, 20125, 79407, 23467, 26562, 86760, 89345, 56253, 2635, 17366,\n  99284, 45433, 65377, 5392, 223492, 45675, 94215, 41399, 47966, 42373, 88171, 10577, 26848, 109297, 198937, 27318,\n  15359, 54014, 189688, 14526, 201137, 11181, 412, 4944, 2861, 25417, 41460, 9506, 110507, 60409, 42693, 128247,\n  71231, 35793, 106673, 70206, 72297, 6817, 45319, 20585, 31851, 34828, 8363, 13868, 118777, 52262, 102674, 38674,\n  71039, 6463, 77753, 62309, 151051, 2673, 41364, 138637, 240855, 165918, 128697, 37821, 16333, 64502, 32568, 39824,\n  50766, 20504, 14159, 65654, 14727, 29996, 6383, 42332, 7939, 14308, 8137, 87581, 4149, 88311, 165279, 7060,\n  80908, 49103, 28053, 140076, 418780, 65632, 172843, 34187, 88378, 29997, 545, 51172, 59276, 68688, 2146, 123301,\n  1327, 93829, 16449, 152910, 7284, 87749, 23351, 3595, 38576, 26223, 23401, 96146, 79814, 32323, 172636, 114120,\n  65820, 86539, 208708, 76711, 42199, 188268, 14011, 15148, 84860, 5832, 11441, 25143, 49574, 6953, 65399, 115759,\n  62596, 134341, 14187, 18034, 12396, 16855, 108734, 25950, 70598, 14918, 2364, 136070, 40117, 153617, 71320, 115693,\n  8648, 35391, 90995, 4541, 7994, 124212, 8041, 66856, 16836, 11191, 127474, 68712, 7630, 145631, 110314, 22066,\n  14047, 1763, 167187, 174630, 359699, 151667, 4177, 41323, 106878, 1793, 50733, 69877, 525, 43923, 4828, 82891,\n  29037, 171929, 324595, 65899, 28064, 91271, 65021, 37989, 13380, 31251, 2943, 407325, 11675, 18588, 38513, 8392,\n  50669, 90077, 18495, 9450, 74216, 88387, 45547, 81293, 103539, 10795, 31036, 15610, 180314, 21332, 14365, 65897,\n  27449, 55756, 149067, 98485, 56299, 40269, 32366, 5250, 172344, 23410, 92231, 18561, 19274, 44347, 122063, 8423,\n  7301, 50878, 28326, 38202, 246099, 51058, 26017, 51056, 32043, 22795, 132375, 6943, 19422, 300889, 9098, 15040,\n  36506, 86225, 57465, 49440, 129317, 12410, 39803, 48164, 6806, 32451, 82234, 132656, 30140, 15444, 60069, 3760,\n  4614, 25897, 159, 28083, 46639, 99936, 101909, 30904, 66926, 173983, 34220, 17421, 932, 21450, 21043, 113018,\n  86600, 42052, 132088, 128256, 6322, 29, 124274, 99295, 27847, 33188, 30130, 20462, 233103, 11629, 82802, 23282,\n  10541, 47224, 44501, 68401, 39025, 9673, 4555, 49397, 34887, 30110, 111225, 33589, 3517, 74773, 153162, 143852,\n  12972, 3530, 24385, 31076, 26220, 32573, 109457, 43144, 2031, 300519, 129953, 9238, 66561, 196911, 99752, 28368,\n  115015, 174339, 10996, 8970, 48658, 26284, 10285, 694, 47596, 445399, 13275, 71937, 12714, 3528, 3654, 55811,\n  33845, 269037, 118340, 11397, 3893, 231593, 42203, 2159, 16165, 12556, 48781, 72601, 35237, 68887, 18601, 17941,\n  89983, 98696, 97413, 15006, 14769, 128317, 13607, 7426, 11962, 244737, 72660, 28493, 147224, 62322, 6982, 534,\n  47018, 29199, 6388, 175620, 29977, 6018, 54235, 144119, 27979, 74453, 23072, 144966, 5552, 22680, 20439, 8839,\n  82338, 13010, 108618, 484, 86023, 58829, 612076, 306318, 131368, 51558, 106387, 22146, 1218, 11904, 270917, 87286,\n  24853, 275508, 76852, 5463, 237840, 82183, 83602, 44537, 132193, 104954, 15511, 29147, 15455, 20088, 13624, 153696,\n  40873, 90309, 158996, 18756, 3668, 32089, 12462, 41486, 65351, 2207, 126590, 223126, 53388, 4077, 30070, 25994,\n  15229, 66181, 63714, 79318, 59889, 160619, 15153, 12456, 272245, 42542, 24758, 47453, 47934, 65558, 28145, 13413,\n  11858, 21191, 27021, 92095, 34347, 32570, 60556, 197324, 18038, 189522, 6812, 28247, 90853, 8634, 180039, 7329,\n  86981, 148519, 9289, 4888, 300602, 74523, 9708, 49271, 19343, 63426, 74637, 174896, 114181, 28008, 26788, 8747,\n  29362, 99695, 52578, 19976, 84921, 101587, 24035, 38033, 6095, 92547, 36135, 72547, 106059, 4207, 181943, 47905,\n  79472, 24101, 58847, 20037, 38015, 46536, 22348, 109208, 1206, 45622, 37915, 26165, 48741, 7232, 1005, 4065,\n  6208, 18528, 151721, 62784, 80000, 18897, 5854, 32564, 21916, 4912, 34596, 201975, 17423, 134488, 54506, 154143,\n  6002, 72868, 7520, 36987, 108083, 112937, 75656, 32044, 24479, 15432, 40091, 58495, 34931, 9602, 16762, 2442,\n  56661, 153348, 22812, 98811, 9511, 56184, 1409, 9718, 26995, 197, 49218, 167694, 100694, 44775, 53809, 6725,\n  163853, 45609, 73, 98613, 35997, 111306, 20357, 36132, 81254, 14735, 26511, 23223, 58321, 51715, 70878, 210120,\n  18919, 64042, 68936, 3280, 171890, 120028, 29382, 125765, 86877, 48327, 105142, 9969, 91341, 1198, 32748, 184452,\n  74503, 188311, 34295, 291694, 70477, 184873, 41972, 33654, 53412, 208288, 120160, 47130, 7027, 83694, 30556, 99012,\n  59281, 43841, 119720, 74947, 39892, 41874, 34808, 25853, 131302, 33590, 193671, 96415, 5864, 20797, 100412, 35136,\n  15947, 13143, 28210, 28717, 61301, 5772, 22132, 12722, 67466, 83494, 128102, 176810, 162369, 37658, 11958, 19685,\n  47956, 184482, 37093, 126586, 27874, 17054, 70824, 29354, 35624, 31284, 22117, 80846, 282324, 89289, 5812, 73290,\n  21270, 10973, 15681, 37548, 111847, 5570, 82, 33861, 102548, 16344, 48551, 72401, 41482, 3442, 126293, 65750,\n  30955, 205735, 76092, 105960, 116737, 54740, 25948, 8274, 28264, 111716, 110866, 252362, 8592, 112975, 10016, 89336,\n  55458, 589, 60295, 9209, 22301, 101479, 32825, 64171, 75090, 106896, 21619, 26306, 29821, 30637, 132744, 10929,\n  30697, 32956, 20307, 87608, 51709, 317395, 23678, 60949, 3041, 29345, 83581, 57276, 19208, 37802, 184528, 147377,\n  8038, 29282, 6679, 77158, 24634, 288107, 38217, 32048, 30467, 20308, 11907, 18988, 87509, 32192, 89058, 11561,\n  126428, 56272, 20368, 65338, 19389, 104074, 29008, 8049, 18814, 30607, 339, 30562, 152686, 25435, 16446, 78067,\n  20701, 122568, 3475, 39655, 83474, 29081, 12004, 116638, 45832, 69977, 107214, 46129, 80891, 11087, 68939, 167121,\n  105808, 42070, 117480, 33702, 11378, 25602, 124846, 110381, 153223, 6672, 47709, 80371, 120770, 144580, 11225, 22744,\n  98186, 104427, 63765, 10261, 150633, 71276, 51714, 50281, 49838, 190522, 8987, 235791, 9141, 340331, 86198, 17567,\n  12755, 210134, 6552, 101752, 30962, 11267, 2982, 8706, 5260, 70113, 110165, 127201, 74490, 93235, 145772, 35288,\n  21256, 25014, 2694, 10842, 31678, 81199, 6436, 125138, 65062, 15308, 22318, 40788, 33326, 9604, 145295, 6946,\n  289838, 90308, 57283, 326774, 187831, 2998, 288064, 53373, 20595, 188251, 90664, 58927, 89768, 31693, 379534, 13903,\n  2805, 2413, 50298, 47087, 58535, 56981, 59799, 135588, 10844, 74455, 88188, 208971, 70085, 92510, 18541, 33920,\n  12090, 24555, 11134, 23200, 2451, 6275, 135010, 5521, 138068, 6562, 161302, 44283, 98544, 214408, 65576, 50058,\n  24461, 33687, 92862, 93762, 4511, 119896, 3685, 41519, 6754, 9529, 39394, 26959, 41684, 51727, 24271, 311732,\n  28203, 45748, 149989, 111355, 3383, 25313, 20209, 43668, 65355, 32723, 38554, 67434, 82833, 42676, 66416, 25724,\n  30161, 223, 65165, 45436, 83924, 12283, 5232, 29830, 234361, 377903, 56, 40022, 128424, 12472, 60521, 234629,\n  28921, 22232, 168965, 36999, 222594, 73040, 24600, 9682, 33975, 51080, 29219, 59847, 125491, 30202, 38650, 136512,\n  34069, 20533, 23257, 105963, 11508, 99917, 34237, 4124, 67464, 43359, 26791, 158522, 144226, 38792, 18892, 13958,\n  41850, 71554, 19647, 61226, 98703, 124759, 9034, 30539, 34371, 467683, 65227, 93480, 7901, 29703, 82581, 17619,\n  21254, 2734, 102235, 57361, 38398, 17196, 96566, 364971, 65651, 28491, 137653, 151200, 23549, 142281, 78664, 84647,\n  53883, 34900, 46611, 40124, 213340, 36091, 30841, 52023, 123269, 197827, 78380, 73808, 12028, 41191, 45370, 7903,\n  71764, 90561, 215513, 34771, 177701, 60585, 32517, 25415, 28758, 92364, 41752, 82386, 2623, 76984, 37173, 50064,\n  68395, 4403, 43681, 98106, 11549, 37791, 53245, 104084, 15232, 60303, 28511, 10160, 68603, 161243, 108330, 25902,\n  9660, 75510, 24031, 320844, 63116, 2614, 187946, 158900, 36079, 32819, 38425, 121867, 57093, 51652, 80423, 5684,\n  31198, 161752, 36511, 146667, 20475, 4507, 19201, 30548, 48467, 78275, 5077, 22549, 89984, 50714, 17018, 66706,\n  35619, 3531, 25020, 48835, 186847, 9463, 64248, 111387, 107469, 188636, 105137, 8703, 31389, 34009, 25409, 14207,\n  43631, 12180, 14360, 89167, 73867, 33692, 74998, 119507, 41949, 87046, 115959, 6770, 68841, 6405, 81460, 142743,\n  114250, 5132, 148038, 8544, 1605, 15540, 177509, 152453, 30564, 1453, 29815, 32099, 63403, 6534, 252, 11418,\n  17588, 16946, 116226, 138792, 27680, 101291, 14339, 60744, 99533, 194699, 39891, 16377, 12641, 146345, 141037, 140957,\n  70325, 42826, 21176, 19061, 50428, 51375, 12005, 144174, 73426, 76160, 46461, 129205, 78379, 40145, 25474, 133179,\n  11855, 127230, 80781, 27661, 91651, 396, 88286, 34420, 72081, 94521, 46013, 15403, 91720, 88126, 549, 79964,\n  60198, 187793, 125452, 14392, 15743, 83700, 1715, 206475, 12065, 22805, 39201, 63593, 83398, 13801, 99478, 25699,\n  140046, 83985, 258911, 49800, 6761, 9435, 74133, 1389, 46598, 11934, 27897, 5386, 45900, 50232, 260248, 96335,\n  5068, 33530, 49692, 65315, 886, 4019, 40151, 91916, 62448, 10628, 13597, 141884, 148968, 14083, 261394, 163080,\n  37347, 1276, 8705, 22521, 19405, 57813, 55957, 200637, 9680, 15938, 42198, 23570, 15819, 166772, 12555, 37690,\n  43496, 26735, 63396, 52654, 63370, 37031, 83006, 34067, 75667, 18077, 2332, 127143, 163700, 1741, 5704, 42945,\n  37639, 34898, 146321, 65846, 3633, 51526, 134217, 9232, 22774, 1772, 66282, 48233, 34341, 21424, 13242, 67351,\n  183131, 97579, 28584, 80530, 134335, 38834, 239665, 40278, 37200, 32081, 53185, 40538, 23915, 99449, 228969, 44407,\n  7054, 17139, 112714, 101287, 14194, 810, 50801, 33269, 12970, 136397, 73876, 55691, 26438, 37462, 53441, 99617,\n  13350, 42910, 71168, 42168, 285521, 78217, 93695, 78702, 25594, 30022, 14876, 15315, 8219, 34298, 97268, 51265,\n  104410, 54835, 26232, 30943, 91039, 14205, 64948, 29544, 168804, 48486, 75782, 69559, 138480, 99517, 39422, 37873,\n  149734, 38422, 8276, 41956, 15907, 166205, 43978, 154555, 33818, 28840, 72911, 38423, 61132, 39592, 4460, 37088,\n  60082, 68918, 21965, 92108, 4622, 33094, 35917, 111849, 110187, 72295, 8713, 89755, 56736, 89742, 45364, 6790,\n  13551, 41957, 48065, 8188, 73571, 62739, 53050, 144415, 3945, 24426, 98109, 2450, 73463, 37147, 78116, 9166,\n  65498, 53281, 120479, 179965, 17758, 17052, 32430, 155198, 263266, 84633, 148996, 48061, 17593, 38254, 12219, 51478,\n  2710, 95095, 20869, 29664, 27585, 13750, 47237, 181, 54469, 7569, 60566, 139036, 38200, 24063, 28235, 13774,\n  45367, 230307, 83783, 80750, 63754, 95816, 43190, 122385, 28881, 144847, 15520, 94088, 3473, 3890, 113331, 76118,\n  12791, 80924, 118713, 104097, 98287, 136037, 67781, 10689, 31895, 90630, 43079, 93377, 65787, 61758, 1438, 103534,\n  4463, 1696, 4512, 120430, 94536, 3019, 34145, 75690, 24951, 53596, 58640, 11685, 36332, 6632, 11422, 26659,\n  59901, 43634, 130651, 33557, 28803, 3908, 133680, 9899, 52130, 43287, 6912, 145132, 86403, 177137, 54381, 65649,\n  7668, 54154, 97545, 91326, 181822, 89508, 11188, 2346, 74831, 83183, 79610, 47140, 18977, 54325, 82292, 130974,\n  9850, 25539, 71074, 133045, 177206, 71768, 81956, 28358, 145485, 83131, 29163, 37533, 109798, 18435, 75184, 52995,\n  7292, 6596, 2251, 2040, 31421, 19770, 177982, 2607, 26280, 108782, 69065, 324604, 77211, 91802, 37849, 30896,\n  58511, 49307, 70, 135829, 12507, 6486, 51031, 9444, 127004, 180981, 46202, 95370, 11113, 65980, 7248, 1864,\n  147, 52898, 183217, 22572, 8729, 6517, 4166, 36847, 56208, 124700, 29553, 6200, 43066, 1797, 193216, 150871,\n  79926, 125256, 38154, 42479, 129937, 102831, 33444, 18931, 31345, 35792, 147516, 19534, 83947, 136739, 76241, 217709,\n  39915, 177, 29612, 176661, 46146, 21703, 66186, 15852, 98763, 32284, 15029, 20993, 42566, 64132, 96065, 164496,\n  1337, 178401, 214897, 22155, 13192, 119711, 143143, 16098, 18323, 17920, 25851, 94549, 105163, 90198, 141550, 124816,\n  80570, 619, 144085, 9847, 117753, 16770, 4661, 55732, 16555, 15568, 31762, 116903, 72883, 28446, 93397, 75397,\n  11077, 69803, 1471, 136227, 159438, 102246, 162403, 73442, 40764, 27766, 18455, 53335, 70933, 12129, 19140, 50321,\n  83329, 51649, 28681, 50106, 26066, 38874, 69436, 77741, 12276, 9285, 17504, 16474, 72059, 83880, 8401, 45101,\n  21655, 38252, 34797, 40053, 173836, 50540, 136368, 21585, 126713, 108126, 142751, 130247, 69454, 55138, 130179, 11656,\n  153482, 162984, 158538, 204679, 91585, 26846, 8149, 101037, 70644, 67384, 153679, 898, 102558, 18887, 79015, 11681,\n  110483, 73677, 144865, 17407, 6764, 28552, 369746, 32468, 127864, 203511, 3905, 45256, 190133, 1948, 85436, 54536,\n  3961, 2931, 39613, 52497, 101798, 205435, 63769, 13356, 20945, 11390, 155312, 107698, 71138, 12797, 29367, 1300,\n  82402, 758, 56650, 14527, 90884, 61424, 194495, 23078, 69669, 175831, 14654, 112729, 44753, 232898, 27621, 99382,\n  923, 15115, 22648, 45524, 16939, 11503, 36250, 76362, 59700, 80609, 92077, 81783, 164258, 147964, 93190, 7889,\n  25969, 56255, 28476, 115588, 27082, 3104, 94697, 68454, 31399, 203455, 22046, 2756, 43846, 6544, 135118, 128148,\n  6306, 148500, 12599, 221886, 246093, 1024, 14109, 13441, 51342, 119104, 168855, 81131, 6153, 19221, 79225, 10911,\n  151581, 83444, 1795, 32090, 202801, 86292, 19784, 98045, 182731, 14239, 27382, 126354, 56475, 255797, 116118, 46059,\n  162188, 48612, 34197, 23712, 89426, 12944, 100256, 15683, 141356, 108578, 128764, 17528, 14355, 271397, 13200, 5464,\n  121815, 164025, 19217, 145007, 27536, 7271, 11898, 27670, 28023, 2020, 34004, 98721, 65257, 221829, 10108, 127625,\n  77523, 58581, 6914, 16301, 106668, 18199, 38690, 49947, 127314, 61987, 99158, 82020, 24947, 156159, 44297, 40008,\n  12790, 191552, 58504, 13996, 38796, 49380, 31168, 78568, 169698, 51893, 110268, 42109, 23555, 66459, 81335, 350079,\n  10725, 11018, 5903, 58576, 44573, 24333, 7047, 15096, 183083, 25940, 30092, 21527, 42088, 116405, 102404, 91943,\n  62716, 83434, 46226, 148493, 43265, 16668, 120110, 99611, 105958, 52689, 135626, 19929, 32050, 1904, 97814, 125365,\n  44067, 3747, 104, 129365, 50118, 22240, 81479, 147860, 1668, 21592, 58604, 65314, 3874, 8813, 70784, 17613,\n  6243, 68475, 42985, 56814, 318411, 38092, 62855, 5047, 16599, 38145, 13374, 7748, 1691, 63047, 41837, 61793,\n  94999, 40014, 231631, 149314, 52378, 17178, 17229, 20594, 28671, 298969, 135669, 3725, 216728, 259469, 33874, 54293,\n  123258, 45594, 132414, 22290, 2059, 129670, 52137, 8994, 34969, 83516, 130408, 123610, 69225, 72380, 90635, 47420,\n  5913, 73509, 87799, 48451, 136280, 23988, 84653, 34987, 171443, 34172, 131573, 84347, 141515, 41151, 84753, 26644,\n  91662, 53005, 30287, 228834, 22175, 85089, 5937, 239357, 135282, 3173, 18644, 35622, 80020, 157977, 39079, 53223,\n  92270, 5878, 10450, 49133, 1663, 158962, 37020, 13802, 4808, 5512, 34099, 49182, 4482, 39140, 15951, 157071,\n  3495, 132172, 122206, 61350, 34691, 43353, 72769, 74295, 5226, 24234, 167378, 239776, 109830, 5797, 48280, 64587,\n  108512, 25762, 31651, 55137, 17342, 87230, 251069, 6824, 107488, 60185, 7752, 14553, 11606, 10402, 78777, 6829,\n  123190, 43191, 33662, 9649, 100247, 18941, 76354, 27419, 29666, 53504, 129460, 19206, 146527, 208486, 41206, 37237,\n  113014, 30191, 57416, 5183, 15794, 3541, 57420, 56560, 30894, 159900, 136009, 282298, 13224, 83119, 1406, 240017,\n  39585, 278159, 141007, 6722, 243192, 21680, 25193, 108277, 22351, 16677, 47180, 52089, 9903, 7391, 70117, 38331,\n  7836, 20514, 176863, 391251, 47699, 49431, 142718, 40783, 11078, 28591, 32120, 38193, 25468, 458592, 10098, 64745,\n  122291, 62128, 93822, 46652, 48821, 13662, 8766, 17814, 26780, 22468, 135823, 124150, 122679, 129978, 11360, 113819,\n  75521, 58918, 556, 93437, 81450, 77000, 1965, 3492, 630, 26563, 1323, 193118, 4895, 24288, 80421, 444827,\n  92900, 45787, 6232, 74549, 55074, 50259, 138542, 21220, 74293, 14177, 86741, 20845, 17441, 108129, 27172, 542,\n  3563, 94640, 76494, 41896, 111657, 28829, 50902, 406663, 103102, 28983, 10586, 120692, 51613, 18805, 55476, 84562,\n  12318, 65439, 2351, 47041, 52370, 9553, 44550, 41604, 36191, 65155, 67526, 37264, 68245, 92017, 11541, 5842,\n  34269, 49599, 26889, 59557, 40445, 96850, 1906, 135711, 41354, 29246, 70287, 106660, 122901, 45259, 163034, 61670,\n  168604, 10682, 20890, 849, 182500, 7459, 14076, 9824, 62012, 17393, 43, 55379, 42557, 140724, 7749, 356813,\n  11259, 106585, 56522, 117254, 24428, 38947, 52871, 9300, 115113, 20086, 55518, 10927, 86345, 43851, 62143, 258476,\n  12362, 54324, 10491, 40991, 3909, 2374, 125973, 57172, 78430, 341578, 168875, 62670, 86852, 965, 24965, 107818,\n  134602, 52017, 33775, 46473, 20459, 104509, 19147, 87014, 47853, 11886, 132839, 96809, 93879, 110609, 2365, 42726,\n  22577, 113945, 93171, 450, 7659, 3573, 145278, 14002, 3688, 110115, 18705, 53062, 38555, 47342, 56746, 32670,\n  13349, 82125, 43630, 40651, 17381, 125502, 22739, 15199, 56715, 30071, 11269, 266060, 91639, 147670, 110730, 156150,\n  12493, 33798, 89625, 209004, 10895, 25311, 4017, 18602, 92438, 67412, 21469, 72030, 3142, 102900, 25974, 86939,\n  37057, 197485, 58360, 6360, 28928, 67451, 1402, 28843, 2004, 88633, 12339, 31963, 36427, 70216, 321089, 288373,\n  32268, 39008, 31413, 4740, 34222, 25661, 12279, 159470, 209974, 23583, 8221, 132962, 10432, 69680, 62983, 6760,\n  67436, 1150, 66541, 28543, 41989, 120559, 51407, 30922, 173518, 85466, 111050, 56221, 107930, 37565, 20849, 48181,\n  27079, 107182, 10708, 12667, 62729, 131120, 15921, 10076, 30908, 157502, 94904, 63675, 55558, 6617, 226273, 5180,\n  5828, 56366, 13233, 61985, 45031, 2485, 22785, 51794, 14902, 861, 156114, 2399, 53546, 23616, 69393, 128641,\n  8204, 20069, 47928, 35756, 144263, 9724, 28168, 77879, 60255, 33275, 30360, 2287, 14520, 139561, 6919, 38561,\n  88212, 24401, 123947, 83850, 86582, 113753, 3963, 10915, 109589, 75957, 42047, 64212, 69356, 27884, 27654, 1658,\n  8064, 25531, 26396, 43262, 47449, 97110, 27015, 18044, 8505, 10820, 6910, 15078, 66558, 7192, 123575, 29932,\n  16886, 91286, 41104, 63367, 4844, 40914, 6359, 2845, 52817, 88113, 9448, 105511, 111260, 18932, 4691, 644,\n  215129, 199771, 74460, 6293, 12941, 6495, 60621, 58746, 91118, 57660, 16174, 48568, 650, 73549, 62408, 27497,\n  20770, 36570, 9691, 125291, 6273, 101510, 524873, 63355, 73089, 27873, 22599, 43928, 40618, 143174, 44188, 54641,\n  62790, 6716, 38742, 153007, 2873, 81054, 70058, 28685, 35002, 11708, 63922, 161592, 14023, 143955, 9908, 36977,\n  97208, 20840, 37740, 37328, 19386, 541613, 59406, 52601, 102646, 24863, 90336, 108723, 36993, 19256, 90283, 156507,\n  143736, 226099, 22792, 168470, 135457, 88686, 29520, 41685, 35385, 2247, 53884, 7914, 113601, 25634, 168024, 22823,\n  17893, 52964, 50078, 12971, 32627, 62833, 89378, 69345, 84439, 2950, 9888, 39211, 100619, 12559, 4264, 76283,\n  56016, 57173, 88905, 18361, 6581, 257, 15516, 18690, 57264, 152842, 167732, 100142, 172160, 177909, 114841, 98812,\n  45452, 152952, 146652, 57421, 111710, 33059, 83570, 109892, 203627, 18224, 13991, 11405, 70131, 54654, 97200, 72333,\n  24100, 8565, 145467, 50366, 322787, 161041, 7765, 55869, 1996, 48165, 55619, 16231, 35665, 59444, 21986, 40608,\n  70078, 91914, 2452, 11983, 22358, 46435, 113727, 327395, 90922, 54176, 3637, 61910, 83658, 16892, 19473, 12132,\n  4097, 10440, 32159, 34709, 63200, 53820, 279, 973, 58499, 93368, 5855, 59071, 14542, 256523, 219447, 28720,\n  99153, 71396, 152707, 32750, 52159, 60623, 48369, 4454, 6615, 260119, 265523, 24086, 12414, 92637, 2799, 18610,\n  63415, 61306, 58297, 80979, 31986, 68389, 34835, 18261, 16823, 2311, 3203, 19828, 1579, 46046, 15243, 2581,\n  65405, 113461, 50646, 108814, 137809, 9153, 82289, 158349, 8841, 506, 90330, 157611, 16898, 11327, 131769, 58320,\n  48082, 107069, 6787, 166721, 259, 104429, 47373, 3486, 33014, 21454, 101722, 52682, 42375, 100879, 112359, 120319,\n  12260, 113213, 38656, 173961, 179850, 20340, 86000, 5336, 73667, 112248, 73424, 114676, 91389, 8255, 33598, 167952,\n  98882, 313221, 141752, 163735, 29532, 164918, 42180, 9328, 17311, 38319, 9180, 42386, 326251, 90818, 26426, 1863,\n  41092, 62380, 5374, 95142, 5928, 29861, 105695, 62497, 20742, 89078, 12203, 22276, 44964, 36172, 50837, 165289,\n  48019, 238111, 16046, 2104, 43505, 99836, 25312, 70749, 9317, 81582, 61952, 108704, 49265, 17815, 1489, 44835,\n  6643, 115249, 21605, 88265, 192712, 163219, 138454, 48414, 48424, 56847, 23238, 77168, 163487, 20527, 64335, 82158,\n  19861, 31349, 187836, 102708, 20113, 52444, 125598, 1727, 70848, 111298, 11424, 155809, 31928, 96999, 24225, 14471,\n  105333, 16160, 91323, 49302, 23685, 29832, 218861, 101530, 78563, 93096, 11349, 110852, 14638, 43607, 123209, 91558,\n  54755, 35628, 107357, 380618, 7158, 28912, 18284, 4868, 24142, 51577, 38642, 239650, 44018, 991, 26090, 1960,\n  20774, 158291, 81907, 50593, 125255, 6485, 72743, 2966, 20331, 214561, 56587, 142157, 24280, 12387, 150, 57700,\n  10163, 773, 45875, 97502, 1285, 41252, 206433, 50923, 2336, 113158, 120454, 130298, 39851, 20223, 103681, 48431,\n  4299, 190321, 123059, 33343, 117269, 71169, 26222, 33921, 46714, 32383, 97444, 133272, 63816, 37830, 49882, 50473,\n  87779, 17666, 112641, 59034, 159624, 26706, 33574, 47126, 11731, 63641, 16669, 933, 9971, 20216, 30684, 99703,\n  990, 23911, 20195, 121307, 137317, 47148, 41928, 10318, 108831, 355535, 49454, 32292, 50994, 8122, 16384, 59812,\n  74554, 32150, 56591, 174312, 162680, 190228, 9598, 173148, 23640, 61991, 45718, 79874, 131597, 38994, 5964, 48294,\n  146962, 7849, 20626, 126616, 170620, 27716, 30327, 39879, 34829, 15772, 147440, 111326, 91205, 762, 39309, 61975,\n  21184, 41411, 43771, 23877, 1913, 5640, 44358, 29145, 63616, 7290, 39142, 49951, 18427, 231174, 53813, 32775,\n  93136, 7356, 69502, 40528, 156592, 58725, 18403, 57219, 17519, 27403, 39497, 64617, 67565, 18802, 347190, 3273,\n  115882, 171128, 6465, 87835, 138220, 37443, 12843, 45934, 78622, 101762, 40426, 16768, 88535, 152513, 46216, 13386,\n  18115, 79078, 49051, 26866, 2711, 79682, 103900, 31529, 33554, 8114, 97575, 47612, 109492, 22435, 45316, 90147,\n  54298, 70069, 6113, 94219, 971, 203886, 171510, 54098, 24914, 22343, 6068, 91601, 25863, 143464, 64459, 38876,\n  36363, 74653, 13924, 17888, 45715, 21595, 79494, 40396, 27099, 48946, 229942, 68108, 194995, 38040, 6364, 105256,\n  14299, 43792, 53868, 72865, 178181, 10801, 106043, 59704, 111488, 12611, 11620, 1615, 72395, 35357, 68088, 375,\n  322385, 97707, 2721, 26698, 157719, 129043, 96424, 15347, 130787, 1519, 70008, 98397, 11897, 5720, 336769, 151561,\n  81843, 3436, 2996, 78953, 83999, 15800, 40841, 8897, 11369, 50915, 1888, 69080, 49280, 45808, 1062, 11670,\n  118604, 172349, 10206, 107337, 40922, 127584, 10458, 54750, 61332, 36780, 6193, 84096, 110343, 6105, 74775, 66665,\n  53407, 65182, 51401, 281520, 75639, 25185, 147990, 19365, 40582, 32622, 61482, 106248, 300440, 3435, 158683, 10556,\n  54722, 4592, 47332, 14499, 25637, 77065, 19723, 29586, 13694, 66649, 26726, 58610, 48248, 133393, 123123, 232634,\n  48278, 828, 68414, 56873, 194521, 5023, 64229, 14306, 56203, 86618, 265580, 48023, 52779, 84656, 3432, 27698,\n  48783, 165900, 55898, 24382, 72627, 95034, 100547, 13185, 10953, 158080, 190907, 81943, 376, 38482, 157736, 4714,\n  16733, 10368, 160286, 14619, 280238, 20156, 17445, 38808, 26351, 35060, 125894, 64807, 230789, 9972, 49181, 669,\n  15132, 16923, 2631, 4706, 25168, 70685, 110447, 122549, 137270, 146057, 155535, 21929, 3588, 7274, 38517, 20678,\n  63704, 12863, 1324, 50985, 73376, 43993, 200585, 60934, 94031, 33647, 19008, 24301, 74284, 50725, 56271, 104028,\n  19443, 69093, 1021, 4350, 159557, 108365, 31846, 2318, 9697, 23630, 70960, 33088, 39901, 32656, 33002, 83862,\n  13351, 27646, 142809, 48055, 119050, 37694, 118047, 85271, 15406, 13547, 124197, 30179, 146455, 65071, 112066, 5002,\n  3460, 7809, 11639, 39385, 29556, 54914, 121220, 5596, 75195, 25679, 106873, 33104, 37673, 7246, 204139, 29952,\n  102524, 115109, 36038, 5460, 92329, 49344, 25242, 34014, 47289, 113697, 6996, 24397, 98413, 185550, 45812, 60522,\n  15311, 46467, 213965, 11122, 100684, 7259, 17039, 6550, 56345, 167013, 404753, 307, 7116, 56462, 5417, 73857,\n  95480, 78473, 10133, 19036, 11590, 36107, 100941, 53208, 7200, 60420, 95105, 119370, 167, 15524, 6653, 43384,\n  23610, 46388, 13093, 145345, 58426, 55680, 305451, 86847, 17730, 58567, 178140, 38965, 136656, 5628, 88811, 17675,\n  27944, 83441, 51603, 10939, 53151, 35212, 27904, 53967, 2701, 23131, 24488, 104154, 8824, 55304, 27690, 42802,\n  103124, 98578, 280054, 5662, 3017, 22793, 12906, 31495, 90744, 23983, 3464, 134399, 113588, 22474, 69068, 5099,\n  53216, 109191, 117048, 132077, 79736, 676, 7774, 71253, 65940, 32772, 116614, 53644, 26931, 7596, 62478, 12003,\n  498, 19827, 108263, 47076, 29568, 168754, 31319, 6482, 80540, 13955, 111749, 21181, 143543, 7033, 26026, 51353,\n  21292, 85463, 42779, 24887, 1740, 14404, 130369, 63220, 59268, 97587, 33374, 6212, 16561, 43680, 36822, 42418,\n  180816, 18436, 9579, 74123, 42323, 147608, 27260, 24977, 50174, 61507, 10681, 205404, 40890, 85856, 53671, 11516,\n  52866, 109367, 117903, 74687, 10703, 42095, 18194, 187166, 57169, 32725, 8992, 137746, 4700, 203872, 80833, 23954,\n  17191, 61462, 362182, 13934, 4424, 17464, 76670, 12727, 93511, 23063, 65868, 71113, 49698, 1101, 33252, 57054,\n  166650, 125436, 48999, 126818, 26972, 5103, 5669, 11598, 48631, 1882, 120131, 84296, 165169, 35330, 3827, 13014,\n  82879, 103279, 159135, 24477, 69326, 96729, 88413, 114734, 202970, 9725, 43640, 83623, 4007, 109, 63529, 18092,\n  2376, 47112, 60271, 36164, 231325, 18597, 8868, 14797, 139592, 33580, 9437, 22241, 22119, 132398, 126879, 35116,\n  62851, 44339, 72086, 46648, 37504, 19320, 81584, 48809, 68816, 14329, 24943, 2579, 58345, 39374, 43873, 7046,\n  67398, 497785, 28225, 24722, 186643, 41257, 163961, 110230, 43331, 10072, 100738, 91543, 277416, 48225, 37125, 93902,\n  53749, 3511, 89864, 7794, 15746, 112345, 53732, 9563, 23102, 195132, 38187, 21737, 17432, 246976, 175275, 118156,\n  4793, 40293, 65384, 52281, 151138, 59278, 5431, 12606, 48822, 47893, 70528, 6708, 54265, 9483, 244562, 3448,\n  48203, 48689, 76888, 27624, 198688, 30465, 4820, 115925, 14305, 15512, 85317, 22487, 54287, 116889, 25533, 69671,\n  2291, 33041, 27717, 4838, 18018, 20643, 214146, 60357, 113378, 9119, 25030, 79694, 123260, 45067, 41450, 70902,\n  7180, 58600, 349673, 18393, 97549, 78338, 21978, 83130, 87027, 776, 46804, 136813, 120085, 10785, 36277, 36292,\n  2920, 3810, 8562, 21587, 76080, 26439, 44502, 4907, 8190, 14533, 46271, 56528, 102005, 40453, 71405, 78573,\n  5641, 71512, 18178, 33524, 64580, 92871, 1535, 33803, 14955, 66991, 45301, 14937, 59802, 4319, 76815, 79999,\n  54028, 152893, 140972, 94339, 58884, 25420, 33237, 94907, 19367, 63221, 14998, 39549, 81779, 200006, 11084, 130155,\n  412567, 22144, 57584, 48001, 85957, 43644, 62293, 11070, 97053, 131816, 56871, 43893, 103637, 49559, 149443, 265832,\n  78871, 127928, 16848, 80586, 29364, 10123, 96121, 61469, 27637, 122786, 76840, 137205, 141728, 152810, 275825, 164900,\n  4767, 48483, 59279, 45329, 30686, 30546, 26125, 67059, 112738, 1079, 36371, 14899, 130146, 140588, 27019, 105371,\n  42745, 50423, 37529, 61488, 12730, 34379, 84661, 32169, 105040, 91899, 1842, 106489, 14844, 44986, 133939, 80141,\n  232, 29291, 19684, 156429, 210944, 61928, 43419, 24020, 36581, 39425, 29731, 17427, 152317, 27381, 12301, 14375,\n  135543, 5697, 113605, 107512, 29744, 107850, 5566, 76470, 3129, 115721, 13033, 87708, 55647, 1993, 5259, 8785,\n  58149, 147004, 120371, 11205, 46319, 4743, 14434, 21697, 27265, 15562, 219250, 35228, 17499, 95327, 51051, 18310,\n  28005, 166872, 77694, 6553, 59948, 33504, 13613, 41235, 7170, 2462, 19927, 201918, 34138, 6665, 48780, 7020,\n  5702, 48429, 19212, 60564, 293047, 10831, 70945, 188451, 110892, 514, 102527, 8278, 408, 60992, 54201, 111510,\n  91760, 50530, 1350, 10771, 218674, 53990, 187697, 687, 18469, 10560, 105023, 46885, 46095, 53517, 5808, 50818,\n  81403, 2170, 22662, 47127, 14389, 748, 107058, 67959, 4610, 94719, 30947, 36510, 35672, 12468, 50291, 29921,\n  73060, 20353, 3271, 51468, 11006, 18654, 11663, 76382, 74848, 7193, 20342, 16187, 104820, 128163, 34980, 13510,\n  118143, 40642, 131, 15981, 190357, 1266, 49918, 3612, 20043, 144329, 29109, 51118, 105358, 3728, 9721, 32144,\n  141735, 43619, 23028, 307278, 5115, 112747, 69300, 39045, 27093, 43684, 177727, 78108, 45924, 88098, 14492, 21583,\n  123073, 18169, 28525, 17923, 52599, 21514, 7009, 272, 29433, 16693, 69214, 94247, 9616, 71738, 25205, 9774,\n  238350, 23631, 52998, 161274, 78610, 112631, 168968, 6162, 24851, 53162, 47254, 154989, 58858, 17143, 112681, 166473,\n  26769, 71077, 10680, 22270, 31969, 225745, 12087, 104993, 24613, 70335, 68735, 124630, 18294, 157460, 57255, 111655,\n  4982, 2471, 133743, 52649, 32735, 12031, 93961, 124470, 39639, 39402, 65329, 63203, 143563, 23805, 22268, 105529,\n  112073, 16680, 215716, 21519, 202205, 53228, 247084, 41944, 12567, 2653, 65493, 34693, 4873, 34636, 23926, 71532,\n  88601, 71037, 5571, 115122, 44897, 69538, 89072, 43808, 81503, 36583, 28920, 133940, 101648, 191184, 4910, 9942,\n  81362, 14489, 27729, 4960, 34662, 1289, 52544, 14776, 85277, 65813, 125227, 8902, 17574, 23259, 36661, 1163,\n  48173, 42427, 11467, 98879, 21435, 10466, 35373, 39046, 221188, 185252, 93230, 99061, 40215, 21457, 5235, 36240,\n  39576, 128066, 115000, 60589, 80786, 34006, 111892, 51482, 26544, 10656, 50198, 141955, 64668, 129479, 51135, 64929,\n  81841, 27845, 7128, 18886, 10731, 11965, 52276, 82304, 37733, 19729, 35028, 59846, 247986, 66135, 53707, 299634,\n  149188, 117025, 39304, 27726, 127703, 9496, 71006, 9486, 495, 94820, 47250, 266544, 18382, 101150, 6281, 60703,\n  54388, 207915, 132866, 58949, 72446, 26212, 10542, 172127, 43071, 62490, 4376, 56788, 30974, 24968, 91443, 11619,\n  198723, 24001, 15121, 136267, 89608, 160663, 33578, 82492, 41360, 46571, 2169, 9481, 190, 29283, 38373, 141023,\n  33045, 7619, 29792, 83332, 8386, 98498, 39183, 39255, 31658, 129170, 27144, 67660, 19992, 114184, 53128, 24534,\n  237838, 8463, 70363, 22205, 119015, 18826, 68254, 121728, 137622, 10868, 292971, 14603, 50890, 34277, 24430, 65197,\n  100913, 109419, 40103, 47081, 6460, 25365, 62207, 31961, 116233, 10816, 65775, 61031, 267230, 19629, 72115, 104486,\n  26621, 27002, 49635, 13334, 104129, 8378, 107732, 16558, 65114, 17477, 179978, 4220, 14190, 224493, 16453, 41872,\n  41542, 19134, 32179, 25813, 14888, 130609, 58701, 15362, 85962, 12751, 55045, 6635, 23342, 28105, 4224, 127171,\n  23041, 34303, 59129, 73656, 26453, 19410, 24291, 79837, 43725, 157265, 16625, 34377, 71809, 89485, 82437, 24305,\n  45186, 20785, 34798, 76873, 4770, 3923, 44346, 9874, 46452, 55654, 54665, 4785, 53894, 5025, 60017, 171215,\n  56616, 15749, 17762, 16761, 221286, 105132, 20523, 56343, 18973, 1037, 602, 323886, 9038, 95606, 38396, 120502,\n  109299, 77097, 79367, 136893, 55365, 8323, 10041, 75592, 19366, 65814, 15614, 83469, 26863, 51521, 18119, 15623,\n  18808, 146873, 172424, 11543, 60909, 19528, 22504, 437698, 69353, 57600, 115924, 4644, 41738, 42360, 79256, 27642,\n  83463, 162712, 19094, 2916, 12100, 118144, 293484, 54555, 68561, 61908, 73882, 178688, 72860, 49139, 70532, 39905,\n  3980, 13190, 59763, 20658, 13796, 126559, 22696, 105248, 49340, 64706, 49195, 81589, 12332, 67817, 7722, 132448,\n  31311, 20180, 151712, 35160, 27418, 221689, 96589, 5129, 4255, 9628, 16047, 98064, 53430, 33666, 22032, 208500,\n  18976, 61564, 112915, 15902, 45523, 84205, 34747, 46386, 510, 76620, 34577, 24704, 14224, 18606, 4384, 109151,\n  30477, 37359, 74952, 30874, 26581, 19550, 21657, 13283, 4530, 93073, 46376, 122364, 3651, 181757, 62601, 2206,\n  101663, 118572, 17855, 52952, 139840, 62606, 278021, 77080, 22709, 7959, 241332, 42371, 150861, 39772, 27577, 14415,\n  31996, 13012, 109120, 42856, 63923, 41223, 14878, 182608, 120623, 29348, 36991, 15117, 262522, 7183, 54934, 3332,\n  3076, 65389, 287192, 49740, 10528, 35270, 56818, 22639, 2929, 61578, 23280, 30127, 14672, 3157, 47696, 21588,\n  130238, 62110, 52327, 56193, 18087, 130896, 142685, 109840, 9816, 18121, 57992, 97319, 121894, 80599, 54501, 27268,\n  100308, 81451, 3014, 47285, 25085, 7174, 5312, 74894, 55111, 160804, 29625, 46682, 14565, 172807, 29181, 36368,\n  18952, 75109, 124625, 24016, 53293, 186013, 58761, 87814, 2042, 89459, 35087, 63052, 369988, 86526, 54374, 118097,\n  23674, 2122, 110119, 15845, 61789, 10677, 100968, 183270, 133529, 81233, 103267, 198839, 28783, 73169, 17965, 361713,\n  108293, 136324, 42487, 26373, 35477, 218558, 27158, 71527, 47119, 331883, 45160, 78970, 36448, 156591, 71832, 96730,\n  71049, 146, 111991, 17781, 40015, 99088, 5627, 90890, 33055, 23338, 4252, 167723, 78598, 149826, 35613, 11228,\n  198442, 31532, 169906, 23323, 1833, 125495, 8102, 12897, 159937, 4522, 13990, 177607, 40654, 227310, 20082, 31598,\n  77444, 15467, 109179, 17723, 189245, 6218, 103555, 3422, 113153, 7920, 38581, 148584, 8621, 19962, 49090, 28195,\n  18599, 79279, 133222, 12709, 38553, 16730, 103630, 60913, 35223, 13228, 67419, 28730, 166072, 36003, 6493, 36652,\n  2375, 50657, 9527, 81998, 11659, 334160, 15168, 51380, 21786, 15122, 59275, 119745, 89523, 67219, 2185, 46735,\n  6032, 47447, 137690, 5166, 12116, 23018, 5022, 48313, 63046, 10829, 83429, 2746, 159398, 67335, 98418, 53999,\n  18454, 31569, 37892, 109132, 3678, 81620, 104491, 54681, 32521, 109973, 42533, 52504, 47626, 42504, 36807, 2633,\n  11411, 159915, 60573, 111310, 103527, 128644, 103027, 285252, 38896, 10950, 44585, 164005, 42946, 28131, 45971, 32359,\n  15696, 11312, 106951, 2917, 26370, 12048, 16052, 74680, 10185, 98893, 89672, 24790, 8413, 87026, 851, 4549,\n  37080, 174727, 18289, 200644, 165583, 57864, 69857, 29259, 4331, 19717, 91462, 13011, 63555, 21391, 1990, 44481,\n  14907, 7340, 15774, 49591, 72220, 3931, 6418, 53568, 50056, 9288, 4106, 48438, 6623, 5117, 1012, 41437,\n  62236, 84002, 33918, 65542, 36565, 92277, 39629, 127582, 49783, 44146, 117628, 5155, 10049, 42692, 4608, 187456,\n  17503, 74015, 34318, 12962, 100581, 33867, 21832, 157914, 55951, 106858, 14475, 188259, 146244, 57414, 21163, 26020,\n  24724, 5253, 161736, 121717, 9626, 38446, 431177, 1188, 17969, 46978, 157547, 62747, 25524, 30400, 177415, 12289,\n  109300, 175621, 49009, 166322, 173965, 132234, 51768, 26032, 99994, 15755, 29800, 72351, 101056, 240613, 21289, 15214,\n  46459, 46348, 58410, 30396, 43647, 89731, 28915, 142785, 53737, 14946, 5545, 24313, 277968, 72809, 33232, 8640,\n  8347, 16712, 3946, 25575, 123521, 39179, 9991, 145543, 74858, 137200, 34491, 8629, 33829, 23820, 68921, 35423,\n  44762, 49871, 133748, 46991, 77574, 166611, 31020, 11875, 877, 44133, 33877, 3257, 81377, 73657, 30727, 46882,\n  222525, 70076, 137697, 69291, 123532, 18001, 25423, 188796, 30602, 16643, 53078, 60931, 43881, 38283, 3221, 355554,\n  53145, 80702, 59009, 39689, 2973, 60883, 77304, 1117, 16284, 24073, 22669, 122990, 81940, 39844, 12369, 18781,\n  61281, 133978, 1107, 20779, 127044, 44416, 157395, 5868, 63620, 24846, 35621, 48921, 9875, 41926, 56949, 22208,\n  14756, 163188, 3847, 68103, 114829, 35532, 76171, 42852, 19032, 34658, 126394, 15837, 9202, 15195, 40076, 88927,\n  52759, 150700, 23019, 8077, 119141, 224558, 88676, 134306, 23928, 48525, 115416, 76405, 120551, 21229, 51681, 188804,\n  19607, 12750, 33280, 20117, 3599, 57084, 87953, 20205, 33401, 81760, 13064, 16835, 76821, 64466, 84841, 46288,\n  73233, 87118, 9264, 13911, 117430, 86790, 13771, 24443, 39968, 82124, 15778, 63864, 36539, 3066, 24571, 55240,\n  7071, 149040, 28850, 48106, 5446, 69537, 2674, 42691, 121735, 29802, 93801, 222967, 194059, 30066, 53170, 4677,\n  15206, 107943, 39854, 31639, 45283, 53779, 59063, 2348, 6706, 195398, 48495, 2005, 15603, 165902, 265960, 30910,\n  65615, 207693, 136663, 32249, 1207, 87403, 19215, 33091, 165723, 49438, 43462, 11067, 92275, 62699, 44678, 45289,\n  34773, 17412, 48972, 1858, 104447, 181545, 1001, 119266, 8396, 153464, 132289, 115529, 32353, 7992, 172028, 54069,\n  205240, 29592, 91739, 119994, 164323, 113460, 108440, 30929, 13600, 17141, 120659, 18146, 60555, 88204, 146500, 273964,\n  79205, 25175, 90166, 44725, 25532, 113251, 4468, 67884, 22907, 53542, 14201, 46217, 33410, 54978, 26399, 177809,\n  57480, 121936, 45917, 11309, 107111, 19480, 6478, 34292, 69630, 3736, 25310, 244475, 32137, 29438, 9982, 103486,\n  47832, 52490, 37250, 2562, 70913, 5179, 136415, 91803, 33161, 9255, 18432, 13038, 20321, 49485, 6575, 115334,\n  2371, 33789, 7808, 45775, 117348, 14605, 42941, 98279, 10714, 95052, 76922, 21407, 86246, 16306, 223273, 15316,\n  1625, 250738, 2661, 32095, 11763, 40925, 49073, 29377, 17900, 1538, 17882, 8, 268, 90833, 50429, 806,\n  78457, 6040, 177458, 105879, 99175, 24946, 48684, 55552, 97940, 1832, 81954, 48107, 101092, 1204, 34337, 93721,\n  86660, 78345, 46377, 86370, 32221, 80601, 7480, 46341, 14041, 65429, 7269, 59499, 128504, 5442, 8744, 14012,\n  125080, 161674, 6784, 14584, 53744, 130216, 6841, 122602, 124263, 31593, 18807, 113744, 31017, 885, 20344, 220948,\n  13897, 791, 83914, 15043, 403, 15272, 20903, 38772, 31859, 100639, 117558, 55130, 21964, 75452, 165550, 31144,\n  5633, 18734, 4133, 25708, 111630, 157700, 635, 222034, 5547, 90494, 37283, 12982, 77329, 31122, 83775, 43379,\n  17961, 19477, 64730, 37597, 18241, 81216, 57923, 24610, 84995, 11492, 22811, 22078, 25984, 270901, 50439, 91195,\n  12983, 70850, 98931, 154004, 67491, 66969, 83799, 168671, 62168, 141041, 109484, 189545, 47262, 124643, 76032, 11984,\n  5241, 73085, 225, 35278, 297, 65251, 11750, 150754, 51191, 49847, 161229, 99388, 7351, 7406, 114189, 8814,\n  8967, 13541, 57080, 44100, 147212, 116349, 149864, 40247, 82060, 41029, 37322, 87508, 16821, 59609, 20679, 68392,\n  782, 43253, 332, 39938, 11033, 23732, 188925, 38934, 82431, 93785, 15532, 191109, 62957, 63022, 27531, 12252,\n  5026, 3833, 2431, 21465, 43459, 25953, 192718, 3308, 77963, 89356, 168314, 168685, 203477, 49146, 7655, 23219,\n  53528, 24982, 48685, 54631, 6247, 793, 74260, 48185, 191852, 3095, 172876, 179270, 87774, 154528, 7635, 7686,\n  74164, 17007, 112569, 121364, 215654, 111268, 13329, 18967, 13467, 122533, 140331, 36832, 1522, 10077, 18418, 42747,\n  219964, 6033, 9858, 108306, 28589, 3913, 123863, 178765, 244104, 135651, 14684, 90, 16242, 77118, 55574, 8651,\n  117821, 131103, 73529, 284295, 67725, 19246, 36974, 62269, 72570, 115836, 24484, 7412, 156792, 33054, 573360, 105103,\n  17186, 54299, 4686, 38563, 15979, 5729, 49563, 346297, 26990, 61110, 74313, 185151, 44128, 30657, 15134, 17195,\n  193014, 25751, 282233, 137910, 35276, 2087, 2963, 41221, 57125, 17228, 387574, 26559, 16212, 16812, 134202, 221232,\n  166451, 26462, 936, 117519, 68017, 293962, 22383, 16552, 6905, 277202, 9279, 27507, 77608, 63540, 29132, 62909,\n  16364, 5654, 9548, 22674, 53777, 85931, 21483, 80245, 75921, 20622, 81952, 19224, 76426, 285538, 17463, 125910,\n  37975, 57734, 50774, 69447, 26203, 50278, 2138, 85944, 269296, 11227, 222528, 187351, 64099, 65932, 14212, 61685,\n  84122, 91003, 37581, 16099, 12077, 59461, 40868, 28123, 38533, 44075, 2588, 36016, 830, 15331, 10265, 75145,\n  4407, 11384, 111778, 70114, 20139, 984, 26926, 342, 963, 46653, 91781, 6704, 43028, 132517, 82755, 31140,\n  38902, 59578, 21048, 53790, 42911, 10083, 25044, 133733, 37503, 46985, 29071, 44261, 83343, 70437, 43357, 137819,\n  85045, 60306, 103907, 440, 16979, 162235, 12666, 4636, 1165, 37911, 28310, 153557, 60835, 38997, 64064, 5185,\n  137387, 32320, 2362, 99853, 58380, 69321, 213523, 50218, 86990, 100948, 61020, 50950, 110066, 13348, 19342, 25918,\n  134540, 64060, 4579, 40959, 56331, 1462, 8265, 82320, 193845, 39437, 45216, 6839, 81238, 14382, 79046, 111178,\n  17922, 29276, 57365, 149704, 163093, 60574, 16827, 8286, 38744, 18611, 99128, 34812, 110641, 21069, 171408, 84764,\n  12502, 14627, 116407, 2999, 56404, 1193, 183004, 176249, 34862, 85940, 4493, 112158, 26865, 58572, 118875, 48672,\n  125964, 15384, 25939, 117101, 12965, 233142, 40136, 48959, 111648, 66007, 37557, 264020, 25547, 33774, 91392, 32277,\n  7771, 19724, 17197, 71573, 27196, 92454, 77107, 15576, 136980, 15649, 12242, 7975, 9555, 9118, 86424, 147261,\n  29551, 122983, 9583, 13549, 107158, 97365, 31540, 14053, 57885, 2089, 19688, 78428, 18831, 57090, 7772, 6023,\n  37705, 42279, 17489, 45843, 35505, 9504, 28240, 38671, 101742, 14357, 11556, 49552, 13970, 125707, 62503, 78,\n  102109, 90600, 803, 39636, 62548, 22745, 124819, 19312, 124657, 21863, 74065, 15736, 23328, 7341, 72910, 29289,\n  11124, 153626, 25328, 14621, 89592, 68952, 122844, 51529, 146376, 37056, 32205, 119308, 248050, 105130, 5385, 9375,\n  6241, 68714, 119962, 30149, 22033, 32348, 9826, 10506, 18337, 1194, 11043, 20440, 80685, 7291, 6655, 39825,\n  29898, 34836, 89830, 2183, 11908, 77399, 230, 65020, 216623, 34971, 221825, 14543, 67721, 227257, 14033, 27652,\n  106162, 21776, 20020, 28180, 146610, 80549, 55471, 219506, 21377, 61817, 7021, 305922, 15085, 106336, 54962, 10257,\n  91552, 89739, 15956, 10310, 42041, 12349, 21713, 99929, 62560, 8880, 23249, 59633, 122532, 7065, 9930, 6740,\n  125336, 55124, 109173, 72328, 102365, 8889, 8209, 56963, 121537, 88838, 40700, 83507, 142559, 9284, 11988, 12130,\n  29693, 99684, 1851, 53782, 223919, 30273, 31841, 19809, 11515, 73342, 35465, 93163, 110495, 23975, 49885, 92376,\n  18776, 32648, 125596, 132210, 22494, 29891, 297641, 6024, 5895, 22238, 100417, 18472, 185059, 48669, 125656, 10048,\n  103592, 49510, 59226, 104204, 229351, 165617, 46718, 48516, 51220, 41125, 102032, 77586, 100102, 19702, 25341, 13898,\n  37027, 2385, 82750, 60716, 257855, 90865, 4079, 14003, 29359, 297913, 47142, 98916, 54123, 14508, 12634, 40487,\n  36066, 129289, 2029, 245241, 106493, 5810, 109583, 17298, 12244, 60441, 17678, 23488, 79258, 151032, 54077, 112594,\n  32002, 5397, 25330, 17562, 432, 34826, 2236, 30268, 56205, 22097, 10644, 6211, 94836, 184579, 8566, 12259,\n  90182, 61802, 2022, 29431, 6726, 4718, 91806, 456527, 14762, 39564, 99255, 8125, 29391, 128901, 131938, 180961,\n  48938, 149835, 7017, 26179, 26864, 38950, 491, 20535, 38083, 43407, 78246, 137337, 60364, 35466, 21672, 57096,\n  3310, 39531, 1033, 46613, 60192, 3069, 21262, 288395, 14766, 77635, 29064, 99405, 205567, 154227, 179766, 14046,\n  57504, 99249, 29131, 64556, 110760, 88476, 228776, 3720, 22649, 302613, 85204, 95561, 24666, 38247, 51104, 2156,\n  46333, 117076, 191749, 48805, 21517, 16529, 57284, 34877, 3430, 71129, 30911, 56215, 13135, 122327, 141377, 4502,\n  28873, 12208, 183048, 148459, 27052, 44260, 166866, 49683, 158809, 197069, 27559, 78004, 11597, 48052, 1373, 159150,\n  20529, 206142, 12875, 61289, 6695, 68881, 22031, 2730, 23138, 107005, 59860, 1509, 22960, 36899, 42173, 70639,\n  37137, 51908, 72392, 61903, 45574, 102776, 400, 53585, 6545, 7660, 71705, 48771, 305877, 115853, 19814, 37969,\n  43423, 3477, 6989, 9730, 26153, 133461, 19482, 123699, 24769, 73107, 44361, 86286, 59844, 213778, 53573, 18022,\n  14501, 100344, 128105, 108914, 10430, 136734, 154864, 41259, 134352, 60618, 70173, 3694, 56169, 29875, 7038, 16127,\n  13213, 3067, 10956, 12306, 103432, 86864, 35882, 158228, 49523, 48003, 10223, 41242, 35181, 11563, 115948, 71725,\n  13435, 59826, 26330, 104459, 12408, 31199, 198177, 173879, 129475, 28833, 287276, 88609, 64620, 90587, 23797, 20565,\n  230854, 40940, 38005, 64403, 77390, 30876, 41640, 111472, 51990, 21480, 5502, 71562, 15653, 50942, 53320, 213339,\n  83248, 57060, 47482, 99892, 33466, 94511, 35134, 39153, 44571, 79902, 26028, 77887, 117828, 65872, 48866, 22019,\n  51481, 20695, 6816, 15468, 2187, 56218, 56453, 72760, 10559, 23157, 89968, 337727, 68019, 20454, 32792, 91871,\n  18021, 19811, 54181, 19785, 54895, 74209, 9868, 171144, 48247, 7928, 165277, 1104, 18354, 39238, 60324, 127799,\n  33737, 46441, 21125, 16451, 4554, 138540, 104181, 92183, 108595, 35070, 341328, 119439, 37288, 53479, 244682, 62059,\n  39767, 90048, 55516, 10156, 116707, 177198, 93755, 76515, 9175, 160572, 523, 82789, 3726, 1887, 5577, 952,\n  108877, 14261, 74693, 168738, 21616, 69086, 93069, 2668, 83684, 168326, 89980, 40475, 49862, 993, 36286, 134733,\n  1938, 1799, 17016, 106908, 8543, 213196, 68388, 64036, 276466, 31847, 29247, 15775, 20134, 20323, 38300, 6990,\n  108498, 60387, 10008, 41213, 48770, 96703, 53469, 375632, 102254, 16286, 56810, 71072, 31914, 93491, 252525, 99457,\n  131520, 360748, 153227, 148240, 185291, 21359, 5538, 120533, 100559, 7782, 22500, 110558, 51890, 8141, 109666, 34083,\n  209, 2223, 43177, 12541, 19526, 38778, 39701, 58422, 76471, 57840, 69298, 168436, 50544, 120544, 5588, 4904,\n  71814, 6780, 99075, 11363, 99351, 96073, 4464, 71241, 8172, 116428, 160177, 72875, 198526, 85587, 21266, 28059,\n  28816, 58105, 282844, 53464, 20419, 81082, 260276, 6827, 9109, 38541, 171515, 229032, 98389, 150153, 15498, 10140,\n  136777, 110487, 92940, 42991, 76479, 19523, 10372, 21173, 75596, 28853, 81504, 63448, 30635, 135311, 13245, 254897,\n  165417, 61091, 49656, 45428, 48216, 44529, 18414, 915, 120220, 22939, 12949, 64687, 25955, 67099, 25048, 22602,\n  211071, 8500, 87865, 14625, 39314, 101395, 81563, 141087, 24308, 43453, 50836, 133590, 32164, 3576, 59438, 10284,\n  2559, 731, 9526, 222252, 146280, 87697, 10901, 52647, 43403, 137838, 74591, 33197, 9233, 63356, 132528, 799,\n  17947, 41186, 9082, 7417, 90585, 39849, 50863, 90290, 1786, 8152, 144979, 35008, 86920, 156078, 59343, 104076,\n  125662, 127008, 111645, 36851, 2457, 87365, 8649, 14841, 64741, 69960, 475364, 42995, 32152, 78057, 117362, 50703,\n  32918, 3669, 219900, 142020, 122882, 25093, 37632, 59532, 78538, 31923, 14695, 27152, 44001, 30500, 34140, 87080,\n  31723, 21082, 71987, 36698, 56426, 225949, 5796, 1809, 23375, 125781, 9456, 168878, 103172, 15329, 86662, 97895,\n  88177, 17270, 67948, 56739, 145697, 32730, 25167, 10080, 52506, 49488, 112733, 42661, 49319, 110135, 27599, 51073,\n  68016, 69079, 90323, 101226, 31664, 20967, 163445, 48192, 41488, 41500, 17028, 27408, 18486, 193593, 92824, 60145,\n  110400, 6284, 10148, 99305, 7030, 8019, 15366, 78496, 28241, 25688, 95511, 86416, 986, 31151, 29745, 215965,\n  109199, 10425, 23864, 62113, 19900, 54264, 8171, 31738, 42147, 21664, 39774, 126916, 56864, 9927, 2688, 85157,\n  65287, 33019, 23537, 6543, 49183, 29757, 1968, 29750, 7858, 70193, 1211, 62048, 24000, 35355, 53720, 246,\n  30453, 1963, 267877, 27516, 840, 101181, 36344, 426, 16673, 136627, 20509, 19180, 25907, 70101, 11239, 56975,\n  68916, 9194, 87686, 38354, 89927, 16469, 7125, 48706, 6309, 37837, 22274, 71780, 158335, 39840, 82643, 75960,\n  36407, 49670, 1989, 14982, 199737, 14639, 22843, 120678, 130464, 46783, 21419, 13639, 13137, 127847, 144799, 159573,\n  59603, 17603, 2824, 59934, 201778, 13312, 36351, 40000, 195292, 19891, 2315, 33443, 21015, 43785, 3891, 2636,\n  42466, 7039, 20196, 103143, 179062, 154987, 42658, 47584, 172561, 40055, 48647, 12739, 89492, 8870, 14895, 170930,\n  11075, 73935, 31376, 34999, 180407, 46254, 20836, 59075, 31868, 41037, 39680, 25099, 72493, 14732, 26639, 55562,\n  20998, 611, 41758, 4739, 60217, 85527, 54988, 99046, 9865, 99927, 2352, 15721, 19530, 86459, 1125, 66190,\n  39274, 9720, 82870, 3364, 130266, 15887, 122881, 84869, 54539, 14106, 293942, 63127, 21623, 10194, 31975, 38172,\n  12535, 149, 62630, 75752, 13505, 13805, 8770, 88088, 40641, 208378, 14393, 38913, 73375, 44350, 32840, 22198,\n  4087, 10333, 34430, 44812, 85633, 122365, 38608, 134765, 2153, 192171, 2383, 3536, 3117, 54286, 96428, 28420,\n  70680, 12317, 147982, 4363, 55788, 39340, 6445, 40899, 92096, 24356, 221898, 26647, 47509, 10792, 131852, 24256,\n  98493, 19086, 25386, 75057, 37490, 10028, 45730, 184141, 271936, 286712, 1729, 81050, 151475, 2718, 8857, 7068,\n  3032, 70545, 10863, 172184, 16171, 61405, 54726, 3906, 96642, 17628, 2754, 24338, 34106, 1369, 8054, 98154,\n  78425, 52080, 132116, 61228, 125761, 72327, 27960, 23032, 19591, 19659, 80147, 103860, 3366, 33018, 35292, 39070,\n  19316, 88042, 12272, 53033, 54508, 18901, 21506, 21455, 24183, 122461, 20317, 27159, 50786, 118677, 19298, 4344,\n  194248, 97414, 153639, 16051, 91528, 37589, 38898, 5339, 33253, 113074, 39403, 51508, 34622, 24505, 11212, 76907,\n  108355, 126229, 77678, 8205, 41741, 10599, 69948, 101917, 705, 49260, 68715, 39750, 3814, 111125, 108544, 115867,\n  3883, 144663, 33293, 7255, 108929, 13737, 90748, 14774, 13203, 10588, 17244, 84607, 67831, 29180, 50860, 106727,\n  10142, 30125, 120708, 58131, 59754, 66460, 103711, 43126, 68208, 9476, 5110, 156651, 29128, 145052, 14949, 151686,\n  84820, 79229, 57233, 1002, 56880, 47904, 10010, 11807, 38794, 32039, 2140, 3550, 24972, 116011, 47660, 76086,\n  48571, 130683, 18131, 4450, 40821, 39353, 38655, 33743, 40476, 135664, 142086, 29489, 18137, 67555, 45205, 115281,\n  164254, 261470, 1105, 128217, 24064, 28118, 111832, 44643, 236309, 17929, 3024, 138171, 79181, 14368, 22266, 37872,\n  11282, 10626, 56113, 43632, 395, 41031, 1026, 152342, 39169, 124364, 66473, 4684, 2013, 12270, 120501, 142296,\n  51587, 29013, 3177, 129452, 28551, 23498, 8358, 22595, 9645, 92008, 40742, 106126, 701, 194074, 1806, 54493,\n  109513, 2084, 33125, 5622, 115899, 14353, 11000, 60472, 113566, 150803, 15891, 40791, 12762, 53130, 36257, 13420,\n  62045, 128143, 272516, 213527, 58322, 32400, 115427, 101476, 103726, 20176, 21502, 355183, 41343, 23892, 15753, 2312,\n  40866, 54294, 101785, 55146, 244102, 32705, 27994, 13284, 143816, 157993, 81010, 16933, 2490, 6072, 23250, 13602,\n  70346, 112144, 297560, 55477, 40973, 56881, 19001, 130715, 52618, 12974, 11195, 11003, 15412, 7646, 11175, 7316,\n  30720, 44809, 123585, 100767, 104315, 95294, 104855, 7533, 38917, 11608, 3316, 171486, 42027, 49423, 58544, 56254,\n  93676, 12514, 18792, 45592, 17513, 1245, 48068, 120907, 107418, 26207, 55327, 89145, 20706, 175898, 72652, 100555,\n  123890, 3322, 87742, 9460, 13399, 59577, 26311, 16724, 97727, 64005, 14658, 4457, 24044, 49860, 32409, 21567,\n  87962, 27289, 14624, 50763, 65606, 23475, 207482, 25541, 44250, 48058, 12271, 88998, 98044, 55548, 2331, 52575,\n  65276, 9350, 77725, 56779, 74790, 14114, 85990, 42433, 101473, 7844, 52309, 157284, 19350, 39922, 12466, 21036,\n  91570, 95031, 74187, 95245, 1326, 34475, 71765, 28558, 87790, 354, 27116, 254543, 172042, 18412, 35291, 39776,\n  7577, 28592, 29654, 42244, 100813, 7588, 48319, 48295, 86896, 40289, 229422, 2570, 85891, 10264, 76701, 52231,\n  41512, 127376, 230534, 93605, 108130, 23424, 36739, 233035, 27794, 95965, 35884, 151494, 14875, 843, 49833, 38010,\n  71431, 219272, 82428, 214192, 12835, 127240, 14345, 138207, 156250, 50941, 99644, 99417, 58135, 7353, 39821, 29812,\n  3759, 7415, 14572, 53830, 22476, 49857, 78175, 14915, 42176, 77853, 6530, 12126, 115873, 21641, 122781, 72383,\n  34686, 27915, 136002, 76130, 56523, 25687, 6527, 134727, 73643, 74722, 67478, 8251, 108505, 23843, 145891, 48731,\n  51491, 16182, 53915, 16603, 20838, 7395, 115375, 138355, 12721, 58670, 15892, 3735, 32863, 124677, 12604, 11997,\n  45700, 14999, 258154, 2720, 29496, 271082, 85521, 39973, 13700, 113046, 44485, 36482, 34294, 47751, 134797, 155904,\n  55360, 134690, 21770, 91135, 29206, 144711, 48744, 44674, 155942, 59875, 17918, 64497, 123812, 9144, 234966, 164534,\n  7706, 5270, 25090, 20339, 163234, 3097, 133900, 125161, 203, 10715, 9667, 87129, 132720, 92850, 3501, 14636,\n  49358, 17266, 21111, 30612, 144431, 122860, 101497, 17673, 8130, 11884, 91167, 88623, 175788, 32729, 35605, 166925,\n  35818, 36536, 38809, 2716, 3270, 93973, 82603, 23366, 76832, 61965, 62245, 13893, 25710, 144091, 98814, 44208,\n  54095, 236277, 53367, 34834, 97274, 2172, 16858, 49284, 28779, 113183, 4643, 106217, 94621, 164943, 16845, 19253,\n  74396, 22592, 87503, 34996, 19092, 146507, 19116, 134652, 128242, 22736, 1007, 132190, 58067, 27936, 48566, 40563,\n  20885, 33771, 80664, 989, 14670, 14315, 21661, 187703, 93255, 27617, 245729, 44376, 15107, 49824, 93604, 106721,\n  63291, 5606, 153280, 101864, 23654, 28688, 6737, 43584, 126900, 7137, 67499, 145087, 129421, 24707, 105699, 311580,\n  59294, 11582, 211232, 92185, 262659, 717, 4752, 31126, 9798, 18631, 28374, 3367, 3251, 154411, 52363, 51023,\n  67344, 70678, 261560, 78059, 28600, 18070, 79850, 53359, 44629, 30869, 19073, 64045, 50672, 63508, 37203, 78992,\n  29072, 93421, 104033, 26081, 26999, 121749, 113974, 301732, 31526, 3016, 52083, 135740, 23183, 10650, 107815, 49863,\n  49175, 1554, 10166, 34286, 165843, 102866, 56807, 29193, 175455, 36495, 50639, 18134, 17282, 14831, 3286, 19214,\n  175411, 85620, 44203, 2339, 32022, 31760, 24711, 84552, 45989, 38675, 25767, 121791, 30298, 7929, 8128, 324,\n  90690, 46242, 120990, 8574, 78118, 72361, 11333, 68279, 83156, 26766, 288, 27097, 23749, 6805, 96767, 122167,\n  35636, 198501, 41641, 29661, 31317, 217715, 8631, 12460, 7069, 78590, 46516, 87449, 80381, 45698, 49298, 44290,\n  94561, 24990, 13323, 11057, 133756, 4423, 12607, 21852, 14960, 88023, 10455, 58146, 97404, 38753, 9405, 216304,\n  6138, 24563, 206624, 146948, 41065, 115571, 46443, 96844, 78041, 42616, 20236, 11182, 32843, 47724, 12361, 122382,\n  16601, 14468, 3252, 1927, 34123, 58038, 88840, 63230, 9559, 119391, 241176, 12638, 146529, 181367, 152506, 46831,\n  123377, 113569, 91896, 1930, 96395, 154527, 81091, 102845, 54441, 92585, 4800, 95396, 42012, 27534, 62635, 8447,\n  84257, 129409, 12110, 25104, 123541, 51131, 36346, 44078, 10745, 2994, 120391, 4597, 22139, 55241, 51317, 125652,\n  106459, 267836, 35138, 15293, 11720, 7525, 66335, 62591, 150883, 14682, 152240, 38920, 172651, 34616, 1931, 48367,\n  154996, 53262, 13826, 3119, 110538, 5436, 54461, 84681, 4728, 16350, 250445, 69950, 53447, 94853, 13819, 81759,\n  25704, 73967, 266094, 36612, 2009, 10054, 152119, 181823, 71152, 47335, 164288, 150538, 119354, 57186, 395013, 2941,\n  21166, 126317, 18555, 208602, 66604, 161278, 109157, 190726, 1429, 126459, 64236, 8007, 216162, 49573, 170973, 56109,\n  8637, 53811, 49583, 16200, 122250, 46869, 24350, 5723, 63520, 11915, 9305, 41525, 27180, 215488, 96890, 13022,\n  29172, 40217, 11913, 5985, 36124, 147278, 26010, 452445, 276428, 85611, 7347, 12127, 107787, 9651, 6341, 2892,\n  77184, 25332, 29107, 20014, 4680, 81466, 12892, 58258, 14952, 10238, 70027, 35013, 104903, 128969, 46523, 15173,\n  24418, 103787, 139284, 30348, 14793, 9646, 156700, 29992, 51561, 15377, 15544, 84114, 52931, 20387, 129004, 6592,\n  8371, 57164, 36658, 17268, 26342, 292, 19324, 116062, 48526, 23357, 38167, 14524, 7118, 263554, 155894, 242917,\n  92066, 33509, 27485, 107820, 67280, 197352, 32547, 18520, 40653, 68664, 90091, 69796, 8847, 81434, 4751, 106853,\n  34597, 37923, 18335, 221713, 105438, 25972, 14464, 111785, 14198, 134281, 5575, 71227, 50163, 102398, 17570, 101686,\n  61188, 22480, 52263, 56951, 146286, 15008, 39203, 25408, 50315, 2155, 73767, 13685, 41205, 94069, 6395, 180692,\n  170829, 2835, 2103, 11342, 161496, 89214, 6026, 1302, 585, 38860, 110361, 40025, 197359, 39048, 82914, 220968,\n  95056, 26946, 162638, 65364, 1687, 34647, 33433, 75300, 365794, 57865, 121192, 320880, 91349, 18120, 6915, 106455,\n  48507, 20917, 41330, 101793, 5804, 46924, 91838, 39919, 49263, 77778, 119562, 26736, 5146, 16996, 48515, 149815,\n  104902, 87328, 6533, 151190, 96365, 32904, 4018, 7595, 117343, 138520, 33658, 181860, 132222, 36765, 26173, 59136,\n  46084, 53703, 43164, 216719, 96919, 95045, 33006, 96990, 16875, 83496, 45441, 27720, 8073, 17015, 124868, 179271,\n  262381, 118057, 199816, 4275, 79982, 123100, 54391, 90904, 52663, 27953, 77709, 4272, 13928, 39051, 71112, 413271,\n  16056, 87986, 33056, 18596, 153908, 120302, 27857, 128911, 15145, 60790, 4586, 67318, 109256, 79780, 45306, 11932,\n  132308, 106229, 37412, 1507, 18763, 133449, 58137, 37961, 24904, 86499, 21760, 41606, 167644, 77227, 120713, 43226,\n  13618, 151594, 108301, 101213, 40750, 66225, 16687, 80402, 18686, 48613, 45656, 10805, 147124, 34576, 19977, 157309,\n  114709, 36792, 223317, 58062, 150038, 9205, 150642, 21252, 52849, 184323, 41421, 43314, 2938, 99855, 60463, 129217,\n  12568, 75505, 125705, 141476, 48617, 43014, 23373, 19138, 8778, 94674, 178893, 8058, 5459, 94724, 266341, 80369,\n  44202, 274013, 86858, 78320, 44591, 24273, 35983, 13078, 74914, 24190, 202665, 27165, 17183, 37327, 73294, 34055,\n  248689, 18437, 74717, 975, 13878, 8774, 64644, 71823, 7822, 6524, 56622, 7221, 80060, 16273, 88677, 19383,\n  23116, 127134, 154899, 68336, 194037, 241, 4615, 387990, 18487, 147941, 15391, 26006, 2067, 26484, 4709, 66156,\n  7798, 2820, 26469, 48765, 43077, 66027, 3606, 27342, 33678, 18421, 7829, 55334, 244028, 32856, 8103, 147672,\n  31320, 49696, 49702, 69018, 74273, 120264, 122020, 31808, 2794, 1867, 52845, 55295, 19466, 19329, 26414, 52167,\n  8218, 210642, 13654, 127707, 36280, 64707, 8564, 114550, 183997, 115833, 23481, 2828, 48124, 16340, 247, 309535,\n  19416, 66487, 105120, 17809, 29656, 47021, 201858, 160017, 19280, 78447, 21406, 39940, 98734, 122438, 36909, 83000,\n  7715, 134747, 24473, 75401, 18311, 9336, 15781, 55262, 30701, 9503, 53173, 8524, 133602, 90200, 85568, 13433,\n  150307, 24618, 45822, 23920, 126956, 23395, 51943, 161287, 7378, 37763, 121912, 32196, 2933, 19681, 9297, 23283,\n  79903, 162071, 55832, 23137, 13178, 209527, 9418, 18467, 12593, 119121, 83307, 51772, 86571, 52216, 23349, 61608,\n  26604, 94854, 7575, 204746, 92446, 22189, 28677, 83268, 13574, 65266, 57786, 61446, 44205, 26661, 107681, 91716,\n  65699, 82006, 71722, 70318, 427599, 64286, 24112, 101430, 21118, 144724, 36334, 80349, 8245, 44912, 45640, 4276,\n  14407, 1378, 31347, 22711, 27877, 62250, 191999, 8464, 47936, 361021, 134866, 3976, 33542, 48109, 10852, 237219,\n  7916, 122443, 17484, 70725, 26460, 109271, 187381, 128014, 117762, 246379, 22586, 82080, 21596, 9055, 4112, 313930,\n  37818, 163471, 108924, 39581, 2249, 13074, 7431, 75393, 127359, 35494, 111020, 59720, 209394, 14051, 37123, 41719,\n  60044, 39589, 172595, 143831, 47677, 59508, 24424, 103244, 308089, 7173, 30716, 90486, 36791, 60870, 101299, 108569,\n  154971, 20715, 53888, 53901, 31417, 53959, 2728, 97125, 6998, 145934, 80463, 20412, 150042, 45242, 187078, 7592,\n  174360, 31180, 135274, 14872, 12255, 11730, 93361, 83265, 43009, 49328, 20215, 21789, 29335, 115863, 28254, 39036,\n  48739, 17655, 180783, 12531, 3912, 8728, 149240, 87661, 101398, 77276, 44669, 83920, 53340, 37769, 16150, 114794,\n  2580, 157793, 7167, 176552, 146939, 5647, 16877, 13855, 151295, 90625, 68053, 91363, 45360, 176357, 42521, 30918,\n  125275, 57667, 44098, 88883, 15273, 61531, 4145, 110202, 45383, 253407, 75996, 20238, 27456, 20964, 4620, 8638,\n  48761, 12194, 52351, 99825, 23314, 86104, 80185, 11840, 8750, 45404, 19895, 71824, 60801, 13493, 12198, 37669,\n  85823, 77592, 114135, 4393, 104759, 210654, 28711, 86484, 27894, 35912, 20614, 184536, 123685, 134244, 44348, 10862,\n  66968, 165136, 18647, 32424, 39480, 60719, 93213, 164629, 26917, 39935, 75223, 75930, 55290, 22975, 122323, 10513,\n  83305, 99747, 19500, 77541, 2696, 77867, 101290, 65344, 98390, 12816, 83594, 39244, 57569, 8468, 34263, 35071,\n  145853, 12146, 76941, 17746, 340733, 25910, 37273, 43127, 4919, 60464, 1992, 49562, 20024, 15497, 109739, 14126,\n  52268, 76976, 6239, 8384, 30884, 19155, 135974, 107147, 7413, 64546, 38363, 186999, 203685, 81795, 108201, 36022,\n  70989, 30403, 116774, 5379, 112855, 28461, 9025, 58269, 4129, 17604, 104476, 174522, 50536, 1225, 10900, 36288,\n  349518, 20856, 101414, 45229, 68205, 77322, 197569, 10875, 332641, 23358, 85554, 14077, 159581, 34721, 18791, 98700,\n  135361, 167675, 50000, 42501, 236026, 75571, 5992, 17097, 37563, 20166, 101652, 40721, 176404, 19063, 36155, 59023,\n  64899, 33196, 98793, 70148, 6578, 69024, 242235, 52605, 122033, 81904, 12809, 15158, 63871, 107782, 1840, 4872,\n  1850, 29779, 34125, 98682, 85234, 116592, 82990, 12554, 82089, 63993, 168833, 149888, 66124, 10489, 196009, 53058,\n  74145, 69106, 89715, 51982, 121098, 13559, 95458, 107427, 107351, 113368, 3064, 70286, 12687, 4839, 22981, 48279,\n  36881, 55099, 198175, 73274, 117334, 75733, 3562, 5484, 13136, 64209, 184119, 61973, 14698, 16622, 73579, 36910,\n  85933, 42774, 90601, 40132, 93866, 19937, 45703, 23982, 18047, 5362, 11140, 39687, 32620, 25714, 60265, 77976,\n  310, 77325, 31712, 280974, 15094, 86261, 43015, 13789, 46000, 100529, 1116, 137536, 88451, 20938, 134125, 17791,\n  23632, 63779, 256927, 29623, 36645, 219053, 83430, 48090, 27940, 27300, 14780, 109338, 87618, 34615, 102225, 42200,\n  80520, 6619, 74506, 194075, 58892, 76807, 27201, 60732, 20976, 110501, 170773, 84913, 27702, 21417, 5342, 72467,\n  140090, 178520, 122111, 33447, 96075, 4699, 53512, 17029, 67841, 174853, 17388, 16526, 103292, 6179, 27759, 37717,\n  238964, 22906, 23675, 59996, 87778, 65471, 88269, 10094, 107338, 46577, 43856, 31927, 17019, 15, 159648, 72870,\n  83427, 14710, 153353, 15418, 67522, 32362, 44785, 3937, 7302, 108965, 41424, 55752, 8261, 138626, 43498, 8777,\n  47570, 24353, 207472, 131958, 116787, 3156, 34108, 58412, 8730, 6898, 90267, 28837, 80484, 59214, 9439, 19087,\n  61772, 5722, 23159, 81837, 174422, 59842, 18102, 171770, 56005, 80656, 119313, 22496, 131193, 22339, 3665, 14366,\n  52875, 107272, 15645, 70022, 14588, 34482, 10876, 36184, 28471, 60828, 82588, 55312, 59817, 102390, 8845, 87428,\n  9586, 17179, 96409, 90979, 15720, 107181, 33777, 113545, 158155, 4326, 32422, 188604, 51307, 29601, 10067, 16201,\n  109734, 3998, 129448, 141025, 15196, 18904, 83270, 17683, 11025, 19743, 21493, 1552, 59331, 7581, 25652, 89130,\n  3884, 119328, 75611, 26479, 52626, 13590, 195115, 6807, 102602, 52190, 72507, 52467, 84797, 6467, 2334, 47785,\n  25158, 132580, 142359, 76578, 27314, 24766, 3969, 27500, 4437, 254621, 65367, 168149, 20488, 13843, 62310, 21136,\n  76214, 12671, 23644, 139645, 189248, 55341, 3302, 14123, 35023, 48936, 11475, 55049, 114952, 51698, 297764, 80767,\n  157376, 20881, 13336, 53207, 2827, 59849, 16592, 52991, 62439, 275657, 47305, 117196, 102878, 60777, 83027, 10464,\n  129749, 26707, 251779, 125019, 36405, 33132, 25562, 70233, 10329, 28189, 12385, 71977, 109339, 157513, 195426, 70901,\n  108633, 55857, 3229, 108445, 36662, 75267, 19054, 102039, 1254, 2391, 173276, 29374, 13267, 51771, 225351, 7237,\n  5470, 98738, 14316, 209876, 87105, 107056, 16157, 44140, 58004, 88474, 31907, 11831, 15397, 11396, 39700, 90254,\n  10434, 316, 22682, 60529, 159667, 46855, 41392, 55643, 21864, 20640, 1483, 48142, 52022, 14052, 14307, 23845,\n  179464, 105497, 8112, 170979, 3013, 22501, 58766, 9748, 32147, 168407, 69486, 20613, 31496, 139990, 50815, 4616,\n  116832, 5525, 13988, 136236, 18494, 72230, 42950, 16966, 105502, 65693, 12439, 22036, 129227, 24413, 66758, 60339,\n  107267, 12682, 60700, 199944, 50033, 64809, 169, 18106, 13481, 63773, 97251, 21927, 9954, 10994, 61753, 132964,\n  24267, 269121, 315805, 17090, 22141, 89553, 60, 41720, 16257, 267739, 11800, 148430, 116154, 107691, 1495, 7110,\n  36185, 30330, 15572, 9879, 950, 164278, 12417, 189181, 115685, 238527, 61115, 3001, 11305, 185925, 125509, 80597,\n  176708, 23407, 47313, 198512, 2048, 137403, 10323, 39029, 178671, 3975, 76003, 84147, 112573, 78996, 69042, 6992,\n  287867, 46759, 5275, 30027, 162328, 18790, 274565, 55200, 497663, 89305, 12413, 26108, 95170, 13648, 15748, 78466,\n  50979, 40335, 43390, 12453, 193861, 466, 66161, 87201, 50987, 94748, 32988, 22018, 30368, 175641, 225636, 53920,\n  136257, 72869, 274820, 12673, 31830, 21228, 5225, 4705, 46549, 105854, 3199, 16143, 15119, 48337, 134864, 57495,\n  169876, 45311, 13298, 54322, 23788, 14950, 42143, 49801, 17462, 217840, 101953, 63412, 249887, 9473, 75292, 729,\n  57377, 66067, 6712, 114078, 1949, 92149, 44063, 86259, 35448, 19529, 20598, 19485, 14791, 73304, 47309, 366,\n  43769, 14667, 98883, 25339, 210091, 45717, 49613, 6739, 3783, 165357, 28175, 87394, 34612, 90151, 838, 17747,\n  282103, 59822, 30329, 68354, 88380, 37787, 19846, 9765, 245190, 63635, 236, 10025, 5457, 17502, 12156, 204683,\n  20491, 39054, 8070, 50911, 98908, 99317, 12186, 49875, 11402, 152980, 22961, 22075, 86899, 34073, 14755, 13282,\n  117916, 33225, 72465, 158235, 16028, 64557, 36732, 123058, 162584, 20479, 31391, 63733, 60644, 62683, 9917, 17310,\n  320177, 239647, 43989, 8876, 156096, 31699, 114739, 105603, 31065, 78174, 95969, 9220, 55876, 38786, 58411, 214643,\n  22000, 140310, 88748, 26085, 77655, 28585, 109281, 7624, 9992, 7234, 98903, 60178, 23397, 75321, 53549, 53032,\n  13757, 109032, 64081, 19046, 317623, 1946, 71713, 62867, 63978, 3151, 56924, 47304, 215255, 182040, 74590, 48012,\n  2443, 24268, 69427, 33, 17648, 12518, 40668, 140511, 93231, 72823, 28791, 47052, 27388, 55205, 30906, 57350,\n  104529, 63338, 26728, 100624, 93807, 107269, 82876, 163825, 55505, 18547, 30605, 14974, 140477, 81686, 69012, 120278,\n  12046, 5605, 47923, 212928, 112040, 108335, 21336, 38303, 70887, 143240, 19855, 87583, 40152, 15587, 66375, 29394,\n  94365, 54674, 43272, 133291, 112353, 210955, 121711, 331352, 25063, 35707, 69840, 56454, 114679, 66792, 86743, 446056,\n  266061, 12010, 82324, 96915, 71248, 22037, 64756, 25091, 119555, 13915, 28628, 6675, 15589, 106123, 53880, 102126,\n  2244, 55885, 39035, 5738, 617, 441160, 19553, 2220, 14129, 86275, 107256, 166687, 211431, 81495, 104573, 290527,\n  70110, 99357, 25187, 33256, 100652, 31225, 142056, 82578, 7777, 23449, 58276, 64423, 4383, 192266, 134799, 66044,\n  85911, 76876, 90974, 103947, 89221, 15961, 109118, 116095, 21010, 92406, 79525, 73542, 120615, 156252, 287243, 95281,\n  58357, 14409, 38018, 33736, 86405, 83837, 55695, 9631, 37554, 27881, 106045, 6071, 41647, 35485, 108389, 46354,\n  18, 34159, 180231, 126085, 15143, 13910, 144853, 93597, 69662, 64563, 23068, 38208, 60491, 41204, 62238, 141119,\n  14714, 38001, 3276, 56189, 186134, 91982, 65866, 6904, 148344, 128140, 61946, 3683, 42347, 4969, 38485, 12705,\n  5410, 78157, 91933, 103926, 168175, 15606, 288735, 6045, 44535, 20558, 34571, 13823, 42449, 6093, 11546, 37307,\n  343894, 81874, 112517, 50738, 129417, 141962, 5390, 118181, 99682, 16804, 16660, 107424, 20659, 45287, 22461, 55188,\n  27272, 10167, 12088, 17401, 140483, 17330, 78850, 45339, 63455, 16978, 199211, 80486, 222159, 13457, 1094, 18869,\n  17536, 103284, 31050, 17962, 13722, 71867, 76368, 286932, 42637, 10567, 2, 199412, 62324, 36676, 8181, 6401,\n  11976, 162, 87196, 78376, 114691, 1307, 30802, 3711, 148109, 74365, 57920, 81357, 2283, 214679, 12573, 18531,\n  32057, 44583, 212119, 44264, 182393, 154286, 35753, 8258, 4295, 13186, 83291, 4736, 147364, 121944, 59024, 73352,\n  33705, 31001, 88498, 32882, 2075, 163404, 10634, 11500, 44303, 65212, 13112, 34394, 30274, 20847, 64779, 22883,\n  28331, 12500, 41997, 11945, 63740, 75992, 39703, 69806, 69740, 66087, 128693, 81128, 29148, 111583, 148435, 31535,\n  10346, 159917, 58414, 28273, 44862, 59, 33364, 21068, 33716, 46470, 1804, 73963, 73937, 219049, 103305, 218321,\n  153333, 233125, 63775, 105390, 12930, 127548, 60730, 109562, 38784, 53330, 627, 73923, 247159, 30199, 38362, 48641,\n  2515, 19205, 34500, 48846, 41053, 21212, 105356, 15212, 20256, 3616, 21849, 17211, 83368, 97044, 352396, 108368,\n  256189, 196693, 4226, 14922, 54639, 25114, 35849, 320, 115240, 41400, 60330, 23377, 5096, 75542, 3178, 56889,\n  24661, 12431, 135214, 63314, 175419, 239496, 41215, 13379, 153552, 73270, 37517, 105147, 26516, 27776, 68242, 1357,\n  141, 71029, 155582, 76053, 138176, 8168, 4134, 134075, 63885, 2519, 46027, 51951, 34115, 79709, 5576, 10203,\n  47222, 15435, 34313, 43154, 55709, 9408, 82175, 88231, 2765, 52283, 66501, 65412, 28479, 574, 36643, 57430,\n  38875, 293893, 16069, 28162, 236608, 26442, 8613, 1622, 12229, 37482, 74496, 33264, 22921, 79056, 39384, 129956,\n  77291, 20463, 58349, 109725, 54426, 106360, 47581, 90881, 45388, 31487, 128197, 71530, 2860, 39582, 46028, 81826,\n  57787, 259117, 67523, 307547, 114579, 104215, 18723, 115699, 295139, 4428, 43172, 26618, 105782, 14781, 30313, 18939,\n  17826, 45064, 69594, 13204, 71066, 58366, 15231, 157682, 19119, 15787, 91984, 89607, 54364, 23607, 79019, 145509,\n  69385, 6604, 40313, 81481, 16568, 32756, 79187, 77128, 12323, 56725, 270449, 8124, 28057, 84040, 65629, 72616,\n  33346, 127078, 185998, 104454, 34919, 182273, 14609, 19947, 124763, 41923, 73459, 52863, 155533, 54653, 13742, 70467,\n  101386, 30438, 9573, 50346, 31644, 14370, 50550, 451, 8627, 280645, 27470, 64783, 49001, 44841, 60011, 84880,\n  303600, 29723, 249679, 20808, 29868, 17505, 9061, 24139, 63213, 37901, 19817, 58724, 9103, 3211, 42909, 2761,\n  77280, 71424, 62334, 7307, 71333, 27508, 6331, 83663, 9696, 179679, 27464, 32253, 138789, 36870, 23709, 126072,\n  37059, 130604, 83178, 283517, 24823, 22443, 72508, 24678, 5057, 22926, 13846, 74055, 21352, 14335, 3461, 51988,\n  32368, 11407, 71381, 7895, 114208, 12515, 35745, 29717, 56803, 108507, 67583, 54834, 19424, 38668, 35778, 15261,\n  10445, 67937, 56244, 3340, 58514, 22440, 11243, 68666, 8661, 40929, 111708, 37637, 209508, 124495, 206903, 91080,\n  26187, 11633, 66771, 30871, 171838, 197948, 8289, 57706, 10460, 80625, 36923, 31612, 63454, 35105, 59184, 7032,\n  14016, 40322, 27055, 86917, 122504, 79371, 130575, 6177, 41328, 5209, 78779, 4821, 21329, 41539, 62219, 83753,\n  46618, 7613, 15027, 118360, 32493, 225969, 819, 120335, 38225, 84581, 17131, 15188, 7855, 3105, 30340, 78018,\n  31763, 5801, 31461, 10241, 7945, 13882, 30152, 4527, 29876, 21438, 25462, 64433, 8734, 24877, 74945, 14455,\n  6438, 107317, 52662, 50955, 24205, 109805, 38229, 13383, 97490, 25051, 32380, 7096, 139977, 101853, 1428, 42064,\n  130740, 33630, 82143, 110070, 47323, 64635, 163313, 6594, 33195, 6607, 12008, 3521, 85390, 10031, 28761, 7750,\n  57194, 65848, 171501, 76792, 13813, 65534, 81423, 13132, 60600, 4409, 31583, 87558, 21313, 106333, 155905, 153496,\n  96251, 3406, 49514, 9434, 7699, 87327, 46359, 66114, 27584, 74162, 19886, 252277, 170521, 22092, 82253, 115261,\n  139271, 47533, 52680, 202618, 1363, 11026, 363255, 99673, 4402, 33612, 20302, 28039, 336738, 1226, 38272, 13620,\n  129223, 13205, 3958, 19963, 84983, 18752, 42515, 68608, 69150, 39813, 30549, 41506, 13147, 4080, 5087, 15836,\n  3590, 70019, 16566, 11738, 163929, 27964, 83106, 22713, 207225, 34956, 53824, 5181, 155260, 90376, 13809, 102964,\n  55916, 44273, 1261, 26537, 20288, 96003, 17325, 62927, 4503, 126513, 63919, 15556, 8398, 46320, 36814, 33274,\n  98490, 42874, 152755, 42575, 11773, 27872, 33828, 220575, 27512, 172804, 16418, 95543, 37113, 708, 88986, 499,\n  84976, 72480, 35781, 122997, 86558, 582, 113958, 53612, 28365, 4495, 11592, 12890, 11756, 81693, 108202, 42686,\n  116005, 805, 108429, 99193, 182148, 10373, 83443, 91669, 13733, 56065, 75316, 204077, 115313, 322052, 15302, 23067,\n  47644, 13460, 67103, 57307, 67208, 156322, 235278, 94136, 85069, 1418, 167462, 56633, 9347, 2641, 44606, 21287,\n  14995, 12747, 17526, 494, 226141, 75964, 18039, 39483, 14704, 59304, 1316, 195645, 101835, 141208, 116613, 223219,\n  41159, 49846, 61222, 43002, 35314, 80457, 23691, 63429, 13113, 36373, 32330, 8361, 63526, 11029, 32963, 93376,\n  214039, 18769, 114006, 1087, 29978, 114423, 64428, 31774, 50446, 49295, 34202, 73765, 83339, 74913, 27287, 43834,\n  17440, 83606, 93489, 60736, 129441, 57951, 84464, 118033, 72522, 2386, 5028, 276747, 118641, 55191, 48057, 16621,\n  97816, 39006, 3084, 207838, 24907, 92233, 46363, 526, 73844, 2610, 25911, 60919, 15717, 85425, 136040, 70858,\n  118884, 18348, 172680, 47190, 167255, 11777, 29552, 95596, 96509, 115491, 19228, 15022, 162793, 7055, 54334, 45726,\n  30847, 5690, 94006, 54915, 36849, 132591, 172983, 1103, 51297, 9369, 114578, 16962, 78974, 112537, 1229, 44919,\n  77793, 29231, 3317, 48815, 10427, 19768, 100349, 70835, 1873, 26539, 93804, 85247, 2972, 161694, 16704, 323037,\n  9999, 22014, 49315, 152394, 35074, 21009, 44279, 9515, 28190, 8647, 79457, 53333, 64297, 16040, 25316, 4727,\n  146836, 234761, 5304, 67997, 46298, 88700, 122826, 40595, 60038, 132292, 15881, 9158, 163007, 47825, 221096, 91414,\n  108919, 98428, 57919, 266818, 61219, 43879, 63697, 17096, 2403, 17970, 81556, 16083, 75022, 59692, 100052, 43977,\n  127339, 40049, 119563, 17907, 4233, 35651, 47435, 66632, 110389, 15505, 25565, 177269, 69022, 40996, 21600, 19932,\n  9833, 15084, 84838, 139091, 128097, 47428, 7050, 1360, 88016, 32635, 67695, 9688, 79390, 38684, 76616, 96096,\n  222936, 46245, 114060, 64752, 22570, 74272, 1778, 64322, 94657, 115063, 64956, 78933, 28462, 67295, 52520, 30887,\n  56956, 34609, 42753, 10281, 38803, 27122, 98080, 117097, 81536, 9071, 86592, 83849, 30474, 44691, 14751, 101014,\n  152794, 5331, 6917, 12448, 19566, 55177, 112969, 39493, 16481, 84170, 80483, 83854, 147408, 10964, 69929, 25567,\n  74574, 33765, 31137, 41456, 81895, 68446, 44249, 35692, 20731, 44729, 68861, 17500, 1918, 8121, 12733, 11511,\n  1366, 110805, 162699, 45509, 76367, 53890, 22608, 6608, 187321, 92727, 87863, 8920, 54494, 50474, 3355, 13177,\n  24366, 3750, 4900, 105058, 21690, 24548, 61391, 41587, 61696, 71254, 21133, 115118, 33283, 43646, 8976, 11273,\n  107477, 5228, 145257, 193829, 77499, 89840, 14294, 15416, 31112, 552645, 70476, 18585, 414383, 91301, 197650, 85075,\n  74362, 201919, 31008, 6857, 18463, 18747, 80565, 258617, 218441, 23173, 30916, 2323, 120929, 143751, 107064, 20153,\n  59848, 60391, 289834, 31449, 258629, 45824, 75786, 49114, 201924, 23563, 35265, 68991, 69269, 10313, 17390, 67981,\n  454, 162917, 7572, 144990, 19989, 55673, 279099, 65066, 13054, 54343, 55277, 3568, 59894, 15271, 53443, 417392,\n  3623, 434, 45943, 1256, 58908, 173322, 64122, 81605, 20681, 59366, 25442, 39040, 35723, 390351, 35866, 146738,\n  78523, 61914, 82593, 35139, 102680, 249269, 46578, 8727, 38988, 4624, 48520, 58695, 184112, 2027, 12940, 80034,\n  108087, 27491, 213336, 944, 50944, 22396, 85571, 42349, 132704, 181305, 10849, 1371, 52966, 36306, 27461, 21214,\n  21699, 5289, 15632, 19188, 18860, 17496, 112885, 63208, 96349, 12436, 34610, 13227, 201411, 150107, 21944, 52213,\n  82697, 377613, 11201, 44987, 85395, 150187, 38121, 21649, 95658, 8788, 60763, 9623, 5093, 194516, 47673, 70064,\n  6427, 97874, 32248, 15210, 177894, 45245, 129556, 10575, 44191, 36758, 23545, 141857, 32755, 22539, 162901, 95737,\n  26961, 59210, 28436, 11081, 155739, 67439, 17384, 48388, 6249, 69756, 55378, 34764, 31310, 113162, 97192, 14330,\n  81030, 18838, 35438, 13932, 26574, 120400, 101846, 130645, 84311, 174890, 23927, 28384, 120155, 7519, 67818, 55584,\n  86730, 120665, 55022, 167671, 113535, 159014, 209287, 66396, 7424, 10800, 50330, 93120, 48888, 11155, 16081, 102627,\n  13516, 33788, 137813, 74841, 45747, 35841, 21356, 6047, 98098, 4647, 73346, 95355, 20077, 37795, 143033, 12452,\n  183995, 86627, 142356, 34744, 81945, 11420, 26913, 10645, 43210, 5817, 54484, 55730, 26704, 91611, 17668, 52476,\n  40420, 51581, 44960, 150119, 75831, 205414, 177424, 80186, 45648, 15047, 63973, 15971, 11180, 3401, 50574, 45327,\n  6855, 127, 294368, 30972, 57927, 224035, 22536, 5728, 65528, 17692, 2498, 20700, 124096, 78896, 81810, 53646,\n  34851, 17737, 67858, 144208, 2598, 69506, 82387, 32829, 156633, 1376, 87537, 38787, 107572, 47042, 34484, 111751,\n  127352, 97800, 89687, 4576, 38169, 10102, 247669, 1385, 123845, 61475, 17048, 8281, 60142, 15760, 189275, 5043,\n  62722, 70423, 23446, 224950, 105584, 6317, 280103, 26981, 232364, 55457, 64267, 136900, 23211, 118951, 845, 54134,\n  68120, 21238, 286023, 351719, 1601, 9442, 185113, 17851, 22169, 76287, 138957, 35304, 89299, 75522, 56601, 68253,\n  747, 100548, 4081, 2246, 258039, 9694, 51725, 15738, 80572, 37864, 139906, 92854, 7258, 4446, 72431, 8572,\n  152249, 3376, 43649, 25854, 11862, 510329, 182162, 28232, 101204, 130724, 77756, 137694, 8834, 65401, 19289, 56727,\n  121434, 112217, 15745, 51403, 33761, 31323, 43153, 136892, 19175, 85899, 25269, 38059, 133142, 52989, 1777, 1223,\n  46343, 18613, 28695, 87511, 40178, 223203, 15033, 135709, 48723, 7442, 84744, 52715, 3589, 26620, 71258, 37458,\n  41977, 8646, 41763, 91920, 30210, 33735, 64017, 14173, 38868, 120841, 22212, 152812, 62257, 17607, 2045, 16253,\n  10087, 16559, 33187, 61003, 82658, 60687, 45996, 131329, 87827, 28306, 207690, 248902, 90646, 20868, 109813, 9386,\n  16415, 77631, 94695, 12715, 47552, 53324, 61324, 84409, 351723, 34328, 65573, 16236, 28298, 8448, 4731, 7418,\n  72225, 87876, 82665, 6012, 91146, 32182, 85776, 95303, 272760, 52003, 18667, 6217, 1701, 78472, 2900, 125100,\n  11295, 44716, 79152, 6181, 1652, 8164, 31057, 77402, 109651, 90467, 194601, 7484, 300747, 17565, 61525, 99466,\n  51863, 9753, 72732, 128898, 198800, 907, 5759, 42875, 29446, 20325, 107060, 165430, 11794, 312, 5807, 20106,\n  32345, 138270, 25904, 39695, 37538, 97877, 31477, 37750, 22356, 11523, 124253, 73049, 33102, 10210, 142709, 60863,\n  37590, 128516, 64551, 64303, 113544, 313515, 181738, 31113, 37970, 55419, 66610, 21171, 11478, 7770, 228067, 47156,\n  179743, 798, 147431, 50652, 25454, 19412, 37683, 4903, 103417, 111432, 203788, 3756, 59905, 35566, 26345, 21937,\n  221970, 77922, 9738, 6303, 105196, 61175, 21598, 10726, 145604, 59463, 162519, 29420, 7817, 116768, 16102, 128966,\n  164809, 62009, 21801, 6296, 102360, 37967, 27376, 20294, 16974, 106654, 129570, 55893, 75840, 88896, 68684, 52692,\n  255333, 13102, 29474, 23608, 56902, 95016, 21221, 14815, 6659, 24894, 19248, 23158, 1954, 30789, 75920, 14310,\n  645, 139270, 54809, 114378, 59400, 18159, 138353, 504, 67769, 40337, 187608, 1166, 7689, 50368, 74658, 121130,\n  18675, 55085, 92265, 193168, 5215, 27373, 68051, 32611, 13793, 36800, 37117, 18010, 20536, 292596, 68283, 17340,\n  27852, 177093, 366025, 172, 3387, 59699, 119854, 49684, 29523, 615, 8943, 120515, 259718, 38781, 65830, 116121,\n  16860, 30836, 32413, 2567, 94625, 94075, 101496, 152484, 43143, 15550, 8257, 43438, 29245, 8300, 137692, 67582,\n  15848, 41480, 7018, 78578, 233581, 95833, 94811, 680, 22685, 16034, 79357, 33983, 63631, 172275, 30827, 99510,\n  78557, 35720, 123406, 2852, 22836, 77392, 107120, 19910, 133302, 7738, 237843, 59764, 84513, 10802, 76294, 191768,\n  1348, 1723, 835, 44328, 51826, 15011, 147582, 11622, 47129, 100405, 10694, 21708, 98836, 9941, 210066, 1364,\n  58284, 76266, 30451, 238107, 1830, 218, 64337, 500320, 1749, 129373, 99321, 63068, 94642, 60327, 22930, 25615,\n  10933, 11881, 32269, 125198, 6145, 6468, 88776, 9729, 12506, 25930, 46197, 67476, 10975, 30498, 22641, 6110,\n  13879, 228714, 189675, 30112, 103781, 142137, 12074, 72148, 144434, 17332, 1205, 55723, 10268, 84346, 739, 7900,\n  28409, 142772, 86335, 34405, 32346, 5957, 99727, 159495, 52968, 69914, 49976, 116713, 121567, 45867, 1035, 114241,\n  107374, 16112, 22042, 28431, 77268, 110960, 20030, 87679, 23686, 164921, 11944, 46255, 35097, 13908, 12674, 144017,\n  10501, 8182, 68576, 13277, 155275, 111289, 84842, 25219, 15303, 77277, 85173, 34541, 47136, 169489, 134845, 66303,\n  21102, 68903, 56191, 22964, 168741, 12959, 7590, 12803, 55332, 44576, 35459, 106903, 90385, 5415, 140923, 1080,\n  15996, 137579, 8958, 18617, 84817, 54000, 41832, 10520, 681, 67009, 192636, 36305, 137803, 34054, 76848, 21244,\n  25054, 15186, 30898, 30597, 142275, 43375, 42593, 28736, 6163, 62732, 73310, 84072, 38175, 49734, 9130, 100431,\n  8056, 31178, 23491, 108251, 124296, 54748, 48773, 67591, 240642, 30480, 55118, 280935, 65621, 36603, 32046, 51350,\n  4934, 31903, 121291, 176064, 178205, 68901, 29505, 71720, 16101, 99503, 28716, 1623, 62803, 17988, 139992, 3625,\n  60964, 35799, 20217, 10717, 18230, 122058, 97858, 147682, 100622, 42915, 18203, 67908, 76465, 68188, 84589, 230422,\n  44689, 25437, 16646, 1939, 14545, 62476, 16816, 55294, 9543, 86343, 30341, 131304, 47514, 35443, 171825, 56555,\n  16852, 117154, 33897, 115642, 93380, 27861, 5302, 4455, 28048, 30630, 34058, 166130, 12047, 143095, 91785, 86862,\n  107106, 33521, 3018, 20571, 37575, 98074, 42118, 36747, 101485, 21122, 7995, 35412, 77047, 174662, 44717, 27754,\n  57326, 45416, 100544, 40237, 34819, 147882, 8009, 40696, 96137, 22034, 12537, 89019, 76916, 16381, 260347, 20562,\n  6469, 99814, 6504, 8878, 46264, 28993, 135328, 351396, 115983, 162985, 9453, 27223, 75768, 129072, 94641, 114365,\n  87668, 163393, 133224, 129378, 69942, 52468, 102771, 87719, 13027, 63666, 4880, 269088, 165, 102664, 209256, 8459,\n  8373, 115431, 33913, 89243, 114231, 39718, 48970, 84535, 26434, 89763, 13534, 52518, 52844, 4523, 118415, 84250,\n  42799, 85012, 51296, 129398, 182044, 164191, 23430, 172125, 23580, 17068, 100097, 165599, 146254, 103774, 23886, 5517,\n  38081, 6556, 39590, 7165, 43236, 9564, 11470, 79503, 33883, 6422, 32630, 507, 146220, 14032, 54871, 27774,\n  382894, 111499, 100220, 85905, 14606, 67028, 127208, 96410, 46035, 45103, 89938, 72023, 36481, 10463, 84711, 2184,\n  166621, 34621, 71767, 6005, 35417, 18397, 12328, 6245, 95382, 74094, 6382, 42236, 2957, 19896, 58715, 27397,\n  59384, 32742, 2546, 93465, 60428, 48668, 29303, 20252, 36358, 149322, 3193, 36701, 66343, 73618, 24279, 42201,\n  75378, 214932, 112583, 62412, 22267, 87725, 1442, 11196, 22950, 229298, 116569, 171221, 83528, 29153, 38927, 69087,\n  17577, 73532, 64199, 281267, 56474, 107520, 35241, 9230, 25285, 16464, 54961, 820, 4619, 89654, 59498, 85252,\n  179691, 2434, 26357, 9414, 75355, 113594, 58673, 61757, 95836, 68318, 54415, 28188, 53295, 26258, 1129, 9855,\n  34588, 10951, 29459, 270568, 171410, 122449, 84225, 40183, 4487, 93745, 119118, 40504, 14679, 59040, 261948, 112143,\n  84208, 36024, 77263, 53688, 44015, 109308, 151516, 53139, 18562, 27509, 122, 78679, 109133, 27618, 9307, 11687,\n  54101, 37528, 73589, 23837, 11531, 15405, 27569, 34097, 86052, 88898, 452968, 106351, 174479, 16086, 12337, 33522,\n  303157, 114465, 20251, 93451, 28095, 29793, 32562, 4865, 9953, 17465, 73959, 11715, 35642, 25146, 120955, 73779,\n  14564, 70652, 194775, 127647, 39802, 8232, 15171, 32361, 16145, 146754, 54118, 51290, 77606, 61329, 94469, 20733,\n  117406, 168386, 13963, 5919, 53038, 27673, 29890, 70790, 121117, 125451, 109176, 9417, 53624, 27539, 61759, 90921,\n  22062, 12907, 8858, 21259, 1212, 82256, 83446, 126781, 7632, 49742, 4924, 99538, 127157, 121931, 106183, 86599,\n  237292, 72098, 87000, 4747, 189087, 63407, 75261, 28941, 10478, 97792, 6128, 23277, 127345, 38013, 46884, 1492,\n  102515, 12723, 3978, 16950, 181997, 58167, 67025, 121398, 86752, 24702, 76144, 13670, 87623, 143137, 34358, 58216,\n  10966, 15260, 79095, 10693, 121602, 149602, 4024, 88047, 68783, 112717, 12525, 7881, 68681, 9491, 38696, 70997,\n  83042, 12348, 7661, 10266, 114380, 152092, 105889, 5453, 138349, 17021, 6772, 17024, 191305, 9666, 12566, 121832,\n  67176, 6357, 20860, 13799, 50085, 58837, 33490, 31519, 39016, 25779, 4404, 75055, 1427, 51784, 37042, 40467,\n  42384, 128165, 26665, 15628, 1412, 114798, 10282, 15463, 67118, 108331, 37941, 49355, 122616, 11721, 123403, 55963,\n  72389, 45854, 157529, 86342, 25260, 17774, 101303, 13857, 2237, 12444, 17435, 9912, 13576, 18041, 9931, 109677,\n  137346, 2419, 5631, 153579, 19938, 7345, 26359, 32429, 20304, 111232, 63629, 62874, 2191, 41851, 33540, 17568,\n  68759, 206421, 20421, 8918, 5373, 10979, 52747, 28961, 61364, 35687, 21405, 9253, 238507, 56648, 20973, 119843,\n  75814, 58786, 192, 23147, 23931, 351555, 317690, 34008, 69565, 12383, 22156, 37312, 38993, 98373, 54103, 108574,\n  131741, 105495, 23252, 10516, 38364, 418691, 1022, 31867, 12528, 57830, 10554, 28925, 87762, 73786, 45238, 3871,\n  5679, 49309, 1866, 15962, 129853, 7444, 10743, 34937, 5310, 18691, 186923, 15486, 186831, 78192, 56399, 34869,\n  32653, 116247, 7899, 91437, 90338, 131084, 26080, 707, 260176, 152285, 65289, 108488, 389531, 49652, 28839, 250236,\n  108118, 976, 52394, 48642, 26843, 1434, 7539, 14145, 43985, 32680, 56851, 16604, 50175, 15484, 133420, 201965,\n  30563, 171323, 10408, 5106, 25106, 3832, 22052, 30595, 56965, 126120, 10162, 79454, 18130, 125828, 52128, 6763,\n  140428, 50288, 3359, 75168, 4542, 67789, 21815, 25917, 165503, 152273, 62307, 3497, 117991, 32786, 40567, 896,\n  24219, 83611, 40133, 65241, 229605, 317863, 103959, 90507, 1819, 29545, 15591, 32868, 129663, 93792, 44783, 13032,\n  1240, 5795, 26358, 21931, 3797, 229975, 8527, 45899, 76093, 223890, 32636, 329905, 18398, 40622, 43735, 5700,\n  71339, 108607, 70873, 19592, 51919, 16423, 4832, 81475, 93043, 49045, 105473, 57292, 27175, 161447, 88028, 82073,\n  47060, 1862, 6336, 34528, 216257, 49542, 1523, 13933, 6483, 12498, 143270, 12904, 35051, 32513, 38643, 137631,\n  1217, 10305, 15169, 34487, 16512, 91140, 101318, 54337, 80798, 39094, 72004, 164938, 129064, 45885, 110177, 68422,\n  13225, 211848, 134863, 65992, 69339, 9421, 7754, 97572, 8548, 19362, 46011, 26566, 237079, 65134, 52432, 108604,\n  72298, 156269, 99270, 75206, 2575, 146135, 49731, 81094, 34280, 39812, 5510, 134730, 51379, 103016, 61853, 94676,\n  117910, 64, 7934, 95122, 55671, 3205, 58333, 173791, 53345, 20418, 92151, 39998, 247552, 69993, 40897, 8758,\n  29486, 48394, 44428, 19361, 39328, 12796, 110850, 20923, 140821, 98505, 27484, 87170, 34681, 8696, 6881, 178272,\n  57045, 10428, 21956, 22625, 60177, 192367, 30337, 97408, 5004, 22803, 112181, 36456, 90269, 45503, 47341, 44581,\n  78522, 63489, 59424, 114517, 2479, 35959, 56238, 267536, 322607, 86378, 13479, 1160, 48474, 6182, 17033, 29824,\n  61296, 57555, 82202, 35730, 13057, 15270, 72386, 73223, 31558, 45570, 36450, 117667, 4678, 14390, 62433, 28769,\n  59271, 15277, 15374, 25119, 6699, 9480, 26668, 33155, 27044, 64427, 178, 36692, 31988, 5800, 18108, 209160,\n  35944, 71154, 35918, 167895, 12503, 1771, 16989, 56793, 83480, 39460, 212938, 8159, 4389, 5594, 58690, 40182,\n  136508, 1899, 67361, 119842, 3781, 42329, 32531, 37520, 114121, 97367, 52218, 49794, 70279, 62339, 116961, 90247,\n  4488, 183020, 1828, 43025, 155829, 86696, 4847, 194990, 42214, 37848, 22958, 11578, 2898, 43626, 50811, 14189,\n  68191, 47328, 4117, 163237, 75695, 118135, 64031, 37784, 305850, 99832, 84067, 112381, 45041, 38270, 15120, 240636,\n  74344, 6693, 36080, 91318, 106509, 219791, 38255, 7554, 30087, 101966, 6713, 51615, 17429, 102583, 207618, 156,\n  93292, 28386, 62288, 34520, 12477, 25385, 50776, 72166, 290, 7825, 17764, 23980, 23080, 74965, 22645, 203791,\n  114802, 45119, 156694, 216, 35714, 42020, 117883, 147910, 18751, 59077, 92531, 63106, 26554, 23194, 21689, 105051,\n  105424, 2395, 22296, 6139, 17775, 18788, 78110, 84290, 2144, 18630, 17328, 34740, 2412, 84397, 47585, 9344,\n  100610, 186751, 213784, 22382, 65192, 94882, 115271, 162177, 113975, 16918, 4108, 47999, 52975, 14387, 51692, 40643,\n  180272, 25467, 117999, 146655, 135050, 1246, 11255, 45090, 129815, 13155, 69900, 30778, 76238, 51833, 50960, 175019,\n  106483, 105526, 121590, 62888, 21440, 37725, 6971, 74563, 63186, 4385, 6132, 28738, 4260, 7667, 208949, 44659,\n  46189, 4885, 2107, 8295, 9711, 33755, 18758, 47913, 28249, 76357, 33947, 20500, 4169, 156995, 46268, 30937,\n  23429, 30285, 10916, 52362, 23390, 2897, 68316, 35544, 8324, 51699, 132392, 78433, 141585, 44776, 84808, 4462,\n  63809, 59925, 104776, 132583, 67668, 101503, 35715, 119985, 38457, 47365, 56836, 187538, 38063, 17773, 101921, 26244,\n  39226, 27892, 7402, 164108, 59972, 87376, 323527, 169672, 1189, 114898, 48985, 100235, 203916, 95, 21963, 6130,\n  62368, 812, 54658, 54753, 14403, 18099, 9204, 80661, 16949, 16703, 239430, 18692, 61767, 58048, 87844, 125829,\n  85801, 177571, 8915, 209065, 1739, 136288, 19402, 9552, 40147, 51786, 57185, 93178, 35049, 55789, 6563, 35663,\n  76757, 32960, 20303, 80517, 33124, 173105, 7464, 51755, 62102, 25470, 21379, 115520, 15780, 117655, 47580, 25076,\n  103593, 140889, 141531, 170341, 103009, 155483, 236319, 50667, 53484, 1496, 133657, 34260, 22952, 46940, 6610, 65362,\n  67973, 155084, 121252, 1114, 114645, 46684, 81892, 70092, 6566, 122003, 120281, 934, 5245, 88201, 9873, 128289,\n  50462, 186108, 122319, 93482, 7601, 179944, 197940, 172496, 8288, 2228, 103865, 63562, 3513, 16971, 44832, 8458,\n  194571, 18586, 21840, 94414, 80276, 279833, 284818, 117971, 1908, 62558, 8177, 5618, 54592, 34875, 38914, 80151,\n  5124, 5315, 93652, 14782, 58571, 5164, 45076, 67898, 2513, 49234, 56032, 253677, 6800, 85426, 46580, 21278,\n  273997, 56465, 57545, 120308, 193904, 19317, 27718, 67291, 1119, 22758, 15825, 65236, 17991, 81823, 6750, 11437,\n  117245, 9177, 63553, 197299, 2508, 97808, 35037, 55401, 129156, 37796, 50612, 379962, 82366, 53364, 48505, 19654,\n  26278, 19171, 20254, 13206, 71465, 142569, 27518, 4583, 63341, 506954, 106046, 14062, 56943, 1023, 4159, 99329,\n  39662, 25053, 62754, 40102, 106116, 281486, 54055, 90158, 94966, 45145, 149583, 64918, 156875, 121779, 78151, 69085,\n  9736, 35396, 9131, 26784, 2204, 8896, 115808, 87466, 122308, 77182, 75953, 30431, 94418, 20569, 21625, 175,\n  27134, 19042, 38016, 95890, 1280, 29709, 5584, 120804, 24539, 41701, 33794, 262040, 49022, 72657, 12577, 34963,\n  45314, 122802, 119410, 33620, 3764, 35300, 297940, 221821, 50904, 31890, 33498, 679, 46424, 24998, 9549, 17126,\n  30699, 3402, 46901, 107591, 28087, 48118, 17943, 10684, 293839, 72628, 116809, 24752, 9400, 43553, 51404, 46957,\n  33646, 107115, 59781, 66313, 40165, 60892, 19582, 17483, 822, 7964, 22063, 57161, 147499, 47679, 50833, 9574,\n  50263, 102698, 56893, 336655, 116179, 23193, 11473, 52072, 29085, 2120, 164190, 67171, 11863, 14812, 284781, 18622,\n  31314, 107961, 27863, 20352, 5578, 15425, 16772, 6733, 17797, 45919, 177948, 52326, 5104, 101129, 118088, 134374,\n  12454, 238986, 175627, 243562, 1604, 162707, 28340, 5806, 15342, 103576, 54301, 104313, 219206, 110037, 13405, 101976,\n  10232, 224569, 40292, 169439, 67800, 219782, 23823, 58633, 94261, 4775, 217506, 19292, 25872, 158455, 309664, 54744,\n  13565, 217649, 145860, 19153, 90339, 68476, 52350, 11091, 78971, 60510, 6347, 95417, 75377, 62774, 238643, 45079,\n  26649, 121377, 31224, 120575, 41184, 92773, 38918, 55073, 47695, 123557, 42923, 124821, 11514, 104093, 123806, 114651,\n  35369, 65591, 36023, 60482, 20767, 40839, 12635, 10552, 14227, 109847, 53556, 40945, 41953, 4497, 82444, 74167,\n  309396, 11706, 101696, 39123, 148270, 9459, 44262, 20639, 147938, 46790, 89576, 30166, 33074, 58222, 75050, 18854,\n  14453, 79479, 32094, 56822, 27499, 8684, 27993, 15551, 109019, 360070, 45828, 143786, 39018, 134316, 51248, 33214,\n  25738, 56409, 48044, 5319, 240196, 56286, 31884, 103159, 158931, 46088, 113738, 5489, 52820, 62007, 122208, 50310,\n  8612, 192204, 14081, 25757, 95853, 28293, 144772, 72058, 21524, 28179, 52909, 10275, 137010, 29363, 50509, 211571,\n  84901, 15663, 36633, 159109, 70869, 102773, 15903, 250288, 70021, 118, 136728, 103089, 116794, 6302, 4006, 31162,\n  48404, 98849, 21638, 10331, 38771, 92331, 17759, 19077, 6732, 77161, 31843, 1947, 1070, 61852, 19400, 133326,\n  70990, 71182, 53741, 56003, 187297, 38802, 52928, 47866, 49140, 42448, 132456, 52558, 5238, 95978, 34737, 124934,\n  576, 52602, 99772, 2211, 3564, 107992, 7854, 37619, 253975, 33502, 97130, 7194, 16027, 44625, 176640, 70109,\n  16483, 69386, 84445, 189507, 2811, 2911, 42607, 29686, 37775, 48856, 7024, 32934, 19034, 21522, 16906, 106835,\n  25259, 237775, 26587, 28815, 4053, 8604, 55942, 126681, 2000, 45110, 26993, 6934, 70083, 18404, 97123, 242951,\n  95774, 28200, 35245, 126075, 19713, 54541, 26771, 41892, 33431, 6278, 43932, 28670, 92703, 22776, 5711, 39966,\n  91314, 25582, 90115, 25964, 42381, 57282, 8595, 60098, 288770, 91568, 25698, 84737, 48194, 43690, 3154, 56885,\n  95985, 54802, 176675, 182814, 3991, 18462, 12526, 110444, 77418, 13087, 68801, 15335, 13406, 7781, 13313, 67395,\n  241328, 90575, 70480, 44887, 245086, 30235, 7491, 81635, 56533, 280976, 128226, 12240, 35275, 20723, 261812, 18827,\n  62725, 32865, 19772, 70441, 9246, 31671, 4690, 16830, 51924, 18082, 12155, 52604, 70181, 56355, 9343, 45521,\n  95331, 89906, 123743, 26046, 16163, 794, 32226, 38434, 31410, 124030, 18573, 21412, 79016, 51513, 69499, 483,\n  39312, 5830, 39528, 16907, 120878, 146499, 169663, 2790, 119371, 14322, 112030, 52038, 275987, 14651, 179020, 32135,\n  80124, 13936, 24740, 53966, 27712, 86684, 12262, 6516, 9186, 18255, 29820, 140583, 220, 99643, 29371, 88024,\n  23598, 104635, 329921, 84019, 146167, 73134, 35547, 58064, 85209, 47039, 3925, 35890, 68238, 152444, 111395, 26790,\n  282190, 22569, 83839, 77937, 57048, 132950, 95253, 79911, 31273, 2689, 38285, 60446, 30555, 86725, 98060, 37473,\n  80913, 23265, 231272, 356070, 17594, 117027, 84460, 79300, 75779, 181354, 106863, 2092, 59160, 174624, 41803, 31994,\n  135002, 52912, 60077, 41514, 101219, 16751, 143391, 28891, 189377, 73103, 110543, 14827, 29225, 18801, 72180, 15635,\n  96735, 20123, 8653, 54778, 60126, 24504, 72006, 22210, 62522, 119650, 6858, 20841, 104000, 97893, 37534, 99349,\n  27620, 55847, 127814, 128781, 86814, 56767, 22957, 8365, 17240, 17411, 175172, 58526, 147533, 178431, 17806, 93628,\n  11001, 10386, 11849, 45857, 5425, 535, 4471, 45522, 43682, 11326, 69505, 150707, 410, 109497, 103689, 22109,\n  49460, 340469, 41561, 30428, 87270, 69036, 297676, 195760, 69480, 40499, 5201, 173640, 46315, 3997, 90953, 30510,\n  59448, 243249, 347379, 83361, 1816, 4707, 31440, 4789, 76201, 1555, 28507, 130215, 9431, 5428, 7565, 108357,\n  11788, 21925, 7664, 17680, 87960, 37326, 70316, 157989, 29063, 16049, 114035, 14852, 65539, 7305, 58413, 1877,\n  47347, 17700, 121084, 175922, 11678, 14590, 26324, 40935, 33846, 20487, 2960, 82286, 7008, 140230, 95020, 131093,\n  196704, 19819, 214983, 15557, 9895, 61765, 2774, 23793, 6753, 15070, 23136, 103206, 8633, 6988, 6539, 24357,\n  120892, 28654, 43247, 90291, 59970, 66616, 39279, 57954, 572824, 154282, 103289, 83945, 115934, 30357, 45667, 105824,\n  6646, 68979, 29029, 11138, 202559, 233721, 58053, 123432, 892, 61869, 24559, 4513, 48351, 9869, 14927, 39859,\n  37611, 43939, 23103, 59284, 251282, 8496, 98455, 54160, 57823, 36455, 13031, 54764, 67263, 54173, 12367, 186498,\n  57750, 24251, 33450, 28263, 26527, 3389, 48830, 62567, 34485, 22568, 19435, 87958, 90747, 51443, 111255, 9133,\n  7685, 14251, 4357, 34121, 88370, 40692, 44187, 15871, 6144, 133877, 39726, 20248, 64182, 49145, 10818, 50541,\n  1709, 19747, 172835, 1815, 41969, 4563, 131019, 10784, 21458, 34631, 34642, 27451, 62327, 10502, 64817, 21040,\n  181657, 3356, 25303, 57684, 49247, 69433, 4964, 30900, 225330, 137978, 66824, 79436, 122600, 89064, 2877, 43195,\n  114574, 122442, 100287, 41921, 107124, 25840, 145878, 21565, 85361, 235410, 5467, 28770, 111833, 74398, 71263, 46983,\n  63243, 138675, 140, 48949, 71420, 26887, 24503, 148456, 15655, 33138, 34734, 7409, 191178, 14, 9258, 150881,\n  72430, 90902, 102763, 36586, 18063, 309662, 7191, 149392, 51425, 83681, 24587, 13296, 54002, 210523, 16626, 112474,\n  12364, 63416, 36624, 26506, 53225, 21831, 31787, 34, 86557, 998, 49738, 86372, 18193, 23048, 18612, 8630,\n  97580, 38441, 26833, 25418, 41232, 78390, 16663, 190608, 138398, 35615, 30762, 41936, 67821, 38100, 49578, 39714,\n  128724, 43474, 548, 16126, 8944, 23862, 54057, 149293, 233212, 265993, 19560, 43377, 101353, 40854, 29299, 30997,\n  52099, 84221, 76059, 31238, 42127, 24282, 80418, 19725, 14006, 28929, 62417, 365698, 120107, 2583, 165916, 29207,\n  32789, 70495, 14426, 38831, 32132, 4652, 155719, 175722, 3498, 105465, 149732, 73487, 18123, 17955, 25073, 7848,\n  33758, 212117, 244871, 8698, 56058, 78012, 176282, 143192, 5779, 143466, 322846, 64979, 128760, 44417, 7522, 81933,\n  59888, 57516, 87550, 22759, 98869, 19786, 24780, 17277, 18445, 71895, 46515, 17698, 84702, 95788, 12963, 2088,\n  51911, 34015, 139375, 18024, 13234, 31480, 33157, 4088, 218379, 20152, 163491, 28846, 20093, 78589, 10362, 134905,\n  39031, 1665, 31913, 27636, 8074, 44238, 29175, 3880, 70195, 32932, 86265, 35934, 20708, 49901, 110247, 9629,\n  23462, 71547, 25903, 28239, 24355, 4901, 138539, 79668, 131384, 12295, 92413, 90944, 60189, 41168, 22999, 20952,\n  26390, 12629, 62314, 162675, 10403, 221931, 3072, 11764, 41060, 197102, 26233, 17299, 7140, 4, 23363, 5513,\n  10781, 164646, 18296, 151517, 49410, 18780, 28010, 94985, 42261, 103149, 80050, 34361, 87202, 65486, 9245, 50882,\n  82566, 8189, 29402, 49903, 41663, 200708, 115537, 287472, 43105, 88272, 5751, 34285, 60276, 72903, 27444, 11115,\n  2768, 40213, 17769, 32834, 5733, 17012, 31302, 65627, 74176, 65762, 220572, 9443, 28329, 49080, 12480, 25022,\n  2297, 13079, 51120, 130422, 145430, 108651, 137217, 132944, 131632, 45724, 62952, 163637, 83615, 68196, 126016, 32802,\n  122915, 52473, 182224, 14962, 105441, 51662, 20871, 19690, 655, 19897, 140506, 6328, 224102, 127751, 71453, 69604,\n  5284, 37207, 87714, 44437, 136426, 34177, 153918, 197294, 67763, 66574, 112376, 9811, 16294, 44836, 174988, 254354,\n  188511, 2252, 79267, 9326, 32538, 195, 43583, 8887, 61049, 21719, 26734, 11871, 27893, 192270, 45063, 30090,\n  3394, 20502, 9111, 20810, 13951, 78445, 8154, 14291, 159099, 36402, 6237, 37096, 28542, 24459, 73277, 130650,\n  17930, 20147, 11211, 3687, 145360, 109503, 113181, 11464, 9492, 132383, 106568, 69961, 190122, 21790, 110379, 8476,\n  32285, 32541, 17180, 45498, 78855, 35803, 91050, 89637, 26440, 3026, 120111, 12708, 13570, 45990, 40699, 99704,\n  58648, 92464, 151437, 6667, 73908, 1742, 3256, 33631, 4239, 45909, 170962, 320179, 124561, 64828, 19263, 102210,\n  2444, 89057, 81206, 34535, 74172, 132424, 73378, 52206, 53131, 11865, 27025, 47218, 11468, 17209, 232859, 291876,\n  10794, 27550, 80459, 63364, 73566, 231061, 98585, 163639, 11623, 81336, 209888, 37838, 35343, 51998, 144543, 217838,\n  64710, 105694, 183409, 44047, 30481, 27765, 3985, 96950, 4163, 39768, 18053, 21140, 10328, 45473, 19463, 485,\n  38309, 119763, 13419, 18090, 29901, 52576, 186587, 4918, 10538, 151025, 65973, 352, 154377, 192678, 90225, 68987,\n  76132, 45679, 99334, 22260, 92405, 1735, 27185, 48079, 24839, 129186, 20096, 21327, 11679, 132020, 9799, 26969,\n  3465, 457, 58718, 36333, 13449, 152147, 4317, 24297, 11637, 32905, 8133, 40341, 7824, 26227, 23026, 45709,\n  2337, 33165, 12703, 29202, 57754, 193021, 33150, 59750, 1260, 52775, 3601, 206, 14458, 29558, 61780, 10854,\n  41118, 3988, 39264, 86434, 19878, 45295, 164578, 92891, 38661, 105334, 321632, 27923, 13416, 145240, 66977, 20857,\n  159180, 21051, 75795, 119241, 37074, 56804, 62179, 4633, 163164, 62782, 27211, 8479, 54137, 80694, 29848, 30457,\n  28627, 13295, 19382, 20644, 52134, 10036, 217, 6449, 184900, 22218, 8094, 95155, 8520, 119873, 16010, 180016,\n  40385, 43460, 98015, 169032, 29546, 317, 16757, 61276, 30502, 211577, 27875, 3900, 22386, 11672, 18862, 7483,\n  66527, 116135, 41410, 25526, 107458, 48136, 4627, 31485, 6850, 6851, 18832, 87836, 24022, 18326, 45152, 4289,\n  47983, 4584, 50159, 5227, 30603, 9757, 27848, 14186, 35083, 178388, 76847, 56645, 8934, 26884, 969, 107665,\n  304066, 106975, 94078, 22863, 39500, 79589, 54285, 52346, 9, 105974, 10324, 22271, 28261, 14018, 68550, 223406,\n  33026, 33723, 167920, 84931, 77251, 18488, 61468, 140862, 9374, 16225, 134571, 126469, 44833, 2686, 49718, 124647,\n  116312, 1215, 83962, 5572, 34990, 71606, 73680, 62194, 29236, 49106, 112907, 45328, 63563, 57200, 134223, 119112,\n  125639, 20182, 135593, 81539, 135405, 182962, 6376, 2944, 165398, 71975, 43868, 92182, 159055, 10997, 72330, 18563,\n  55690, 2114, 39931, 35390, 88141, 54250, 18546, 28114, 69643, 110033, 69602, 11752, 236964, 2628, 45862, 81263,\n  31983, 28246, 80175, 121337, 25572, 22559, 17702, 19278, 20436, 10543, 47657, 113444, 36746, 10480, 87410, 12082,\n  60896, 959, 39265, 183075, 31850, 51426, 10828, 84058, 16179, 1273, 128039, 147289, 11828, 25587, 131393, 39952,\n  5888, 121379, 76269, 37043, 3043, 76094, 45039, 146616, 66368, 17415, 378876, 51710, 9750, 1764, 52374, 71144,\n  31167, 15312, 56281, 89753, 7915, 15678, 93391, 87084, 53111, 56512, 105225, 38442, 36430, 51574, 77376, 65903,\n  1333, 89929, 814, 75533, 64344, 10164, 325602, 55313, 93659, 2487, 16394, 59473, 20061, 3479, 15298, 124327,\n  60596, 150371, 102582, 138574, 180191, 71830, 13827, 98326, 51630, 12630, 135, 27533, 6792, 27597, 14192, 33715,\n  30244, 143897, 92657, 4323, 43509, 2215, 32766, 14515, 101058, 82207, 7222, 111758, 22409, 5186, 141296, 24798,\n  420, 100838, 20522, 137775, 44210, 32883, 95696, 537, 109783, 90107, 20074, 2531, 43223, 14612, 84993, 171076,\n  27030, 753014, 54033, 23994, 72477, 11870, 108492, 74863, 72831, 78381, 313, 219089, 32679, 44756, 39365, 53656,\n  29235, 112804, 4612, 118248, 7675, 9325, 61217, 115300, 47556, 1974, 176307, 5313, 12258, 24359, 49934, 241815,\n  39907, 4311, 18866, 14709, 149412, 89233, 46619, 83155, 84926, 117576, 37441, 44149, 118247, 9581, 245890, 19548,\n  24692, 61039, 81797, 23206, 71717, 37350, 97838, 6965, 105038, 174607, 122384, 5456, 86009, 3823, 64576, 41024,\n  45941, 19151, 16982, 5901, 41189, 12737, 28662, 9093, 89453, 59974, 36378, 119022, 29856, 38530, 16274, 104168,\n  52543, 25096, 44843, 20335, 30627, 25217, 83023, 20190, 226798, 32906, 48839, 122264, 67303, 25118, 78432, 77680,\n  59230, 99203, 52453, 97225, 67415, 116979, 48969, 59468, 34408, 89209, 24629, 71301, 1367, 86361, 58029, 35735,\n  99685, 35427, 110370, 109975, 16867, 184273, 35211, 185023, 128419, 6443, 43697, 58373, 52147, 56592, 116955, 32140,\n  4111, 14363, 213044, 135637, 125381, 38275, 50143, 17997, 117881, 101169, 57994, 9105, 16173, 1311, 63238, 37077,\n  44093, 61457, 62582, 8321, 102224, 43737, 126639, 70604, 31575, 13061, 20600, 75637, 23234, 165387, 187842, 19370,\n  24870, 41729, 18660, 37654, 83790, 66390, 28158, 66508, 127407, 6641, 102989, 100976, 239098, 111562, 135358, 12923,\n  3200, 3321, 50588, 83626, 994, 45525, 35195, 6785, 1255, 50764, 123683, 15659, 100903, 138375, 23653, 10925,\n  242275, 55742, 47613, 60776, 117266, 29543, 19014, 83593, 55116, 48171, 71871, 34800, 38205, 1776, 35402, 102985,\n  16140, 81921, 23789, 138566, 29662, 15032, 205698, 158837, 11307, 35577, 20517, 75918, 40414, 115830, 81388, 35444,\n  208793, 18557, 12624, 88971, 123355, 7306, 709, 13579, 56470, 36205, 56962, 82710, 4862, 23826, 108392, 175539,\n  75600, 107919, 62674, 112679, 30119, 36318, 35323, 3583, 58218, 42961, 39675, 9447, 70828, 40967, 25394, 52990,\n  24075, 6264, 32106, 43005, 26974, 2988, 36004, 49055, 7802, 84004, 24170, 31281, 192353, 47725, 12122, 11485,\n  4851, 11565, 12034, 19433, 5475, 41012, 20120, 169743, 78720, 54606, 9059, 80180, 66596, 18422, 7869, 44705,\n  3409, 26996, 13290, 28943, 28573, 92913, 21345, 102017, 64396, 222153, 58203, 28422, 30381, 11224, 105757, 65847,\n  30690, 156282, 70213, 52668, 59859, 46136, 55861, 28532, 88256, 167753, 157143, 34619, 5406, 46785, 110077, 43667,\n  99945, 9622, 81243, 40902, 103064, 15805, 16903, 64832, 34463, 71025, 48166, 42913, 37727, 31054, 199439, 94651,\n  24238, 84843, 164414, 59355, 86643, 74925, 68161, 10544, 60088, 90967, 94387, 626, 4057, 59963, 60891, 3100,\n  23741, 51614, 57271, 43352, 5967, 76881, 11240, 21366, 162904, 80651, 76535, 13325, 38240, 4001, 24457, 67064,\n  28356, 59452, 277744, 118863, 93858, 59807, 37070, 46501, 25510, 47161, 7751, 47987, 122879, 281048, 12303, 65298,\n  6897, 37593, 95760, 68584, 3278, 26040, 46338, 79738, 7057, 17560, 16525, 65646, 11971, 76085, 47810, 37627,\n  4400, 76728, 5019, 19862, 35461, 120836, 69334, 34264, 211413, 192855, 77060, 103398, 21395, 73312, 37471, 37865,\n  59615, 99094, 60234, 101902, 39471, 232524, 96009, 116049, 87233, 34141, 2404, 47909, 55795, 180204, 127761, 116132,\n  128426, 111843, 49823, 18679, 3051, 65130, 52071, 17872, 22470, 42507, 67834, 142462, 41950, 81020, 33544, 172729,\n  14705, 32808, 43131, 39318, 3974, 48407, 145523, 8491, 180108, 104130, 40283, 86994, 80476, 22927, 7120, 102446,\n  78442, 34442, 85410, 33747, 204996, 201697, 144383, 153362, 91987, 218233, 24213, 28647, 15634, 10985, 37691, 14620,\n  67610, 11910, 119218, 53184, 139015, 23331, 10937, 4794, 142373, 40819, 40365, 31288, 35611, 63904, 95756, 235215,\n  51134, 76276, 11957, 30265, 10387, 46958, 85389, 177045, 4353, 39988, 117622, 35975, 153456, 14265, 42420, 3485,\n  57749, 23217, 14856, 159478, 181039, 125928, 75417, 128987, 14183, 7005, 18444, 37640, 68447, 15249, 32753, 189408,\n  151532, 34992, 102201, 115188, 21107, 39324, 56039, 38368, 36452, 94812, 113679, 87546, 20551, 11761, 60872, 2888,\n  3186, 69267, 53191, 52996, 46247, 44225, 33896, 98339, 46383, 32566, 16275, 88963, 129666, 176, 31427, 38271,\n  88736, 11275, 58147, 11767, 140662, 14422, 96597, 45066, 146243, 18516, 134527, 23160, 2066, 107751, 37546, 10292,\n  8360, 95441, 58117, 98151, 7978, 116856, 906, 79063, 64818, 14019, 109894, 9029, 106963, 34922, 1651, 42838,\n  17896, 207329, 33682, 4066, 47801, 29346, 56026, 102181, 10723, 23963, 12845, 30084, 114821, 24728, 27351, 96712,\n  223295, 24805, 8840, 155257, 74192, 14731, 60882, 14446, 3293, 36369, 62442, 16908, 3393, 24144, 93518, 169099,\n  16987, 21052, 64385, 3253, 74064, 34395, 37448, 95011, 11277, 73486, 191440, 28196, 91622, 56473, 327982, 27442,\n  4270, 7603, 34045, 68072, 29828, 36418, 35213, 46824, 27951, 92979, 6344, 294949, 387869, 35280, 6512, 67496,\n  103235, 38638, 120453, 15900, 1374, 3046, 370, 32475, 61988, 25666, 311175, 38789, 120083, 14581, 62496, 17476,\n  477, 95410, 36028, 79370, 145892, 21060, 64274, 8593, 128378, 29734, 47799, 41023, 11779, 189177, 291116, 68655,\n  211263, 3096, 34673, 28182, 61354, 70851, 185841, 5926, 18221, 58964, 5624, 148475, 17869, 70577, 270, 72725,\n  46530, 32794, 6345, 53885, 83061, 319994, 77613, 55607, 108538, 2964, 83165, 113358, 157981, 31861, 142777, 32134,\n  90608, 77733, 12681, 67299, 67199, 12519, 151204, 80716, 95080, 143, 88673, 73243, 49064, 70975, 92554, 194270,\n  195814, 37976, 26210, 15538, 12302, 590, 123979, 34036, 66307, 32917, 51270, 50898, 10348, 192749, 78998, 142567,\n  231346, 74689, 141501, 68754, 160732, 81034, 15915, 13236, 112859, 19495, 33767, 7063, 63633, 6869, 25702, 6584,\n  146558, 146882, 202224, 116085, 21271, 11451, 46600, 73942, 31037, 225039, 32805, 68328, 198802, 8912, 109275, 23107,\n  47622, 21867, 446, 51547, 12862, 75989, 33036, 7283, 95710, 83109, 38497, 1301, 3910, 40681, 44384, 46771,\n  77850, 49203, 95089, 139563, 73961, 6370, 84201, 1459, 85585, 161489, 169649, 79787, 34752, 252385, 3378, 55032,\n  61000, 3120, 4672, 121269, 4082, 53803, 18080, 73246, 24595, 42389, 13731, 72203, 103679, 101774, 38710, 34206,\n  71107, 64573, 16007, 64268, 8208, 29590, 28108, 9501, 79568, 11666, 168288, 83632, 150019, 35196, 5403, 5176,\n  16615, 93441, 6104, 17287, 24961, 112281, 14480, 245496, 139857, 9685, 75837, 34655, 32664, 20702, 201412, 31683,\n  197366, 202353, 26591, 31589, 4559, 27910, 10695, 29436, 54735, 144360, 113352, 52336, 32696, 146974, 38124, 34893,\n  4126, 3855, 115855, 6057, 162019, 10972, 91491, 48259, 75698, 34626, 7354, 16587, 13916, 6749, 69092, 102728,\n  70108, 121378, 4399, 25253, 159638, 105250, 11905, 98411, 19834, 40029, 8256, 251243, 9349, 57694, 5558, 143250,\n  24675, 51457, 65260, 24058, 175560, 27907, 52475, 49070, 49643, 4320, 66836, 90101, 18206, 8928, 62901, 87851,\n  52459, 14454, 36601, 64627, 27992, 417, 30565, 19686, 10809, 231322, 36540, 40887, 88865, 49589, 161033, 58107,\n  401975, 102386, 190339, 87577, 133172, 54023, 98944, 20896, 29000, 84825, 33172, 11781, 34558, 116897, 58352, 53344,\n  30915, 21521, 89, 241320, 3658, 45946, 115393, 212186, 25834, 50333, 3228, 37254, 42430, 1886, 49132, 81794,\n  36562, 28818, 44722, 31564, 125265, 149984, 17397, 128685, 18182, 3056, 21825, 25140, 10155, 16556, 115060, 11990,\n  40149, 184644, 50253, 367370, 97082, 13560, 14932, 13300, 208980, 36379, 448, 106133, 19575, 21267, 68757, 93452,\n  60853, 5169, 34427, 16161, 90529, 142432, 73614, 192405, 66545, 49751, 90066, 65857, 9600, 4098, 80224, 55076,\n  789, 3798, 125169, 73968, 46420, 59540, 51655, 28547, 2317, 95529, 72038, 360298, 88593, 260668, 151609, 120315,\n  55595, 35600, 10778, 130706, 98980, 30010, 17825, 47077, 115302, 28222, 240315, 7342, 5742, 15051, 17234, 17561,\n  169155, 93735, 18784, 51808, 1073, 87638, 22486, 96835, 177901, 34933, 43751, 134471, 3472, 60107, 8319, 10366,\n  11189, 23719, 97590, 116678, 63711, 15095, 47410, 210265, 78643, 127925, 2850, 146459, 65472, 435141, 43043, 51101,\n  50459, 17859, 2597, 1029, 127979, 110999, 140586, 131287, 93, 204861, 49176, 53532, 42202, 49335, 38681, 33970,\n  67053, 39163, 64804, 7867, 21720, 57269, 35446, 82892, 157650, 75789, 40884, 15694, 11145, 39407, 108823, 27310,\n  141378, 15460, 227, 20019, 42033, 6822, 24630, 75665, 22824, 20941, 64884, 46365, 85705, 3773, 32852, 75547,\n  79114, 70646, 91197, 26198, 35584, 16783, 11785, 51303, 15974, 155610, 115243, 9935, 1510, 56327, 108654, 387235,\n  54172, 2660, 22731, 69831, 28562, 32500, 45536, 94042, 12451, 40584, 20876, 3006, 104226, 49255, 2735, 68192,\n  19190, 61831, 13307, 161983, 97151, 164345, 4367, 129297, 73024, 45668, 60180, 126542, 20948, 27490, 11817, 6231,\n  5151, 13473, 7833, 109917, 81741, 27736, 71450, 26743, 21499, 244239, 47508, 47275, 29006, 25257, 7357, 18329,\n  84183, 112580, 118605, 3793, 198074, 159004, 32283, 17771, 54003, 17983, 52972, 70724, 45120, 24182, 47404, 99628,\n  170125, 8794, 46876, 41664, 26240, 122522, 32698, 169875, 35177, 43594, 40030, 96952, 28389, 22133, 1219, 1627,\n  64863, 236968, 142742, 94455, 79974, 94146, 13684, 19300, 60778, 15176, 21046, 112121, 176915, 177946, 121876, 170733,\n  232183, 45571, 52925, 2209, 45342, 34927, 19843, 1825, 2038, 21606, 30609, 39291, 80253, 114805, 22110, 67637,\n  41564, 11345, 145262, 126398, 40703, 91578, 60920, 14383, 32689, 114171, 33321, 22821, 5430, 118359, 18515, 41276,\n  100689, 31373, 44534, 57652, 5366, 38077, 63639, 246112, 23007, 50484, 65271, 114639, 134279, 23472, 42037, 36268,\n  14266, 3805, 20110, 106077, 26712, 83068, 3745, 48789, 73993, 11755, 10138, 6567, 24934, 1686, 24404, 64978,\n  64242, 102615, 49674, 64915, 52113, 102967, 47100, 123729, 102887, 34493, 5532, 124741, 61801, 68500, 69254, 101322,\n  46415, 189970, 103910, 112087, 201049, 82512, 10888, 99736, 54251, 19508, 119320, 20798, 62133, 100781, 96032, 438249,\n  122757, 112255, 29169, 17982, 164883, 72196, 54239, 5731, 30815, 71455, 40605, 9088, 139966, 231725, 23187, 27251,\n  2319, 15295, 22292, 9157, 30842, 13822, 93710, 35112, 766, 17075, 23218, 37794, 13362, 14364, 86554, 81170,\n  10287, 35041, 29695, 20186, 134518, 87266, 22035, 118809, 86111, 54826, 39227, 34957, 81665, 785, 130193, 5422,\n  82440, 165380, 20305, 170800, 28333, 3085, 25031, 63282, 43019, 46076, 6077, 19050, 18963, 12418, 78312, 37302,\n  8804, 89631, 234705, 12675, 161944, 14463, 408482, 32815, 23439, 151647, 193595, 35885, 102144, 76974, 201816, 48443,\n  101145, 61088, 67380, 55214, 80029, 65112, 236169, 11787, 39052, 61274, 38785, 128619, 248708, 117197, 271163, 7859,\n  30350, 146035, 2253, 131342, 117340, 101888, 58102, 64465, 11878, 89316, 34052, 26133, 128467, 54644, 138482, 21706,\n  974, 21544, 138848, 29501, 138625, 13861, 594984, 69791, 63961, 7884, 49187, 75381, 5237, 3488, 22429, 62564,\n  74778, 10035, 87433, 84117, 61834, 89252, 99881, 82523, 67040, 20877, 122047, 11631, 43814, 146638, 2274, 23298,\n  13690, 16936, 14388, 11469, 65947, 133203, 65149, 34934, 33809, 57431, 38649, 14721, 232476, 110369, 46966, 79425,\n  115258, 73854, 38503, 168461, 181745, 103268, 1590, 73761, 28824, 23871, 104328, 10944, 94013, 11048, 79005, 77074,\n  9510, 89479, 89361, 8471, 10246, 73385, 17529, 51173, 93722, 40211, 452, 112593, 81976, 33181, 50233, 31287,\n  7217, 11605, 5815, 49818, 114383, 88600, 20714, 201753, 3493, 31374, 99143, 103003, 16014, 10855, 96263, 3215,\n  69045, 19108, 17235, 118289, 72692, 54171, 110308, 6337, 12145, 34602, 29627, 82100, 80981, 1942, 94550, 34461,\n  9507, 33064, 52111, 30229, 6692, 117458, 68421, 89525, 1620, 80775, 26613, 26281, 60820, 8784, 48514, 22303,\n  330444, 101568, 44180, 117514, 35474, 54648, 52855, 24987, 33962, 73393, 65642, 67569, 4797, 67532, 33609, 31625,\n  7053, 54521, 80888, 3839, 295463, 120005, 12078, 28541, 46445, 187065, 33145, 165188, 27026, 38584, 77641, 63748,\n  12491, 8511, 283918, 4716, 77988, 19152, 55724, 61518, 49524, 87047, 241122, 13621, 35675, 5771, 49017, 17443,\n  90947, 23528, 8917, 92592, 29114, 23367, 38345, 16221, 166705, 19640, 54603, 106502, 101385, 34100, 50779, 50417,\n  133782, 46043, 51856, 22308, 32704, 72281, 6041, 33229, 6186, 116558, 164648, 67105, 84595, 74801, 41853, 10043,\n  176031, 39148, 41713, 36877, 185623, 77660, 93112, 18322, 45966, 122806, 108388, 45184, 151302, 14234, 62763, 55556,\n  63069, 244438, 9876, 276168, 1699, 17487, 9500, 35260, 107491, 149204, 1781, 17579, 947, 100336, 84387, 8106,\n  15458, 23215, 396223, 29684, 74452, 123641, 92338, 31473, 196212, 62391, 1527, 3879, 6046, 20893, 200851, 3778,\n  10498, 7764, 38750, 23256, 12163, 76975, 57473, 59530, 10239, 23275, 35839, 158531, 35191, 44209, 40678, 3596,\n  243951, 73764, 16266, 15283, 9277, 164, 9335, 59492, 9090, 7474, 66893, 9054, 29539, 12905, 6948, 246436,\n  54460, 50334, 52706, 46765, 22820, 125379, 163547, 191059, 26514, 8972, 72494, 117307, 112549, 40233, 12782, 33432,\n  60372, 35994, 32356, 367449, 51753, 39462, 62458, 34885, 48756, 795, 117374, 148644, 21812, 14674, 1704, 10995,\n  70861, 98992, 38556, 29671, 260326, 35167, 3569, 19709, 41, 10312, 47172, 133362, 44222, 19304, 3828, 39543,\n  10441, 32694, 2925, 24827, 16961, 14477, 106226, 11249, 48148, 641, 182648, 47579, 138771, 11517, 1834, 5495,\n  216194, 89574, 56707, 54758, 5914, 36178, 72805, 5272, 52153, 156729, 2240, 13954, 53400, 68748, 63310, 189742,\n  212036, 48502, 106813, 55645, 56519, 64696, 48413, 131579, 26245, 26436, 62198, 36864, 10117, 183822, 41455, 133034,\n  45888, 134173, 151941, 23987, 15294, 9465, 151116, 213962, 138019, 23156, 20652, 128889, 90913, 19364, 219476, 43092,\n  26368, 135383, 5308, 63585, 43842, 38292, 83051, 52878, 42111, 91099, 61824, 86809, 23348, 16103, 1661, 1463,\n  6082, 2926, 10571, 10834, 194845, 212415, 28967, 55622, 161089, 61297, 359805, 83283, 156206, 39861, 2052, 124838,\n  51546, 15485, 2858, 116911, 11647, 165218, 246102, 28861, 30759, 90050, 115426, 107685, 302912, 221668, 43284, 28078,\n  262094, 15913, 108493, 34355, 8635, 56521, 33938, 107963, 78876, 130940, 120485, 7453, 26535, 294502, 79190, 217099,\n  35283, 16638, 827, 171026, 54183, 254986, 24436, 15975, 31183, 71531, 8757, 197433, 85484, 10671, 7791, 98566,\n  147873, 81926, 428971, 27061, 12989, 34063, 127862, 4570, 5197, 115338, 86529, 11135, 6356, 99904, 45008, 275758,\n  72894, 23300, 64365, 137852, 65347, 47170, 28144, 96791, 20150, 159397, 90399, 1362, 27370, 98131, 31669, 28527,\n  73787, 117782, 21103, 19726, 1493, 47288, 66521, 29621, 45918, 29807, 100648, 6707, 12366, 36485, 45413, 16410,\n  190217, 44950, 2222, 75028, 20724, 41617, 33388, 41062, 13858, 83447, 87017, 3916, 10981, 5912, 19979, 5885,\n  67449, 21903, 300914, 5663, 81213, 18877, 80072, 19338, 7553, 143149, 63928, 73907, 14115, 297533, 1424, 109439,\n  72242, 21063, 30733, 14100, 271517, 34775, 24860, 63700, 11842, 20737, 50067, 22773, 48310, 11235, 43957, 13183,\n  88743, 32209, 23321, 97092, 143726, 17704, 33289, 144394, 22177, 68374, 111967, 982, 3290, 170312, 8945, 39607,\n  243231, 56247, 9319, 54873, 58452, 181674, 44954, 10669, 62937, 133402, 31264, 14854, 12592, 70761, 4902, 2472,\n  1654, 39097, 17353, 115270, 40066, 92333, 7620, 158039, 33477, 80720, 2135, 38418, 13751, 164773, 39322, 114253,\n  9921, 17904, 79739, 5389, 128442, 4659, 46992, 27136, 15868, 109620, 82964, 2344, 7106, 102119, 3920, 13567,\n  75236, 23651, 9863, 2844, 83773, 92000, 12422, 95077, 10775, 142605, 120027, 9048, 36938, 81154, 56545, 4754,\n  10482, 28907, 16084, 21873, 170465, 19577, 24905, 58130, 17368, 70780, 14531, 55034, 17469, 23293, 260571, 52064,\n  161508, 63795, 195965, 205503, 32752, 145584, 138232, 298398, 98340, 15352, 275003, 75638, 800, 306996, 12394, 36516,\n  19824, 101316, 192935, 84781, 264456, 14840, 73856, 120271, 3901, 50990, 48385, 372041, 87319, 2227, 95681, 56225,\n  2867, 24632, 65645, 172829, 26782, 83816, 46844, 37867, 9630, 11329, 76756, 138080, 113102, 2296, 84207, 55323,\n  185815, 5210, 2986, 109112, 24197, 70199, 64611, 7066, 44584, 96679, 3292, 11955, 86366, 7796, 105090, 121463,\n  40224, 45210, 50967, 43523, 3636, 166133, 21094, 57178, 140916, 4748, 13764, 3777, 31731, 104179, 416810, 188439,\n  267731, 86931, 13966, 5018, 9567, 283051, 3232, 53171, 53678, 6228, 32833, 99759, 72984, 37061, 70162, 70738,\n  29389, 1868, 122000, 13671, 27963, 37380, 69277, 37341, 17106, 45005, 12564, 183, 50282, 3809, 57468, 23868,\n  284911, 75942, 28036, 2447, 60170, 8119, 51479, 25171, 8322, 48880, 42721, 33419, 12608, 11361, 18423, 24958,\n  23374, 141776, 2304, 149128, 89652, 68789, 36035, 45613, 5268, 442, 159096, 63783, 39044, 4432, 34374, 26718,\n  229766, 59526, 23706, 15072, 8869, 12775, 73562, 76513, 151350, 46040, 29341, 58942, 31436, 8742, 195663, 155875,\n  177342, 9409, 11232, 106379, 12269, 40493, 135684, 74614, 183212, 41598, 44475, 43186, 120418, 263054, 22473, 36531,\n  116270, 43205, 64216, 41880, 2843, 3299, 84033, 48575, 78888, 37197, 53158, 44555, 69192, 29213, 80495, 156103,\n  7865, 86885, 75088, 21642, 184099, 132386, 508, 948, 1086, 69319, 44488, 3613, 129897, 33311, 51024, 2449,\n  18383, 28970, 50210, 70726, 70508, 87097, 118602, 146382, 20242, 182430, 197233, 39937, 18508, 14350, 24901, 165385,\n  229924, 33832, 136628, 151243, 124569, 88492, 127154, 62624, 35749, 21909, 91751, 8060, 50589, 954, 105732, 25763,\n  55626, 146107, 1247, 64529, 9884, 13632, 16172, 1335, 83115, 126164, 36224, 170872, 40971, 2035, 7394, 46551,\n  30671, 53142, 107311, 75486, 18135, 69492, 12903, 96202, 14452, 18152, 49690, 77016, 38861, 2226, 385130, 21131,\n  17844, 57784, 84, 36610, 201826, 14842, 131564, 77270, 5549, 102741, 193961, 183742, 26413, 2474, 194304, 464074,\n  17189, 226650, 166968, 718, 13561, 32539, 7182, 35594, 38539, 16307, 188634, 18219, 10679, 72826, 161909, 63158,\n  143331, 23378, 14208, 25491, 3314, 73171, 63331, 5500, 36785, 38973, 614, 1580, 171194, 97209, 137201, 91854,\n  49685, 50187, 10733, 91809, 187713, 62737, 172516, 6666, 67506, 4776, 58141, 30188, 4618, 392, 4013, 235640,\n  104039, 39136, 56441, 250251, 17060, 48306, 57483, 66360, 195080, 59703, 90208, 74747, 50648, 37806, 27833, 30715,\n  33159, 66182, 9356, 34911, 19238, 70986, 114677, 17409, 67559, 80594, 47694, 8643, 134840, 79148, 5452, 14070,\n  28599, 144163, 50434, 27535, 157523, 13810, 155, 61478, 17130, 128237, 70556, 20046, 38064, 108184, 48322, 65305,\n  117398, 36136, 43677, 27966, 94355, 126236, 109335, 98906, 31918, 54262, 1145, 25681, 13575, 60774, 45912, 122417,\n  34538, 24034, 131365, 51834, 40326, 21250, 21866, 17508, 13997, 117733, 16819, 89310, 3494, 11178, 60427, 34853,\n  348283, 6846, 88202, 17221, 62481, 8359, 10088, 62152, 26862, 12931, 13414, 151495, 3603, 33643, 178131, 46655,\n  104426, 109103, 4105, 146806, 244363, 64272, 15471, 93101, 153709, 21364, 73754, 69185, 112487, 8238, 52934, 80498,\n  304612, 124178, 39721, 198761, 199674, 132729, 36479, 5833, 41239, 3609, 28387, 262648, 35545, 67430, 89355, 18851,\n  54869, 54495, 5118, 27316, 293005, 36308, 43061, 110038, 28223, 7186, 33116, 18945, 26277, 73156, 23311, 41090,\n  26899, 300052, 100683, 8894, 4533, 2915, 66118, 31965, 18518, 75755, 209592, 62868, 15492, 99745, 54220, 111614,\n  38587, 26556, 107426, 95125, 80488, 64232, 13265, 23009, 70485, 25431, 69000, 3572, 160395, 98028, 42484, 42093,\n  263, 6747, 244525, 132822, 60162, 171913, 124805, 29698, 11382, 8416, 48535, 37248, 222152, 16593, 47020, 8816,\n  4696, 24033, 36100, 38399, 250751, 10483, 19137, 143486, 51921, 74917, 130735, 79897, 182609, 69122, 71667, 39358,\n  10707, 133977, 56093, 112728, 48463, 33430, 9299, 48097, 46243, 217556, 63573, 36225, 1227, 221850, 32274, 14107,\n  49111, 29646, 36094, 63601, 111564, 49362, 24638, 17610, 46502, 41875, 40909, 4262, 33342, 32777, 32103, 28673,\n  56846, 6159, 154445, 47336, 68541, 153151, 3385, 58607, 63559, 108092, 46159, 13477, 858, 2316, 24161, 128413,\n  139927, 11071, 88393, 110949, 16654, 34235, 73235, 37210, 229375, 76831, 194659, 71471, 76759, 4725, 28276, 29321,\n  26478, 117042, 46296, 101434, 33205, 67157, 6462, 3168, 95828, 54864, 23765, 55657, 23399, 39175, 47265, 10732,\n  92945, 59744, 14719, 35115, 2637, 23170, 162802, 33876, 35630, 38052, 9197, 83972, 28470, 19030, 22779, 259343,\n  143992, 229198, 23683, 129194, 50214, 30041, 34367, 134697, 14174, 184114, 144727, 23833, 21456, 25715, 53623, 10461,\n  166191, 57432, 28691, 157504, 65665, 67457, 16937, 12529, 1711, 168178, 4710, 9397, 21594, 15069, 102984, 295316,\n  78019, 30013, 49809, 108210, 97599, 11539, 20109, 22376, 111701, 47783, 890, 213373, 36, 229081, 150468, 50773,\n  147151, 857, 99218, 78079, 110246, 83001, 17917, 78802, 189022, 112785, 40738, 2303, 43021, 10227, 101710, 85107,\n  30397, 3429, 72517, 49710, 40757, 160978, 8573, 100346, 131935, 103276, 38380, 105759, 42065, 28883, 402, 95838,\n  73335, 67055, 20011, 29906, 48039, 54843, 18117, 35768, 26596, 8518, 143614, 74994, 28984, 30865, 51327, 59362,\n  15102, 44276, 89118, 714, 2361, 214493, 160772, 63295, 7421, 71563, 196497, 21076, 202167, 92741, 103226, 106818,\n  69744, 89977, 100205, 98932, 43766, 76931, 6843, 16584, 52826, 291470, 15946, 28322, 3642, 204, 258863, 106515,\n  83304, 32946, 12706, 41427, 33873, 27151, 56397, 63503, 75140, 34306, 73149, 29926, 63169, 91359, 77492, 74847,\n  192389, 42353, 148, 138944, 36551, 31192, 181456, 63005, 92748, 24635, 51573, 52932, 13039, 4741, 79294, 69836,\n  123959, 107948, 11123, 170654, 233220, 54352, 20575, 40997, 21738, 120351, 106134, 155424, 84447, 124076, 35541, 706,\n  77230, 51748, 8442, 40109, 20228, 6042, 20963, 107207, 187852, 127504, 15461, 33093, 19095, 5987, 21488, 118624,\n  25799, 182308, 23326, 20103, 92136, 54838, 10713, 126470, 108774, 19203, 61066, 63342, 29237, 9113, 45526, 43035,\n  53947, 312166, 11117, 25827, 2299, 27218, 55737, 42929, 118106, 61182, 16888, 118952, 2687, 159550, 3496, 59443,\n  8830, 51688, 78340, 103766, 42331, 73399, 58020, 1666, 202924, 2854, 12678, 5891, 33667, 17, 36329, 9733,\n  2023, 40389, 124099, 86266, 73763, 17618, 9348, 9584, 30704, 89527, 11379, 88708, 19363, 71305, 80907, 163488,\n  19779, 4406, 18155, 125871, 16737, 4313, 24007, 71010, 35629, 59187, 181773, 171755, 48081, 282188, 44159, 41703,\n  24068, 63512, 20026, 20079, 101013, 4611, 19597, 169832, 162338, 158889, 21816, 59081, 291912, 51657, 16911, 142760,\n  13749, 22555, 50557, 197345, 24745, 28474, 5713, 171571, 328289, 6161, 7725, 36994, 167679, 62776, 62795, 52274,\n  70086, 34392, 130952, 4930, 48299, 107549, 36520, 19777, 23306, 51480, 107581, 7841, 16732, 37422, 72074, 99464,\n  17801, 125916, 10597, 40408, 43322, 87432, 24862, 37097, 54589, 32282, 167348, 17898, 3586, 19826, 146462, 1988,\n  63653, 28763, 132195, 94493, 43624, 52107, 37692, 42666, 53474, 25957, 8805, 222451, 925, 3055, 104713, 68687,\n  109177, 128137, 51766, 12112, 251316, 83233, 11015, 24963, 43805, 189880, 86830, 77075, 13082, 33163, 73548, 44568,\n  19511, 108517, 64550, 26047, 86565, 54739, 5095, 68246, 142182, 40984, 140026, 1750, 92461, 2773, 725, 19988,\n  17117, 106417, 21066, 147935, 101033, 174174, 12814, 99891, 103319, 85050, 87912, 55182, 64589, 75793, 37143, 22056,\n  4022, 81127, 18968, 52899, 4351, 50009, 17573, 31885, 235897, 86925, 127636, 149633, 5352, 170945, 13870, 65479,\n  82705, 21354, 52980, 4573, 107142, 167201, 689, 25288, 46391, 60641, 14497, 192600, 156084, 61637, 16433, 20054,\n  5860, 781, 55170, 27826, 61365, 81069, 119317, 27123, 10558, 95773, 129802, 55875, 13045, 36330, 234176, 18058,\n  7717, 148000, 254, 11979, 18357, 24975, 8185, 10718, 33922, 75655, 63067, 62116, 12590, 26192, 24136, 12861,\n  33065, 175633, 5001, 83234, 6928, 37537, 39570, 797, 46993, 106751, 3390, 24316, 783, 56130, 98315, 10024,\n  46937, 84478, 81419, 119922, 67846, 100404, 45582, 91490, 8952, 68431, 40501, 170957, 26295, 27641, 117433, 78412,\n  6107, 100280, 74320, 156460, 119656, 6001, 172558, 13585, 18799, 5324, 39108, 12471, 17458, 37351, 39676, 88115,\n  50747, 61250, 125687, 5267, 4229, 23899, 71256, 32369, 179559, 203977, 81060, 24631, 112727, 201216, 111416, 67474,\n  118080, 91, 35301, 125372, 20683, 74602, 93673, 189634, 41464, 103487, 832, 23478, 125468, 73805, 119649, 29439,\n  51560, 85326, 160218, 36794, 49749, 182459, 10783, 266813, 44231, 9294, 15428, 71516, 7359, 56127, 165213, 174634,\n  35339, 38024, 193163, 64310, 62988, 135393, 50470, 543, 136487, 82389, 59047, 12586, 67015, 11644, 14120, 11086,\n  5208, 84496, 75693, 97070, 29150, 13909, 133818, 28826, 24956, 25564, 136586, 132437, 105186, 4035, 36426, 22688,\n  48858, 283040, 60007, 145362, 6143, 70935, 12860, 88632, 18097, 251246, 43147, 88692, 6972, 46173, 87229, 69837,\n  16404, 61816, 34813, 41161, 73489, 67221, 80668, 80317, 58742, 40484, 31106, 50580, 97196, 213949, 58374, 30823,\n  36357, 82430, 16088, 18269, 164616, 424, 215366, 24797, 5834, 261900, 3248, 32765, 32267, 19570, 240015, 43546,\n  13746, 95242, 296368, 118754, 147733, 19239, 38636, 84832, 15113, 3902, 193061, 119038, 132091, 99171, 11021, 33759,\n  34127, 5030, 3999, 6802, 106298, 88781, 43305, 22438, 39729, 5081, 25109, 217719, 106426, 21384, 30890, 42599,\n  22294, 25962, 25245, 30497, 9780, 59534, 29560, 5927, 15602, 52507, 34738, 56980, 36213, 7273, 98748, 10870,\n  71502, 69490, 359492, 120808, 42808, 83335, 17061, 250432, 66802, 102331, 12384, 25660, 599, 64618, 47661, 61634,\n  60755, 54355, 107300, 30007, 5851, 79666, 18845, 114230, 39120, 65244, 33679, 16370, 67363, 870, 69190, 700,\n  108623, 7199, 25596, 17155, 126368, 82661, 16291, 21557, 72770, 55038, 123010, 8616, 91263, 105277, 4143, 14045,\n  32486, 45280, 15555, 228392, 30596, 287, 109234, 90030, 151717, 60950, 12314, 165069, 7951, 13304, 63878, 123573,\n  52002, 27428, 9709, 27443, 43103, 89429, 81209, 45635, 11768, 65127, 12093, 62760, 68942, 4189, 59598, 70512,\n  40901, 34082, 60981, 18280, 39344, 77285, 4183, 14054, 24037, 4113, 474190, 227569, 127500, 33437, 1737, 48639,\n  116890, 82909, 62991, 47953, 48403, 63792, 44541, 194078, 16926, 13540, 54497, 288031, 86750, 30818, 25377, 51309,\n  17745, 9988, 98587, 47808, 48648, 15607, 51298, 11671, 159545, 43990, 97815, 27393, 34460, 59095, 50213, 40288,\n  58419, 77017, 108711, 106974, 5634, 27302, 23195, 55246, 114317, 20787, 2176, 34170, 67865, 144530, 7099, 31816,\n  31462, 136214, 45619, 105094, 23352, 133565, 14615, 72015, 24010, 107270, 1347, 151444, 98185, 20971, 63491, 86427,\n  125708, 141576, 126803, 83272, 69686, 130286, 27346, 20481, 68337, 143641, 11161, 32803, 13610, 94361, 17084, 170992,\n  26271, 23139, 77797, 5076, 70691, 1893, 34857, 35003, 2980, 189255, 41107, 6458, 4768, 19194, 182508, 92031,\n  27225, 316351, 48574, 15987, 102402, 14334, 46503, 138005, 75453, 29119, 31677, 97327, 28106, 72279, 7983, 6958,\n  8104, 6430, 66373, 51695, 6931, 86975, 52340, 108203, 1176, 75897, 106677, 21721, 6274, 7082, 13018, 139466,\n  6475, 73402, 49676, 46350, 112635, 1121, 31018, 39288, 22498, 157722, 11740, 4237, 6176, 145143, 8139, 77918,\n  238686, 12912, 106531, 13530, 26832, 8235, 79497, 23768, 28893, 17853, 435790, 33701, 90319, 24688, 121374, 13130,\n  14441, 44878, 2951, 60805, 15682, 368968, 59313, 5764, 15087, 226921, 19420, 46906, 39517, 28151, 141168, 18755,\n  45270, 39523, 7813, 6413, 109134, 51672, 66939, 115004, 104440, 22565, 91467, 22538, 45965, 62165, 14231, 46295,\n  47645, 71747, 30576, 43847, 81772, 99248, 106345, 17063, 7876, 115604, 42345, 60383, 52683, 130873, 7327, 83603,\n  87720, 43843, 117, 49018, 12898, 24681, 9075, 145197, 4505, 69956, 86690, 8844, 185665, 73412, 8843, 2050,\n  2769, 61489, 84788, 765, 113401, 48729, 111522, 169599, 15664, 24750, 131177, 29882, 57592, 149057, 45527, 23022,\n  105229, 1754, 10064, 14643, 137381, 30538, 7740, 43774, 97059, 30153, 99882, 62539, 119268, 49329, 86015, 5395,\n  6876, 63855, 14385, 103785, 43309, 58548, 24380, 31077, 33886, 37135, 15365, 50313, 128363, 48659, 56802, 25981,\n  35476, 24927, 75162, 26509, 144249, 18559, 42480, 122475, 67013, 7834, 35825, 193197, 143587, 15263, 5498, 114311,\n  83367, 56008, 102437, 38184, 25703, 112278, 26497, 8942, 91436, 71042, 111589, 153704, 59347, 5258, 57333, 17950,\n  53236, 28574, 30025, 337749, 2289, 1610, 194412, 103935, 16519, 41580, 29330, 37510, 19844, 35382, 26043, 158342,\n  46309, 11301, 106938, 96214, 58558, 67686, 163604, 7639, 99834, 7952, 12195, 58864, 23313, 15895, 25042, 10540,\n  218816, 17583, 10486, 66978, 231303, 9956, 202649, 2197, 36388, 7432, 55426, 2224, 51333, 16871, 119452, 179548,\n  183535, 153812, 138057, 9695, 109792, 28563, 126806, 52451, 139277, 13092, 48380, 9516, 54306, 67549, 14696, 110080,\n  90139, 139123, 3236, 10377, 18235, 70961, 50653, 11129, 8275, 44976, 10027, 18291, 32710, 28012, 318969, 288958,\n  37677, 67929, 68821, 98990, 82464, 10181, 44498, 70197, 86025, 8013, 28549, 83043, 92204, 6171, 76895, 4556,\n  88842, 98320, 60377, 71627, 117723, 32809, 5961, 12916, 37570, 27325, 108946, 2654, 128723, 67148, 211765, 80004,\n  234242, 154947, 40300, 196564, 76350, 3941, 18870, 24018, 73795, 84945, 197515, 8338, 34896, 58219, 146191, 58500,\n  148247, 85921, 101683, 117085, 58424, 66764, 17133, 63784, 11105, 84682, 86491, 32061, 11744, 40778, 32197, 195238,\n  45746, 2576, 39893, 67918, 63372, 3938, 36907, 4069, 17118, 24568, 96382, 59551, 49772, 244074, 72416, 53854,\n  199520, 69813, 60862, 51724, 81902, 122032, 234459, 29839, 38004, 36647, 114474, 13978, 22911, 158690, 15088, 63654,\n  33752, 29885, 83141, 89560, 3125, 12877, 21039, 57564, 1995, 38775, 1392, 70857, 53792, 84731, 5519, 86340,\n  4689, 95886, 119040, 180041, 26909, 84982, 2582, 213702, 108150, 123127, 35785, 15401, 146062, 49004, 67250, 232281,\n  69674, 142589, 97906, 160196, 41811, 23716, 17807, 35367, 161444, 15020, 30993, 67673, 84855, 49859, 39473, 23557,\n  8999, 127662, 19183, 120775, 28561, 79489, 57003, 62500, 16731, 29948, 30509, 54712, 93937, 166789, 11042, 61414,\n  3189, 128681, 363904, 9363, 21967, 135864, 94929, 23174, 24890, 236852, 51310, 35602, 22943, 58275, 6351, 33135,\n  1356, 27798, 41855, 110968, 145300, 139274, 56821, 8658, 51569, 19894, 24832, 4253, 28802, 5732, 52333, 338701,\n  517, 144012, 123400, 70750, 118679, 112674, 109716, 66301, 31703, 84657, 45777, 1745, 40607, 17239, 226055, 50256,\n  48098, 24528, 28411, 109729, 108854, 16675, 111456, 14807, 25003, 27471, 42491, 22378, 10233, 14158, 70447, 13850,\n  73969, 15024, 24742, 25518, 177495, 27226, 176504, 38550, 5248, 41612, 65904, 91342, 24516, 41883, 18419, 84650,\n  215347, 15434, 75579, 9614, 146192, 82954, 25501, 30483, 48712, 34315, 70905, 29488, 60626, 66089, 51329, 5601,\n  69188, 18936, 21518, 23440, 40735, 224481, 33618, 40631, 5866, 927, 128437, 30586, 586, 52791, 76586, 141284,\n  101541, 81564, 12333, 65243, 6509, 6267, 176039, 133405, 47590, 16079, 254143, 27357, 52129, 34758, 9267, 15970,\n  5969, 57732, 7254, 86956, 222045, 17428, 16267, 26799, 110933, 58017, 142888, 143524, 25733, 55763, 16175, 9560,\n  24223, 247240, 55864, 48197, 65339, 12856, 21320, 46799, 62812, 40007, 188763, 14523, 2414, 31539, 49494, 58075,\n  155418, 90186, 99708, 24554, 35819, 75001, 757, 39520, 16022, 59445, 3713, 46416, 78423, 112394, 18048, 40416,\n  43138, 69398, 67029, 137948, 20995, 20115, 42968, 1859, 128255, 8554, 13664, 13508, 240673, 36331, 63579, 21029,\n  46745, 152929, 19469, 227297, 236093, 41575, 99905, 13097, 72176, 7570, 11923, 37300, 57085, 104327, 59863, 51790,\n  97841, 7674, 89187, 121357, 61248, 15021, 6833, 112841, 107, 73638, 39990, 166290, 36068, 78500, 50124, 104807,\n  193177, 49274, 90762, 21097, 105427, 14711, 17114, 26796, 55726, 20684, 123636, 20366, 215229, 140553, 26789, 7139,\n  20446, 136219, 5009, 2402, 47228, 5882, 154075, 61745, 100420, 43241, 49334, 149951, 87091, 86136, 329294, 49115,\n  14429, 27425, 36818, 111800, 121708, 18542, 6570, 27157, 23605, 12467, 6000, 70237, 21157, 88964, 42071, 18521,\n  187721, 24444, 86, 29324, 21880, 145192, 303927, 17373, 2997, 108310, 171873, 60425, 203976, 18220, 116526, 69373,\n  99166, 6387, 84942, 187663, 95068, 21687, 241311, 45047, 25877, 42751, 35432, 9804, 7724, 82982, 23192, 146653,\n  98925, 132997, 92522, 87415, 83401, 53505, 150646, 8142, 4829, 58649, 25534, 26193, 13182, 71621, 73803, 70797,\n  18229, 39127, 69038, 57676, 13718, 58332, 31672, 65795, 239662, 77166, 190337, 3939, 38653, 96399, 34620, 237425,\n  116505, 13199, 102812, 5543, 153497, 1676, 111555, 5249, 30589, 10038, 44022, 32064, 89029, 4156, 84630, 183016,\n  38962, 20874, 41135, 5896, 181302, 141985, 28318, 41843, 43853, 109018, 101914, 14232, 78872, 97030, 13738, 107743,\n  180301, 8364, 79955, 206838, 4786, 1843, 19029, 45663, 248240, 2387, 51445, 145895, 7401, 82908, 16435, 28522,\n  106136, 4571, 2405, 140262, 112590, 26994, 36399, 3894, 77745, 48157, 81325, 9424, 19731, 7606, 25832, 161377,\n  60880, 3462, 68402, 63020, 77789, 8989, 94980, 140615, 125748, 101040, 138, 61603, 135487, 19491, 9072, 42404,\n  5975, 4730, 23228, 147617, 48627, 88470, 18481, 32183, 34084, 197974, 15306, 16406, 12419, 25554, 80789, 50074,\n  215770, 77760, 67732, 15820, 47557, 8552, 32891, 3397, 254582, 51747, 37440, 13256, 10364, 19078, 197381, 38702,\n  106495, 126239, 69247, 4048, 21856, 4277, 25578, 128895, 67539, 63586, 54687, 80647, 88981, 92208, 26195, 51852,\n  38805, 50151, 28772, 79952, 21428, 21251, 116522, 15445, 48732, 44111, 50224, 95470, 42316, 106832, 48425, 377321,\n  12149, 3533, 41847, 71691, 16078, 249001, 118133, 10711, 52808, 33393, 18850, 60881, 25327, 125536, 35507, 17128,\n  51322, 25298, 64567, 14087, 33850, 17830, 26983, 37516, 51147, 63624, 6036, 75728, 12253, 42565, 30641, 60123,\n  122354, 7767, 33831, 15668, 46077, 207921, 704, 228032, 56483, 154155, 19104, 43429, 254553, 40400, 19915, 39707,\n  115417, 1959, 8797, 59126, 81834, 6291, 43802, 41057, 150991, 132620, 67404, 31385, 94662, 35042, 22728, 29984,\n  86668, 80841, 166714, 23521, 7381, 18863, 127695, 23731, 12841, 34184, 955, 46179, 100650, 105059, 92227, 35881,\n  18218, 34994, 30732, 65296, 15741, 79032, 12811, 2842, 22372, 120408, 11638, 298925, 68294, 83360, 60616, 1270,\n  50705, 35353, 39160, 65700, 15535, 87701, 7971, 17998, 84660, 24834, 3600, 57330, 61887, 43556, 70547, 21033,\n  22553, 123308, 92138, 46071, 72299, 43807, 86552, 3952, 31361, 45177, 11621, 157425, 24824, 87145, 1530, 1015,\n  17743, 64397, 14528, 84960, 46820, 135812, 40268, 205321, 64288, 83124, 142613, 20892, 31582, 178130, 41319, 47604,\n  77006, 38648, 45265, 69293, 111674, 38866, 30288, 90253, 116384, 11710, 162727, 119339, 30760, 74575, 99191, 114910,\n  80920, 74030, 166787, 23839, 86149, 70396, 8817, 71462, 77192, 61144, 7550, 263557, 51979, 2741, 12376, 38498,\n  79691, 27990, 88220, 46311, 60342, 115770, 32907, 654, 122805, 22347, 45779, 35595, 103800, 61077, 11173, 7981,\n  240873, 127729, 60554, 100208, 160744, 278120, 46400, 47854, 233114, 14783, 28068, 50186, 78962, 21368, 149837, 32533,\n  54920, 67698, 16575, 42220, 8608, 244187, 24441, 16118, 3484, 29636, 35155, 100272, 316104, 399, 13004, 70176,\n  72548, 2188, 3176, 10044, 24337, 146534, 171223, 44154, 5088, 100828, 173780, 92915, 230040, 59854, 91355, 69382,\n  21926, 88289, 10494, 133339, 10172, 99597, 53605, 17770, 36838, 15150, 30766, 12102, 26, 22751, 93985, 48775,\n  86221, 110954, 26896, 56128, 83458, 19243, 10858, 11338, 102176, 1734, 27656, 45449, 12062, 47678, 227191, 104843,\n  17571, 33218, 31175, 80, 41929, 75064, 823, 5915, 41170, 26266, 21858, 74328, 28428, 46729, 53037, 208149,\n  68239, 44371, 128012, 14846, 41750, 121730, 939, 16024, 103930, 2667, 3749, 72822, 2634, 17905, 21653, 37065,\n  18313, 12459, 26288, 15851, 53019, 237454, 82804, 43717, 34825, 6324, 223813, 34763, 97837, 74764, 131779, 54108,\n  63115, 77477, 133465, 158834, 24606, 172748, 8241, 11219, 73157, 67543, 21979, 44698, 152474, 62783, 25538, 151168,\n  14715, 17653, 20409, 10177, 91439, 51243, 33807, 21982, 37033, 28498, 20946, 82195, 109806, 89357, 35843, 62764,\n  140259, 29524, 15905, 148965, 30668, 242609, 18782, 55072, 174760, 95402, 12389, 60205, 380, 39535, 99410, 68744,\n  135597, 29770, 37761, 9074, 95673, 61075, 167448, 81798, 136073, 92495, 63964, 71292, 65073, 16100, 82788, 3903,\n  134249, 666, 114606, 13925, 13829, 14923, 22844, 73642, 17279, 39192, 82814, 14279, 122305, 98412, 2819, 90185,\n  4420, 211793, 88571, 343220, 46444, 31428, 94176, 75136, 10237, 43041, 121311, 109668, 64848, 79724, 95455, 406446,\n  203623, 49760, 35347, 15313, 70728, 55604, 64355, 9274, 10349, 116949, 76977, 10948, 182885, 140337, 63627, 148647,\n  65075, 60013, 4856, 3391, 24519, 53746, 165940, 8600, 25783, 64942, 35809, 14075, 40318, 2510, 34997, 36980,\n  34139, 23025, 39457, 7315, 22222, 75794, 8923, 194881, 63394, 25194, 37165, 85475, 55266, 208468, 18378, 53662,\n  102764, 38595, 7896, 34791, 41422, 49686, 92984, 25098, 20126, 17645, 88907, 226875, 65100, 60009, 15638, 21283,\n  90408, 4537, 139878, 112661, 53640, 5071, 42553, 9995, 35128, 46262, 76889, 67947, 48932, 16991, 106940, 167117,\n  11192, 66889, 6670, 104891, 38935, 1875, 45170, 3303, 96839, 772, 3134, 41094, 34782, 66145, 43963, 48995,\n  39492, 21237, 117116, 33731, 19396, 265866, 122508, 109994, 41332, 31277, 72923, 726, 6250, 12016, 13536, 75815,\n  5511, 102922, 12522, 133050, 19492, 24257, 18746, 2693, 51304, 63505, 129615, 231652, 25936, 33108, 79906, 94200,\n  104466, 80492, 72337, 73422, 54099, 254560, 176028, 6993, 73771, 49079, 55319, 58712, 86115, 97967, 23109, 55938,\n  5080, 244577, 48923, 66103, 7669, 640, 49551, 74043, 30891, 80537, 202612, 47981, 111700, 26871, 4345, 17399,\n  13931, 293811, 135578, 107640, 25276, 30158, 17676, 15676, 72289, 37101, 1637, 43083, 135447, 37641, 14254, 111332,\n  14820, 13404, 34584, 56626, 258641, 7240, 63894, 83112, 25265, 17841, 32376, 48491, 31005, 66732, 30950, 9648,\n  281179, 112290, 34755, 61683, 75286, 5189, 100077, 59697, 393, 103531, 23185, 179430, 95359, 298178, 110282, 125995,\n  14623, 78807, 24189, 26684, 13584, 47803, 47440, 29923, 6680, 25153, 12281, 81189, 101227, 5727, 57666, 53928,\n  80173, 157148, 23623, 17510, 44933, 56582, 107749, 28680, 76666, 75185, 175076, 32262, 54542, 14210, 77349, 27496,\n  13244, 83199, 3441, 55821, 39348, 3757, 3667, 123147, 458, 15000, 19818, 5639, 25379, 68555, 51878, 6205,\n  109451, 7850, 13287, 9188, 134348, 386526, 16856, 19356, 81143, 264611, 26487, 30169, 6959, 42394, 96934, 7084,\n  65554, 79211, 22545, 21576, 12027, 4118, 60397, 13483, 51311, 75590, 42156, 36096, 8716, 11493, 42998, 11218,\n  57589, 275790, 7172, 33265, 140731, 69517, 43030, 8376, 28467, 43930, 2234, 31591, 23316, 47974, 14197, 146070,\n  17272, 6751, 33924, 168150, 30458, 113416, 293380, 11766, 25980, 203311, 28924, 162345, 55229, 20334, 34079, 27402,\n  77197, 13365, 186022, 69870, 83798, 55050, 364150, 25353, 28302, 1155, 109582, 70417, 114784, 7067, 16416, 132275,\n  7428, 45143, 48146, 46692, 34548, 35154, 92593, 5358, 26241, 23637, 54860, 9482, 14712, 7966, 32576, 13535,\n  39336, 35734, 47925, 187574, 103304, 90255, 22548, 13788, 18928, 36142, 63464, 150312, 54080, 263654, 319602, 6537,\n  12870, 133946, 9773, 20050, 334, 130222, 30305, 136258, 87722, 40831, 167627, 13993, 15208, 85494, 50771, 220399,\n  16895, 50769, 10053, 113498, 142098, 93461, 17165, 99681, 114262, 41550, 192972, 66158, 39820, 17436, 87519, 144390,\n  83913, 82212, 14723, 8746, 57817, 78233, 11144, 30225, 28682, 86362, 276167, 25943, 7721, 38719, 161361, 102297,\n  14900, 88287, 14336, 12092, 108672, 42339, 328, 10290, 11250, 44623, 111087, 145880, 62246, 20511, 67542, 263445,\n  42849, 24396, 94945, 30646, 415188, 26446, 102124, 18065, 1724, 4925, 110914, 163915, 26555, 176996, 8050, 33583,\n  24549, 11288, 16296, 29023, 25505, 6867, 86739, 11159, 26443, 84520, 68545, 10696, 107450, 65107, 90951, 10518,\n  145899, 31404, 52435, 29234, 61035, 11336, 53944, 64679, 43528, 83757, 4052, 13189, 6901, 39247, 35310, 26976,\n  60726, 185599, 8030, 4198, 65906, 57296, 259345, 122777, 267741, 2857, 142950, 19003, 21338, 112410, 33257, 200700,\n  147590, 74901, 51360, 32601, 42079, 29847, 124456, 34389, 18924, 20790, 120555, 65991, 73017, 171882, 21281, 26841,\n  135236, 5978, 4123, 303, 15393, 27267, 28700, 249892, 5206, 105391, 162130, 107419, 4026, 62796, 18843, 50664,\n  84185, 9681, 10383, 108809, 1531, 34176, 8061, 39095, 5988, 39057, 7403, 4419, 113890, 60683, 85058, 11712,\n  82647, 76332, 51237, 903, 303391, 133929, 25009, 138549, 7386, 175781, 132183, 3037, 69844, 21065, 30442, 4101,\n  71611, 155271, 265989, 32740, 189865, 56230, 135927, 48500, 76523, 108510, 11776, 16685, 31877, 27734, 41614, 24689,\n  13315, 15066, 48022, 4309, 19314, 41098, 90569, 30515, 198575, 24381, 154303, 42859, 32821, 78665, 30662, 14747,\n  1928, 59755, 28149, 70209, 67641, 20901, 5264, 50251, 25913, 66241, 490439, 175537, 104475, 97516, 78264, 91266,\n  103489, 23865, 183520, 34766, 3297, 275917, 146670, 25323, 70391, 25755, 49964, 164202, 18406, 31978, 16441, 52632,\n  15446, 24429, 4215, 37736, 113347, 8883, 22563, 15500, 19295, 41760, 78521, 113283, 93790, 25764, 24081, 23658,\n  27856, 43669, 81754, 11052, 1792, 147034, 105048, 59257, 167471, 86802, 148695, 15116, 116449, 115822, 22405, 24926,\n  8541, 22171, 31801, 33192, 4408, 12297, 301197, 138987, 41757, 44743, 115490, 73003, 63233, 12310, 113745, 80287,\n  25765, 1137, 45241, 12509, 86680, 100507, 15502, 82114, 64501, 29571, 9042, 4784, 27034, 836, 106118, 79642,\n  24816, 19191, 71859, 10806, 34975, 35721, 20447, 33671, 6079, 126054, 58217, 78753, 4486, 35660, 45492, 39072,\n  49693, 135128, 38873, 1595, 36229, 21988, 86413, 27520, 16917, 83041, 32578, 42649, 21581, 17612, 3706, 5582,\n  62426, 61684, 21930, 147493, 27862, 16374, 25590, 69477, 11612, 15240, 18552, 19226, 54284, 19154, 205, 44618,\n  35702, 62029, 11975, 135778, 194034, 34324, 9287, 92145, 355, 83533, 389, 11125, 24277, 28651, 33600, 110599,\n  48262, 80091, 24087, 86535, 87411, 65839, 48531, 5435, 70504, 1680, 141541, 34304, 310164, 9214, 109239, 74125,\n  118018, 80462, 100258, 37839, 12516, 18111, 111964, 15304, 47559, 22475, 250341, 55009, 43502, 72785, 26068, 56283,\n  57433, 145320, 83034, 101357, 107139, 13166, 65124, 29871, 9290, 47434, 20163, 28721, 66533, 101179, 26384, 119496,\n  80863, 26599, 33186, 50921, 14634, 49049, 8156, 90368, 34312, 71503, 2924, 84269, 91725, 54206, 70953, 60570,\n  28606, 1961, 1020, 118183, 21342, 60064, 25713, 117531, 67241, 26343, 257386, 77026, 72355, 28646, 61026, 94224,\n  43244, 94932, 4601, 230976, 375789, 103456, 58534, 48852, 37402, 24109, 241400, 52782, 174015, 1515, 35127, 236213,\n  105070, 41444, 3868, 195472, 8342, 37810, 28026, 30469, 44167, 123934, 17110, 49127, 67494, 4950, 89802, 22448,\n  1890, 32145, 62103, 193571, 16365, 8100, 2759, 59208, 11723, 30626, 54047, 111425, 271002, 34847, 30791, 102173,\n  1865, 152807, 44228, 16334, 47918, 19851, 52637, 48405, 8350, 22131, 69413, 35540, 45564, 53848, 57537, 202520,\n  27742, 16511, 37103, 9857, 25110, 80964, 59758, 10709, 125803, 10945, 60525, 12999, 8553, 3885, 21820, 165805,\n  49504, 26657, 12487, 30455, 81925, 76254, 4388, 51128, 62211, 301599, 142773, 27276, 4534, 106190, 11978, 19483,\n  15491, 115826, 50411, 58796, 19011, 32938, 119108, 220904, 80373, 67031, 70541, 4859, 206920, 6090, 19310, 22573,\n  667, 55921, 9933, 6880, 102405, 3647, 62961, 136965, 128623, 63897, 23416, 79705, 245524, 144775, 47359, 10859,\n  5553, 97850, 6803, 18191, 113309, 30019, 22922, 29253, 192739, 61644, 10879, 93327, 65766, 71215, 147457, 80167,\n  19567, 55770, 29797, 29274, 22832, 23356, 42325, 44027, 261958, 72646, 19852, 9637, 29679, 36046, 49336, 14687,\n  21293, 77708, 14113, 74893, 71134, 200672, 39308, 12740, 20962, 86248, 26029, 50842, 105123, 136390, 98208, 22087,\n  24721, 49911, 106064, 73490, 860, 163439, 14873, 41067, 21752, 30501, 145265, 76566, 33448, 28437, 8815, 16951,\n  18372, 74873, 29462, 32916, 157167, 37777, 218069, 57242, 94822, 93459, 63003, 77897, 35770, 25963, 42205, 118099,\n  173224, 15519, 76989, 16637, 232737, 22211, 31315, 67805, 75729, 4140, 57334, 9310, 28937, 79865, 138213, 106821,\n  46828, 51030, 76484, 117312, 28062, 12545, 71393, 159499, 25453, 210547, 151602, 22228, 5207, 75071, 53864, 71005,\n  140366, 13537, 2178, 11825, 36665, 45071, 70308, 57129, 30652, 16553, 302183, 10738, 6169, 43148, 24995, 57331,\n  67920, 86667, 244672, 341687, 150458, 19053, 961, 107389, 92040, 192870, 41097, 22344, 23186, 119577, 34986, 45018,\n  184604, 177949, 6669, 18473, 92330, 10137, 20330, 189512, 20891, 13257, 66265, 48954, 176492, 72915, 219860, 2494,\n  49427, 18529, 56158, 30214, 27828, 171123, 69463, 40254, 38305, 23967, 79164, 66024, 42495, 299257, 23031, 106341,\n  143982, 353, 39736, 75709, 49560, 70040, 243406, 1642, 25503, 56434, 81502, 48303, 90043, 52859, 24462, 43046,\n  29747, 41457, 23434, 42918, 65328, 52708, 5329, 21975, 47830, 3326, 160281, 95290, 12932, 95952, 35520, 107324,\n  11068, 52610, 109869, 64849, 77721, 9674, 61370, 154578, 9003, 27427, 87582, 116020, 25213, 95646, 34677, 3719,\n  94205, 2145, 19568, 65295, 140426, 3088, 26113, 131686, 46090, 188040, 30031, 72073, 89945, 2538, 23463, 34360,\n  138173, 3342, 84724, 64829, 192691, 8206, 251775, 2536, 33329, 64010, 2755, 48205, 112232, 33297, 244729, 27663,\n  129905, 107744, 55337, 67101, 35709, 152617, 74645, 44141, 27514, 12925, 107358, 33190, 1841, 66538, 7298, 34436,\n  19957, 54584, 3634, 41173, 31411, 2298, 3434, 77461, 127476, 54373, 77688, 7987, 53572, 15128, 19113, 176061,\n  17497, 39049, 101234, 59914, 173549, 48281, 54139, 65147, 55063, 16371, 43136, 40263, 175135, 13721, 69771, 59399,\n  19841, 1955, 57439, 88361, 69314, 130279, 804, 37567, 5192, 185175, 75166, 10500, 237921, 127018, 7558, 35337,\n  117660, 21372, 36787, 27678, 150697, 7, 190870, 106339, 4060, 7260, 122007, 5881, 273045, 63325, 39801, 38618,\n  50414, 113953, 105525, 17559, 98940, 56463, 347332, 34915, 65348, 25837, 82591, 5365, 153665, 27182, 7831, 15055,\n  164423, 1182, 30831, 177372, 58804, 5448, 49128, 44734, 156695, 4975, 125400, 91561, 48994, 97252, 49285, 17162,\n  213928, 127791, 49987, 50768, 86036, 12840, 111058, 253850, 28608, 197563, 19740, 127785, 8355, 34689, 65656, 32199,\n  39574, 8110, 23600, 97524, 34540, 38651, 19006, 29152, 16927, 100216, 30893, 172304, 135680, 31450, 91503, 54177,\n  18374, 32795, 63764, 459294, 151587, 85350, 39064, 13067, 10830, 3717, 20553, 32482, 53805, 108785, 109353, 20145,\n  16878, 76255, 16289, 14152, 16623, 3446, 23337, 31309, 4282, 24663, 64821, 61752, 48030, 64655, 21808, 264145,\n  8537, 50728, 25184, 49171, 14986, 13324, 23567, 199062, 46102, 179857, 99718, 369654, 13062, 27072, 2232, 105686,\n  72897, 219385, 64202, 22442, 72, 52447, 22847, 94762, 33050, 52976, 8735, 2293, 108227, 50715, 42136, 12707,\n  39451, 45981, 114988, 190349, 45935, 22798, 12654, 1, 651, 11355, 22585, 15841, 113320, 18682, 87649, 22561,\n  40535, 140869, 61447, 16658, 95176, 80270, 61544, 83797, 57450, 101532, 133714, 89999, 48843, 172813, 18252, 163124,\n  5003, 103269, 9853, 67492, 19019, 55271, 3109, 55823, 10407, 119899, 97338, 54114, 211163, 4927, 123086, 69260,\n  3848, 55061, 18449, 12690, 1068, 37710, 26424, 11375, 4988, 41383, 92404, 48881, 32091, 48305, 36150, 113778,\n  30095, 105405, 16612, 40433, 41692, 73917, 51729, 55139, 15099, 30180, 50, 16916, 43602, 95240, 47258, 86059,\n  107434, 94751, 15026, 33649, 50744, 49046, 74109, 13167, 7627, 11804, 18035, 3335, 171349, 35806, 44194, 37671,\n  16313, 34545, 198682, 35794, 150832, 210760, 258621, 12579, 352665, 110221, 193929, 21773, 207750, 141990, 78065, 65827,\n  33937, 281, 49827, 8372, 38256, 111292, 55786, 57932, 51091, 10740, 12648, 39213, 156000, 72468, 27361, 213358,\n  87889, 22207, 42213, 35711, 90663, 88229, 37662, 37545, 84175, 5983, 52865, 9162, 24908, 28484, 109135, 3656,\n  114900, 154191, 40016, 143364, 50365, 4998, 47423, 91888, 31494, 33385, 89791, 113590, 83829, 74958, 6063, 23411,\n  5398, 3346, 29188, 43992, 169342, 124619, 152146, 38176, 47521, 837, 5847, 40491, 54818, 14886, 64782, 79830,\n  18935, 46064, 22834, 11304, 8356, 14908, 14164, 58309, 43094, 59761, 58932, 55478, 41212, 27362, 8157, 45308,\n  174536, 290996, 677, 204177, 10082, 87199, 60656, 99512, 92550, 18666, 17670, 8755, 6678, 78663, 12108, 219237,\n  60614, 81551, 23867, 117589, 23355, 14754, 99693, 35914, 69721, 75856, 71852, 97445, 14796, 53501, 37755, 5823,\n  34149, 11053, 56010, 32326, 128830, 80883, 474, 3312, 58187, 4593, 94897, 82655, 3179, 117179, 34370, 37073,\n  208, 174, 40568, 42678, 40325, 118866, 28501, 3518, 28399, 91754, 79629, 270203, 225029, 103041, 171673, 19198,\n  401412, 202372, 71959, 27441, 51150, 57934, 46575, 551, 31580, 48734, 52559, 6830, 207268, 88303, 10399, 26375,\n  6657, 26942, 1499, 28435, 10993, 84614, 864, 33684, 69818, 63313, 138059, 44306, 64282, 22203, 52406, 127830,\n  289845, 11019, 2908, 36009, 23308, 8408, 38414, 42453, 12961, 116672, 9638, 175093, 38447, 99982, 7614, 4603,\n  6681, 54049, 103103, 12820, 52944, 2652, 87605, 137098, 31855, 44982, 31388, 16335, 2572, 234999, 76439, 59626,\n  47646, 105458, 231, 16630, 120728, 71649, 54479, 42672, 179148, 62338, 5367, 4698, 37240, 85883, 273485, 122580,\n  45196, 6452, 17224, 35656, 218274, 532, 77135, 92225, 4816, 24612, 23330, 78494, 3695, 84373, 30447, 293164,\n  21961, 19227, 40712, 50432, 50084, 83383, 130654, 3512, 35209, 106119, 26859, 2775, 18073, 188766, 9641, 22040,\n  51452, 7828, 120628, 59247, 27004, 7212, 84542, 50515, 6100, 130271, 27415, 45596, 33941, 106546, 4823, 107962,\n  1377, 42166, 117980, 25577, 84831, 24787, 184967, 17471, 171214, 62502, 4444, 8334, 85, 27407, 295919, 244072,\n  141510, 43179, 145423, 52704, 9078, 33296, 18231, 71008, 99227, 13981, 68573, 4322, 32610, 51176, 165546, 3853,\n  6417, 145489, 23086, 27479, 11718, 56566, 19653, 100740, 49868, 121955, 56420, 11535, 65579, 132995, 125548, 43942,\n  87902, 58981, 4510, 84294, 73018, 226515, 1295, 68198, 49062, 157567, 27234, 124146, 46280, 100486, 144184, 15600,\n  61742, 26572, 61714, 65125, 21512, 7799, 35874, 6311, 40862, 35522, 45414, 16108, 107733, 43364, 9206, 73819,\n  15941, 51689, 82329, 40065, 29168, 48562, 85845, 69609, 157765, 60708, 25387, 1180, 144919, 159797, 25726, 214431,\n  14487, 5968, 68537, 109664, 5767, 13490, 63443, 104676, 158014, 10404, 26593, 10161, 140070, 96476, 96798, 10196,\n  7241, 29156, 51314, 97628, 573, 118109, 8622, 3106, 71584, 57894, 84024, 11036, 16921, 66038, 61545, 106441,\n  223566, 16117, 74626, 3336, 40331, 47655, 20982, 117267, 179473, 76397, 121704, 23368, 35081, 186150, 1889, 47653,\n  47926, 33122, 15734, 26894, 140885, 14802, 76951, 41988, 41508, 57629, 16634, 12405, 52104, 20107, 218288, 100668,\n  59180, 73629, 1683, 30932, 42310, 64739, 20003, 6633, 32811, 26700, 39873, 153638, 29048, 2831, 22955, 8961,\n  123517, 244356, 25796, 26746, 102413, 144572, 12002, 20480, 80208, 92037, 145215, 65587, 10104, 70587, 35982, 10208,\n  14746, 188951, 116180, 117036, 12649, 257536, 49699, 32220, 153641, 10918, 10962, 51792, 126022, 13715, 104110, 23594,\n  37965, 15247, 6442, 44822, 113017, 28398, 13830, 44800, 4171, 120616, 5418, 1810, 83, 42459, 4381, 81522,\n  142592, 107242, 4170, 85703, 2809, 7049, 62349, 190193, 6362, 36642, 21195, 33097, 50416, 52066, 84992, 65769,\n  71323, 20902, 52748, 114648, 116894, 25884, 34351, 102634, 260776, 19638, 86892, 17434, 16204, 19854, 106540, 27954,\n  1524, 13745, 42151, 138947, 5760, 153807, 35075, 95356, 30351, 27161, 68708, 53500, 12658, 22077, 63851, 8487,\n  20703, 57740, 44334, 64734, 54403, 39682, 77475, 5602, 36083, 1112, 36181, 71932, 45408, 99180, 206226, 42336,\n  74772, 77663, 25805, 117083, 4946, 39476, 36769, 30289, 14485, 5872, 59638, 72213, 50759, 23451, 882, 2453,\n  111222, 168615, 130208, 48836, 10890, 90002, 55698, 21422, 2195, 35834, 39131, 16781, 167147, 16091, 54925, 18399,\n  92962, 80011, 5820, 4726, 130534, 187899, 869, 40302, 16283, 28616, 86006, 14823, 177256, 25701, 70837, 29786,\n  35016, 19926, 80067, 4711, 15472, 93684, 2584, 58032, 210156, 70971, 75498, 15685, 151187, 60994, 38213, 13471,\n  73922, 9338, 117718, 24543, 117691, 15713, 45967, 200243, 43250, 36553, 35694, 36433, 52051, 152826, 305512, 217989,\n  37392, 40189, 4153, 56219, 24811, 51616, 37703, 87103, 24358, 84298, 167734, 60608, 30830, 95114, 82423, 123075,\n  5775, 16326, 137007, 23746, 818, 184283, 59155, 49161, 21969, 92570, 27322, 24660, 1476, 194447, 116982, 30577,\n  127322, 117428, 1856, 80745, 151783, 5171, 15901, 75451, 58392, 49455, 93446, 42926, 31021, 17030, 17243, 171279,\n  106913, 15354, 115117, 51694, 65215, 88371, 23841, 28644, 89407, 71198, 6973, 57127, 90802, 67682, 21453, 30346,\n  28531, 59792, 72619, 106195, 11690, 597, 21636, 30078, 20234, 8145, 91408, 50011, 95249, 25250, 66246, 24442,\n  44602, 12103, 41001, 105897, 37256, 44489, 85248, 1331, 18707, 29983, 310182, 6411, 11928, 10116, 19299, 122916,\n  5161, 82625, 56098, 136518, 4410, 33338, 119068, 31371, 26571, 52839, 11442, 358, 51903, 115795, 48253, 212226,\n  49768, 72313, 32154, 54738, 22008, 16766, 174325, 98378, 25252, 9732, 16533, 147195, 65780, 41940, 24564, 81099,\n  209499, 21378, 137617, 184321, 68769, 172072, 71325, 81618, 203726, 24974, 21300, 111798, 13249, 30461, 47901, 78074,\n  137363, 96937, 205703, 15259, 48845, 38294, 28061, 109460, 86823, 28722, 44363, 19999, 6658, 142277, 14939, 11150,\n  5674, 45392, 60588, 177764, 31881, 6786, 145293, 13598, 1083, 12784, 3617, 14433, 1823, 25033, 79112, 70251,\n  108676, 88876, 67887, 11458, 34518, 12199, 148504, 65495, 166752, 78027, 54905, 18762, 13791, 20914, 58692, 1568,\n  14287, 15068, 7216, 15244, 91576, 191867, 58273, 3830, 91429, 78507, 84897, 9770, 8665, 7954, 43039, 48860,\n  11529, 61697, 166056, 55960, 26401, 61415, 290831, 12539, 16191, 30889, 13589, 1191, 91972, 41144, 4955, 34048,\n  30964, 87299, 107280, 64425, 5254, 43169, 46627, 18402, 28486, 30816, 67369, 1564, 54697, 41405, 16000, 32524,\n  79613, 30190, 43938, 8057, 66520, 53870, 1494, 247505, 18447, 16053, 29278, 66743, 22870, 25668, 1648, 14080,\n  45203, 1341, 40989, 119871, 194466, 122534, 8385, 58819, 22822, 35970, 12729, 29360, 51703, 27032, 51912, 51956,\n  12278, 36617, 79242, 39507, 76716, 85023, 73180, 18140, 44595, 125017, 191485, 174629, 73455, 77570, 220522, 125113,\n  33546, 90187, 62766, 35279, 12235, 8675, 15151, 50393, 144843, 26013, 205214, 46310, 36154, 69776, 28572, 32563,\n  51247, 38454, 4595, 42074, 11116, 86835, 30706, 10273, 33040, 34204, 54246, 91737, 3180, 77652, 106293, 106121,\n  225753, 62203, 83244, 49829, 60864, 33244, 3262, 132227, 1972, 167168, 175800, 113557, 28469, 1342, 99125, 98666,\n  12891, 8033, 119055, 3277, 28879, 37357, 275688, 62785, 10338, 60445, 97431, 99394, 144157, 1870, 20794, 59985,\n  56294, 1569, 12614, 65686, 353058, 24023, 105292, 40234, 38302, 59113, 20587, 39754, 41447, 7733, 28382, 149537,\n  87532, 70154, 27770, 8584, 110616, 28877, 50839, 33339, 27065, 8349, 41578, 41373, 168438, 10230, 58202, 18179,\n  6557, 87189, 41859, 112308, 1213, 37229, 12748, 127395, 50804, 25519, 6813, 29126, 144643, 51945, 3761, 173270,\n  24817, 37177, 11538, 1953, 2390, 71610, 55025, 12286, 136531, 8290, 7081, 13438, 38174, 12201, 368643, 56955,\n  247513, 86715, 29189, 151151, 16190, 44518, 9116, 26301, 4059, 29547, 121363, 528, 122791, 104758, 128283, 132963,\n  131994, 18283, 17120, 57082, 137430, 286470, 90537, 63450, 39506, 73884, 58318, 16044, 57650, 17259, 42080, 17885,\n  16305, 157015, 93813, 43437, 5188, 134150, 32055, 268669, 54309, 84632, 18425, 114608, 106128, 82465, 25150, 81372,\n  20628, 50827, 203900, 88756, 88071, 113318, 88552, 32344, 67394, 25784, 120662, 65041, 395446, 1313, 179364, 2878,\n  250285, 16496, 42810, 142259, 66176, 14834, 29115, 136061, 91254, 103667, 12871, 26008, 1399, 9634, 6954, 97146,\n  114196, 292674, 65716, 14216, 43915, 106501, 379, 35470, 60230, 24709, 71955, 28003, 44853, 42762, 19842, 9247,\n  27206, 76172, 35445, 42656, 106353, 30864, 56216, 217302, 43013, 490, 12455, 125743, 18733, 112917, 66668, 5890,\n  345105, 38120, 9856, 28648, 226453, 13944, 99130, 54004, 51202, 214051, 47536, 22937, 16607, 40104, 54194, 4979,\n  57106, 15086, 23012, 12071, 117175, 174267, 29878, 59251, 35492, 196132, 120077, 81399, 10476, 19539, 129457, 31908,\n  89598, 42460, 90787, 28424, 127439, 6776, 101077, 81013, 15187, 1074, 58103, 66003, 39624, 68595, 18810, 173127,\n  13688, 6576, 66630, 43484, 61570, 92693, 65418, 85754, 10615, 177935, 31294, 91906, 31111, 386524, 52324, 16388,\n  59370, 52508, 156372, 25357, 6238, 72256, 41599, 57828, 175252, 163986, 132645, 50076, 32143, 95350, 15564, 103443,\n  224492, 75148, 26023, 120071, 41388, 19532, 110427, 22508, 95408, 89126, 17624, 37562, 34384, 9140, 91145, 109567,\n  148238, 18379, 47470, 5638, 78307, 70465, 82451, 53859, 38959, 18925, 14088, 22217, 9340, 26777, 74821, 42124,\n  160091, 16523, 3150, 97181, 61443, 8097, 65561, 68601, 15737, 115420, 25095, 57655, 11216, 70875, 87640, 78471,\n  41244, 28465, 55017, 134190, 170, 58246, 16739, 39956, 38299, 255505, 2797, 2174, 102443, 13841, 69822, 12621,\n  113097, 6991, 123270, 37586, 26382, 47496, 42833, 10023, 14027, 38076, 52804, 80220, 33707, 4788, 3121, 7610,\n  3957, 167985, 5094, 37233, 76300, 62786, 189431, 11488, 66160, 1236, 76849, 5333, 19431, 42643, 23661, 46201,\n  18900, 8417, 18568, 111327, 6952, 44621, 24495, 38741, 1717, 138255, 22782, 46607, 108656, 236097, 24621, 9067,\n  82206, 38888, 253672, 45369, 188021, 74422, 200471, 3792, 257335, 14028, 151249, 5429, 27295, 141619, 22966, 27219,\n  43999, 105930, 97394, 24617, 41210, 3333, 88262, 22024, 31777, 58259, 8812, 91559, 46956, 22151, 60598, 161311,\n  57457, 123650, 86473, 64439, 12657, 10686, 130688, 112742, 11489, 53274, 26714, 21670, 15697, 30443, 104596, 7868,\n  48060, 22775, 3022, 19869, 204748, 16977, 184709, 89313, 53583, 83928, 92875, 99194, 82422, 96190, 2556, 47490,\n  284790, 12772, 5841, 48964, 30503, 33825, 99246, 251304, 137341, 36338, 22912, 3614, 8120, 31432, 14001, 2727,\n  19615, 36074, 75714, 22938, 220311, 52593, 32987, 17971, 15991, 102877, 210170, 136379, 10217, 43348, 155559, 9056,\n  63424, 28650, 29017, 9663, 9808, 49301, 50859, 10641, 67431, 17280, 61331, 20739, 70976, 97391, 58235, 36525,\n  98221, 122956, 57506, 98979, 4491, 86694, 28324, 129, 15177, 9809, 3222, 215310, 28535, 4761, 16001, 1184,\n  144789, 181348, 54083, 88078, 751, 22452, 65081, 1577, 13230, 27685, 98822, 56681, 2394, 90263, 54478, 144599,\n  1504, 78572, 173001, 99606, 33977, 33470, 29437, 39886, 132104, 10699, 34506, 36978, 30316, 13646, 16311, 29262,\n  22230, 50283, 49086, 343445, 931, 13052, 125899, 139325, 97193, 24009, 38257, 76027, 185240, 47587, 137522, 115144,\n  24826, 38532, 19149, 8495, 22687, 75105, 130036, 15268, 174322, 68514, 245144, 17081, 15307, 34585, 208142, 75209,\n  22988, 36011, 65, 2906, 1390, 60888, 44865, 144040, 188745, 118480, 95778, 32437, 180325, 4138, 10609, 92925,\n  29580, 8808, 159680, 42631, 59068, 29860, 171355, 10899, 74903, 33949, 320605, 9425, 18994, 26854, 7737, 53509,\n  29195, 107306, 35880, 21197, 79, 68771, 286937, 4362, 15436, 42681, 71303, 124778, 7622, 25028, 9618, 122572,\n  38462, 11060, 66457, 65269, 11566, 72952, 5073, 71968, 138710, 28743, 12069, 66022, 44828, 82002, 156524, 81292,\n  45774, 14165, 218072, 86389, 37768, 116234, 37323, 222673, 99236, 417011, 6380, 170851, 68137, 22809, 50851, 17147,\n  84083, 118504, 78497, 64504, 19282, 56977, 84684, 68011, 22698, 100149, 2846, 125107, 17134, 46339, 16369, 72262,\n  74807, 15652, 17984, 99115, 126662, 49499, 64245, 224198, 173497, 81277, 63478, 3449, 46248, 2829, 31143, 91485,\n  16938, 9355, 21751, 89231, 119735, 2651, 2158, 25221, 3212, 1095, 134321, 26633, 28292, 72271, 10874, 18895,\n  213652, 343495, 36158, 6930, 49013, 9714, 53844, 16595, 9975, 99720, 38334, 23140, 32180, 298162, 284394, 20189,\n  45660, 51804, 12038, 74719, 86250, 44131, 68813, 48629, 4801, 41574, 219878, 76411, 68788, 91859, 17071, 199893,\n  95490, 13890, 126132, 21590, 77482, 5070, 117208, 183553, 113751, 775, 118421, 47980, 11994, 16510, 60560, 22757,\n  44624, 41900, 22489, 161977, 94452, 40768, 256639, 97607, 46839, 15049, 48016, 183793, 128497, 40127, 59466, 43034,\n  100316, 61744, 20099, 72276, 5798, 4254, 61106, 151277, 58588, 78938, 208785, 23350, 73184, 13401, 114456, 168253,\n  202987, 128773, 32481, 9314, 65417, 80566, 15061, 20781, 37790, 80269, 18985, 16154, 88524, 11484, 16349, 5922,\n  1606, 101590, 83867, 4032, 43156, 17265, 40946, 123245, 97964, 46724, 2142, 201438, 105717, 55537, 40251, 107387,\n  34947, 130879, 26300, 2025, 11203, 27400, 9384, 6700, 100060, 93137, 120697, 32781, 37742, 97514, 147819, 50972,\n  130074, 43696, 152282, 11325, 93653, 25846, 60051, 100451, 107799, 99294, 5187, 187837, 94311, 19648, 17481, 47149,\n  196106, 2484, 185532, 68892, 41347, 6476, 26576, 262, 8035, 144425, 16194, 7546, 10780, 99032, 192083, 18268,\n  16390, 38046, 139599, 36447, 27883, 48800, 8802, 104301, 118236, 16610, 9043, 30215, 167395, 15722, 14540, 10143,\n  1979, 18303, 245965, 6606, 25006, 56388, 720, 40122, 19375, 26986, 4175, 5283, 31628, 70617, 156858, 13338,\n  18916, 50924, 158448, 13314, 144723, 40846, 148751, 33355, 78502, 66354, 52938, 44935, 114047, 29390, 83010, 31740,\n  103107, 187158, 28282, 6840, 86492, 173457, 46403, 22614, 107686, 143217, 20089, 170121, 5844, 9860, 56485, 104630,\n  20934, 42133, 9301, 19064, 206963, 93906, 29729, 27462, 23556, 248023, 29615, 24218, 22591, 27525, 19222, 62444,\n  16562, 40084, 90324, 40232, 146333, 178921, 45549, 11142, 20167, 301568, 34164, 125423, 10471, 17862, 4749, 774,\n  117434, 30213, 12597, 85041, 33085, 58865, 17338, 4578, 2863, 16515, 49743, 2267, 9740, 64838, 32867, 305033,\n  36669, 34833, 20474, 42789, 41849, 24106, 210964, 124297, 37271, 24216, 53900, 123495, 22790, 8477, 175065, 22886,\n  18209, 95189, 3313, 32543, 28979, 29761, 127609, 71172, 8231, 87016, 63834, 20159, 12952, 70904, 466787, 101605,\n  54408, 2160, 17597, 57212, 21731, 165012, 21316, 33552, 25130, 56209, 46615, 46375, 45208, 106318, 31681, 64073,\n  55748, 7104, 76381, 85964, 138120, 4075, 21570, 28070, 75826, 73539, 7912, 79024, 414, 177899, 313993, 67507,\n  29593, 5743, 4806, 12800, 9925, 25560, 9189, 117626, 292865, 50234, 102480, 16382, 25999, 50641, 18440, 9929,\n  683, 55242, 2340, 1064, 123149, 61826, 15245, 38280, 7036, 24794, 44030, 43924, 92159, 34247, 66141, 23809,\n  86055, 215911, 128281, 150909, 61827, 53182, 142185, 14010, 103680, 51751, 108481, 22354, 23176, 13327, 14346, 152541,\n  54918, 99104, 95228, 63611, 58466, 81038, 32483, 69723, 57578, 44054, 189180, 149427, 13305, 19749, 43628, 89334,\n  5709, 43087, 18148, 4104, 86479, 50105, 64469, 20382, 16697, 4708, 14117, 130911, 31064, 73543, 33459, 45627,\n  17660, 15860, 57462, 86199, 200919, 78755, 79677, 80038, 10770, 87019, 8576, 17552, 49793, 46030, 21495, 35725,\n  33423, 27589, 152364, 6318, 32370, 142933, 34912, 78214, 52047, 54699, 36052, 229203, 16488, 20327, 25789, 14697,\n  62555, 29116, 9656, 6836, 6459, 16067, 47438, 81922, 8426, 32236, 21951, 67133, 83493, 104694, 49662, 4774,\n  7763, 74850, 270584, 335979, 59725, 82959, 82821, 18110, 82812, 14354, 2193, 9843, 18628, 69780, 24991, 112338,\n  67760, 191557, 92348, 79071, 79405, 72842, 11351, 56088, 68557, 139675, 23222, 148134, 9612, 12610, 21344, 25747,\n  7673, 584, 17873, 39734, 28102, 18328, 10063, 14720, 56517, 1902, 69798, 38307, 69620, 33351, 1174, 19948,\n  171797, 67288, 84834, 16123, 32458, 25946, 172250, 8199, 29541, 28207, 15618, 8731, 15870, 23596, 47369, 57922,\n  81109, 26904, 26073, 8326, 32080, 57471, 44892, 162057, 207644, 334076, 10101, 4119, 71495, 49601, 2592, 19742,\n  21202, 14849, 98354, 61825, 11039, 158223, 75426, 119901, 91036, 68746, 116495, 8557, 61230, 102302, 14765, 75658,\n  2810, 4942, 28526, 36256, 130800, 67752, 202742, 33081, 32260, 193926, 185696, 4064, 4613, 295863, 166466, 13260,\n  60590, 1252, 145391, 2657, 37112, 87184, 227365, 8194, 75214, 88155, 115530, 90924, 33979, 90533, 27556, 51339,\n  126402, 49225, 196178, 34452, 155062, 4813, 17478, 33954, 30642, 120974, 35852, 38833, 63875, 31380, 62028, 58381,\n  12810, 7419, 98274, 1977, 194463, 145760, 23510, 116833, 82799, 19072, 2433, 145655, 47664, 4834, 69147, 46751,\n  16725, 33328, 38665, 115531, 36685, 76090, 11537, 18743, 43367, 17948, 23978, 41370, 61099, 40095, 66518, 999,\n  449, 217319, 6688, 250897, 172150, 20516, 11330, 20451, 102867, 21452, 159960, 15660, 21691, 82391, 6601, 43312,\n  301838, 29124, 21637, 110211, 36745, 105335, 60833, 98115, 7130, 2470, 75962, 2011, 18671, 50489, 79569, 101266,\n  57316, 81095, 53258, 13308, 34852, 17013, 84541, 47478, 38034, 23762, 162120, 178016, 54182, 33123, 52028, 72197,\n  35578, 4602, 243630, 88186, 65900, 67107, 5029, 138288, 99486, 1235, 6540, 165347, 19771, 47835, 318100, 22891,\n  3456, 21803, 91103, 57561, 2658, 54417, 30476, 7012, 16914, 55333, 21913, 180607, 99866, 184639, 7485, 8405,\n  28390, 37172, 89244, 53674, 28109, 98360, 69082, 3525, 8262, 79773, 254797, 87253, 21147, 105791, 15807, 58442,\n  34353, 98558, 30931, 80675, 20006, 3002, 81642, 11376, 4228, 91457, 8547, 21430, 137085, 33238, 42307, 3087,\n  1675, 66687, 47814, 34117, 203023, 131032, 24008, 5970, 283196, 124604, 83088, 60714, 198286, 26339, 5149, 82518,\n  214375, 8762, 21409, 25932, 163329, 13237, 37495, 3608, 290603, 72236, 1508, 11575, 152574, 55633, 156361, 32414,\n  40471, 48043, 3556, 2415, 83506, 9556, 79122, 233954, 30068, 33325, 6305, 159939, 14730, 53878, 89577, 30054,\n  23177, 41063, 32980, 17345, 131539, 217504, 35311, 15300, 34759, 144987, 54877, 46496, 27668, 5784, 24491, 1354,\n  32178, 129844, 14953, 7360, 71896, 107476, 206892, 65803, 104799, 60213, 3795, 77961, 116305, 72186, 184835, 52495,\n  85430, 98086, 108950, 22959, 119262, 214032, 33931, 102185, 42860, 161725, 32444, 24541, 25160, 41398, 6650, 202950,\n  8911, 27523, 50156, 13935, 23428, 255875, 23753, 49759, 49437, 771, 101855, 224178, 105322, 141973, 32780, 5494,\n  6519, 83915, 103464, 195927, 16203, 18899, 2849, 150029, 6349, 3289, 4814, 219, 74711, 59509, 333, 40550,\n  1230, 49476, 28787, 6325, 38045, 10647, 173625, 26321, 8540, 19101, 23643, 21796, 75165, 98886, 256858, 8390,\n  44736, 107620, 67566, 91614, 25909, 54320, 31937, 195737, 51026, 52019, 46128, 10676, 317034, 7784, 41102, 123264,\n  4984, 106475, 31610, 19260, 32281, 83653, 4280, 61891, 91312, 19136, 38931, 76940, 27060, 33501, 126832, 48333,\n  44431, 81276, 41771, 130533, 17817, 6320, 38313, 928, 45363, 59120, 177473, 41182, 155937, 135020, 126653, 32047,\n  239085, 115649, 82912, 3416, 35697, 345331, 53591, 16649, 59784, 39055, 46432, 28477, 91993, 8200, 97534, 6307,\n  29531, 9129, 30788, 89098, 126740, 20671, 133582, 65905, 213757, 1632, 18153, 20878, 76560, 55987, 68969, 1600,\n  167776, 51365, 34575, 216355, 285273, 37934, 49689, 21386, 24262, 69390, 24454, 75939, 8237, 18742, 88250, 165234,\n  65030, 85487, 44653, 10365, 41160, 2784, 164637, 7275, 74437, 817, 5045, 54742, 48804, 217409, 12001, 99489,\n  118916, 8909, 10151, 74282, 13159, 165410, 3506, 39017, 37842, 24440, 5032, 93366, 1031, 93948, 42413, 34930,\n  75349, 36125, 57529, 29308, 1478, 45294, 1328, 29873, 11655, 72323, 80218, 16686, 108777, 112357, 19468, 161527,\n  23435, 67822, 30370, 4433, 277425, 199425, 1173, 8369, 101734, 76516, 110263, 4965, 67469, 27648, 64330, 158915,\n  70231, 148349, 33642, 19100, 124711, 6240, 206630, 5766, 43532, 60290, 1618, 11261, 28514, 49764, 75380, 44379,\n  65526, 33015, 1566, 161773, 54956, 37344, 69904, 6421, 1000, 17254, 11877, 7155, 21882, 13912, 9792, 134,\n  17728, 212180, 90771, 66606, 25302, 43754, 11818, 134151, 40952, 12919, 28325, 57470, 52214, 30361, 5898, 7913,\n  149632, 18095, 212017, 195480, 1999, 139, 84069, 3822, 2111, 116190, 22381, 104936, 3259, 19369, 7470, 4564,\n  63362, 84396, 244911, 82844, 89961, 73711, 23902, 88689, 220561, 81148, 100516, 124589, 39777, 153793, 37780, 13806,\n  26335, 4176, 56333, 280949, 9063, 9260, 69363, 258594, 10572, 107880, 12115, 33299, 12416, 68082, 27837, 184178,\n  34551, 83293, 68854, 109274, 34623, 9210, 18491, 59555, 38604, 267, 8192, 6400, 24723, 29696, 82525, 68604,\n  5947, 72996, 15729, 703, 15588, 23700, 2015, 100398, 69927, 427, 20207, 148402, 66252, 2099, 146853, 12510,\n  119177, 37939, 48402, 172082, 69173, 242876, 15286, 133076, 46629, 9996, 20910, 33571, 28714, 132255, 11444, 47791,\n  70715, 103704, 9226, 28482, 212408, 75092, 6197, 29216, 20521, 24, 52569, 5853, 406913, 21243, 31218, 77868,\n  74380, 146453, 7607, 72181, 11716, 15373, 26582, 8123, 50659, 30590, 227825, 66454, 50862, 49529, 80294, 15517,\n  37009, 35230, 69063, 80260, 88460, 38472, 63246, 37205, 130101, 137671, 14972, 60171, 7210, 90428, 50245, 64301,\n  53853, 21012, 116299, 19943, 538, 102919, 143609, 50795, 65120, 122155, 20760, 41285, 151950, 28489, 62634, 48588,\n  55806, 151533, 4795, 3053, 163748, 44956, 565, 152058, 52837, 23981, 76468, 97083, 13153, 60576, 2112, 50486,\n  21100, 377, 192917, 29902, 16674, 14359, 42767, 170627, 64536, 35897, 66424, 6902, 6091, 127107, 4355, 121366,\n  138201, 65773, 66108, 41998, 44837, 63222, 69586, 36291, 58547, 23085, 14181, 135294, 3723, 40961, 35006, 126987,\n  163, 9211, 49788, 117861, 2177, 37726, 91665, 22613, 32288, 24902, 24789, 76868, 85454, 74752, 103374, 11683,\n  34033, 48129, 1456, 23503, 8497, 70596, 92766, 70637, 14282, 304999, 76392, 9980, 25742, 4216, 140344, 193566,\n  10535, 16591, 137916, 20347, 10741, 5439, 17749, 74636, 79559, 244434, 10353, 2254, 117493, 6879, 36582, 273890,\n  243787, 15483, 5037, 43308, 49337, 29065, 64416, 85528, 100718, 19024, 222754, 60476, 79495, 44751, 64434, 4020,\n  40139, 30091, 121039, 83627, 42956, 12277, 115688, 38864, 7551, 37316, 31576, 348, 55433, 10897, 8383, 89713,\n  15421, 4329, 42444, 12217, 31509, 48867, 30445, 38228, 23034, 8090, 37931, 30345, 45081, 21129, 36808, 88429,\n  547, 39635, 34098, 148415, 61176, 52774, 24919, 16366, 53434, 13434, 146264, 79719, 328001, 5483, 62687, 73315,\n  8470, 79268, 19141, 72096, 36263, 44493, 236350, 267628, 30145, 211091, 25890, 14437, 4519, 17070, 79714, 73443,\n  74173, 53239, 98936, 72193, 53935, 17849, 592, 6437, 11845, 802, 96206, 13472, 73774, 36519, 15404, 33551,\n  60211, 17322, 196495, 29339, 78025, 276332, 54124, 171051, 3, 52430, 53849, 77154, 4102, 16020, 8709, 109741,\n  73782, 54762, 26431, 7665, 109293, 2201, 111613, 5780, 315332, 245103, 65577, 66474, 48412, 162153, 10534, 61430,\n  26683, 61829, 32733, 13780, 13714, 81304, 58398, 119619, 6865, 107753, 132039, 172363, 20128, 121666, 235595, 131904,\n  18490, 178167, 57539, 35059, 104141, 15949, 75689, 5299, 325, 57947, 48755, 8362, 39470, 20406, 30082, 13818,\n  171970, 31118, 19942, 97627, 115860, 172133, 40888, 75047, 15707, 107467, 49758, 2751, 7268, 102546, 139896, 5441,\n  73301, 107048, 22686, 65676, 74336, 38585, 54155, 188892, 31370, 24110, 165124, 94512, 2368, 74483, 9470, 16357,\n  111827, 4043, 96403, 170548, 107757, 169476, 28693, 28709, 136231, 117890, 11783, 151383, 142844, 158445, 124615, 108842,\n  97138, 165759, 118091, 170718, 96638, 151535, 50875, 26742, 84053, 96653, 22587, 72385, 38691, 81135, 2787, 15019,\n  23801, 14048, 175978, 40360, 1588, 63401, 3408, 17858, 10573, 129113, 76021, 1698, 122098, 41563, 91014, 29385,\n  77039, 205898, 31782, 66049, 240, 30201, 29388, 36852, 186135, 119600, 62862, 71976, 146101, 66513, 162780, 57466,\n  11996, 13198, 214801, 18524, 18143, 9123, 160460, 15278, 112963, 50571, 55357, 30128, 46171, 94183, 55715, 34086,\n  155836, 66742, 311911, 22315, 348769, 10015, 161530, 38573, 47795, 32056, 23574, 5351, 121213, 7806, 95295, 21922,\n  116266, 57531, 199257, 102740, 132515, 64909, 90793, 50599, 3344, 13994, 153769, 111152, 144804, 6819, 219255, 121782,\n  31286, 2640, 54412, 62437, 99187, 80216, 98506, 1973, 255838, 88342, 73727, 16363, 129694, 9582, 119806, 25823,\n  35894, 95168, 13820, 13961, 48779, 36969, 6826, 36122, 55235, 97975, 132524, 23098, 148582, 4514, 57373, 77831,\n  71967, 9045, 37633, 44748, 65282, 84429, 23687, 7236, 15174, 64021, 45128, 22679, 13920, 80494, 17542, 17632,\n  47080, 10822, 58383, 72334, 6147, 18237, 59831, 194844, 108242, 19788, 180510, 100731, 157593, 30326, 279827, 55366,\n  125025, 15314, 11547, 48137, 7136, 21272, 48386, 58395, 1286, 9368, 30466, 43535, 28957, 219088, 24784, 30339,\n  127956, 154838, 51263, 15865, 28402, 41075, 56222, 63661, 98813, 65963, 4997, 12583, 20805, 75481, 56536, 95023,\n  7532, 156833, 60839, 127105, 109417, 17040, 15236, 207517, 40610, 22003, 924, 154828, 5041, 3149, 61584, 15751,\n  32958, 30934, 164321, 30734, 15142, 101107, 30660, 103621, 18408, 12233, 98156, 98027, 108596, 11650, 55792, 146477,\n  33543, 50057, 68000, 98194, 50517, 22325, 104336, 17124, 27748, 70931, 26858, 118550, 80114, 17779, 47640, 40187,\n  233434, 205828, 163803, 9522, 91447, 45870, 85576, 87308, 487, 32686, 244627, 45444, 37094, 10371, 30263, 37708,\n  100048, 61011, 174186, 98247, 30541, 198823, 425277, 43101, 43477, 177323, 58960, 83354, 10639, 14794, 48614, 76723,\n  89862, 7677, 6456, 663, 155868, 17446, 160748, 3648, 37667, 44426, 160030, 75580, 8726, 48941, 203882, 126698,\n  60684, 139753, 22714, 49200, 237903, 165483, 83252, 25239, 73408, 26534, 38895, 18906, 99589, 26437, 80391, 31962,\n  12190, 496, 115352, 1660, 38739, 25624, 25196, 314328, 97348, 164824, 64001, 40502, 3914, 11141, 3746, 80143,\n  13594, 164955, 149665, 13939, 2680, 66054, 20584, 29040, 149016, 20350, 30753, 3677, 13907, 48796, 31858, 191904,\n  30171, 5370, 40086, 3400, 28343, 12830, 135213, 25267, 23530, 168908, 4125, 25811, 115225, 31603, 26072, 36166,\n  61104, 83325, 117213, 11935, 35821, 85360, 2192, 24751, 147679, 4560, 76850, 115369, 14337, 33806, 25191, 101567,\n  4297, 2681, 88848, 31912, 244282, 37953, 201, 50311, 24085, 34402, 47251, 10729, 326976, 52264, 7804, 24341,\n  56428, 30572, 45401, 26493, 7851, 42287, 88129, 15527, 21303, 2927, 54360, 26880, 131620, 27105, 560415, 199310,\n  71446, 41999, 39217, 105002, 83253, 83065, 24673, 2975, 68692, 62597, 80790, 14068, 111870, 19347, 24015, 20919,\n  5224, 78599, 21870, 186584, 15813, 2869, 29987, 2229, 38197, 107855, 17170, 8632, 49026, 43883, 59246, 115190,\n  45057, 33719, 56476, 34016, 13660, 4646, 58901, 85953, 3306, 180651, 187566, 98029, 76345, 77891, 987, 5156,\n  40671, 55385, 6206, 26225, 27905, 8848, 109863, 213205, 91072, 48382, 18078, 2792, 996, 28414, 213905, 5931,\n  68527, 112270, 20314, 69524, 62085, 20144, 88213, 73577, 91351, 41869, 10074, 4599, 122634, 53272, 97538, 11166,\n  55109, 35551, 37066, 49101, 168209, 72102, 82064, 21549, 2024, 9446, 465, 39252, 27560, 116621, 45956, 29498,\n  112707, 228850, 6346, 6775, 17352, 61942, 42228, 65657, 8306, 101094, 17714, 124595, 167115, 53195, 69704, 69894,\n  169921, 90173, 145431, 10207, 166958, 58767, 73284, 73047, 5031, 13824, 73684, 160378, 46020, 98056, 31999, 14582,\n  11844, 8113, 397, 4778, 67284, 141101, 53616, 155244, 19130, 25923, 170625, 42980, 76185, 10190, 22410, 161443,\n  6920, 90784, 3737, 114515, 32849, 78448, 37681, 43864, 5450, 79795, 35899, 56126, 14610, 23922, 5420, 21396,\n  22451, 72777, 14065, 9126, 21002, 52416, 92088, 1118, 17392, 26827, 105671, 77612, 31872, 56056, 132315, 124658,\n  66682, 14163, 4889, 103995, 84796, 16665, 66442, 3877, 13709, 21423, 164865, 200571, 40210, 92532, 13583, 53632,\n  59898, 24828, 103097, 34087, 12029, 98561, 693, 181750, 8719, 55652, 72459, 64857, 53564, 30839, 32498, 14036,\n  21462, 17046, 22523, 14381, 91884, 124941, 10727, 52730, 21647, 30000, 89146, 127984, 88379, 88232, 34226, 35579,\n  194428, 38436, 60128, 81429, 12754, 39305, 70531, 1282, 37797, 8724, 135076, 130745, 132826, 35826, 139941, 21253,\n  160016, 52919, 35823, 9597, 22567, 65729, 24463, 1528, 54383, 74937, 66907, 66449, 53186, 30489, 4666, 11722,\n  77611, 109886, 5707, 100503, 31107, 178087, 63909, 42663, 8339, 41648, 8005, 13790, 4694, 67663, 118773, 48261,\n  19185, 50745, 116520, 7658, 90355, 49068, 180, 69370, 23597, 3425, 108805, 81173, 17222, 9136, 45975, 93798,\n  140675, 20433, 37301, 145028, 28442, 25919, 19397, 66698, 23668, 7495, 6626, 1272, 55977, 23033, 63440, 185173,\n  9128, 176386, 222575, 17347, 61555, 20002, 35331, 148015, 28774, 22224, 32101, 95270, 155229, 119206, 28922, 125370,\n  17658, 61847, 307477, 5300, 9390, 116888, 3866, 54029, 24379, 64983, 6059, 113961, 69357, 18619, 44315, 7700,\n  15752, 90871, 72844, 35312, 127381, 68250, 248737, 128932, 239631, 59079, 34253, 144975, 62460, 30364, 34513, 135745,\n  93181, 50304, 215982, 80359, 55913, 6568, 31706, 56971, 45133, 253285, 65598, 43884, 140155, 103385, 51233, 124409,\n  18676, 15537, 161665, 3137, 25249, 53067, 54148, 94047, 33164, 89524, 31906, 32711, 29581, 75647, 98053, 70783,\n  82837, 31002, 153684, 118904, 67223, 110578, 329466, 139791, 22362, 2416, 53013, 8222, 29975, 285682, 15525, 40047,\n  7317, 13949, 37038, 37506, 52813, 5084, 19535, 108360, 1943, 92833, 2683, 39660, 29613, 47826, 43960, 34705,\n  20012, 41780, 29619, 22730, 207130, 29242, 83810, 88401, 49617, 41631, 13484, 27193, 49651, 48220, 16919, 66661,\n  5636, 12779, 78449, 38764, 15334, 19403, 26257, 42121, 36313, 84036, 57343, 3445, 29226, 117117, 1835, 68598,\n  28084, 20588, 21723, 125697, 95247, 24456, 23959, 82657, 72072, 191527, 20720, 69714, 19000, 159615, 178013, 30853,\n  224932, 9741, 2949, 53392, 15811, 65040, 40817, 91887, 114, 34555, 104656, 35360, 32127, 29705, 5951, 48069,\n  38097, 8656, 40672, 7670, 37508, 58545, 33267, 101625, 88507, 8002, 107670, 43585, 37225, 107303, 21839, 889,\n  27359, 44829, 8538, 29418, 91626, 112730, 12807, 6084, 12193, 229, 49391, 10635, 69279, 134886, 35206, 15904,\n  20608, 57877, 82079, 26098, 11055, 91058, 20546, 8467, 88156, 225150, 50824, 258547, 92808, 13614, 10159, 28825,\n  2152, 16714, 38468, 40965, 57259, 46500, 133547, 3619, 55275, 36301, 8395, 62581, 72789, 88910, 30763, 61787,\n  24475, 34843, 39477, 127755, 104414, 59623, 65515, 98667, 1708, 34899, 29620, 271962, 9882, 16411, 164317, 42920,\n  3818, 33307, 30124, 3990, 48661, 154034, 37142, 8914, 66897, 91285, 266, 18859, 1631, 20187, 18104, 18347,\n  34806, 41381, 28001, 36157, 227930, 227438, 205318, 151106, 85815, 19169, 188069, 52621, 87753, 7676, 18539, 52732,\n  18321, 344197, 32336, 25286, 250664, 72376, 6599, 95500, 72733, 207728, 65258, 4923, 25107, 38173, 18852, 277661,\n  206797, 10280, 68706, 18443, 50891, 10099, 26038, 10350, 8082, 230418, 91468, 2822, 196411, 40589, 33553, 83569,\n  92596, 11998, 44307, 17424, 96764, 12849, 152582, 141574, 152823, 25400, 29806, 23815, 65514, 99567, 54295, 22450,\n  22819, 8254, 3779, 78344, 387277, 116301, 84235, 146179, 62176, 111891, 75668, 115049, 51225, 54668, 119070, 90975,\n  40329, 139109, 42305, 58482, 15563, 96039, 231261, 608, 189, 79423, 116781, 399767, 3659, 221564, 150552, 66005,\n  73670, 75682, 162148, 83033, 64357, 106094, 73326, 218725, 51793, 156164, 11491, 97189, 275136, 36754, 71371, 10881,\n  33482, 5754, 4091, 21520, 86653, 55930, 27813, 23947, 74615, 44269, 3897, 24643, 67058, 22281, 108426, 85853,\n  11318, 7545, 54923, 305706, 125720, 61497, 47223, 139282, 15388, 174552, 34639, 16339, 22388, 14264, 74736, 41059,\n  8267, 136640, 7760, 45714, 1730, 8753, 1553, 19445, 102663, 112491, 8628, 51162, 170910, 24623, 47654, 50695,\n  40784, 36170, 18125, 20583, 7144, 155439, 2288, 9897, 85373, 25015, 92695, 127810, 13040, 72704, 125096, 5883,\n  7088, 2125, 51383, 31073, 94309, 21302, 31925, 6461, 583, 47582, 18007, 56348, 44224, 929, 3859, 152766,\n  140424, 28867, 217612, 69471, 77439, 20336, 147072, 7793, 18496, 41996, 9932, 226194, 164026, 97199, 21473, 8913,\n  36578, 370703, 232366, 40298, 4722, 21848, 30276, 32613, 9151, 13631, 19868, 1123, 5824, 133353, 58605, 148488,\n  63365, 98514, 162970, 68898, 26510, 4366, 150983, 23673, 35199, 75476, 53507, 214063, 40500, 35220, 45220, 83826,\n  79277, 94220, 130368, 10107, 32495, 103453, 274743, 4302, 44614, 2713, 157, 20394, 35233, 20579, 45213, 30353,\n  9566, 163051, 42976, 78372, 203293, 8456, 26004, 25226, 152144, 18362, 25622, 32068, 7097, 9764, 19804, 105586,\n  2330, 79661, 38440, 45558, 183480, 5445, 30623, 15936, 98629, 31188, 21742, 11320, 13423, 50238, 196800, 61702,\n  330887, 6907, 165378, 29192, 44130, 36247, 125815, 76135, 68600, 3478, 102912, 38948, 30939, 32718, 115597, 14759,\n  97829, 178650, 6398, 96989, 31012, 80346, 29170, 167665, 345465, 32639, 105679, 182158, 56747, 62826, 5573, 31888,\n  94879, 251468, 82742, 74122, 4939, 105988, 50230, 43427, 160027, 68618, 115561, 16419, 149761, 8457, 34061, 57375,\n  99423, 60632, 123694, 18569, 46099, 3392, 96711, 126188, 32251, 264812, 49338, 132633, 15332, 90783, 67149, 64854,\n  8761, 62393, 76418, 81682, 96094, 50655, 103271, 39486, 128555, 50988, 205607, 4238, 5763, 202341, 1257, 225585,\n  235318, 53879, 36434, 4671, 222223, 22096, 143525, 96909, 55729, 20281, 64025, 133074, 30241, 79441, 19012, 18415,\n  55420, 135097, 144146, 48331, 201746, 72776, 317545, 66575, 3987, 123583, 63087, 50450, 81382, 173, 71558, 23663,\n  8259, 7334, 32703, 83813, 49325, 14244, 94476, 64667, 23287, 26116, 23310, 52112, 7719, 44701, 18954, 2509,\n  24633, 12226, 87574, 88717, 251100, 14491, 4274, 63011, 92311, 24796, 10214, 29179, 18591, 35862, 3752, 140316,\n  110533, 16614, 111729, 140400, 64759, 105653, 88014, 99594, 170260, 100542, 4164, 21095, 393860, 1570, 11733, 2292,\n  7175, 53291, 7019, 12084, 21144, 53309, 55975, 40606, 132887, 54500, 21593, 18556, 3593, 69, 28773, 8032,\n  75346, 68243, 36013, 38871, 101277, 105666, 51660, 13332, 91109, 139335, 73372, 29329, 16387, 148050, 129561, 74071,\n  259187, 18882, 26921, 62561, 11627, 44409, 155193, 111945, 57459, 200411, 28094, 21626, 173829, 42067, 142855, 22469,\n  44694, 41492, 188424, 1317, 55780, 178410, 31665, 32476, 49797, 50096, 133424, 54045, 89192, 278490, 20313, 169877,\n  120443, 901, 6058, 24102, 62622, 149284, 65967, 57346, 3904, 11937, 41372, 17994, 14814, 66911, 235601, 80170,\n  23887, 4818, 145255, 128004, 1027, 25782, 724, 207408, 112258, 39194, 29870, 74011, 64955, 219934, 119689, 118077,\n  99800, 207128, 83883, 66658, 11132, 62891, 83085, 25216, 66353, 9815, 11198, 16652, 36202, 13812, 128388, 227653,\n  48624, 40080, 23190, 29953, 18158, 102077, 62237, 3854, 88481, 9533, 51501, 68427, 96882, 27608, 35856, 58154,\n  43059, 186515, 64641, 36774, 11040, 20138, 41376, 37623, 2455, 47929, 25769, 20233, 7077, 19150, 180387, 26425,\n  21651, 71540, 74198, 49630, 181159, 39337, 47603, 10453, 99126, 357301, 22413, 127961, 100434, 22332, 3856, 103557,\n  61388, 149292, 137919, 5062, 68186, 8654, 8282, 23829, 19161, 9891, 41737, 115440, 110468, 4212, 22815, 35452,\n  120052, 148515, 40823, 61325, 8819, 4354, 51789, 12976, 55324, 24368, 77300, 8725, 41494, 7736, 73140, 57163,\n  7014, 42056, 13817, 48686, 37689, 9578, 13571, 104584, 3618, 3981, 2615, 22449, 87729, 68084, 20425, 146810,\n  92615, 53907, 63016, 17337, 207943, 48593, 10105, 121091, 9823, 47400, 75309, 56784, 128657, 106634, 43561, 70981,\n  12587, 51472, 92150, 54178, 15857, 121204, 6055, 42142, 6379, 144024, 8486, 145642, 67628, 94025, 8294, 117913,\n  51216, 150314, 153347, 1042, 71775, 2265, 3224, 68227, 157617, 10548, 144881, 33324, 63244, 38654, 28271, 8525,\n  1503, 958, 5778, 53723, 3864, 58302, 39847, 53240, 218754, 39512, 6285, 19507, 110864, 63755, 37263, 11172,\n  5769, 8998, 16662, 20146, 21492, 50772, 13346, 118643, 7243, 7129, 118273, 175534, 1192, 22122, 76882, 43114,\n  87921, 153196, 45106, 138465, 85529, 3075, 30600, 13487, 31512, 11916, 22411, 68282, 18537, 64660, 19916, 149911,\n  42698, 4415, 22126, 52393, 35350, 288666, 27537, 97849, 73510, 52941, 15929, 294, 84474, 45720, 39658, 4675,\n  34301, 453, 57231, 29931, 8991, 192137, 112683, 33353, 21013, 82429, 32028, 9768, 35034, 2225, 27949, 96606,\n  566, 33483, 30858, 67296, 38832, 15545, 58085, 23327, 19838, 45987, 38289, 25368, 35586, 107553, 62141, 38448,\n  37216, 107939, 32602, 87203, 39413, 653, 178536, 85622, 55006, 18371, 38085, 25177, 12178, 39794, 54315, 242178,\n  59742, 149144, 10766, 127632, 856, 10442, 37459, 12213, 84563, 16802, 59641, 26529, 6900, 63962, 37381, 10736,\n  25632, 95267, 29099, 16636, 17437, 23052, 153874, 11429, 49786, 45113, 58163, 65817, 30723, 19440, 8273, 176150,\n  13847, 87151, 4967, 13744, 70845, 25959, 93062, 22114, 4044, 73295, 41922, 20005, 7843, 56037, 104704, 125857,\n  23944, 178063, 113180, 671, 235976, 152556, 97222, 136235, 55530, 17906, 85124, 11074, 48942, 10651, 199, 27527,\n  6518, 91832, 29772, 61127, 20939, 1458, 24121, 44597, 73769, 4219, 49564, 15715, 192653, 166296, 109313, 43836,\n  52936, 33537, 1148, 25047, 95207, 270590, 56882, 97809, 23895, 31177, 26762, 3184, 132542, 49663, 59748, 3068,\n  142982, 88469, 25870, 43552, 22632, 51664, 23936, 32111, 87452, 107086, 104873, 11521, 48042, 93260, 56685, 20765,\n  54018, 59944, 11341, 144539, 178468, 24105, 32314, 35295, 10728, 11236, 29477, 35284, 26230, 226, 165790, 42461,\n  23559, 117007, 118411, 290079, 363, 78533, 53121, 31307, 81269, 1905, 16159, 14155, 142012, 33360, 14799, 52790,\n  5718, 161126, 136815, 27111, 346258, 23627, 343, 945, 31456, 9607, 277463, 25540, 84333, 314287, 2083, 110065,\n  246476, 16799, 92713, 55883, 51018, 19760, 17707, 24992, 66692, 259273, 23704, 9218, 101804, 59562, 16967, 86612,\n  120570, 10762, 23969, 43849, 39962, 166523, 272460, 8995, 30373, 16246, 141683, 23812, 70593, 83230, 21943, 323413,\n  2864, 2355, 100471, 19429, 60541, 82374, 42741, 35603, 19425, 290629, 43248, 33804, 54209, 7864, 21420, 71753,\n  104092, 2325, 5902, 24070, 7201, 62951, 120053, 14462, 31545, 99914, 13564, 113310, 48018, 103024, 129706, 25209,\n  25865, 23609, 5945, 17372, 15442, 45351, 49273, 3849, 46257, 44296, 17650, 6, 40443, 52796, 50158, 89987,\n  8328, 144410, 81530, 54477, 6451, 36594, 86466, 8893, 111782, 198927, 159705, 4360, 47527, 36893, 117496, 37320,\n  97754, 50697, 10204, 162372, 33046, 29631, 95221, 7160, 470, 118627, 17716, 97731, 245116, 237362, 49912, 10078,\n  31095, 22842, 98784, 60332, 39, 19235, 8973, 120765, 91934, 111045, 58972, 128887, 87208, 67602, 46022, 29104,\n  73470, 5539, 281467, 182667, 36708, 176270, 59432, 31026, 36521, 1009, 33426, 52275, 12801, 73675, 38019, 38883,\n  70624, 9854, 44370, 2164, 36272, 3412, 81053, 50116, 8892, 86510, 11513, 257297, 79768, 14274, 40531, 33581,\n  12427, 106809, 39327, 15343, 55454, 3699, 118114, 30358, 103756, 3575, 184159, 130664, 5908, 82458, 120759, 58923,\n  52390, 273629, 62193, 75485, 62962, 34707, 223853, 87062, 22720, 170728, 85085, 23937, 141138, 3062, 19956, 33198,\n  94634, 43295, 14025, 57761, 41689, 20778, 135679, 19997, 128402, 22478, 95668, 1172, 126390, 47383, 9006, 96799,\n  6628, 94152, 175749, 12095, 106394, 149169, 112174, 23774, 35527, 95733, 7587, 79649, 134394, 37602, 25349, 151895,\n  82727, 41687, 20559, 85846, 254651, 19160, 594, 147220, 194502, 40954, 17422, 66352, 148064, 13518, 9302, 36919,\n  89549, 90619, 13212, 61499, 3202, 41426, 127530, 57213, 28359, 266732, 167478, 35161, 957, 34000, 1394, 74891,\n  21954, 67533, 109988, 70343, 27906, 20087, 74943, 12177, 49840, 84890, 252007, 38133, 142747, 13270, 9011, 1956,\n  8307, 41129, 241047, 11967, 24206, 16598, 65926, 114801, 48978, 39444, 29569, 37783, 1186, 28611, 15878, 63609,\n  71728, 79096, 37857, 7905, 133038, 64595, 170871, 4983, 71474, 90251, 41794, 1133, 91306, 2347, 11977, 301891,\n  6333, 120429, 31567, 114536, 110959, 92026, 77401, 131107, 74600, 4947, 14258, 12464, 70387, 792, 46742, 49365,\n  18983, 55855, 53296, 26567, 62609, 186547, 111481, 9625, 56057, 154515, 28578, 317259, 22970, 130016, 87061, 200872,\n  1147, 156105, 94296, 61010, 135850, 23757, 304, 68146, 1321, 101784, 28699, 41754, 28834, 26821, 22763, 34257,\n  3578, 58871, 46251, 42855, 59715, 38961, 106435, 68266, 102227, 100604, 165318, 20000, 32827, 79754, 41071, 488644,\n  81415, 27823, 114001, 14947, 99952, 20692, 48050, 23304, 55636, 16428, 9523, 58498, 257598, 22601, 34441, 124581,\n  390, 131974, 174602, 248497, 22702, 5303, 93016, 7999, 35701, 16482, 87643, 40024, 85872, 13254, 27598, 5591,\n  402916, 332853, 161899, 167074, 39216, 53652, 3842, 15164, 189795, 61422, 24281, 156829, 14929, 126509, 20650, 40168,\n  19467, 70654, 8316, 5943, 10112, 63120, 121775, 4962, 144422, 66650, 69732, 29954, 61514, 18947, 174426, 19368,\n  5279, 6294, 146465, 101384, 63421, 46353, 14826, 52334, 134686, 24672, 129081, 113192, 41436, 46150, 14514, 94104,\n  8424, 94187, 87766, 25900, 51925, 128539, 30970, 101548, 10598, 4499, 46545, 283177, 132295, 66488, 16337, 205974,\n  124416, 16473, 174653, 64458, 4604, 27366, 56141, 24652, 194739, 122988, 146663, 6230, 210929, 11416, 14833, 244818,\n  57866, 80769, 9608, 46573, 31829, 126854, 41657, 44969, 51626, 23726, 29384, 7856, 50007, 53704, 180935, 69829,\n  9976, 25004, 73613, 77676, 91878, 46340, 96749, 1491, 61906, 71825, 107515, 42399, 56168, 45795, 84470, 28713,\n  81906, 14060, 29478, 12282, 60918, 152243, 2069, 14131, 61859, 62748, 45514, 41973, 40017, 51530, 81012, 35281,\n  23059, 3091, 91182, 40986, 16887, 215039, 49110, 48902, 40927, 4664, 22408, 2186, 62064, 38288, 20072, 39739,\n  12785, 46679, 137755, 83190, 32893, 3331, 21910, 59337, 32913, 69540, 19401, 3027, 21782, 89291, 9283, 160441,\n  93965, 2532, 14763, 2928, 20169, 41863, 117119, 29296, 44387, 196228, 25734, 37480, 79084, 56135, 111008, 23529,\n  38463, 12553, 65044, 45442, 11457, 157661, 136804, 196290, 93950, 78976, 90672, 49250, 27127, 21222, 172616, 123647,\n  157050, 84415, 40826, 176737, 2697, 48083, 49157, 116229, 337088, 109380, 128213, 191771, 5116, 6808, 21572, 57279,\n  54128, 114903, 1829, 16332, 48255, 41551, 56053, 69223, 33279, 27772, 38971, 152878, 8821, 42333, 270100, 30247,\n  27352, 31219, 62315, 48036, 25515, 5676, 64424, 6842, 124022, 67108, 75224, 26671, 65710, 5485, 81101, 180131,\n  28906, 35401, 41128, 7420, 38557, 103577, 27651, 76992, 33390, 277265, 119976, 16075, 1722, 4016, 8160, 16260,\n  104435, 28594, 108521, 42619, 72215, 13679, 41467, 25078, 38551, 17674, 12470, 98147, 12094, 238313, 103012, 94925,\n  30978, 17555, 9120, 57009, 25113, 302349, 310035, 87798, 6671, 70215, 168771, 51466, 37355, 11995, 27263, 18145,\n  175109, 36992, 46153, 119925, 42862, 41147, 72904, 29988, 98024, 78321, 120886, 98773, 65406, 84549, 46294, 207054,\n  221276, 28987, 23494, 87283, 59624, 116795, 91279, 21644, 118012, 30256, 26515, 54289, 64637, 18879, 2366, 48426,\n  78760, 113223, 59165, 22607, 86697, 2006, 87700, 5586, 21426, 221804, 43982, 42892, 1639, 18263, 97022, 7861,\n  40350, 35831, 74589, 15387, 12584, 16272, 2350, 34840, 67193, 166860, 62, 129059, 84144, 13945, 8872, 16116,\n  31396, 12848, 46665, 69587, 7863, 337732, 2021, 215090, 143011, 19774, 108067, 9097, 69629, 62086, 41087, 118595,\n  63112, 27350, 127724, 168612, 9454, 94824, 47240, 23536, 28666, 13015, 8075, 83300, 65798, 136675, 46387, 66592,\n  46372, 22200, 69177, 100328, 134721, 10046, 40569, 11636, 6314, 82208, 7888, 75928, 51402, 4086, 55946, 3983,\n  30837, 6098, 23497, 57256, 151922, 183027, 50022, 109927, 2847, 71736, 48147, 21198, 38676, 17208, 38494, 26901,\n  38008, 40243, 23664, 42890, 92823, 28712, 10052, 19450, 136245, 1296, 26037, 115524, 17540, 81959, 87998, 109947,\n  5504, 135131, 70356, 151584, 109295, 23619, 23856, 16295, 205242, 19398, 32059, 269066, 37606, 78075, 65249, 115008,\n  5211, 52062, 83105, 34423, 214892, 56403, 19696, 105923, 1586, 3982, 120399, 20581, 20670, 68532, 88135, 29281,\n  208711, 27405, 153585, 40, 137743, 9722, 8280, 31119, 19328, 72088, 60804, 21766, 40652, 52930, 36086, 14049,\n  16995, 33305, 97171, 70003, 20023, 20591, 134059, 31794, 14657, 45601, 41289, 83347, 154919, 205038, 18514, 16315,\n  34422, 97287, 94105, 23527, 12996, 13917, 114122, 23417, 13918, 46358, 21310, 7972, 38221, 68113, 107783, 16386,\n  47690, 56795, 8499, 18545, 16398, 691, 133344, 34814, 2959, 20119, 119395, 59372, 37680, 79653, 29760, 7411,\n  89122, 12450, 10343, 56156, 6721, 9880, 13905, 42800, 198469, 177097, 106548, 82488, 91876, 24609, 10706, 76004,\n  172043, 23144, 14890, 62366, 83898, 12968, 38955, 44234, 101992, 9519, 85215, 71444, 26084, 100199, 129339, 314155,\n  94570, 5416, 9451, 23094, 3635, 8260, 19505, 102704, 76958, 35234, 26525, 2551, 22853, 44177, 13568, 15372,\n  76497, 42940, 8996, 82568, 38266, 73994, 25359, 100653, 176590, 44214, 60988, 126450, 168403, 88749, 20773, 72958,\n  44464, 16442, 108241, 43912, 142840, 28715, 26132, 62091, 79180, 335, 13854, 117482, 184594, 27524, 213171, 29588,\n  1984, 151855, 9907, 24196, 41806, 10248, 139515, 110653, 83147, 67906, 50005, 126920, 11985, 7146, 70966, 73392,\n  6546, 11571, 36898, 51082, 366068, 14298, 110969, 8480, 59732, 41291, 11948, 60798, 24533, 35525, 46894, 151863,\n  271505, 8978, 152334, 240030, 8736, 86988, 55120, 56449, 39084, 131143, 52149, 20472, 222992, 92098, 113905, 160942,\n  93429, 46821, 134338, 13359, 28962, 133572, 63437, 17720, 58985, 12668, 50951, 30088, 86665, 12598, 38135, 100049,\n  8432, 23582, 12520, 74142, 30028, 37676, 72636, 19758, 14548, 75515, 10553, 14518, 32439, 41532, 19021, 32738,\n  54424, 77334, 95984, 30113, 165029, 21959, 45058, 51094, 55175, 7821, 3808, 143697, 27458, 92493, 25546, 44547,\n  69046, 4809, 22393, 105573, 121277, 83916, 93708, 65917, 46168, 169086, 41887, 133671, 33732, 21296, 85711, 93384,\n  20661, 16850, 126144, 79900, 24581, 92813, 68853, 7556, 135574, 40156, 253, 27866, 123110, 108105, 8863, 6885,\n  37556, 40974, 5474, 42318, 79260, 53275, 55822, 124845, 72611, 23898, 88911, 72971, 16957, 97387, 53099, 8161,\n  12939, 7235, 19325, 37236, 46162, 6870, 103036, 9217, 58238, 52894, 25497, 87733, 44907, 108667, 102200, 20343,\n  72936, 85840, 55962, 34676, 253758, 69668, 96389, 111954, 41324, 167841, 8806, 158362, 32518, 41375, 120632, 73135,\n  96480, 21314, 4720, 259790, 11949, 5752, 116141, 21106, 124438, 7908, 114832, 63475, 65280, 49770, 31147, 141323,\n  43256, 220098, 15804, 42500, 34107, 104757, 75473, 1964, 53533, 71047, 83715, 42845, 43531, 77188, 2321, 57356,\n  37037, 106618, 27233, 20062, 28366, 40192, 37908, 345556, 45970, 11045, 55249, 98674, 32741, 77466, 25566, 44398,\n  173438, 69888, 65582, 3754, 6121, 34129, 9737, 95439, 194202, 164322, 2102, 4704, 62969, 40994, 31759, 21994,\n  26355, 77991, 29831, 64006, 30314, 111389, 59636, 131909, 58370, 93916, 82377, 99217, 28455, 53729, 81544, 46068,\n  1848, 132138, 3234, 103227, 50519, 863, 34429, 22675, 82830, 85513, 87414, 12210, 90393, 3294, 143767, 94310,\n  21761, 100363, 279561, 80941, 295490, 75238, 72247, 3049, 10936, 2278, 38484, 33144, 256940, 101817, 33856, 75506,\n  133568, 39527, 156016, 262504, 44050, 98168, 25682, 41968, 20269, 88567, 37803, 5755, 4089, 36260, 33454, 69130,\n  27457, 129154, 52277, 26140, 21610, 15320, 67142, 111206, 219460, 45685, 70880, 105780, 36743, 123247, 83438, 52208,\n  14821, 80935, 29659, 180718, 101388, 45817, 3374, 57612, 52005, 6448, 72882, 184891, 13124, 12704, 30703, 25929,\n  30979, 69399, 15380, 74068, 140816, 117172, 5753, 5065, 167362, 3697, 123452, 43307, 26054, 54528, 105177, 21154,\n  18458, 72597, 72966, 61322, 60789, 5516, 142428, 84303, 34917, 14578, 112502, 12928, 40447, 8085, 94588, 23066,\n  26606, 8666, 27561, 98346, 33422, 14547, 68915, 108761, 9066, 161082, 19796, 27553, 3452, 27494, 15534, 23906,\n  83614, 19, 132782, 13705, 5761, 29605, 59087, 120796, 20263, 12290, 12851, 50370, 137238, 39286, 94500, 20667,\n  25038, 21628, 33990, 8981, 91310, 200127, 63967, 88268, 101, 286303, 114772, 71059, 52322, 129656, 47566, 12562,\n  74548, 64285, 49207, 24655, 42572, 28607, 237181, 77595, 38084, 16719, 839, 81694, 214054, 17721, 4580, 98901,\n  186568, 121462, 138040, 42832, 31802, 161998, 197148, 18980, 17665, 152652, 24115, 15160, 30620, 99343, 9889, 87020,\n  141936, 7344, 42231, 98797, 37730, 129285, 120827, 160915, 14420, 2535, 155000, 34611, 4265, 102563, 57689, 91604,\n  187218, 17667, 1262, 39897, 49640, 200660, 37670, 19608, 188208, 32890, 127419, 68124, 51441, 81359, 123584, 58473,\n  55388, 45140, 15680, 85159, 96452, 16120, 30294, 94559, 66659, 44469, 59032, 36146, 40869, 33455, 63569, 7922,\n  42039, 12261, 115220, 18301, 60967, 146149, 29288, 13403, 221027, 9100, 52523, 139159, 19234, 40843, 206228, 37834,\n  178581, 17027, 40896, 45534, 29105, 2544, 91128, 79269, 96050, 47912, 285426, 27282, 9165, 151, 46166, 7045,\n  196118, 46867, 66112, 143251, 157335, 55563, 96710, 8207, 3738, 72403, 61089, 157979, 40354, 156883, 40650, 178616,\n  117436, 102312, 20179, 41865, 2965, 21966, 28441, 168958, 34136, 38297, 9787, 20997, 59659, 36744, 60366, 114471,\n  15570, 25271, 29375, 258002, 50843, 37278, 68479, 43715, 230035, 5024, 2970, 91666, 31444, 117750, 16847, 112904,\n  71260, 12363, 55600, 48521, 43886, 46675, 13532, 57721, 18316, 20619, 56356, 4628, 5387, 78044, 11, 33577,\n  38500, 104616, 16018, 21088, 168508, 6053, 33669, 9683, 17406, 34961, 60264, 30468, 32174, 24071, 78408, 25436,\n  8828, 39141, 39373, 37714, 103373, 109235, 33475, 22349, 143806, 196511, 45872, 33957, 90367, 15839, 11624, 84305,\n  3560, 26149, 26619, 50807, 18719, 36474, 43129, 70576, 122310, 12311, 103752, 19102, 16508, 25987, 44388, 63236,\n  26719, 131892, 134604, 63602, 2541, 237340, 98802, 45539, 105429, 117394, 38028, 181798, 6645, 86186, 32830, 114213,\n  37998, 21792, 4332, 69153, 73190, 173015, 127914, 9801, 10591, 4848, 14686, 23714, 235916, 53231, 142998, 35580,\n  49737, 63998, 15639, 52103, 87112, 228066, 40885, 51065, 233941, 23415, 4046, 91775, 53188, 141652, 6728, 119152,\n  32193, 121081, 48378, 63940, 79154, 100136, 68457, 56982, 4544, 133512, 181089, 126816, 52905, 78546, 37550, 11149,\n  126477, 134049, 124361, 126465, 7580, 1593, 86300, 14758, 63501, 80748, 18813, 163792, 57314, 22986, 6141, 11406,\n  3216, 32494, 110332, 28452, 31337, 162136, 21024, 26738, 6541, 7188, 22430, 92369, 103083, 128099, 204997, 51873,\n  60846, 69568, 20383, 4773, 49, 48196, 29395, 14748, 9756, 43703, 50109, 163732, 15481, 130284, 88137, 10991,\n  1355, 101243, 3715, 54949, 43840, 19376, 118637, 43614, 14319, 50237, 47535, 50675, 13743, 107035, 43658, 76751,\n  27486, 7709, 13643, 96042, 10222, 21204, 124418, 113169, 73114, 71157, 117166, 121290, 230718, 203167, 36470, 64894,\n  418644, 66714, 116018, 28732, 16706, 52824, 36929, 51413, 6674, 128215, 137726, 19964, 279748, 26329, 87214, 10512,\n  23058, 116855, 58012, 13318, 45273, 76517, 33779, 74266, 295831, 1336, 47046, 106101, 86306, 13, 79499, 18377,\n  2743, 123188, 92968, 51882, 5535, 6799, 86683, 1562, 88773, 138107, 96667, 11031, 21829, 4831, 30926, 76005,\n  35253, 174880, 61764, 219165, 120938, 41317, 25064, 15262, 31153, 216734, 168694, 126329, 3169, 7494, 80595, 54300,\n  16839, 27391, 60115, 17288, 42847, 68970, 16373, 61298, 8751, 32529, 67945, 20542, 80974, 71952, 139421, 42317,\n  33942, 21817, 38951, 12239, 36867, 67209, 48716, 1479, 35514, 105236, 52386, 100232, 16485, 31451, 46256, 39894,\n  26474, 60702, 20094, 10295, 77775, 1748, 117588, 48134, 56877, 51915, 11560, 224153, 5391, 3701, 26137, 58941,\n  48346, 80382, 15181, 131665, 3882, 7358, 42702, 14975, 108713, 6343, 80451, 72290, 31403, 4314, 32244, 5000,\n  27804, 42280, 29989, 44929, 55248, 6075, 42803, 20470, 26235, 53651, 44765, 109461, 43821, 69384, 24056, 170949,\n  136104, 115740, 191734, 36140, 40118, 138988, 7264, 71698, 175507, 12620, 155241, 7468, 28034, 185481, 2642, 23421,\n  203908, 130353, 51032, 89780, 18732, 56166, 21485, 47669, 1788, 12936, 94197, 57925, 34030, 152347, 132787, 4308,\n  106427, 53840, 90424, 21211, 36958, 111950, 33872, 29233, 54359, 51008, 62593, 42396, 7251, 123282, 198715, 53630,\n  44936, 14249, 77826, 258614, 15356, 45209, 51025, 80569, 69139, 10507, 10673, 56339, 455, 43204, 39237, 14263,\n  157915, 72576, 100737, 58151, 22173, 51683, 197114, 28812, 140291, 15706, 153760, 89962, 50348, 37718, 108861, 24876,\n  43275, 55149, 227847, 109122, 82066, 68840, 83530, 39884, 49621, 18581, 228664, 30516, 54952, 16372, 8186, 29493,\n  15216, 129920, 30573, 45435, 36226, 109626, 22456, 7678, 96695, 109013, 34730, 57022, 66855, 100447, 13026, 32965,\n  6936, 272617, 48390, 49584, 1987, 61711, 3050, 110021, 8227, 8769, 96593, 27031, 196087, 22068, 19421, 11454,\n  4631, 39978, 242671, 88040, 68827, 46976, 54523, 87226, 99004, 37956, 109647, 20830, 47541, 918, 286374, 22872,\n  110265, 74675, 4723, 101851, 17953, 216583, 119919, 65609, 147605, 1909, 30855, 55924, 110242, 97095, 129683, 9370,\n  58520, 14221, 15934, 60347, 31312, 158125, 25989, 55743, 38724, 14896, 158699, 35678, 329975, 16243, 72941, 112881,\n  642, 11436, 38291, 112105, 3155, 67914, 72572, 24476, 34497, 104985, 29314, 84672, 75937, 22802, 6429, 75538,\n  6207, 163504, 199842, 23456, 73843, 79289, 235636, 7573, 6120, 124975, 52978, 95704, 17249, 175679, 9569, 104975,\n  51429, 329147, 13133, 168135, 117746, 78571, 8080, 58294, 3218, 58849, 10361, 62017, 910, 33143, 555, 31814,\n  68961, 145868, 122784, 15453, 319671, 26077, 236592, 74939, 14938, 125306, 95117, 36290, 29555, 75543, 1445, 3405,\n  34700, 143718, 17140, 139460, 1649, 866, 29186, 90440, 66673, 82069, 69865, 13592, 72268, 105954, 55710, 1985,\n  9655, 105536, 52207, 38806, 76800, 9513, 81900, 12656, 153087, 6755, 43141, 21061, 6941, 16813, 142735, 31152,\n  210168, 41188, 100125, 29783, 27130, 37384, 93862, 71525, 35398, 12398, 26982, 303589, 1780, 9910, 34746, 13281,\n  73242, 165400, 2032, 112057, 3135, 21087, 114080, 35562, 56689, 79328, 57005, 56383, 19556, 8454, 47363, 3132,\n  165307, 54577, 13611, 2516, 8765, 81373, 65366, 57451, 35967, 256887, 71960, 42183, 121458, 34333, 89472, 15018,\n  13333, 75535, 131910, 13497, 70453, 25831, 37776, 56546, 17350, 31676, 97161, 28621, 117253, 29257, 16050, 488,\n  22265, 48754, 128425, 182002, 13340, 90943, 70744, 33837, 44265, 92131, 45994, 1482, 39869, 27394, 57718, 13956,\n  441, 5487, 70995, 55529, 3742, 61617, 118889, 92005, 135025, 86222, 66571, 254704, 23581, 37646, 38231, 4846,\n  33309, 92236, 6134, 18657, 16543, 2124, 77619, 45274, 17731, 39418, 106157, 55973, 13291, 9746, 65544, 32616,\n  157637, 33791, 108671, 24882, 283005, 65971, 70349, 6146, 21408, 15989, 88659, 365, 101360, 128119, 22909, 2662,\n  63887, 10345, 23354, 71146, 52312, 30052, 45711, 99568, 83873, 506963, 2554, 13515, 5338, 289237, 32776, 59272,\n  233779, 82419, 26344, 71757, 23759, 15290, 14476, 154914, 186949, 43876, 60677, 44353, 34531, 1802, 77130, 15863,\n  177320, 67156, 10629, 89062, 38069, 81953, 13367, 22945, 156465, 63862, 319916, 37995, 91004, 119548, 320016, 44035,\n  19353, 17852, 114239, 24818, 59852, 114160, 51645, 12833, 68160, 65930, 36636, 297383, 14891, 2853, 73690, 26169,\n  1338, 1151, 23088, 98141, 1072, 29833, 31924, 58527, 29823, 49223, 13440, 94333, 1950, 42392, 24753, 253517,\n  28901, 4590, 1846, 35647, 81407, 166926, 16913, 15179, 313445, 157404, 11324, 72420, 73038, 62980, 67242, 98614,\n  84807, 1288, 18715, 35345, 162348, 49709, 92384, 35688, 240257, 105106, 97424, 336014, 37162, 31857, 24409, 137966,\n  138934, 29778, 20791, 88000, 16111, 4596, 20363, 25650, 58013, 116702, 57820, 5668, 41253, 31169, 251377, 5377,\n  102951, 209713, 150400, 82980, 16457, 95615, 28341, 34104, 96056, 14290, 87446, 35563, 19541, 9842, 4673, 34998,\n  56402, 37494, 140987, 144287, 67217, 38738, 69684, 90560, 41638, 6371, 67553, 130177, 94381, 18943, 22304, 5556,\n  89674, 1540, 104069, 26091, 29481, 79348, 127520, 1738, 37456, 64314, 202862, 31135, 80815, 1319, 24743, 103040,\n  151579, 2886, 45671, 10020, 13937, 23292, 25393, 58266, 13683, 1161, 48094, 156120, 132537, 22049, 1682, 76886,\n  19699, 10385, 1058, 254528, 134545, 55004, 82397, 41659, 67020, 195747, 38970, 40798, 29816, 202866, 95435, 5414,\n  222341, 122682, 143053, 294222, 141235, 18722, 36979, 52903, 427578, 91648, 78453, 23736, 48868, 95317, 62318, 53265,\n  129557, 41511, 51444, 17062, 233342, 157429, 4110, 25190, 23077, 32496, 234890, 104393, 87871, 119604, 172405, 31296,\n  16213, 41034, 147157, 76, 18728, 337132, 33035, 74049, 16184, 117337, 1430, 50125, 9469, 13116, 96853, 186079,\n  37913, 79652, 76574, 12079, 19680, 20090, 74134, 22992, 2798, 111900, 29035, 78700, 171356, 103866, 25861, 76971,\n  178328, 160559, 131679, 44747, 13216, 89528, 50885, 79922, 50049, 78775, 61642, 115486, 72690, 15613, 40111, 8974,\n  71904, 99272, 76547, 36995, 124644, 58876, 62375, 56306, 55455, 10949, 9333, 20277, 7504, 41873, 102574, 28557,\n  29052, 18656, 226780, 29795, 41036, 52032, 84065, 51914, 266546, 6019, 73011, 15118, 19899, 148821, 109409, 68842,\n  30391, 102037, 158644, 78906, 188755, 20593, 56915, 26262, 8659, 76359, 39099, 42863, 59469, 24343, 170097, 72940,\n  16, 31679, 33449, 44831, 104298, 168570, 329243, 12874, 112943, 10737, 81733, 10145, 53865, 30398, 84862, 90377,\n  76203, 66, 37651, 15508, 138226, 36312, 36084, 66979, 68857, 69503, 23486, 27392, 139953, 43251, 74333, 109079,\n  14125, 42935, 117495, 77115, 107625, 70706, 2266, 28248, 119795, 6372, 79378, 83196, 173133, 134246, 42289, 4799,\n  4398, 34848, 30176, 134351, 50273, 66466, 87051, 132965, 48808, 31554, 48150, 75235, 54390, 30193, 11461, 79397,\n  16466, 17661, 7427, 28480, 122086, 37993, 13959, 83801, 31835, 33998, 164771, 60458, 67035, 180999, 5256, 7006,\n  50971, 114665, 163017, 23336, 48859, 250788, 4340, 9613, 7508, 81510, 27383, 68480, 46427, 15448, 81334, 97899,\n  66477, 71, 139832, 7506, 73021, 97330, 136340, 46842, 84615, 21471, 141895, 32003, 39985, 62480, 13666, 12717,\n  83076, 96305, 46422, 172149, 46779, 38567, 66589, 155205, 201569, 190175, 4693, 89306, 53336, 145244, 26386, 78125,\n  36443, 60742, 64991, 315, 60865, 22001, 34462, 3145, 168164, 7227, 45365, 52278, 143810, 15529, 219120, 21490,\n  51393, 22637, 26823, 15222, 25548, 102002, 40489, 96757, 169307, 3643, 119915, 68728, 32896, 113685, 70503, 18482,\n  24485, 209111, 5537, 41079, 38424, 97942, 125499, 59570, 21837, 20492, 31623, 9701, 29087, 11628, 19585, 9000,\n  275813, 117347, 75561, 10000, 51674, 25141, 80217, 10734, 6714, 202302, 17083, 85695, 64883, 71665, 13202, 80751,\n  46169, 222686, 49498, 67783, 187369, 37577, 13134, 27844, 55186, 70471, 20101, 307605, 76192, 4390, 46641, 16931,\n  12852, 7169, 5321, 137488, 12018, 197662, 2595, 12702, 62134, 52236, 43904, 2706, 31067, 311914, 70629, 280345,\n  118303, 59493, 9152, 296895, 16542, 4127, 190174, 11204, 12125, 33624, 43704, 629, 10579, 161171, 436098, 110011,\n  4928, 20741, 120332, 41283, 26291, 13782, 65933, 147206, 43854, 143015, 24103, 185039, 7091, 135245, 92175, 293076,\n  10946, 19925, 19967, 110847, 253716, 42758, 95038, 69599, 109062, 27063, 120815, 57458, 39283, 10218, 39354, 7499,\n  17261, 8263, 7839, 189220, 113012, 110601, 48485, 156100, 258512, 41840, 167472, 67791, 47764, 14675, 53087, 6354,\n  125126, 12700, 41054, 45096, 32646, 70686, 11736, 1417, 55892, 49536, 45376, 6942, 80279, 12070, 89681, 183322,\n  201623, 35389, 58180, 430, 149872, 18459, 444892, 19950, 3192, 82244, 305001, 83495, 385, 1258, 82408, 33652,\n  1208, 738, 12995, 21781, 48750, 13634, 68571, 68149, 5376, 30653, 64669, 33991, 58738, 87302, 80018, 88747,\n  22335, 35680, 106650, 40779, 5427, 30033, 3552, 51590, 82416, 25102, 25208, 3949, 47811, 74006, 93322, 124119,\n  32435, 357395, 49716, 13835, 143086, 4083, 79989, 41030, 38930, 21275, 146867, 20485, 94128, 11151, 10472, 53127,\n  59975, 30973, 116792, 75634, 156037, 15565, 112131, 58155, 37977, 33863, 74566, 194491, 38224, 22622, 88291, 51351,\n  62485, 19885, 25695, 49858, 7698, 124574, 37501, 200, 50405, 11713, 287549, 195058, 71027, 14971, 39645, 70772,\n  16462, 27850, 51933, 19178, 21559, 27321, 3458, 43074, 136153, 7003, 195280, 149565, 34131, 52040, 1210, 6796,\n  107506, 11880, 278327, 23579, 162069, 86206, 10271, 126827, 63703, 27398, 13524, 13255, 3101, 29045, 7198, 55423,\n  215029, 1232, 15504, 168293, 40407, 14532, 80445, 19258, 4178, 203513, 68565, 70756, 3774, 260344, 5233, 163405,\n  9187, 46762, 107090, 26759, 80019, 11197, 524211, 114351, 17880, 91874, 35307, 46472, 97926, 12980, 2932, 75,\n  67579, 57528, 43925, 163283, 2600, 68602, 18775, 154886, 18405, 19085, 144161, 117918, 8351, 60026, 40557, 1844,\n  47924, 56160, 48862, 13071, 86638, 3171, 163462, 48967, 70820, 50635, 8327, 96197, 92206, 86504, 132, 17742,\n  86453, 80271, 35704, 19660, 29610, 70884, 187507, 70566, 42241, 55397, 157816, 116938, 119200, 208499, 318827, 57917,\n  3198, 33626, 18608, 33628, 15466, 58518, 23680, 48749, 67813, 203805, 73110, 32434, 57863, 126161, 76577, 74704,\n  35454, 272624, 56452, 33611, 4779, 612, 20538, 20813, 99518, 12664, 37685, 51378, 4649, 48965, 52644, 7250,\n  104641, 90980, 25121, 20782, 144269, 136467, 25473, 109758, 33730, 23835, 64889, 3994, 38073, 175725, 263011, 73296,\n  65864, 7458, 91699, 99785, 6838, 11244, 30971, 22298, 109456, 24378, 14229, 234839, 193298, 16188, 31737, 116657,\n  154007, 1122, 41881, 49733, 5623, 164859, 73807, 45069, 45741, 8551, 143581, 9315, 30846, 98697, 126198, 189421,\n  182578, 54489, 24321, 45654, 25573, 17216, 24178, 85193, 157224, 15399, 12351, 94329, 1543, 110920, 86691, 20245,\n  58575, 21729, 399974, 64597, 138703, 15574, 33184, 95550, 146140, 2393, 2271, 17693, 44971, 124299, 48652, 114592,\n  49356, 244271, 56021, 82860, 18275, 26970, 11660, 198792, 59064, 6815, 87808, 78781, 20300, 104409, 662, 71033,\n  13122, 35626, 44961, 91041, 11848, 14525, 52226, 42701, 24453, 111637, 27557, 12927, 11973, 27925, 2467, 122935,\n  9797, 47887, 24976, 6515, 86843, 117000, 127598, 39829, 2919, 138824, 43874, 110700, 25530, 13248, 168387, 43479,\n  49210, 1692, 1259, 64697, 1130, 20465, 27466, 19345, 161220, 120389, 31515, 56190, 76788, 22165, 29616, 5113,\n  75373, 17538, 30755, 22978, 85604, 112134, 45015, 68154, 34926, 7355, 114461, 64044, 36014, 70882, 20391, 30584,\n  17777, 8803, 13476, 33610, 17255, 352133, 26102, 24765, 51533, 55753, 68095, 21188, 11676, 21823, 21179, 271876,\n  92226, 107529, 94889, 47154, 51845, 43801, 5311, 105238, 119859, 268539, 2435, 55644, 21525, 37454, 162919, 79553,\n  5936, 143734, 13110, 3235, 18507, 21886, 124645, 8664, 28050, 67683, 58054, 52119, 1140, 3546, 35570, 180315,\n  31418, 49700, 27671, 84075, 14857, 30098, 18009, 21868, 34207, 42097, 9293, 74669, 47859, 50876, 49991, 60692,\n  10750, 72343, 7644, 83181, 36382, 115481, 14074, 68458, 32079, 110696, 30195, 6157, 106909, 22414, 134401, 11947,\n  59426, 71942, 7548, 142461, 87757, 25760, 55425, 47637, 38393, 117046, 33833, 33451, 110042, 21631, 15553, 31475,\n  15965, 52160, 30794, 68222, 97104, 44038, 134558, 22658, 33757, 7286, 148203, 73358, 35344, 42812, 2789, 141364,\n  97993, 325497, 95230, 62242, 53979, 114390, 187, 3414, 33651, 72017, 42725, 163469, 45407, 53268, 119350, 24322,\n  41884, 61527, 104655, 61374, 82515, 10912, 127557, 29939, 173089, 44405, 77727, 37217, 7177, 19015, 73371, 191300,\n  58371, 10601, 4287, 145829, 35365, 250779, 11615, 1861, 47543, 67388, 153424, 85556, 51927, 90651, 19359, 9654,\n  35587, 131677, 91637, 90460, 10670, 58134, 145964, 112159, 23544, 102870, 17599, 26304, 29306, 17111, 10277, 45092,\n  84233, 79517, 44634, 85065, 39976, 55740, 13294, 40340, 76076, 274931, 24696, 94204, 62097, 19765, 27791, 72755,\n  9007, 11276, 152590, 52634, 8668, 11381, 87423, 17757, 28119, 349, 237, 60867, 78281, 91158, 140967, 248103,\n  120790, 33051, 142673, 247599, 19835, 85755, 184690, 18251, 143020, 164693, 4893, 85858, 54968, 19631, 20889, 110604,\n  18670, 132107, 13187, 1827, 64959, 187020, 16093, 2357, 20649, 24949, 120227, 112146, 34469, 22861, 29222, 20839,\n  42570, 12164, 72533, 58393, 33001, 67590, 100285, 77190, 136570, 1891, 29881, 176839, 87796, 169800, 46634, 42613,\n  120044, 544671, 35573, 33409, 1106, 23688, 8382, 40809, 58700, 21997, 89694, 32633, 63951, 5925, 91071, 83353,\n  127623, 193205, 8076, 91094, 12805, 5777, 59517, 20986, 83057, 34629, 28371, 28946, 40212, 16089, 140378, 2115,\n  31773, 3807, 48370, 178737, 49850, 322390, 73229, 7228, 7361, 34085, 72856, 162851, 54336, 3090, 10705, 24203,\n  347524, 3071, 11926, 15437, 101314, 38218, 37603, 25070, 23751, 18738, 10614, 30446, 19569, 34876, 34037, 143092,\n  48791, 17269, 13448, 181374, 29174, 22705, 11280, 8389, 49369, 33246, 4494, 15136, 20467, 189070, 24240, 21646,\n  7465, 86521, 109202, 104631, 75842, 73950, 26135, 39426, 38281, 58562, 87792, 10755, 623, 98319, 19283, 178647,\n  112457, 28075, 23224, 51865, 60210, 1572, 16872, 3984, 28849, 17199, 19586, 53164, 51003, 578756, 51498, 45446,\n  94720, 3831, 11364, 15400, 6426, 42807, 26765, 136732, 90047, 18712, 26660, 98061, 85560, 99889, 37338, 10153,\n  43761, 188463, 24546, 9883, 3579, 47095, 149286, 1544, 85105, 109163, 22065, 84228, 34607, 9802, 24403, 6597,\n  90410, 107034, 41249, 2151, 118528, 32433, 167290, 143308, 7224, 62473, 32534, 855, 42907, 31366, 15790, 130823,\n  111163, 23740, 103312, 73946, 18168, 41718, 10722, 74804, 6960, 77903, 6730, 4836, 161135, 460161, 25329, 3966,\n  191298, 108138, 97692, 28539, 5247, 14951, 16072, 148552, 100584, 72497, 44704, 114746, 127552, 2033, 34815, 27555,\n  171568, 13044, 57905, 30463, 20121, 12578, 29578, 147967, 91173, 69059, 75171, 15963, 12636, 216233, 12189, 78098,\n  54615, 17457, 34910, 14101, 20199, 38879, 33868, 12975, 63730, 19371, 122500, 36320, 98105, 44709, 16796, 8252,\n  2396, 7493, 206206, 58138, 40387, 10906, 28152, 8026, 14438, 11987, 27633, 84118, 125012, 155087, 126314, 20627,\n  4765, 60466, 170206, 93400, 33235, 15747, 658, 8854, 12865, 30917, 688, 103792, 45299, 136720, 88015, 54331,\n  37728, 2913, 65993, 80667, 82098, 15958, 29994, 167188, 77872, 103575, 90590, 244435, 114037, 77901, 91272, 19428,\n  59253, 30651, 149287, 11214, 19675, 21663, 134751, 84839, 24838, 61313, 45844, 7512, 398016, 64823, 127529, 3133,\n  102561, 20453, 115896, 17344, 11446, 222828, 193, 155155, 17069, 58324, 4480, 25422, 57508, 105295, 23785, 108564,\n  178277, 20918, 69131, 161769, 65836, 54488, 201783, 143191, 99941, 18413, 13719, 28184, 26114, 27888, 4392, 129687,\n  2585, 3092, 113567, 150793, 271882, 1752, 282, 15224, 136866, 70660, 67393, 235271, 50126, 30236, 5205, 12951,\n  11027, 106830, 33950, 26602, 155648, 159630, 116983, 47316, 118367, 77639, 2468, 20768, 14585, 66833, 4411, 197715,\n  8910, 308244, 4325, 25115, 123015, 105047, 174692, 661, 335383, 65622, 43950, 89084, 40434, 55523, 40872, 29093,\n  41016, 46235, 18304, 57207, 53021, 31025, 145373, 39883, 14439, 64867, 33271, 92303, 87098, 165627, 249075, 23882,\n  176860, 43613, 45825, 64126, 201543, 92448, 76394, 85896, 121888, 56679, 6043, 5600, 2358, 43170, 38186, 77345,\n  9286, 9851, 24013, 78703, 5739, 81394, 113639, 182825, 22666, 9031, 22509, 9570, 54270, 33648, 34339, 13164,\n  37884, 37579, 110690, 71903, 169381, 124661, 154669, 17643, 33984, 69534, 35747, 99083, 93859, 18986, 20872, 30989,\n  16124, 4894, 119685, 2601, 89364, 45420, 102352, 14665, 72207, 77064, 26614, 22336, 51639, 228, 56231, 815,\n  76366, 85000, 4970, 44952, 99029, 11414, 154634, 81988, 65812, 71056, 307722, 32240, 2198, 67495, 76459, 289714,\n  12147, 34660, 56034, 21936, 174891, 33766, 38677, 42238, 194289, 61206, 40811, 81549, 6986, 11184, 50356, 28762,\n  30252, 169833, 26033, 37387, 88822, 7300, 54514, 41857, 21284, 89562, 16952, 95611, 11445, 78324, 76361, 17313,\n  288337, 35719, 74225, 17706, 160821, 46786, 195486, 98124, 33034, 230403, 46596, 54312, 100869, 187581, 73087, 76045,\n  43852, 51201, 111095, 53695, 25761, 171167, 1281, 12511, 52882, 77119, 180240, 70944, 1144, 132888, 99788, 35517,\n  103809, 160506, 37582, 28159, 1924, 90499, 9703, 89568, 84458, 91412, 201459, 33796, 86079, 85006, 49619, 62157,\n  43411, 14396, 37110, 43017, 13542, 75363, 34855, 3223, 139276, 79591, 32317, 66073, 18141, 8975, 111874, 25536,\n  34978, 2876, 88258, 8764, 41298, 4941, 10664, 6849, 7276, 16023, 42365, 44065, 26481, 39848, 38615, 3468,\n  173800, 385332, 27782, 6783, 33210, 23625, 31896, 1982, 17951, 11857, 55263, 92496, 142652, 13696, 62877, 77106,\n  33616, 34409, 3165, 42139, 33677, 25816, 8589, 110980, 2210, 30731, 11059, 25363, 19941, 193105, 164524, 15578,\n  98568, 36064, 29325, 13286, 2486, 12135, 218797, 3219, 192414, 393107, 34699, 89750, 80136, 7124, 7367, 13443,\n  12058, 69118, 234202, 17915, 235883, 20792, 100851, 31528, 50963, 3680, 2664, 124375, 249638, 8483, 257047, 41605,\n  29572, 29737, 139767, 51651, 27221, 6765, 55803, 23145, 47034, 40480, 52532, 73864, 6124, 42229, 93325, 34530,\n  72107, 238280, 199709, 3744, 63346, 16597, 66408, 22715, 97620, 5271, 1410, 22445, 158513, 169512, 31624, 107883,\n  299699, 50048, 63128, 87490, 40388, 185087, 19754, 75917, 23235, 138863, 325617, 37883, 37176, 65115, 41352, 25967,\n  224244, 118096, 25013, 205505, 198386, 69311, 49810, 112803, 121323, 27224, 31934, 41103, 67992, 90172, 18343, 182947,\n  23827, 233481, 44894, 9617, 63170, 38593, 111112, 18189, 17838, 11885, 38329, 7604, 106622, 67890, 139944, 6251,\n  158590, 31160, 39376, 75979, 26807, 59454, 75828, 12609, 5345, 62668, 13410, 6377, 23489, 15227, 50336, 23847,\n  91891, 46989, 219110, 5016, 55474, 182, 169668, 41243, 74834, 37258, 81806, 25477, 37981, 32374, 29946, 8558,\n  13058, 27278, 55639, 110342, 5977, 7496, 7827, 224669, 72552, 8581, 18359, 28445, 34706, 45938, 138729, 19479,\n  26828, 4897, 199990, 7309, 145172, 26292, 10057, 2903, 19904, 3127, 7625, 8343, 21367, 5265, 8513, 8299,\n  34043, 7029, 6384, 111718, 960, 4780, 109654, 50272, 77092, 23412, 109010, 40059, 91381, 138810, 25275, 30422,\n  4733, 94279, 5863, 2603, 47446, 7973, 33416, 25502, 7680, 106096, 17414, 15137, 41697, 38583, 90939, 13115,\n  5170, 1287, 11657, 96186, 16960, 66479, 61042, 54454, 14741, 104736, 18646, 28260, 46101, 248526, 78951, 52606,\n  13656, 58251, 8482, 69402, 473, 134516, 4405, 18865, 51842, 100181, 26348, 80528, 37433, 55053, 30045, 136822,\n  11103, 22444, 11841, 2990, 11551, 36343, 57239, 17946, 121951, 165051, 7702, 15912, 13191, 61072, 26908, 5979,\n  97536, 32603, 54072, 112162, 165932, 27730, 13979, 91093, 50397, 48878, 44400, 29260, 51628, 17193, 15977, 23879,\n  129028, 208297, 58084, 29487, 9069, 58477, 73687, 7734, 44885, 223955, 46203, 40661, 6590, 253832, 62105, 27627,\n  59195, 37610, 112, 160041, 47045, 121276, 9957, 89691, 32940, 13845, 859, 21447, 225472, 109616, 5172, 115309,\n  90345, 174021, 7312, 26518, 21833, 129351, 285466, 54661, 13303, 119359, 7473, 179961, 29407, 61141, 37403, 357673,\n  96615, 35776, 100714, 58390, 141951, 44340, 133721, 168376, 5198, 37474, 20461, 28860, 6028, 3028, 13118, 40061,\n  18395, 65200, 55843, 156099, 7181, 326625, 72811, 24544, 3861, 106507, 15886, 80513, 14966, 54808, 143914, 131660,\n  156358, 72569, 331, 115499, 167182, 181285, 3231, 35925, 36529, 34503, 18991, 46621, 55253, 10258, 55965, 813,\n  25942, 89419, 48957, 177707, 173153, 46642, 4811, 91950, 30959, 57953, 55844, 6837, 27261, 33866, 171253, 83769,\n  50691, 10414, 5492, 45302, 150176, 127189, 25506, 98266, 162201, 46921, 47463, 25896, 38467, 46851, 18084, 3144,\n  48462, 72055, 57402, 19107, 80602, 38235, 64308, 11648, 42163, 101559, 80727, 54159, 118482, 153426, 60818, 128542,\n  168, 55184, 5394, 2574, 108756, 27110, 245250, 38029, 26011, 2085, 2189, 19738, 17166, 17187, 129874, 85131,\n  54149, 86936, 135307, 122042, 456538, 40725, 3718, 195077, 22512, 53925, 52733, 40639, 91374, 71487, 56427, 22962,\n  13816, 20316, 44904, 29393, 90358, 36347, 18997, 57794, 131615, 11502, 90717, 6758, 18132, 32540, 226257, 10712,\n  226707, 53602, 99511, 19231, 1824, 19111, 49236, 5491, 28139, 42348, 17387, 13741, 26860, 32136, 143030, 11826,\n  42253, 125128, 48221, 24174, 93877, 39491, 28952, 24227, 77351, 64398, 63400, 162461, 65575, 4012, 37187, 20132,\n  8980, 42178, 52118, 64518, 80574, 106352, 75873, 68981, 22020, 35576, 63767, 70957, 27948, 62633, 6166, 497,\n  40422, 23112, 21321, 14642, 91324, 90681, 29471, 53428, 76376, 17160, 5165, 158982, 13528, 21170, 4421, 11861,\n  39281, 97681, 28741, 5107, 91685, 14451, 28300, 33929, 82215, 202223, 39186, 1108, 122541, 3164, 84493, 54892,\n  144066, 56213, 6189, 105740, 1983, 53506, 28897, 52102, 193851, 154542, 51373, 38315, 17283, 44071, 149080, 48489,\n  26320, 80807, 30857, 143431, 2739, 197396, 39482, 10242, 194978, 39273, 69728, 108587, 4790, 80763, 38090, 13241,\n  26845, 225930, 45466, 7671, 42627, 235691, 55444, 50456, 61300, 2137, 111458, 41994, 65815, 20573, 171738, 111385,\n  174612, 46292, 37295, 150555, 55133, 45791, 85658, 132663, 4200, 13863, 247261, 33106, 191130, 68764, 69933, 342026,\n  79771, 57623, 102440, 82923, 158321, 74104, 66775, 232997, 52280, 5348, 14740, 63482, 166796, 21974, 61836, 39710,\n  221620, 16509, 20155, 122691, 62461, 15494, 286059, 74491, 11278, 173634, 24814, 36352, 4067, 124651, 6219, 20384,\n  88152, 106522, 11199, 27155, 83409, 59291, 62619, 7943, 31717, 82823, 35872, 25490, 121367, 16822, 5527, 43809,\n  13522, 275353, 25968, 13784, 47325, 66250, 55180, 23370, 37945, 34951, 32887, 154415, 10406, 26787, 7574, 51785,\n  174348, 5257, 63098, 12141, 249321, 18164, 175374, 159625, 154101, 6386, 36436, 10514, 64912, 129913, 42505, 64489,\n  29938, 34866, 92162, 115463, 51775, 138015, 32129, 31108, 17220, 19470, 60959, 82863, 15776, 2068, 11894, 44229,\n  166138, 59776, 2329, 138779, 78890, 11618, 39616, 3684, 84425, 73187, 5203, 51002, 54121, 48875, 276201, 108655,\n  42861, 116287, 106861, 140810, 16368, 27367, 102464, 4845, 24572, 65525, 25498, 65011, 291647, 3490, 34570, 87715,\n  10197, 173917, 12769, 8636, 32073, 8577, 38657, 12073, 22651, 98887, 35637, 26878, 11677, 114271, 87008, 92497,\n  97509, 14575, 3470, 58305, 26952, 16841, 8381, 10555, 35787, 2648, 41602, 77764, 18424, 35932, 45851, 49096,\n  41910, 7650, 71685, 129774, 71614, 52658, 36248, 19880, 94977, 39129, 145464, 57624, 72318, 30245, 113156, 32799,\n  41594, 8407, 15488, 66070, 70024, 38697, 26127, 49773, 275419, 9728, 21901, 111141, 37702, 136166, 21682, 76474,\n  60199, 7085, 79133, 215800, 7335, 50628, 141287, 17217, 39107, 44612, 205482, 35296, 61315, 75127, 44962, 2175,\n  18271, 83503, 115273, 114695, 18394, 122374, 164929, 11745, 33768, 52043, 39554, 3954, 87884, 6547, 14314, 26459,\n  104277, 94471, 129578, 91248, 123724, 20555, 12338, 148214, 7277, 42970, 32692, 38110, 56288, 19752, 90889, 130277,\n  71981, 95103, 10470, 106893, 189803, 47422, 67706, 38984, 49320, 67270, 32034, 67179, 3352, 105490, 2902, 57799,\n  6798, 57302, 88662, 2520, 14240, 632, 64114, 111171, 8954, 67696, 178121, 64478, 69220, 98726, 78181, 52577,\n  94433, 48703, 92812, 106819, 57372, 970, 11507, 56315, 28620, 13927, 5879, 50384, 68863, 811, 54518, 38111,\n  193727, 4518, 82041, 45997, 85575, 141392, 39464, 38164, 42309, 34939, 27631, 115200, 41667, 5852, 85451, 45254,\n  67689, 36959, 69349, 25516, 42081, 284, 1617, 24389, 22543, 92428, 55862, 39478, 44824, 158788, 112673, 24864,\n  12719, 95525, 421417, 153017, 28540, 12854, 40525, 3447, 114236, 119912, 41795, 7482, 101553, 14084, 90262, 98146,\n  27638, 309738, 63986, 26332, 27296, 73457, 26543, 61153, 4300, 19919, 75492, 157204, 5353, 16531, 61956, 47675,\n  4663, 113612, 136374, 222705, 19379, 3505, 93057, 31, 94098, 199552, 229445, 75586, 3758, 9803, 54043, 51022,\n  95888, 418251, 47815, 8325, 95144, 54354, 55865, 238684, 80344, 14773, 42431, 26078, 87320, 4173, 49174, 59477,\n  28447, 53727, 59450, 37425, 259518, 260604, 13221, 59388, 12718, 19200, 54560, 211, 71391, 111794, 43082, 14317,\n  152731, 24043, 16563, 55318, 37063, 33985, 12107, 8451, 24132, 3287, 51633, 24662, 31911, 94583, 27566, 47306,\n  104896, 123698, 17450, 4892, 15672, 1239, 135524, 82674, 103782, 128381, 195863, 42040, 1521, 88669, 5368, 61959,\n  4945, 14280, 54416, 134709, 72541, 71947, 141565, 31806, 23717, 13486, 49292, 28755, 122632, 37972, 227115, 71973,\n  15619, 45930, 73185, 19728, 87175, 41028, 113786, 71313, 206120, 15801, 80915, 37045, 29428, 213276, 42087, 78562,\n  189780, 69074, 397153, 114057, 61416, 106834, 67699, 184163, 28350, 15478, 41280, 87632, 44457, 50713, 90885, 28916,\n  972, 63102, 58749, 38921, 1175, 182790, 133419, 33965, 47233, 11089, 17346, 24241, 198738, 99658, 3632, 15062,\n  95789, 46049, 55098, 80139, 41907, 66419, 62949, 77436, 21953, 25574, 115070, 31261, 97034, 86959, 15541, 120250,\n  59341, 34977, 37912, 95547, 22864, 57455, 27137, 114631, 53713, 28129, 16277, 219371, 16873, 48501, 25135, 20596,\n  32971, 2044, 70095, 43252, 20693, 70672, 5134, 139706, 20954, 18793, 5240, 51062, 31336, 1055, 9964, 20812,\n  21477, 94661, 40609, 21902, 16169, 19574, 74742, 44447, 38370, 72501, 159022, 27749, 16412, 12007, 11867, 64559,\n  9019, 60758, 6521, 41890, 3841, 1011, 208127, 23460, 24599, 115489, 30488, 57116, 21938, 126419, 279459, 210650,\n  17085, 29349, 117824, 4642, 6484, 24363, 70018, 30366, 81198, 51053, 57403, 18554, 76413, 87591, 130889, 12473,\n  5849, 12616, 44081, 17726, 72514, 20574, 39804, 77427, 12320, 153366, 63071, 43010, 65247, 12837, 49822, 119883,\n  276175, 48298, 17891, 55934, 37234, 15426, 536, 214834, 59796, 107143, 73492, 82284, 52642, 23860, 59584, 109240,\n  16312, 295305, 2881, 141523, 57349, 24996, 10169, 27023, 198507, 100921, 101928, 19612, 94148, 193262, 51722, 22594,\n  46134, 59320, 233123, 23163, 18958, 48350, 10418, 11573, 125552, 158579, 54776, 71219, 1747, 9488, 45024, 123446,\n  18725, 52331, 24040, 29879, 151873, 17176, 22311, 178292, 14901, 31482, 26423, 45056, 5490, 10022, 15757, 97024,\n  68287, 99243, 207125, 128979, 29470, 1325, 74812, 32791, 3689, 45845, 118509, 34820, 64794, 70223, 8344, 91384,\n  40814, 104345, 56330, 22095, 26018, 85129, 77063, 49913, 25692, 80443, 48676, 207462, 54450, 117644, 131820, 12098,\n  2703, 16863, 18276, 60530, 88278, 81796, 11213, 17129, 124886, 4875, 8932, 23106, 173087, 7396, 71377, 23220,\n  174000, 24872, 76210, 196270, 24159, 83016, 95481, 92620, 179477, 142594, 74941, 14268, 24276, 115069, 15141, 25430,\n  46004, 119419, 64735, 171433, 201876, 166502, 13507, 2133, 209202, 8831, 250649, 58555, 445, 79606, 10547, 18957,\n  52876, 93525, 47741, 109879, 31948, 69285, 97122, 68070, 30206, 36316, 27294, 147592, 157610, 357846, 4949, 3838,\n  39180, 165668, 28395, 105564, 18439, 113339, 26143, 6254, 44124, 41027, 149595, 57880, 50469, 74956, 105797, 64751,\n  5774, 62996, 55064, 12300, 96278, 74378, 41632, 28378, 222758, 215455, 14905, 29733, 200216, 83974, 14267, 197651,\n  50290, 108173, 83523, 72906, 45486, 17894, 248112, 6668, 20435, 12354, 69859, 105672, 46986, 26269, 26119, 21735,\n  46276, 81332, 161990, 24229, 140133, 80736, 85948, 28342, 142326, 114859, 5246, 12288, 15569, 321372, 83346, 67317,\n  13363, 11347, 62559, 87384, 47522, 66304, 51125, 158071, 92583, 215430, 30981, 130176, 2182, 17025, 35860, 41627,\n  7135, 192109, 213, 29142, 16853, 130975, 2389, 127400, 22998, 131988, 9785, 68168, 30272, 21382, 58736, 6997,\n  4952, 39834, 32713, 104019, 63263, 581, 147846, 14035, 35623, 7875, 177579, 12052, 39096, 112656, 33118, 37277,\n  53789, 60622, 157938, 185910, 44864, 30132, 308910, 81836, 20053, 20029, 111, 252367, 110392, 9585, 162293, 4213,\n  124213, 140484, 19392, 33595, 4630, 45380, 23884, 137937, 16087, 21464, 32146, 130095, 28221, 147475, 40847, 37757,\n  127787, 95424, 105555, 146520, 25839, 9169, 5255, 99477, 77481, 245575, 97240, 7618, 44693, 52011, 5049, 29327,\n  13464, 195851, 8615, 52596, 113146, 3124, 234482, 38343, 6983, 249017, 62799, 87690, 27069, 6892, 7757, 568,\n  55717, 67952, 55524, 29469, 50102, 116514, 63808, 119487, 4760, 11374, 79868, 17622, 7107, 13396, 118343, 202733,\n  26186, 94968, 133457, 113546, 66507, 11011, 141426, 116015, 59145, 7451, 3054, 4656, 36032, 68955, 55309, 29753,\n  104182, 23389, 82478, 44486, 71328, 86912, 16831, 60480, 29425, 22716, 53199, 42308, 64317, 88346, 22804, 101981,\n  50781, 6916, 20926, 87069, 47465, 22345, 6416, 67964, 94298, 12161, 198305, 25527, 69706, 1141, 24861, 18820,\n  74899, 101908, 136290, 36246, 22754, 43947, 149419, 77020, 120756, 58182, 76675, 53183, 25108, 141513, 334998, 81890,\n  93077, 30790, 76148, 97326, 56834, 21494, 3126, 13675, 73286, 10835, 21018, 39793, 39928, 69833, 40373, 1638,\n  16218, 27262, 46999, 35926, 41699, 14586, 109707, 10621, 176763, 65754, 4781, 40629, 7555, 38881, 34586, 20380,\n  70819, 99768, 116580, 11114, 50083, 71750, 38765, 26763, 26895, 31093, 26106, 99244, 23315, 195234, 103007, 80697,\n  26014, 69431, 24523, 14850, 16773, 129449, 83866, 113767, 123079, 183143, 1343, 35751, 41712, 7818, 21857, 75865,\n  5719, 13588, 11322, 41995, 31516, 21912, 16746, 20696, 90427, 100022, 97349, 50603, 158540, 42138, 33822, 20310,\n  85051, 198477, 100819, 31299, 183128, 37925, 83454, 48059, 40864, 109756, 117963, 246050, 27505, 125055, 6202, 12888,\n  55392, 82049, 6852, 20486, 9058, 55998, 15942, 21876, 45224, 30137, 11302, 33518, 96857, 5033, 17578, 243172,\n  30901, 1136, 98132, 67204, 136622, 53361, 185908, 164211, 96557, 1199, 46191, 6810, 56304, 16854, 41481, 31638,\n  120061, 167078, 70451, 36778, 11501, 72634, 53232, 33096, 151448, 12676, 107140, 3255, 5773, 230373, 199725, 58707,\n  89743, 159601, 29117, 51821, 7769, 175079, 179962, 14736, 86069, 12406, 35599, 12585, 2935, 122863, 21218, 92679,\n  18471, 74106, 23743, 2268, 41628, 25025, 251009, 101461, 10114, 69681, 874, 844, 33660, 84276, 20996, 3116,\n  110170, 3629, 33273, 374091, 49479, 7043, 8134, 1695, 26745, 1439, 1061, 171360, 92846, 117704, 95171, 30559,\n  33221, 6627, 172996, 24530, 26731, 509, 15456, 63235, 18795, 30005, 53873, 51891, 87076, 62196, 32574, 96562,\n  8550, 98665, 117502, 67674, 2100, 12527, 40235, 66878, 29972, 78874, 26467, 41590, 120289, 181416, 78604, 54157,\n  3077, 84697, 134742, 91234, 72490, 15005, 76558, 55084, 33784, 162703, 6048, 46791, 2630, 127835, 19594, 122511,\n  208722, 193416, 9502, 8107, 50861, 143793, 44636, 51976, 63483, 12325, 10412, 23264, 79029, 29050, 159857, 149078,\n  6419, 154772, 107400, 107603, 39467, 13028, 84919, 63134, 14302, 158425, 87104, 88768, 45286, 22612, 34903, 13577,\n  64207, 6221, 59147, 11798, 9686, 121962, 135449, 86848, 67513, 17167, 43511, 68844, 44170, 71147, 44786, 64366,\n  1050, 10887, 190612, 21896, 77246, 77296, 70814, 135434, 59266, 18452, 133, 55042, 17055, 1640, 13034, 42496,\n  53801, 5748, 52414, 66381, 7150, 144739, 6440, 74993, 11111, 2539, 50363, 23303, 42432, 27028, 66935, 13005,\n  4278, 7311, 46716, 3338, 94579, 8115, 26937, 50962, 362117, 30782, 3762, 141892, 36175, 73088, 50180, 37005,\n  42902, 253122, 113704, 91922, 41933, 43732, 105477, 3520, 39002, 3843, 42324, 258344, 98489, 29853, 56586, 11607,\n  22913, 43149, 12984, 35738, 74161, 6039, 61803, 269, 84773, 58569, 22403, 44259, 57036, 31666, 126796, 12483,\n  17556, 38761, 298166, 122446, 162288, 3950, 44945, 1370, 74485, 97973, 26528, 36641, 178760, 75233, 37361, 147382,\n  93867, 98504, 161890, 33435, 73635, 18503, 26688, 55952, 128860, 76113, 36649, 15218, 50362, 50874, 136633, 104263,\n  261, 187132, 5194, 41473, 67455, 26709, 46683, 61196, 80001, 415, 103032, 77008, 46080, 63776, 21671, 45605,\n  35662, 12969, 32724, 41546, 4368, 25676, 78170, 10132, 25247, 21941, 10589, 88199, 19230, 36489, 23652, 71018,\n  74393, 15514, 33003, 61628, 22588, 82874, 278, 656, 1822, 7365, 51787, 44718, 27682, 7842, 148545, 22113,\n  235324, 53467, 25889, 37986, 13798, 8780, 14653, 79341, 85998, 58114, 38940, 70133, 13194, 10663, 186560, 72895,\n  235067, 15731, 34281, 180158, 23514, 60239, 132955, 17621, 71669, 107863, 209492, 4929, 147632, 35364, 73172, 45463,\n  23191, 35596, 21865, 59198, 134748, 84141, 128176, 15559, 214683, 7375, 153174, 69569, 105101, 54279, 191537, 11893,\n  1518, 28125, 88836, 27303, 25489, 46180, 96736, 5887, 247114, 5137, 287773, 60728, 7380, 108022, 182042, 30064,\n  54842, 72963, 28745, 42623, 26922, 16894, 8922, 6003, 3971, 130326, 30795, 15767, 26361, 58938, 27324, 20292,\n  20844, 29628, 16534, 159213, 68642, 15346, 219023, 63240, 170517, 8331, 15673, 3213, 77339, 151668, 65928, 33858,\n  123255, 106689, 30575, 26185, 8963, 12688, 15792, 24737, 77818, 92544, 7997, 20221, 150998, 55663, 1268, 41573,\n  48466, 14085, 128978, 65797, 36806, 28519, 69465, 20974, 2732, 41172, 202748, 116152, 23261, 39001, 2280, 32931,\n  11741, 66879, 195696, 31356, 236162, 62810, 25653, 37741, 18243, 31739, 43296, 15723, 126216, 75117, 27208, 74878,\n  28690, 17377, 22841, 46221, 50546, 479, 9735, 5075, 16385, 17152, 9080, 33925, 92760, 24705, 35011, 52286,\n  197383, 118668, 24200, 32927, 246558, 83210, 49673, 39479, 201295, 11697, 23650, 58791, 88255, 2117, 58010, 136860,\n  67588, 5287, 34543, 6591, 71687, 95613, 48832, 64315, 176076, 18307, 105134, 12037, 172653, 140943, 36060, 3370,\n  169058, 87901, 2424, 35703, 33906, 68007, 83459, 86267, 63747, 78729, 15829, 39429, 24835, 60607, 1063, 942,\n  157621, 15510, 142744, 36875, 43338, 26941, 6283, 201368, 30050, 1294, 14144, 28874, 46152, 163373, 100423, 33959,\n  132741, 10200, 30369, 5793, 2770, 40793, 66426, 145294, 51371, 9412, 47667, 53918, 94835, 47111, 93658, 291281,\n  6614, 6818, 28373, 98899, 15112, 55868, 85946, 13126, 11749, 15201, 6184, 52292, 56936, 9994, 67564, 15398,\n  1250, 16480, 28355, 50093, 19027, 134101, 912, 36390, 399017, 67061, 175796, 31206, 58036, 37028, 36592, 15922,\n  100215, 155543, 7324, 4771, 23388, 157277, 186074, 20469, 55815, 15438, 73729, 36924, 308768, 3933, 6366, 20641,\n  124152, 60772, 12026, 70045, 94803, 6290, 19858, 1915, 9521, 22497, 33912, 49717, 64186, 47263, 9814, 19866,\n  8971, 350258, 314, 10683, 28, 6135, 16425, 48283, 30427, 224788, 96210, 41227, 62163, 9112, 237935, 8329,\n  7616, 14660, 20925, 152205, 103838, 6480, 53909, 29003, 35079, 21715, 38510, 2096, 29203, 37569, 47676, 30859,\n  131235, 66331, 56052, 67144, 7743, 65717, 38496, 26265, 17389, 72433, 5984, 42527, 10882, 140995, 248537, 4000,\n  37420, 43361, 72768, 79706, 61460, 44601, 88348, 120824, 228512, 92578, 101207, 2506, 85363, 72057, 112263, 74889,\n  41581, 61184, 59336, 124955, 131077, 388, 24445, 445574, 62822, 10339, 54594, 139384, 119647, 26960, 115230, 377822,\n  10130, 53380, 25507, 4582, 54445, 4045, 113722, 79437, 26925, 51571, 10619, 37744, 19968, 21756, 62099, 38841,\n  29016, 19474, 28660, 169417, 24446, 77906, 53823, 54729, 74028, 4315, 3444, 12379, 24176, 2062, 118391, 71991,\n  61448, 24221, 58190, 114666, 67185, 84137, 1932, 38777, 9254, 63804, 23453, 23502, 8563, 53758, 17591, 83661,\n  119129, 33378, 156031, 31341, 9771, 4905, 245, 10643, 99184, 71196, 20709, 250, 37716, 19394, 203310, 82339,\n  39514, 27829, 5347, 68674, 10532, 102550, 189900, 41082, 221512, 57643, 21885, 60429, 258753, 28243, 26729, 38284,\n  218630, 266776, 74708, 10059, 55980, 59074, 26095, 4002, 23394, 34908, 56295, 38826, 32141, 56657, 44390, 129016,\n  61924, 77979, 141893, 16627, 66749, 173128, 78650, 84113, 32411, 36734, 83212, 22287, 3741, 109048, 15156, 33529,\n  36475, 217436, 48727, 82121, 26678, 67771, 256285, 2700, 77010, 79442, 5038, 3136, 44946, 56358, 46209, 4267,\n  91203, 9096, 96644, 19035, 128749, 10636, 6976, 205036, 116953, 56466, 63959, 18341, 20476, 42517, 7840, 100552,\n  49625, 4375, 77579, 19118, 53116, 3012, 35805, 64719, 13735, 124583, 30702, 85109, 102335, 116046, 63278, 101038,\n  29376, 131644, 18364, 4281, 51946, 89017, 31230, 164451, 83407, 14320, 34509, 23271, 67892, 72729, 37652, 77746,\n  59212, 14913, 6854, 43898, 34685, 72734, 50838, 3371, 21083, 24922, 49503, 29227, 1546, 61493, 17037, 10316,\n  112982, 4328, 38907, 93116, 32972, 99365, 223827, 37012, 74397, 3821, 103422, 35362, 1078, 29713, 94154, 55450,\n  190545, 68894, 29500, 75558, 16082, 49117, 103414, 107471, 86140, 770, 35589, 44869, 58591, 17981, 10817, 9420,\n  89611, 22016, 15994, 34959, 101531, 126914, 193257, 72721, 10061, 73572, 85338, 101867, 105104, 609, 98863, 73482,\n  76319, 100600, 207540, 8308, 20035, 8093, 56554, 15585, 17551, 38570, 177750, 85937, 52611, 10767, 28909, 26249,\n  169061, 139097, 59137, 254690, 190842, 27037, 47208, 1901, 100780, 278291, 22166, 32105, 23907, 107009, 147748, 23093,\n  90413, 43974, 38278, 110542, 115619, 45653, 24331, 51759, 9675, 125197, 28009, 227009, 34710, 181128, 25798, 132667,\n  193435, 41954, 44477, 110078, 49443, 28528, 66593, 13781, 129734, 5325, 109119, 17206, 11183, 17837, 41403, 199989,\n  258877, 23595, 49436, 2482, 16318, 60636, 117129, 70004, 136182, 100062, 20218, 28137, 126808, 127896, 48962, 38967,\n  44635, 13158, 93741, 10921, 27304, 68089, 142263, 18325, 192375, 147811, 36115, 47851, 2599, 12879, 123482, 145544,\n  125648, 78600, 106709, 37509, 47051, 31245, 9380, 153218, 12091, 99206, 351089, 1706, 23814, 20083, 2942, 45798,\n  721, 22708, 105601, 201509, 58800, 153251, 16149, 130340, 40137, 47023, 45551, 84104, 66726, 85042, 67373, 116656,\n  97930, 21507, 18614, 49333, 60877, 118514, 56360, 10125, 74487, 128507, 90887, 17233, 7942, 46505, 12104, 513,\n  54326, 57737, 60599, 113700, 9841, 11073, 24431, 42281, 41428, 3734, 51341, 225984, 13762, 7257, 11599, 104571,\n  8211, 44012, 104316, 48008, 85383, 17867, 24242, 577, 6950, 151859, 2565, 40033, 99177, 174326, 186646, 2995,\n  79806, 4196, 14521, 60729, 201786, 35248, 27115, 28097, 296464, 53923, 41708, 44679, 124087, 83378, 146584, 6497,\n  13144, 70640, 20047, 27733, 29741, 53377, 153924, 19142, 41721, 171276, 66163, 88810, 47634, 5092, 38780, 86108,\n  55088, 32716, 141186, 15641, 254286, 116055, 26764, 59396, 106408, 75258, 2560, 73860, 17041, 253752, 52211, 39488,\n  99064, 95466, 64462, 11423, 12942, 41175, 93052, 29798, 64086, 46186, 33800, 33567, 45233, 66006, 7617, 49299,\n  14005, 40955, 150448, 239881, 2612, 82651, 30016, 5178, 55827, 9423, 94272, 251540, 255, 30751, 103573, 11587,\n  7984, 28977, 4978, 95968, 13980, 47836, 58308, 50268, 38574, 77347, 20931, 57083, 12776, 22503, 10, 4635,\n  46654, 154112, 11869, 151047, 73499, 9650, 31746, 60983, 249951, 39416, 25878, 43811, 2101, 9653, 7416, 8737,\n  26676, 92346, 181430, 83072, 25996, 158181, 85015, 37325, 132326, 48445, 2731, 75518, 116415, 209483, 32511, 38210,\n  119062, 17333, 2785, 908, 50449, 214116, 161693, 5897, 31033, 187419, 60336, 5447, 23038, 9049, 23426, 57262,\n  11589, 1592, 18499, 5286, 179252, 44973, 418, 77691, 20007, 18386, 42112, 52950, 14860, 1598, 187402, 62235,\n  129270, 92667, 2326, 100310, 21143, 53140, 34792, 111283, 17796, 65259, 194012, 97011, 144715, 35840, 20371, 15935,\n  60106, 189595, 22778, 41157, 70758, 50788, 46106, 29863, 69842, 86840, 30479, 14570, 34674, 67390, 15509, 71299,\n  282133, 2275, 35835, 109932, 44014, 100391, 67192, 15948, 16774, 13637, 53829, 16317, 57268, 94004, 20544, 25822,\n  38528, 40203, 28555, 97510, 24053, 21113, 6021, 47281, 46373, 2496, 116133, 176010, 201667, 28820, 53091, 166496,\n  28327, 26507, 34663, 247773, 471023, 17682, 2427, 24715, 51889, 11389, 166917, 3466, 102667, 63097, 164910, 47310,\n  21193, 150917, 3081, 121294, 114909, 56277, 57524, 64525, 84132, 17553, 63486, 76104, 69317, 55368, 502, 4853,\n  96723, 70125, 25212, 69051, 67969, 36687, 75249, 1403, 16134, 580, 2956, 41676, 68145, 22459, 93435, 124068,\n  15058, 46025, 62695, 17614, 28765, 189125, 1647, 15184, 32035, 23120, 137691, 51605, 2524, 74673, 6620, 207114,\n  101089, 36259, 21019, 104217, 98664, 31074, 19082, 94463, 25045, 6564, 91038, 90673, 76571, 79552, 64302, 92382,\n  14957, 61083, 144594, 201758, 86040, 109363, 266748, 12661, 118506, 125644, 159814, 57896, 262428, 108888, 87913, 33717,\n  154764, 294744, 43549, 58731, 81573, 67852, 24804, 51538, 39681, 122957, 62858, 15248, 283900, 55535, 49196, 35328,\n  73287, 114610, 61587, 16985, 127825, 28981, 37479, 9256, 544, 41344, 20620, 91193, 80448, 170849, 59318, 7633,\n  52347, 121720, 45439, 11408, 38512, 20264, 4581, 36309, 175971, 26347, 10413, 16235, 15180, 35078, 30388, 152653,\n  45467, 29969, 183795, 49439, 33086, 1929, 164867, 88587, 46552, 130665, 18076, 34437, 48894, 15770, 53144, 83762,\n  81107, 66843, 19430, 136312, 43213, 23986, 22371, 51721, 36672, 73932, 85044, 11462, 54025, 63006, 70924, 28412,\n  76703, 388659, 28510, 37525, 8053, 29403, 351574, 243678, 7608, 105640, 74981, 222745, 13299, 69352, 22764, 32848,\n  56619, 140685, 29353, 106, 20752, 4501, 61795, 68153, 238099, 39552, 89245, 17454, 54164, 23662, 42008, 59724,\n  105133, 53821, 26404, 115768, 1444, 16209, 287358, 17881, 32942, 78671, 61192, 56974, 953, 17778, 20882, 55194,\n  37564, 73360, 211669, 11594, 8000, 109829, 67377, 21481, 66316, 204718, 32898, 37701, 119463, 6868, 32788, 5503,\n  106817, 232653, 56662, 123157, 404, 44879, 169840, 19912, 13667, 10522, 13222, 180347, 149108, 31852, 19954, 1455,\n  128597, 19388, 66139, 13463, 31267, 28564, 85407, 118622, 10269, 12637, 135119, 151455, 49836, 122605, 44182, 26588,\n  106150, 14664, 171949, 1452, 1484, 40891, 43483, 32813, 52330, 160046, 414611, 4668, 76965, 52847, 285294, 29777,\n  160486, 19187, 64830, 245534, 171648, 8708, 16151, 96632, 38456, 197248, 3824, 13111, 31263, 5534, 22810, 94095,\n  22424, 5060, 6994, 76043, 37738, 54013, 153414, 28274, 66245, 103049, 7220, 15850, 67467, 48469, 60783, 177423,\n  143369, 15480, 20191, 1782, 60471, 187319, 90210, 9498, 75610, 1006, 245177, 1892, 20895, 6738, 21020, 52235,\n  115528, 104750, 54596, 6369, 86070, 14562, 167100, 84334, 60854, 23828, 51465, 49525, 40796, 89711, 108733, 53141,\n  49347, 11699, 22079, 52616, 18989, 60426, 6070, 1322, 15030, 77286, 28845, 5836, 11371, 49753, 49923, 40348,\n  37578, 73337, 2788, 68945, 15779, 203365, 40093, 11808, 79867, 81426, 46442, 9689, 10187, 52258, 15730, 33729,\n  86462, 49418, 30284, 16818, 46402, 43558, 19285, 95141, 155626, 31136, 296724, 58803, 93200, 46488, 332562, 48870,\n  40229, 30569, 5173, 69228, 7090, 28830, 105171, 66711, 57547, 57695, 42695, 76635, 108053, 24676, 92847, 18249,\n  99598, 51389, 17912, 84688, 11088, 33411, 178627, 569, 47505, 18773, 121108, 7263, 41218, 129818, 35668, 32165,\n  206017, 146881, 10066, 21894, 2173, 12265, 27741, 23761, 20988, 8052, 179620, 44251, 30219, 107113, 49515, 5809,\n  22919, 43643, 10121, 20448, 80563, 119663, 169374, 59245, 57566, 90682, 12457, 225388, 42369, 203562, 11662, 128551,\n  93141, 84259, 24761, 94597, 41675, 122505, 212284, 48603, 2407, 9599, 7883, 24703, 182519, 107518, 90911, 22385,\n  120495, 22791, 32676, 56812, 27154, 24521, 13655, 41800, 16702, 262168, 63509, 14150, 29456, 135382, 45733, 66046,\n  14349, 2518, 233250, 50438, 7958, 21556, 8312, 32247, 16688, 7974, 4721, 4342, 117177, 13427, 43940, 123614,\n  140375, 20924, 42414, 505, 42467, 36757, 55097, 32118, 261919, 34892, 58385, 134010, 74916, 2566, 138977, 120089,\n  153569, 42388, 97409, 75482, 10836, 123, 5341, 33838, 34742, 48578, 76395, 92995, 49526, 37105, 106505, 72144,\n  7621, 24215, 152644, 48127, 105997, 73105, 87109, 52037, 12212, 625, 111988, 112734, 2270, 76628, 35699, 44168,\n  392377, 67240, 91475, 67254, 7755, 119314, 9723, 6967, 17959, 185692, 25707, 36302, 25086, 109996, 7225, 112068,\n  232152, 122120, 101654, 13640, 138791, 16408, 39845, 8399, 33847, 12887, 152461, 34536, 13860, 12517, 180090, 169472,\n  35316, 3208, 52910, 286726, 5811, 60049, 6687, 6745, 1344, 108692, 23669, 20503, 71259, 58644, 186034, 23770,\n  50452, 17374, 5900, 712, 207539, 154425, 93220, 54448, 92635, 125802, 14285, 77361, 50359, 69288, 133264, 162621,\n  5821, 93205, 28457, 129771, 33674, 8402, 51971, 38768, 30255, 195827, 18512, 68308, 2086, 8475, 44179, 212,\n  2587, 255482, 11233, 42032, 96264, 234156, 71743, 9619, 17543, 9966, 59340, 53, 42, 51576, 68365, 150251,\n  6029, 116729, 63303, 1303, 9580, 56310, 126033, 11299, 43007, 25304, 11348, 2202, 139248, 211176, 10147, 4290,\n  82831, 107660, 57933, 177074, 12917, 54254, 36738, 72091, 29607, 42295, 47993, 166376, 25786, 73979, 352922, 17657,\n  51467, 73749, 5917, 82140, 42137, 39138, 697, 49880, 85161, 40070, 149172, 172144, 100698, 83192, 48718, 29859,\n  31561, 21429, 53401, 29518, 88989, 43651, 46656, 32160, 121990, 32912, 74292, 57977, 278500, 63671, 75205, 23517,\n  3602, 60467, 33461, 137178, 109344, 49843, 1353, 103161, 37982, 43271, 19531, 62950, 15279, 34216, 34547, 113009,\n  116442, 189404, 140865, 134948, 28936, 38460, 59707, 136053, 30880, 128067, 49530, 48855, 87894, 16331, 15771, 63989,\n  58079, 104481, 125524, 14569, 128661, 25492, 365675, 116367, 126731, 94516, 122818, 30710, 67392, 52767, 2196, 47261,\n  28051, 49914, 333288, 29945, 146885, 100058, 31013, 158363, 4861, 1817, 42266, 21215, 16216, 4256, 54248, 112813,\n  97344, 128078, 30238, 120987, 42827, 6923, 14989, 69805, 147561, 47842, 51853, 2647, 153948, 13103, 39122, 18142,\n  22684, 76687, 15882, 92285, 21335, 29519, 3993, 86408, 47685, 39612, 24929, 19453, 1853, 134405, 114177, 25894,\n  43349, 26803, 12267, 92165, 15185, 61540, 9990, 69281, 59642, 76734, 309690, 136935, 10229, 92038, 49815, 104501,\n  25520, 66774, 32406, 37445, 187921, 81418, 18633, 84262, 108972, 32019, 103853, 41207, 5579, 45804, 210683, 27613,\n  98037, 39566, 18876, 154815, 24945, 108917, 31510, 38406, 6697, 20809, 29164, 106328, 19193, 8247, 16805, 3543,\n  63734, 213048, 201574, 22433, 137934, 31798, 217223, 2939, 75056, 140267, 99972, 3047, 89740, 22878, 4763, 62402,\n  19767, 110374, 49959, 24684, 224268, 106487, 32793, 8178, 56138, 27795, 3080, 77954, 63643, 24857, 121435, 175431,\n  151661, 102435, 15023, 177670, 39313, 17174, 24416, 12895, 70618, 46646, 17001, 27902, 84031, 58519, 21749, 50823,\n  89723, 59027, 57596, 61596, 84074, 33007, 8029, 24120, 13703, 108284, 63542, 58816, 85626, 83071, 91820, 14146,\n  35460, 124390, 61351, 8006, 8867, 11495, 4529, 43870, 64845, 13482, 73015, 24763, 3439, 9485, 79856, 23851,\n  57906, 220428, 88667, 80708, 99776, 38036, 39933, 208871, 63968, 30726, 291083, 68, 49270, 106842, 112123, 27384,\n  81130, 110097, 118834, 241402, 34356, 13923, 23897, 40492, 16210, 71957, 62441, 58550, 23547, 13636, 20131, 42294,\n  36446, 81802, 1100, 142364, 34090, 61710, 9270, 107601, 140028, 39980, 1414, 320109, 72439, 66107, 14862, 134653,\n  2221, 1149, 9546, 36018, 22163, 35318, 143604, 19080, 57058, 48579, 2621, 55599, 363492, 110403, 14828, 57857,\n  113754, 25759, 29811, 61553, 18913, 107232, 5290, 75792, 95451, 70056, 214553, 3329, 48663, 24095, 11961, 96108,\n  54464, 155383, 53360, 112141, 54037, 49177, 57901, 67842, 176097, 123321, 6506, 228274, 68425, 4036, 160696, 23121,\n  3023, 30678, 64279, 90792, 34906, 65080, 9259, 58549, 29482, 27140, 216012, 23499, 117389, 49482, 25665, 100543,\n  341780, 54232, 60358, 235308, 80431, 37334, 14300, 53910, 58330, 29194, 117489, 59804, 16753, 37401, 37127, 35030,\n  92616, 62680, 44495, 8116, 60907, 43835, 168603, 37896, 94846, 842, 40856, 25319, 147486, 395164, 90387, 68791,\n  4498, 25599, 15543, 116574, 48646, 254235, 132631, 3917, 7773, 30355, 18277, 60008, 46801, 74243, 4222, 85032,\n  7778, 17592, 14912, 22293, 18946, 6094, 46, 29454, 464978, 48886, 97248, 14694, 47558, 169023, 3388, 127473,\n  33223, 22400, 144764, 181865, 177444, 13371, 44931, 27593, 7328, 194219, 91202, 3836, 15626, 22427, 52166, 39152,\n  63337, 7531, 59378, 193696, 94700, 27634, 40257, 41337, 11743, 257393, 217307, 346548, 9351, 73104, 41502, 1488,\n  255024, 105660, 39615, 20814, 39098, 149478, 69081, 19993, 16447, 55270, 37583, 19645, 42647, 14979, 8926, 28968,\n  96230, 49277, 22527, 34250, 39769, 81745, 50791, 18698, 58840, 44616, 70138, 6720, 10068, 38140, 5653, 99473,\n  63439, 3743, 19237, 163704, 35800, 1626, 33560, 38455, 65843, 158617, 28684, 92983, 58823, 71795, 71233, 1075,\n  413844, 42288, 157276, 38514, 9156, 131335, 59762, 40948, 51258, 46584, 9950, 55371, 7434, 2577, 42703, 1693,\n  61791, 27603, 63320, 25608, 85018, 30872, 100002, 36167, 6872, 2669, 51250, 778, 3692, 10451, 28383, 163025,\n  28096, 44948, 19074, 128798, 7121, 36683, 2203, 17586, 33024, 70070, 348622, 5061, 6009, 23593, 42442, 28013,\n  75532, 94062, 64585, 284254, 31997, 89645, 102394, 31393, 192535, 48721, 71088, 128192, 9661, 61738, 34411, 50069,\n  3304, 16352, 53075, 45568, 9547, 42732, 1178, 93157, 14753, 88072, 51599, 88701, 31987, 23387, 63847, 44965,\n  25314, 47565, 7560, 2438, 55689, 1314, 346, 23289, 15896, 475529, 112925, 131467, 20430, 150168, 2504, 17375,\n  39472, 54601, 34817, 12000, 31340, 27414, 5063, 41639, 99744, 6404, 117189, 259172, 25398, 35063, 46527, 96170,\n  115569, 8068, 179160, 161042, 54883, 97999, 36646, 8523, 28719, 11447, 6735, 26129, 205423, 83805, 44478, 94354,\n  23071, 9474, 27662, 132536, 57855, 155315, 195915, 61922, 64638, 69412, 89700, 153852, 149867, 22483, 25631, 4401,\n  25671, 191634, 58296, 7593, 82403, 23703, 17554, 61290, 37616, 211689, 4980, 2922, 20668, 148622, 109058, 2724,\n  39989, 54579, 389750, 94744, 77996, 131928, 41416, 77516, 74948, 105981, 7862, 49124, 140555, 58696, 4033, 57560,\n  175248, 201147, 43956, 80013, 64810, 82504, 14552, 11127, 36515, 10704, 23006, 45490, 46595, 111926, 16970, 31954,\n  4958, 113746, 35379, 27153, 248773, 34760, 166030, 69750, 24045, 70012, 121173, 53304, 28728, 9870, 156097, 134089,\n  136673, 71920, 25774, 2488, 168704, 5343, 127631, 74486, 20804, 188876, 26283, 102354, 114833, 476, 53497, 38795,\n  100325, 26879, 18226, 1066, 27135, 41772, 14104, 58513, 21205, 5221, 84659, 49948, 96151, 18525, 149506, 51579,\n  153134, 107909, 85993, 35590, 45992, 15182, 68394, 22750, 7093, 6602, 26954, 2528, 13992, 8645, 3748, 38754,\n  76047, 16039, 28854, 52143, 1980, 22387, 6152, 255879, 19432, 56677, 64082, 99361, 145001, 56506, 42169, 13125,\n  75159, 24500, 41901, 21053, 87462, 109469, 103771, 55888, 17710, 31989, 233429, 5318, 1013, 119131, 13220, 94790,\n  45556, 27216, 5013, 108338, 34297, 51598, 16968, 224489, 144882, 29596, 70103, 32634, 20648, 23171, 115640, 2381,\n  26061, 129018, 59090, 67066, 11319, 1052, 66080, 134106, 129567, 36464, 198632, 6394, 108555, 342064, 340, 57976,\n  18872, 21980, 39272, 117475, 464580, 20395, 93823, 156783, 33386, 22005, 34188, 504700, 22717, 50887, 196433, 44491,\n  65948, 106413, 3639, 94733, 167189, 37296, 49229, 1697, 5603, 70017, 72359, 61123, 135042, 93369, 6109, 45001,\n  79542, 96019, 54203, 50884, 8801, 68912, 114197, 59072, 202632, 47922, 8431, 242124, 18114, 54405, 129410, 6472,\n  91882, 124518, 39386, 91470, 5973, 31594, 93512, 401, 5239, 5661, 24933, 37492, 67315, 15503, 24586, 447,\n  4431, 98481, 20358, 144946, 60916, 297453, 66825, 30645, 47819, 105167, 552, 87909, 71693, 40566, 5307, 32293,\n  32597, 12315, 4634, 118577, 32606, 74622, 13999, 1446, 18183, 5010, 92389, 27675, 45072, 186756, 72549, 62625,\n  80329, 3174, 188490, 17768, 76385, 56061, 44774, 4792, 24749, 6756, 29971, 24565, 51305, 2866, 185714, 7372,\n  40314, 131257, 46345, 142745, 156514, 10853, 14992, 9306, 14693, 140671, 18567, 166507, 130345, 6503, 52141, 7521,\n  13168, 8694, 14811, 40576, 66214, 114434, 97632, 88033, 18029, 21365, 15834, 397881, 12858, 6804, 73691, 171818,\n  34801, 11558, 167427, 172844, 27628, 109803, 44373, 61609, 14544, 8723, 7897, 26839, 10823, 38501, 189122, 32876,\n  40522, 18836, 231040, 28016, 40185, 9487, 60378, 40240, 33739, 35931, 69716, 16764, 148694, 148116, 26429, 90031,\n  23548, 130862, 153367, 10154, 9923, 25899, 86890, 187712, 61012, 106844, 119164, 108121, 28859, 151900, 43746, 70054,\n  17933, 46633, 32051, 40306, 19442, 73866, 51802, 202389, 34364, 59031, 39109, 86049, 99849, 27312, 354059, 431,\n  164107, 160825, 29370, 26855, 141167, 209995, 47475, 25126, 30629, 112486, 16641, 31932, 21054, 13503, 62291, 8461,\n  6744, 25340, 5056, 190589, 36491, 1498, 102273, 136482, 8096, 46702, 98246, 56502, 42474, 9181, 111985, 43767,\n  41706, 30774, 3932, 26549, 155060, 66159, 102266, 53051, 30650, 208931, 3598, 31618, 10600, 67535, 135897, 87806,\n  163442, 104978, 10409, 139772, 1143, 40979, 7330, 98219, 96655, 131263, 25023, 114039, 61390, 192001, 15973, 35549,\n  52359, 902, 12202, 5580, 7559, 52829, 36364, 11107, 51568, 3787, 4394, 31819, 64256, 1505, 29813, 365608,\n  203854, 33802, 39839, 47786, 4467, 50956, 226690, 12884, 22453, 47648, 16676, 45252, 14504, 2855, 18627, 541,\n  436398, 14538, 2406, 20, 7878, 60282, 10602, 109448, 6980, 70267, 22616, 27176, 8293, 85130, 294480, 30144,\n  63610, 187294, 289665, 163077, 293747, 55641, 995, 86282, 16167, 131142, 7732, 139426, 35763, 21669, 81048, 1053,\n  19627, 16183, 153848, 41955, 147603, 49219, 127527, 60498, 15419, 62976, 59946, 18598, 18032, 16576, 207, 4670,\n  110744, 11552, 9989, 2349, 51346, 15073, 25998, 160678, 33681, 220089, 68035, 65033, 54571, 77929, 12230, 88125,\n  40472, 148399, 62247, 44687, 48615, 158618, 103484, 11572, 39073, 41233, 3610, 86331, 21604, 36776, 83989, 518,\n  13754, 34617, 179678, 35290, 173027, 43237, 66547, 59016, 92560, 12741, 157332, 29334, 11083, 67849, 24492, 90041,\n  47299, 109304, 10326, 20058, 63062, 46195, 31632, 9568, 11813, 949, 131768, 139099, 52007, 9458, 46429, 12293,\n  29883, 97116, 3732, 32343, 9734, 20328, 4732, 83588, 139722, 11257, 49471, 2051, 15953, 233007, 15439, 88041,\n  1550, 78033, 39910, 56576, 20651, 32790, 66091, 16869, 13616, 226368, 19098, 20124, 49306, 274210, 41089, 39818,\n  16113, 202390, 49166, 5280, 90089, 148031, 55043, 2264, 92326, 62595, 168341, 67080, 7584, 39228, 2679, 31454,\n  30712, 21771, 49469, 8092, 72424, 14892, 94819, 370101, 164858, 14108, 16628, 34424, 6831, 26672, 13360, 10293,\n  152871, 13708, 152221, 56275, 55746, 3003, 189905, 73541, 197721, 19461, 138468, 38166, 34167, 86972, 78519, 126458,\n  196442, 22647, 131900, 30322, 6022, 31039, 95120, 35519, 112107, 2704, 104049, 7805, 55215, 99039, 8898, 61822,\n  7538, 79147, 8674, 19781, 123381, 122030, 61080, 29510, 4920, 252926, 24948, 29594, 43539, 79504, 36116, 27926,\n  77165, 119791, 10396, 47075, 8939, 65089, 91291, 49470, 50392, 130812, 24665, 5396, 34192, 146915, 55, 32388,\n  20225, 170176, 24246, 18217, 79762, 97481, 187002, 170504, 22505, 166717, 11581, 22954, 58667, 24092, 24239, 34967,\n  40770, 168985, 20697, 10796, 29788, 36609, 33121, 48586, 97180, 70956, 4247, 10919, 82835, 29387, 24795, 134813,\n  4568, 41932, 107494, 12409, 8579, 7615, 78083, 27482, 13273, 222151, 109832, 56337, 363569, 100711, 21692, 74289,\n  35898, 156666, 112372, 33193, 49983, 165146, 13906, 30221, 436, 23307, 161876, 16834, 36598, 80261, 40181, 489,\n  3237, 17307, 33708, 68069, 131691, 47411, 142213, 17996, 62418, 20656, 40859, 30297, 35591, 115572, 96762, 34638,\n  8101, 100105, 87872, 93118, 4073, 13106, 53663, 14555, 379438, 12544, 34665, 144134, 65218, 83887, 41458, 1700,\n  76072, 7062, 45362, 51519, 33887, 113928, 230002, 145590, 2968, 109731, 69584, 145887, 27573, 34080, 696, 54442,\n  212619, 61698, 42014, 1469, 288680, 91524, 69494, 176890, 68278, 36380, 91390, 73061, 72851, 136365, 18061, 126629,\n  150504, 108159, 73403, 20532, 217896, 18800, 83394, 3780, 6913, 42351, 72130, 124219, 121339, 338937, 19687, 8446,\n  22017, 13873, 48885, 120125, 35340, 27891, 4562, 52291, 51072, 5972, 97159, 14055, 43616, 105781, 67483, 207916,\n  75043, 12256, 28487, 7209, 31437, 59474, 13217, 149676, 10833, 46754, 7502, 32640, 81487, 26299, 56642, 3989,\n  4364, 2409, 1896, 58704, 22968, 42546, 57069, 47889, 41454, 136134, 46051, 102015, 106687, 15526, 254717, 58,\n  85446, 14369, 99446, 71688, 19863, 126847, 291582, 51244, 109625, 70818, 1547, 189380, 149241, 28615, 6289, 179303,\n  524, 62440, 6853, 175754, 141850, 162709, 4217, 140213, 214404, 32835, 370939, 250072, 54376, 228761, 71916, 144701,\n  657, 89940, 17521, 80160, 237023, 148575, 164257, 272527, 9401, 198903, 24729, 17703, 108137, 43135, 48966, 56162,\n  53800, 36151, 13173, 1783, 32474, 18864, 70754, 46888, 49712, 30038, 58553, 64793, 53334, 174049, 42965, 84561,\n  126876, 70090, 16520, 63753, 27337, 69921, 58122, 69010, 45552, 33142, 1092, 120910, 177696, 3676, 16059, 23396,\n  8269, 22160, 9571, 34657, 15036, 46764, 37354, 25445, 12097, 63888, 48103, 145, 42240, 80858, 105547, 28234,\n  2328, 51188, 12063, 12469, 125374, 98182, 171585, 129756, 119295, 23533, 25395, 181401, 99715, 107908, 42579, 37609,\n  2500, 59133, 67194, 46635, 19624, 31959, 24153, 277972, 39441, 105587, 56371, 24069, 27220, 18122, 50693, 3846,\n  102691, 55065, 140440, 293, 60957, 118436, 1340, 17314, 94543, 71522, 9010, 49481, 39101, 30757, 52442, 3349,\n  18566, 55681, 6148, 49861, 67362, 29473, 16424, 51773, 13975, 16105, 153263, 53902, 78230, 197042, 15803, 187130,\n  25017, 6214, 105388, 38599, 34017, 9107, 660, 114778, 239007, 212872, 16230, 195154, 90027, 38987, 248, 60897,\n  39351, 34856, 31011, 21775, 41681, 1559, 85670, 6103, 35354, 83280, 187563, 5745, 43822, 13397, 20816, 140079,\n  1043, 6348, 13019, 188905, 916, 83185, 13921, 197369, 58587, 308353, 44852, 37817, 141983, 32764, 68581, 40892,\n  94818, 6526, 46289, 37353, 38799, 65245, 127045, 12280, 75459, 107508, 56307, 93576, 41114, 92631, 22742, 68224,\n  67432, 122795, 2131, 30261, 16195, 71686, 80872, 19067, 36606, 55415, 51055, 65943, 59568, 48358, 40947, 230410,\n  22272, 116297, 133612, 74166, 126769, 58783, 115647, 39171, 31424, 59980, 6420, 75687, 68659, 22219, 19662, 51609,\n  12287, 7887, 94526, 61885, 134302, 46006, 92537, 80123, 257977, 126663, 55154, 71071, 5756, 38621, 29511, 61768,\n  207285, 85526, 35878, 1517, 95637, 40711, 214057, 75041, 47248, 72951, 22699, 85378, 117689, 4729, 158936, 22518,\n  19583, 25056, 17451, 43230, 77451, 141822, 2028, 7801, 22373, 4034, 75301, 60991, 12200, 59589, 123234, 17449,\n  54993, 3264, 16430, 33128, 117118, 56124, 178609, 12642, 34244, 236200, 43665, 19313, 29386, 45091, 42098, 10042,\n  34562, 71330, 29635, 50068, 53819, 124237, 44714, 32804, 71267, 130300, 48998, 56578, 64172, 172768, 50075, 17351,\n  77665, 85602, 1594, 81728, 49368, 46606, 19775, 75183, 7716, 32889, 26648, 13436, 59301, 29561, 77044, 108652,\n  25749, 26512, 343982, 16328, 45426, 53772, 84254, 67097, 194789, 61224, 17035, 160685, 17297, 202215, 135406, 118341,\n  2650, 2712, 165122, 39668, 1766, 97847, 41583, 64750, 32501, 260547, 28864, 64103, 45198, 19516, 1158, 166912,\n  20403, 34027, 10963, 16141, 20984, 163663, 185362, 27299, 6600, 243594, 45496, 154199, 14171, 53891, 52940, 101642,\n  94604, 7963, 104592, 152606, 19037, 11118, 25808, 54515, 5402, 42084, 147184, 18390, 29896, 164225, 162873, 40466,\n  9938, 54801, 70146, 66759, 59935, 43540, 58676, 69171, 109708, 38543, 32207, 46591, 88081, 20140, 41767, 101298,\n  145182, 39899, 12204, 21085, 44844, 32313, 226062, 13138, 39167, 7649, 21294, 19544, 352626, 42947, 112978, 162137,\n  164173, 121993, 17813, 6102, 35374, 5269, 42206, 30800, 45982, 22982, 36251, 17144, 6122, 8671, 8084, 272404,\n  154, 122768, 12006, 76527, 73419, 69325, 105807, 9495, 220487, 29197, 89056, 160446, 53834, 197550, 37292, 117751,\n  53601, 24091, 108269, 72650, 17992, 118251, 13578, 64227, 8609, 97876, 56750, 36113, 229321, 150223, 85160, 26383,\n  5610, 88738, 33839, 35306, 68098, 12374, 121473, 27197, 66815, 63716, 10127, 10388, 71012, 155117, 10660, 38130,\n  95069, 200906, 56997, 10546, 140968, 26164, 58789, 80414, 27396, 29337, 17319, 78747, 8957, 43718, 57739, 8704,\n  134489, 9251, 14262, 40583, 24656, 39133, 5306, 43837, 86659, 164677, 194782, 27468, 56598, 41406, 95731, 17647,\n  134852, 11972, 71605, 77846, 17316, 34195, 24465, 42471, 123838, 4286, 11465, 5223, 255436, 106016, 15363, 133653,\n  6613, 57615, 21482, 5929, 41610, 5528, 159163, 20266, 138033, 2783, 48074, 249145, 81452, 57741, 38155, 31191,\n  32023, 131830, 8712, 116513, 32396, 160702, 187621, 166002, 123687, 12, 62689, 145928, 63398, 18560, 86346, 150231,\n  8693, 5478, 54663, 56869, 29712, 20471, 322015, 164692, 30407, 52016, 160121, 22929, 19296, 52881, 60340, 71650,\n  121188, 31059, 10424, 72973, 3551, 30412, 44737, 172383, 36099, 243424, 5274, 49999, 20032, 79415, 43567, 95143,\n  111948, 20318, 17729, 101737, 56624, 96891, 161576, 14956, 16547, 135980, 59262, 77152, 27453, 6123, 35571, 43380,\n  35916, 62277, 21785, 53693, 15378, 108237, 63, 2276, 52039, 70272, 78694, 41537, 56849, 116796, 14411, 20761,\n  13489, 233058, 9422, 23296, 22214, 27805, 167552, 26532, 73177, 43781, 1976, 47479, 53097, 70358, 25233, 10202,\n  277349, 32720, 23465, 45782, 2157, 75011, 99414, 46797, 14029, 331188, 26634, 25912, 187886, 51411, 142415, 54672,\n  10260, 67364, 68176, 84898, 141743, 32203, 8882, 16414, 246460, 67826, 1065, 38386, 91880, 168610, 5162, 41010,\n  50869, 14162, 7962, 335266, 3788, 18011, 86185, 14140, 49486, 66814, 124474, 12893, 133566, 255655, 79151, 46849,\n  54950, 40987, 113502, 4653, 33120, 1563, 160382, 117713, 129337, 309186, 18171, 10889, 53768, 44858, 38544, 36763,\n  18333, 15858, 58971, 6477, 9525, 8535, 14726, 14096, 26902, 170756, 28405, 233366, 312251, 51708, 14127, 19199,\n  10297, 110312, 48460, 646, 9020, 40769, 83604, 51716, 70759, 2649, 59125, 55621, 16647, 2952, 10961, 74126,\n  112432, 43916, 267460, 5120, 59260, 28040, 31308, 16545, 84609, 47186, 40537, 205682, 9818, 19650, 93983, 42181,\n  82766, 50191, 13339, 114720, 73569, 23501, 5541, 66254, 468, 17966, 5125, 81538, 46001, 88315, 134477, 4042,\n  75780, 17161, 37372, 9273, 55028, 52868, 48506, 197660, 52106, 1678, 131509, 88997, 11498, 229161, 99808, 17550,\n  43645, 124582, 219145, 8184, 108069, 70061, 175724, 99312, 17150, 2838, 7073, 156152, 17753, 49092, 16803, 1821,\n  29417, 92090, 23379, 66219, 16705, 25405, 141529, 27280, 31799, 6767, 12496, 46640, 9606, 10300, 33865, 90498,\n  289, 141972, 28645, 1755, 122254, 36574, 145200, 57778, 115975, 15433, 1941, 4099, 8620, 50560, 123303, 55676,\n  6133, 5443, 25678, 28512, 255357, 14348, 122676, 93720, 56908, 9978, 32758, 60073, 14456, 30325, 74179, 182377,\n  133464, 124701, 18020, 32177, 43554, 808, 19883, 16600, 79224, 7238, 18109, 28556, 11247, 50684, 94823, 7729,\n  29630, 27895, 43494, 66615, 160, 75616, 204393, 4150, 12756, 120948, 108425, 9998, 25464, 61334, 213823, 15423,\n  65960, 63934, 87262, 84230, 350428, 96963, 99319, 27630, 62521, 82558, 7456, 70035, 321796, 22677, 117013, 180582,\n  100359, 79812, 34557, 287830, 67358, 14176, 80683, 114848, 35169, 90997, 1447, 22600, 46172, 146596, 10923, 103084,\n  113128, 53346, 226456, 59683, 48988, 21632, 90741, 80771, 88868, 89090, 59673, 44207, 31094, 81602, 72782, 32997,\n  33266, 124468, 127301, 33848, 6847, 2940, 167663, 1154, 60887, 4791, 68165, 51588, 98188, 27452, 53523, 3630,\n  49659, 31844, 716, 23618, 69117, 101601, 4697, 29366, 92977, 133129, 100459, 35256, 220228, 220740, 11194, 50122,\n  13947, 1305, 2379, 119210, 80181, 112061, 18955, 53969, 35103, 28242, 18281, 26482, 62170, 23125, 22627, 17903,\n  97351, 70139, 14931, 69751, 13475, 194213, 6823, 66651, 2440, 3123, 124201, 127058, 199768, 273513, 29218, 168746,\n  19498, 30628, 254726, 18151, 36597, 16458, 114447, 3813, 46971, 184066, 132731, 85793, 25234, 113561, 20977, 87033,\n  67806, 81570, 82077, 83128, 62881, 16590, 59929, 31721, 84717, 54839, 152353, 27946, 73648, 1152, 51494, 25166,\n  181966, 18536, 35859, 21096, 10488, 5434, 87296, 116782, 94149, 20100, 42748, 119284, 21550, 80954, 161142, 3281,\n  26655, 56068, 31234, 68973, 63436, 197146, 77802, 53836, 48375, 31390, 138097, 215755, 14405, 14690, 48482, 192674,\n  165650, 4356, 6779, 90318, 9621, 53563, 21892, 11380, 24439, 27988, 65408, 32100, 28043, 30121, 124, 52304,\n  42735, 36882, 47875, 40915, 4490, 1857, 64523, 63890, 29963, 3265, 24732, 6558, 56674, 255187, 78937, 55716,\n  45373, 202097, 105143, 40496, 1934, 50343, 10400, 93193, 262446, 123174, 33291, 88639, 50855, 19733, 11387, 78609,\n  67098, 33565, 79076, 71724, 26898, 68956, 47175, 78105, 5261, 194162, 6861, 11334, 52696, 3195, 1099, 854,\n  40644, 42446, 51986, 165826, 33900, 14512, 8567, 107082, 9440, 96468, 48368, 15017, 180286, 38407, 11266, 27073,\n  87162, 25059, 1767, 90124, 22940, 50038, 4456, 79274, 19704, 269589, 3740, 24611, 26936, 118228, 122759, 44861,\n  69769, 8268, 21928, 1448, 10254, 25662, 37572, 15808, 101759, 47818, 56338, 32066, 27406, 61598, 102489, 68037,\n  12243, 45731, 6222, 13525, 48000, 97528, 22882, 28821, 73926, 12033, 35515, 19990, 113215, 45359, 13095, 69110,\n  54935, 144153, 32952, 39972, 5726, 20322, 27148, 119607, 192787, 10814, 127655, 29129, 4312, 11899, 293735, 47721,\n  106216, 47945, 13663, 4293, 9366, 4600, 36217, 51600, 11550, 30486, 35147, 4378, 52949, 225366, 876, 56535,\n  23457, 10620, 14352, 63024, 212271, 53386, 55283, 2154, 277152, 6832, 58247, 34965, 133895, 60302, 8020, 17598,\n  108374, 41827, 77422, 41356, 6191, 78382, 44389, 79737, 96477, 57997, 36253, 168231, 29980, 58643, 13506, 77777,\n  218916, 163459, 37836, 70135, 58024, 40795, 89998, 95793, 54696, 46896, 3850, 14959, 40853, 50010, 53886, 103929,\n  91124, 21842, 109259, 112031, 65894, 24294, 11400, 75618, 91170, 52085, 77528, 106068, 65908, 36186, 196059, 70011,\n  252552, 674, 93814, 79169, 6793, 31343, 87518, 50063, 29212, 56507, 62602, 24490, 15389, 130371, 20806, 17839,\n  44516, 4956, 102925, 118742, 122515, 17602, 47643, 17175, 52617, 34827, 384, 128737, 35058, 16456, 4055, 91444,\n  9017, 27903, 32324, 74054, 103536, 349949, 23135, 91177, 39510, 20237, 139249, 107742, 49136, 161940, 10176, 4296,\n  19242, 19236, 38664, 13941, 130652, 63883, 181786, 74033, 662077, 40517, 51656, 4092, 74699, 174254, 30240, 249851,\n  47024, 124719, 88983, 17979, 31422, 88107, 12752, 18046, 8517, 112048, 15131, 61643, 73351, 4553, 10608, 181387,\n  24399, 17507, 26238, 34094, 13867, 45419, 28560, 23320, 128360, 95692, 140246, 250559, 4810, 17968, 25372, 235183,\n  4434, 11316, 6759, 113457, 61779, 50021, 20556, 133305, 111983, 259709, 231509, 141441, 61036, 58891, 28950, 14898,\n  17798, 35773, 7261, 450465, 110240, 66004, 161650, 164984, 59722, 17874, 41866, 39325, 102960, 36234, 10606, 25254,\n  39688, 16397, 879, 188946, 10001, 46267, 109745, 88992, 23803, 12899, 109186, 223568, 23039, 16254, 20592, 126376,\n  176498, 68200, 93812, 5609, 56659, 71490, 16814, 75820, 44814, 26002, 31909, 11613, 134295, 51635, 17304, 5479,\n  17188, 72639, 166564, 60617, 77577, 9173, 51736, 125261, 74466, 141449, 33396, 52135, 226175, 206041, 16540, 2241,\n  102472, 15065, 11417, 44369, 154333, 39439, 21371, 35696, 63900, 86098, 215585, 10637, 111747, 26520, 35829, 5072,\n  18062, 38762, 86113, 33683, 41171, 51676, 206735, 11386, 79669, 104994, 174586, 84969, 32773, 6701, 65682, 16472,\n  408933, 62302, 88447, 143840, 42562, 29889, 168822, 199833, 28931, 31217, 94805, 6702, 30907, 53329, 73464, 80367,\n  107388, 92999, 83741, 56375, 43487, 94239, 54863, 13740, 2946, 15038, 117251, 65511, 240310, 36372, 2795, 110090,\n  23938, 154352, 180646, 13562, 24354, 38003, 14983, 27192, 319, 49724, 68544, 92943, 184983, 39339, 36199, 161825,\n  7927, 16738, 7599, 1393, 6488, 53031, 27832, 35812, 1422, 77769, 52152, 9393, 10790, 70529, 103117, 58677,\n  68809, 142754, 214789, 212425, 68209, 24340, 33236, 124155, 64775, 336, 120720, 43770, 4361, 63444, 9512, 52337,\n  202, 37869, 58071, 28602, 17123, 124940, 64579, 79394, 59634, 16838, 71347, 33171, 51200, 72048, 194123, 84312,\n  44391, 184338, 30592, 49986, 18188, 72135, 53498, 57477, 17843, 74498, 12560, 37524, 2619, 153428, 26875, 24918,\n  74278, 49884, 44432, 39983, 3230, 39257, 81646, 26616, 9540, 23710, 69802, 52778, 47187, 280, 20102, 190963,\n  21702, 33112, 201384, 189730, 36274, 151103, 62470, 79614, 56894, 160976, 37846, 3819, 43907, 28142, 33980, 44483,\n  16310, 43780, 91255, 6410, 34790, 53414, 55594, 62493, 16866, 126630, 78730, 70800, 6150, 2638, 96447, 42805,\n  5561, 80903, 142508, 69107, 13587, 90093, 68310, 13770, 107545, 142426, 6310, 11281, 108873, 30379, 19476, 19039,\n  126867, 47619, 44321, 1557, 86986, 12174, 285300, 692, 28640, 174731, 39442, 33395, 33427, 183086, 62041, 33967,\n  19017, 71946, 141533, 41962, 5762, 27368, 19966, 260045, 80637, 136704, 106076, 25336, 17430, 7907, 59393, 184,\n  46903, 143058, 51209, 156531, 2047, 28617, 58028, 3727, 131055, 2181, 190078, 104219, 25958, 39516, 25800, 76861,\n  13558, 64738, 31952, 28604, 5444, 142725, 28795, 87891, 47152, 833, 20563, 69475, 13900, 17091, 271888, 185043,\n  44563, 4833, 59908, 40623, 122857, 138131, 6213, 136826, 45348, 94359, 56641, 22196, 70863, 57354, 56451, 72278,\n  39593, 53647, 46234, 29708, 54332, 63721, 17639, 16420, 38068, 45645, 18971, 54437, 33637, 39722, 36484, 68634,\n  318, 5298, 22418, 20417, 40310, 88, 18126, 44073, 143467, 137263, 71354, 82354, 18502, 189426, 11156, 72484,\n  24520, 27572, 28397, 1057, 11377, 43227, 61610, 141001, 62013, 3621, 2123, 25838, 28942, 106389, 138280, 139177,\n  27246, 10742, 1290, 24912, 28269, 40413, 12701, 122933, 83545, 3131, 5191, 33319, 17999, 208755, 75460, 44990,\n  59015, 14954, 33696, 180654, 90707, 63223, 87538, 51, 30065, 70087, 47405, 49098, 15161, 490862, 57902, 10363,\n  34720, 124013, 2826, 107593, 1263, 16539, 8297, 53595, 37008, 190173, 24783, 28381, 2012, 14817, 222228, 23569,\n  6060, 37405, 4132, 23773, 98575, 114011, 35293, 24317, 92933, 80389, 14038, 96901, 5721, 58820, 71786, 38355,\n  299, 2937, 128393, 129071, 199555, 22135, 61163, 3457, 24578, 103336, 75552, 8037, 29223, 24032, 36855, 65087,\n  2985, 11252, 15167, 48922, 743, 16251, 113770, 51774, 115825, 202685, 4095, 133501, 109523, 3240, 22784, 51862,\n  136657, 17899, 114978, 57429, 47454, 8657, 11392, 32391, 26378, 35272, 1426, 34467, 53586, 83481, 40561, 57729,\n  3733, 111799, 328168, 6514, 174945, 20097, 14557, 18636, 93340, 171450, 639, 117760, 244456, 15998, 75359, 111774,\n  5693, 73895, 98142, 34182, 37386, 132752, 48186, 121074, 28782, 11866, 26615, 23940, 89767, 129357, 80551, 82029,\n  27545, 83711, 126798, 801, 23573, 21400, 128295, 14924, 18798, 114163, 50035, 114816, 136425, 471234, 15959, 173936,\n  34320, 17327, 80636, 27686, 84778, 119579, 98823, 73515, 20041, 82828, 124250, 4650, 48453, 64519, 115563, 26853,\n  38215, 37801, 92219, 69955, 7477, 145790, 19159, 94085, 71958, 65302, 12375, 44454, 40621, 106911, 19581, 3379,\n  8773, 16999, 182583, 5202, 5874, 127304, 16993, 14116, 187927, 3375, 20370, 44171, 105965, 18978, 61953, 17115,\n  51100, 102276, 75811, 7602, 43533, 31235, 7956, 72681, 18083, 5986, 190352, 3671, 8443, 19561, 18603, 95186,\n  10180, 31524, 10515, 35607, 43597, 12356, 10299, 174108, 2003, 31154, 62144, 6234, 183999, 16214, 205583, 69997,\n  69689, 1386, 87561, 18340, 12216, 23427, 2010, 44232, 129696, 140942, 7349, 4623, 146188, 5101, 86380, 150439,\n  62389, 21860, 117536, 12248, 34044, 63481, 85500, 98463, 68410, 7339, 87770, 71963, 12765, 3686, 14919, 2974,\n  43273, 7350, 39745, 6266, 26949, 192687, 75021, 968, 266807, 27515, 15493, 5904, 3345, 21226, 90343, 14616,\n  34477, 13783, 5111, 69002, 79197, 20455, 25812, 125162, 5688, 23290, 86326, 151802, 47539, 53270, 120925, 57870,\n  213110, 15305, 23776, 142238, 21634, 69658, 179702, 13601, 22257, 9455, 35397, 86555, 50092, 17185, 21662, 47115,\n  32222, 159490, 66608, 20354, 42346, 75706, 11938, 55979, 39530, 138927, 7527, 13431, 63668, 92125, 206545, 83160,\n  98, 105744, 113739, 10666, 134978, 88373, 50980, 17237, 74022, 5974, 44855, 31946, 5152, 17761, 22091, 89954,\n  59088, 181724, 89377, 71648, 174145, 6081, 202459, 12825, 37220, 45669, 60029, 47529, 9934, 69759, 92928, 1003,\n  9545, 40944, 40882, 123191, 118937, 215977, 4632, 152290, 5724, 38351, 20824, 19010, 87240, 135102, 56782, 135053,\n  19875, 30902, 38714, 93406, 15784, 18212, 103460, 25829, 40143, 17780, 5626, 20039, 23263, 66779, 128772, 41751,\n  87513, 216438, 5230, 73516, 181654, 37997, 80801, 90214, 285152, 76150, 31873, 8348, 37881, 138317, 50195, 1565,\n  263241, 15964, 118491, 28092, 4966, 6035, 45147, 26418, 43934, 84355, 16241, 7487, 10433, 247295, 3172, 8129,\n  186657, 57, 71773, 143295, 6470, 101381, 39489, 160086, 74416, 43233, 52957, 51944, 225854, 53358, 11933, 29452,\n  25908, 40737, 49314, 60112, 142677, 7636, 42896, 27738, 246262, 17093, 14777, 56250, 32280, 129157, 16346, 76797,\n  6192, 34415, 425, 120600, 75890, 191879, 176315, 63506, 45546, 161456, 5005, 46773, 143264, 38320, 150132, 134225,\n  135305, 182762, 55889, 102851, 29742, 44842, 129661, 64244, 47013, 53257, 4250, 50419, 77787, 123983, 24915, 12948,\n  11732, 36176, 80467, 160621, 126658, 56748, 175875, 78143, 8763, 54016, 205303, 6236, 37950, 84876, 66862, 80427,\n  21806, 125486, 21484, 35813, 57557, 14539, 213401, 86192, 113464, 36625, 64405, 27231, 89465, 4451, 75847, 20978,\n  108995, 205734, 68217, 94454, 164574, 18012, 255036, 16771, 23894, 158505, 7114, 43317, 22996, 11028, 52204, 124949,\n  23169, 226500, 10370, 46407, 15369, 14412, 60558, 218161, 23117, 18847, 313212, 60955, 17642, 82698, 38578, 289214,\n  130607, 42162, 81718, 82632, 40503, 951, 48442, 14289, 36239, 91499, 48742, 125633, 280990, 7266, 26286, 77911,\n  44666, 7534, 217478, 178981, 9981, 2833, 22818, 156155, 40427, 12913, 72539, 44825, 147487, 28272, 67343, 16061,\n  26869, 28878, 13104, 26717, 168452, 222284, 63772, 8001, 32886, 55288, 25367, 12083, 32991, 27965, 29014, 23535,\n  46798, 8822, 7448, 101081, 240839, 93683, 48095, 16054, 15111, 14427, 104643, 135450, 70502, 37385, 89619, 135605,\n  65697, 66256, 31643, 242955, 88548, 21883, 9676, 103291, 44145, 3863, 31735, 8400, 28701, 1387, 89573, 11921,\n  48767, 27191, 47327, 74488, 31139, 34928, 58382, 10630, 206777, 28582, 17378, 118639, 35659, 45393, 41374, 26204,\n  181164, 243974, 22596, 109998, 166262, 140883, 75323, 38999, 14554, 45944, 89326, 18593, 171445, 14273, 83848, 7094,\n  31786, 136223, 135153, 75926, 66523, 5050, 82214, 24940, 76607, 13068, 103875, 30264, 17956, 28575, 70190, 14699,\n  6507, 6918, 148803, 40975, 31279, 13140, 17326, 280841, 90476, 164678, 26191, 29026, 116611, 14717, 6030, 73654,\n  167918, 94589, 13531, 31467, 6560, 37936, 764, 2646, 1243, 47040, 46211, 49422, 115324, 23197, 48193, 11038,\n  80128, 4014, 18828, 39730, 41867, 964, 138962, 14313, 55897, 4976, 27379, 30682, 187323, 81139, 45324, 19782,\n  37069, 15003, 3973, 32623, 32596, 5813, 218135, 46814, 189444, 1329, 15593, 67740, 145931, 8233, 95368, 52092,\n  13390, 126973, 24773, 78080, 105530, 127257, 27684, 75829, 65709, 23804, 30679, 23341, 26805, 39433, 72773, 79105,\n  6999, 9337, 78288, 91647, 55714, 45624, 31732, 25179, 41300, 62926, 8984, 56532, 22915, 82260, 13175, 111014,\n  68951, 8391, 237398, 27237, 22138, 159504, 224263, 75273, 21120, 32545, 81951, 75664, 22264, 44392, 981, 6782,\n  10058, 4181, 2250, 85033, 19945, 215931, 9376, 41673, 33635, 15417, 217394, 101669, 56123, 23340, 51752, 11920,\n  99085, 5011, 143610, 229235, 10032, 59585, 16698, 27704, 5818, 10883, 13785, 186415, 6016, 52857, 9702, 70336,\n  46649, 206034, 15092, 14481, 57476, 8081, 27610, 12151, 35264, 32218, 24641, 138702, 94413, 16922, 15037, 25736,\n  112522, 11746, 14172, 11310, 262288, 112160, 142819, 50926, 93686, 24209, 43747, 11953, 83038, 1813, 102643, 324202,\n  14341, 3919, 29176, 21127, 23204, 81844, 69984, 61119, 28807, 12474, 58355, 40271, 66084, 21889, 11758, 31845,\n  77987, 65881, 45978, 68177, 6101, 28932, 58051, 649, 126673, 52123, 157370, 15105, 7133, 62360, 40724, 9837,\n  38126, 27864, 30072, 264757, 5923, 6078, 20776, 4896, 122091, 30718, 48046, 119459, 170240, 303310, 26816, 100117,\n  97772, 9974, 81454, 42024, 46874, 11564, 45132, 109732, 215746, 2127, 10903, 7713, 43948, 4937, 28852, 25103,\n  41622, 38117, 17887, 60135, 3272, 72498, 31571, 43132, 55596, 108898, 45911, 110563, 8332, 37358, 183144, 1744,\n  146411, 106155, 85432, 89589, 251315, 29773, 4572, 57991, 13533, 23984, 36596, 74746, 8561, 47865, 143388, 13408,\n  81521, 143096, 93820, 10893, 115449, 113660, 48899, 7902, 48616, 6164, 68386, 80304, 175175, 147319, 43500, 47779,\n  2063, 16353, 18616, 12432, 186556, 23124, 95665, 69513, 3036, 14556, 14786, 10437, 134537, 36883, 56269, 63535,\n  75772, 100719, 86026, 42447, 29728, 3767, 25145, 40239, 82360, 26124, 91863, 12060, 22973, 30854, 96321, 53650,\n  186559, 22801, 8489, 72885, 86348, 51954, 28230, 88192, 89100, 269995, 13885, 51315, 38388, 73083, 25625, 53485,\n  82297, 39389, 100926, 72363, 45610, 10521, 13154, 68652, 2613, 44579, 170934, 38080, 87082, 32745, 40511, 28882,\n  9986, 23752, 68927, 62035, 177812, 181149, 29031, 11611, 57884, 182442, 8046, 104980, 23591, 100153, 104125, 9117,\n  47485, 23873, 2671, 349983, 42543, 328134, 85104, 58966, 33582, 332001, 133483, 9354, 44713, 26316, 6446, 63766,\n  74439, 40756, 76029, 97107, 257444, 43586, 84500, 59959, 252451, 55620, 150696, 63676, 31825, 65735, 146929, 23371,\n  35631, 35977, 145121, 51984, 38540, 33976, 24513, 207079, 33066, 10465, 7127, 153150, 5147, 36952, 154507, 3865,\n  13973, 14200, 52272, 11308, 4343, 15766, 13965, 24679, 51830, 184838, 3348, 86524, 70378, 36337, 84987, 49030,\n  22827, 32995, 19326, 2046, 26448, 253830, 60248, 12393, 95560, 44044, 28370, 1662, 36896, 50220, 48315, 80320,\n  241741, 43652, 242555, 131179, 48067, 39495, 113599, 13797, 203953, 20287, 78696, 3410, 298860, 46405, 39410, 64369,\n  61620, 171971, 71030, 204186, 20450, 29322, 37991, 260572, 3220, 386508, 87523, 9404, 67272, 73458, 10375, 45255,\n  6586, 2590, 34096, 4160, 107662, 57683, 97396, 79188, 100160, 35851, 78921, 149875, 108684, 200141, 33908, 53318,\n  6929, 19857, 56702, 3398, 57226, 58810, 9304, 20429, 4762, 64257, 64571, 51955, 7457, 60202, 39068, 65191,\n  1320, 89495, 11353, 17456, 40404, 104230, 19164, 17854, 77204, 58530, 172392, 75503, 99309, 15916, 157308, 83740,\n  62750, 50622, 1879, 15474, 208653, 18824, 11343, 41248, 59977, 127748, 31363, 172064, 44000, 65018, 12188, 41891,\n  74315, 17651, 19590, 90710, 34332, 9615, 58267, 127126, 5819, 63902, 44975, 20415, 172217, 26030, 99297, 158027,\n  64904, 15382, 45953, 118417, 114077, 18724, 56092, 87313, 18147, 79997, 136198, 62361, 84012, 22885, 9665, 4621,\n  1791, 3009, 54017, 91348, 98456, 56262, 72712, 106254, 90930, 42901, 80747, 25508, 21446, 133798, 113357, 6097,\n  116669, 1181, 110413, 11032, 103938, 49121, 260341, 161282, 7422, 24145, 56140, 35654, 85140, 174230, 9633, 104905,\n  59713, 728, 60193, 191876, 5768, 22655, 5145, 41262, 326211, 147566, 80079, 41245, 16239, 59176, 15547, 123829,\n  75411, 13376, 315047, 105840, 13229, 35046, 43694, 56413, 29398, 90069, 53794, 84673, 10758, 107725, 5524, 23780,\n  236107, 388309, 62023, 165588, 1539, 46003, 176003, 163955, 112472, 361654, 29424, 49364, 95979, 3700, 306600, 117453,\n  152154, 17800, 82564, 14444, 151294, 22058, 29517, 47312, 306, 266768, 196797, 94605, 21196, 107639, 225607, 18057,\n  38146, 50176, 69453, 50095, 10700, 216046, 17364, 47494, 6891, 29894, 48715, 14004, 84282, 21694, 7598, 82070,\n  109646, 6365, 16302, 27108, 56492, 142883, 77880, 27851, 40539, 187868, 189893, 289432, 6589, 19096, 22176, 166724,\n  119491, 38469, 38709, 163079, 51354, 26677, 199471, 115939, 30685, 126480, 79686, 66788, 140209, 95841, 256423, 20274,\n  136906, 108937, 4472, 99520, 29622, 157862, 29670, 35606, 73617, 56291, 14416, 1391, 49553, 41902, 66050, 23269,\n  70525, 139634, 148637, 11479, 51671, 3128, 65679, 40966, 166869, 116434, 159850, 7654, 139616, 20315, 65982, 116183,\n  74395, 50212, 88368, 27581, 37439, 11453, 97247, 212239, 49595, 3922, 25404, 51622, 45678, 120847, 23534, 2190,\n  11959, 15866, 21030, 7156, 33211, 32273, 16756, 51864, 86560, 62359, 37272, 150553, 52434, 48096, 52877, 35909,\n  9282, 150331, 56064, 3339, 62690, 77469, 38848, 312832, 112155, 50347, 133337, 6119, 130810, 19939, 40188, 198954,\n  5243, 178898, 39868, 142856, 108261, 286939, 44549, 159984, 99970, 197697, 81046, 134326, 265613, 8809, 13626, 21584,\n  72551, 29643, 102979, 213474, 80049, 198207, 20362, 229516, 6391, 82595, 72275, 12563, 33365, 2420, 161399, 254521,\n  90721, 10070, 61781, 32490, 66737, 212773, 229338, 7775, 69872, 54551, 80069, 13914, 87011, 91386, 134664, 33101,\n  1860, 15322, 69366, 97910, 9032, 31405, 11616, 221, 112544, 23414, 109925, 66229, 60905, 34215, 18312, 31402,\n  37371, 77552, 57720, 2026, 89015, 4380, 50369, 20157, 140351, 42001, 57692, 30433, 19076, 51739, 23715, 62058,\n  850, 121732, 145992, 46915, 373531, 25804, 8590, 87747, 2802, 16807, 15221, 116280, 36725, 12360, 34724, 117090,\n  218795, 142043, 148440, 65614, 72062, 18466, 55923, 22439, 28990, 58866, 64866, 114538, 16550, 89174, 112318, 27549,\n  24614, 155152, 5486, 45048, 7815, 58664, 6423, 11415, 6187, 21207, 67086, 238124, 26336, 2489, 21350, 54052,\n  33373, 60539, 51387, 100319, 32162, 11584, 95109, 44016, 42791, 31049, 47206, 52852, 73555, 110693, 7535, 38410,\n  32062, 15667, 9670, 65566, 23386, 531, 44985, 2760, 10244, 123017, 50775, 39638, 56392, 170971, 54953, 18366,\n  49442, 134359, 57768, 10659, 27076, 77194, 62382, 113419, 136262, 150169, 22322, 207134, 12412, 139797, 55514, 2505,\n  14883, 65500, 22972, 15267, 1134, 64278, 37799, 235955, 33675, 43711, 22813, 276041, 97153, 48116, 34495, 6178,\n  199281, 32510, 95181, 5794, 15608, 76263, 19924, 230629, 100152, 10562, 76444, 119798, 74072, 219457, 36986, 12066,\n  47942, 54591, 35202, 23051, 254301, 155103, 68248, 13470, 36451, 42899, 93606, 121040, 16026, 27968, 10851, 17794,\n  10687, 100974, 49021, 10866, 65067, 10018, 39088, 10965, 56708, 897, 11410, 7452, 254030, 47692, 32629, 18771,\n  30290, 48037, 43471, 14347, 50490, 66808, 37049, 49968, 13864, 83559, 25801, 3591, 57941, 75692, 173303, 61385,\n  259331, 1969, 57685, 2094, 35588, 6233, 27697, 16717, 23485, 26772, 4734, 15135, 43486, 85019, 26988, 179071,\n  24869, 25026, 9295, 27083, 21620, 11383, 45847, 134822, 92971, 19856, 42005, 31000, 22072, 2896, 21798, 125082,\n  88645, 561, 47297, 28868, 1048, 75739, 25425, 197147, 182050, 124782, 126886, 12162, 13343, 152665, 53046, 7557,\n  32452, 9893, 110355, 9538, 14825, 62686, 7879, 104424, 19509, 31568, 4996, 5559, 3325, 22164, 66618, 2476,\n  216938, 38862, 52182, 79198, 45740, 52776, 32070, 132672, 99716, 19543, 5515, 40777, 189082, 6051, 3103, 146615,\n  53740, 256827, 80531, 104166, 78245, 34550, 28933, 112044, 25609, 72638, 36640, 25629, 24311, 56326, 11524, 83163,\n  176777, 23393, 82414, 6106, 47340, 19377, 61707, 10698, 308354, 82475, 8066, 15310, 40669, 62347, 33738, 15955,\n  66085, 140789, 4852, 37500, 14102, 5845, 9813, 54656, 125339, 67825, 97677, 67735, 9225, 11506, 173536, 159289,\n  128709, 12613, 20379, 46259, 97207, 42699, 91068, 45947, 1271, 211146, 104284, 55003, 200933, 14250, 55082, 49995,\n  78439, 185897, 62876, 11600, 113451, 32229, 199030, 36486, 88975, 65343, 140167, 135960, 18324, 638, 86929, 96115,\n  46521, 34134, 437, 7115, 11819, 80629, 96102, 12424, 18570, 81183, 15089, 30525, 141756, 201210, 66036, 47056,\n  72512, 98759, 18003, 68671, 170020, 14775, 7872, 86707, 52754, 279230, 82966, 13276, 63550, 101747, 103537, 30259,\n  118515, 110652, 15079, 51435, 103073, 104977, 76964, 5981, 93330, 91388, 21050, 56718, 32736, 2464, 36579, 80299,\n  50499, 49852, 67313, 130037, 14722, 2418, 7783, 76521, 31600, 78508, 133834, 49167, 68452, 47680, 2363, 25459,\n  398867, 67795, 165159, 68999, 29316, 33111, 23239, 12957, 172786, 66330, 3816, 4414, 18417, 12030, 30134, 7919,\n  104924, 9960, 36133, 26144, 2606, 105224, 32252, 42036, 5670, 72687, 493, 78524, 84818, 34715, 26322, 28439,\n  16288, 21908, 74255, 9962, 67106, 147542, 139191, 43764, 59580, 72920, 393509, 63136, 82929, 53980, 78657, 4543,\n  607401, 11665, 318088, 11366, 291, 7537, 212378, 77254, 85829, 59252, 37336, 13232, 359, 43117, 65592, 71269,\n  15897, 112396, 53939, 40125, 35830, 56176, 59326, 11017, 50696, 114234, 276483, 22837, 65630, 17802, 22227, 18232,\n  52672, 51170, 100713, 92360, 22115, 91842, 43063, 195957, 356968, 3794, 166425, 56044, 29895, 163395, 11168, 56699,\n  40837, 67702, 27339, 20360, 231192, 89936, 103744, 1998, 34024, 32020, 3803, 117654, 38957, 94943, 70290, 85606,\n  26722, 43088, 170484, 36210, 406, 282841, 54770, 175134, 23335, 44094, 73528, 47037, 124952, 31360, 23208, 78534,\n  72068, 123285, 11398, 40458, 68804, 30009, 6939, 3499, 13268, 40221, 12223, 61566, 147101, 333845, 73905, 2372,\n  164740, 293468, 55614, 327574, 276569, 59394, 21940, 154180, 162596, 28918, 37039, 166169, 66943, 84556, 40144, 10616,\n  11569, 25337, 104847, 48420, 26654, 76526, 228642, 20116, 66358, 44381, 25600, 2578, 4777, 70479, 5757, 64766,\n  23229, 11688, 27998, 24560, 102127, 6006, 130766, 11689, 5848, 24290, 203474, 51926, 978, 76149, 170663, 68953,\n  2921, 5461, 117041, 24360, 59666, 1098, 64926, 198078, 5371, 1164, 166512, 13456, 28212, 22987, 95713, 13302,\n  90108, 31433, 120078, 63947, 42938, 68482, 38260, 42265, 39320, 109797, 110494, 79743, 2499, 2553, 58577, 180281,\n  4271, 259624, 94417, 68375, 108792, 50431, 9717, 29255, 33510, 160264, 7272, 343301, 125072, 154624, 6168, 27338,\n  71653, 51148, 140929, 51394, 65239, 109678, 179395, 7761, 38250, 81439, 23490, 79048, 66357, 53948, 107018, 28855,\n  38577, 94122, 43589, 44430, 13964, 103761, 2708, 12411, 86251, 119198, 17302, 51623, 35708, 305, 95393, 8798,\n  50755, 41461, 203637, 19736, 36010, 8599, 54546, 13603, 29448, 118755, 50260, 10357, 12209, 86678, 39594, 88467,\n  3844, 173096, 17788, 39975, 38222, 14809, 54370, 53581, 206337, 67848, 23694, 2309, 100876, 41983, 276960, 18075,\n  67827, 14170, 117970, 89349, 137088, 75893, 70548, 20757, 14167, 10804, 5959, 67463, 252225, 44451, 87528, 36335,\n  84163, 175996, 66912, 69227, 195270, 25238, 167523, 96366, 1306, 7967, 27706, 52700, 5703, 285, 51677, 60197,\n  54198, 170697, 20548, 18244, 779, 4822, 39984, 71212, 46802, 72502, 31290, 74896, 22028, 154697, 58236, 131173,\n  51124, 252252, 64234, 48608, 86759, 36236, 13170, 143379, 70560, 101041, 195793, 70671, 113164, 99377, 70248, 34118,\n  35685, 116394, 50149, 302730, 162145, 121592, 530, 30881, 45471, 162432, 6235, 49645, 34561, 40287, 58509, 43757,\n  422, 70918, 113036, 190344, 2611, 233661, 162936, 32114, 6464, 94933, 54217, 64327, 47486, 871, 90931, 33404,\n  19223, 20183, 3928, 34508, 38246, 36359, 11459, 66339, 9191, 90968, 122115, 45027, 18331, 84569, 82055, 106565,\n  89942, 52285, 40019, 20438, 243642, 100401, 166242, 127119, 212364, 42312, 34711, 1671, 15893, 23179, 5020, 74061,\n  17518, 110465, 11940, 3873, 22617, 123195, 18144, 100726, 6409, 91356, 45936, 73471, 30046, 108852, 212969, 66765,\n  126182, 98830, 107226, 23993, 59716, 48049, 45651, 82888, 36560, 16256, 52004, 17296, 104428, 12933, 38645, 135609,\n  18846, 26099, 40801, 56830, 26592, 992, 156526, 79480, 19458, 91618, 39463, 7988, 50793, 54675, 156601, 19881,\n  147333, 1159, 50024, 77736, 30826, 64647, 13710, 115978, 1388, 51510, 5276, 207487, 27647, 59310, 5123, 271841,\n  10922, 2382, 11425, 17267, 14495, 244507, 2126, 492, 33545, 12138, 8818, 184454, 19269, 134769, 8528, 57017,\n  135828, 73552, 22221, 65808, 39727, 367870, 203492, 24483, 41601, 196988, 198, 55446, 46931, 68675, 244761, 5411,\n  233379, 19207, 36423, 316277, 49169, 745, 204311, 317017, 131130, 150130, 101903, 260111, 182112, 30434, 25375, 59274,\n  16276, 109977, 54255, 20999, 82381, 135770, 2885, 31724, 118209, 21645, 119343, 36886, 142445, 81249, 42421, 43503,\n  128310, 66260, 92555, 94890, 19672, 1769, 178045, 35419, 28740, 2136, 226543, 24030, 82907, 124857, 54353, 157870,\n  33436, 38109, 85642, 96673, 3118, 112407, 1944, 31498, 102206, 135319, 205619, 160787, 28723, 91910, 50034, 79540,\n  24819, 28372, 80113, 173951, 41937, 15370, 19059, 55603, 38854, 100638, 70561, 519, 5157, 19218, 16617, 91793,\n  3881, 75012, 176191, 145596, 111491, 20452, 154738, 27981, 1142, 2054, 22256, 54130, 9776, 19737, 32399, 69945,\n  421673, 103058, 91031, 7281, 152241, 74595, 46116, 86993, 29309, 22846, 33982, 54529, 14961, 41775, 23014, 131668,\n  87854, 171036, 94711, 50319, 6054, 72531, 3482, 3581, 15424, 83151, 45387, 66155, 3796, 118067, 32026, 181774,\n  82656, 49811, 12569, 44671, 54996, 83240, 157346, 143069, 2108, 19813, 11164, 42601, 55367, 1359, 101577, 27699,\n  239450, 9023, 33206, 152235, 154525, 73472, 7296, 55929, 9643, 80206, 87554, 68722, 118103, 89632, 161537, 59640,\n  106041, 77231, 63719, 12373, 64601, 98305, 1056, 46674, 68549, 18960, 17748, 19013, 48707, 296146, 134285, 64092,\n  30266, 15379, 85084, 87899, 25772, 62788, 25525, 31250, 18740, 80665, 23101, 34025, 9462, 7075, 49746, 39284,\n  229669, 57834, 2626, 248569, 91798, 873, 22206, 84442, 112152, 160148, 59240, 6711, 191327, 15256, 141511, 171566,\n  14493, 68797, 15010, 17086, 72828, 164513, 36088, 32054, 8175, 11054, 81290, 64307, 66636, 51647, 21137, 68255,\n  236474, 72999, 12123, 66901, 25817, 58290, 23813, 41818, 87351, 51685, 349139, 15386, 129027, 92193, 14750, 7028,\n  76653, 56861, 59524, 43395, 20422, 123741, 40958, 19478, 22983, 87931, 5921, 15341, 71240, 18213, 18961, 25648,\n  27846, 61261, 75568, 216919, 44661, 12442, 49311, 68342, 12399, 74324, 7455, 42754, 46158, 66251, 405, 72411,\n  77704, 58295, 15625, 4552, 53101, 50537, 30941, 37141, 35032, 18292, 98289, 17870, 11072, 115848, 60108, 70972,\n  17300, 13269, 63524, 140693, 109294, 93883, 56701, 69184, 33638, 4485, 36667, 26721, 24408, 5954, 28290, 80247,\n  1895, 82128, 40307, 96015, 11241, 5825, 45230, 255638, 760, 31698, 12512, 26145, 17584, 92444, 8948, 17954,\n  82479, 9085, 5850, 120208, 125877, 9751, 11265, 22102, 63150, 153550, 69826, 75885, 141075, 131001, 14419, 128804,\n  34259, 129918, 115229, 23808, 23274, 3580, 82265, 18942, 81698, 8545, 39913, 79933, 15732, 6741, 38339, 39271,\n  43577, 31006, 30604, 53478, 48340, 102062, 39630, 12695, 91584, 222, 20589, 89230, 14688, 30824, 97582, 47266,\n  16379, 99608, 42679, 70464, 24481, 4475, 80121, 49522, 150280, 121584, 178585, 20071, 96420, 5695, 31648, 64033,\n  262050, 20662, 107571, 34749, 48635, 192388, 60052, 163993, 43727, 40545, 72642, 99324, 61819, 17935, 20846, 61496,\n  56268, 69226, 133071, 52853, 72003, 57628, 110499, 29460, 88178, 40245, 24970, 58958, 17281, 21360, 121825, 31853,\n  79912, 81792, 201844, 95444, 13218, 256154, 26236, 61260, 122519, 90685, 37984, 5119, 125295, 126359, 310134, 54407,\n  166396, 6520, 28971, 31149, 11811, 266489, 27120, 1794, 2171, 23105, 744, 2814, 118930, 46693, 140092, 4993,\n  67746, 27308, 66270, 97039, 17636, 6061, 69135, 4202, 178278, 7472, 32642, 40673, 174656, 26758, 204108, 44815,\n  95661, 95589, 192828, 73663, 173039, 77882, 43232, 71654, 83845, 55846, 26313, 21216, 79689, 31469, 85659, 11793,\n  17473, 17000, 64471, 78858, 98555, 104223, 20905, 121028, 127696, 15679, 22246, 93167, 203415, 40670, 1525, 47197,\n  54730, 29955, 27650, 142614, 22925, 38365, 107626, 61283, 232239, 25514, 194946, 12768, 9309, 63949, 114873, 57567,\n  12136, 30868, 3548, 537341, 175026, 133711, 27455, 27667, 20740, 32351, 1997, 26211, 180188, 35259, 10358, 54362,\n  10747, 42370, 12304, 6425, 39816, 22704, 99010, 215128, 314017, 17879, 58536, 20732, 266131, 43327, 1650, 27592,\n  10040, 89403, 28410, 125002, 175732, 21475, 13832, 98954, 112550, 155503, 53781, 62057, 220651, 63490, 218647, 26496,\n  31974, 28320, 13557, 72935, 37393, 40244, 102949, 25746, 888, 15552, 12165, 23782, 23008, 37306, 182690, 178294,\n  86799, 19876, 69717, 10583, 4303, 116880, 7218, 92683, 64905, 100026, 340736, 142052, 148467, 8925, 2702, 63925,\n  75337, 81983, 220124, 89751, 251, 226035, 14097, 1808, 3284, 142418, 16036, 72819, 370102, 13289, 144922, 3996,\n  50264, 199033, 45199, 139880, 9835, 4702, 60405, 74816, 5438, 7368, 27687, 162954, 23655, 159039, 21280, 61851,\n  4481, 92865, 109762, 3285, 29851, 3021, 104939, 2905, 329, 63385, 22681, 52094, 12855, 38488, 18381, 19211,\n  7162, 61266, 8835, 22825, 64931, 45593, 66502, 25309, 78141, 46199, 59413, 50610, 12804, 59952, 186517, 61018,\n  42372, 46728, 18388, 90815, 296771, 59091, 46636, 192289, 83547, 3423, 29852, 2745, 18624, 16583, 357641, 32404,\n  34874, 30511, 86377, 868, 86271, 59760, 81404, 39749, 3360, 74207, 15394, 156217, 48665, 41137, 72366, 52831,\n  77735, 59042, 22515, 6142, 88767, 22116, 68286, 40920, 11463, 78197, 68958, 24062, 63527, 100286, 139882, 65777,\n  28889, 12481, 28953, 8266, 22258, 3319, 99181, 17609, 29140, 179534, 30832, 42841, 194315, 120705, 27548, 161124,\n  113924, 42548, 41864, 56260, 25499, 42783, 177062, 105955, 6406, 14311, 23992, 86657, 31334, 225197, 24185, 39921,\n  1845, 104026, 301294, 95718, 4802, 8899, 157667, 77564, 49184, 6115, 80340, 47518, 43455, 6339, 54561, 39882,\n  35469, 115497, 123233, 68548, 127594, 20262, 97680, 60841, 92970, 5781, 28954, 4558, 61038, 45382, 35089, 49876,\n  115005, 15489, 27010, 91676, 38840, 12352, 20606, 19800, 87761, 12264, 9268, 146639, 106838, 47766, 91230, 8234,\n  8811, 48534, 107720, 27259, 20572, 34400, 108143, 52933, 55637, 28872, 61739, 77203, 11162, 21038, 66975, 30423,\n  96721, 31993, 45541, 7376, 132425, 71889, 178420, 446221, 108925, 260438, 102283, 4056, 2948, 77259, 83943, 38199,\n  125457, 36830, 123208, 391, 36356, 138390, 99456, 92051, 3502, 239674, 36201, 114068, 75270, 3160, 39536, 218269,\n  27622, 12173, 56780, 8501, 127192, 66434, 47097, 13635, 2561, 98519, 73258, 96646, 123095, 5710, 42788, 66384,\n  49394, 12035, 7389, 23253, 61155, 251141, 4195, 439, 16897, 56354, 25580, 66462, 110064, 188570, 17260, 12827,\n  9699, 13844, 208611, 7653, 89448, 41275, 5078, 37917, 53356, 45195, 15877, 74097, 19628, 231041, 21225, 15175,\n  220310, 3514, 79626, 97496, 21622, 20434, 48926, 95346, 83036, 47481, 10584, 14331, 9885, 4023, 29396, 21139,\n  112214, 87100, 83793, 9796, 6087, 423, 60612, 11748, 26713, 29951, 132442, 40260, 17901, 55713, 5620, 88019,\n  161912, 177970, 3729, 49808, 91492, 35869, 138357, 40508, 3440, 61216, 56765, 68562, 68594, 2747, 88777, 43463,\n  9266, 44125, 1567, 2354, 92238, 29774, 47207, 47789, 8087, 20375, 191924, 3415, 6866, 22316, 82861, 233038,\n  150194, 13698, 143688, 29411, 72175, 16465, 14358, 220015, 80701, 53366, 59020, 22661, 13459, 20745, 8739, 76074,\n  31836, 46743, 45518, 51271, 43243, 19787, 114669, 18136, 239700, 15692, 105609, 60536, 95846, 27460, 7762, 225232,\n  44749, 11206, 14819, 1690, 50647, 170657, 224611, 139596, 21945, 134017, 15972, 174955, 230538, 2804, 25876, 121127,\n  120612, 18921, 14091, 435, 132371, 178953, 144326, 158152, 244604, 220898, 21478, 121856, 5193, 4031, 105823, 11008,\n  105637, 134379, 253591, 97747, 34661, 247232, 20987, 6949, 41341, 106816, 110210, 45958, 68775, 150399, 11104, 93886,\n  85393, 28015, 147749, 112829, 1874, 19994, 21402, 16367, 8771, 33037, 11041, 96701, 33718, 36354, 26705, 23369,\n  49672, 29673, 72422, 32419, 77403, 36496, 28454, 23255, 595452, 242129, 61562, 58092, 99507, 41978, 40275, 32822,\n  6490, 1688, 175006, 8864, 58895, 13716, 45499, 120546, 128742, 24764, 141091, 121483, 7704, 83412, 14149, 58968,\n  39239, 165272, 32855, 72184, 73217, 52628, 13081, 73279, 43816, 9383, 216195, 56823, 62824, 48448, 191659, 3540,\n  37804, 223316, 171995, 17606, 199976, 21733, 141024, 23939, 22361, 42786, 77686, 3523, 80005, 1542, 22284, 32365,\n  87514, 43833, 4665, 93155, 94832, 32683, 134693, 9494, 14089, 54921, 16128, 131782, 4574, 168587, 76247, 7989,\n  139975, 821, 8368, 108503, 59142, 158797, 137, 205170, 75523, 18074, 13682, 91077, 100268, 65492, 54879, 15629,\n  43906, 38056, 45569, 40180, 53442, 24989, 20763, 24867, 15152, 30094, 129619, 140074, 2547, 23241, 27435, 7171,\n  186002, 4003, 5665, 192737, 17011, 57494, 230276, 241405, 19513, 27773, 95035, 92634, 204282, 5213, 32107, 87507,\n  3343, 10550, 3806, 71001, 60568, 10837, 23329, 144168, 128318, 1900, 47551, 4240, 119250, 50444, 64351, 85851,\n  4298, 169567, 1401, 13814, 51871, 3524, 75657, 25885, 41336, 136110, 12759, 77034, 71759, 22871, 604, 13904,\n  21921, 84968, 84920, 208954, 45074, 13960, 4204, 102255, 98169, 58850, 58448, 58879, 145889, 22357, 8919, 58428,\n  99427, 13803, 157733, 68068, 11350, 61811, 360594, 118202, 1237, 824, 163104, 118356, 5520, 769, 31581, 20685,\n  28799, 181670, 40637, 38360, 7803, 8532, 69133, 37235, 53702, 86519, 85294, 62552, 21026, 8827, 142049, 30386,\n  136352, 11344, 158995, 19682, 38293, 242831, 103750, 55804, 128690, 108982, 27181, 18409, 12158, 167408, 120214, 132169,\n  90132, 134213, 7909, 28749, 44600, 10115, 55121, 16581, 10184, 82321, 25270, 21542, 26957, 2707, 106897, 145041,\n  39459, 145473, 48977, 26927, 126025, 157588, 249490, 64382, 78904, 11519, 1284, 9871, 82999, 78364, 173378, 109477,\n  59373, 50500, 2168, 30838, 39301, 154212, 66143, 91333, 150198, 28707, 45440, 20859, 120529, 33550, 21869, 80014,\n  153042, 19905, 153475, 81658, 20177, 158807, 120156, 38566, 50089, 6373, 63762, 19510, 14764, 26971, 108976, 72526,\n  271571, 84066, 18309, 66438, 30530, 98093, 65740, 53411, 123161, 23236, 24050, 64130, 38975, 177329, 37078, 133183,\n  101562, 89382, 51844, 19732, 22941, 26188, 51520, 22735, 5648, 43118, 130081, 12788, 124654, 200339, 25097, 48211,\n  109243, 196680, 216387, 69966, 69817, 55482, 6031, 5293, 71675, 18384, 137078, 73066, 49162, 68808, 11413, 25901,\n  106884, 643, 4412, 18355, 21241, 36413, 7382, 16629, 107795, 6893, 5332, 242, 30258, 49533, 74544, 39490,\n  16572, 4199, 12724, 122748, 188262, 108611, 126989, 88570, 141456, 72114, 87870, 20276, 7688, 37800, 22712, 59241,\n  60718, 170557, 299711, 3515, 8271, 16537, 107094, 81327, 11044, 299399, 71715, 154123, 32440, 16413, 169052, 42581,\n  104608, 33812, 5696, 16661, 103419, 161, 39832, 179084, 236109, 71375, 67676, 75508, 93156, 21777, 80970, 58192,\n  43293, 31757, 51423, 41531, 128929, 182898, 12880, 113231, 42107, 61632, 45914, 4884, 67180, 4744, 128700, 2781,\n  25201, 36266, 194380, 87971, 115254, 341, 41014, 57871, 185488, 92043, 17835, 89050, 130954, 19517, 84683, 21380,\n  72813, 45915, 93851, 203411, 167547, 176973, 63085, 59916, 20537, 17002, 36711, 31276, 39969, 36726, 65357, 13243,\n  38432, 15644, 94063, 10719, 22582, 47135, 16038, 5381, 184022, 23165, 76012, 35198, 1139, 18638, 45545, 84452,\n  27199, 192134, 119684, 123811, 5655, 13706, 141932, 24822, 17767, 37181, 5142, 34476, 97412, 225589, 175180, 68777,\n  122606, 11285, 10611, 55686, 209377, 100096, 22340, 26689, 27070, 51760, 149649, 30372, 35871, 50512, 21058, 17439,\n  326617, 170142, 107982, 135181, 188954, 85308, 56136, 9593, 42680, 26872, 58659, 5746, 73512, 25617, 2549, 48114,\n  80911, 1733, 156604, 26196, 22629, 16115, 47515, 69763, 3011, 81888, 4772, 72580, 95021, 23422, 61841, 69210,\n  315242, 20699, 13055, 19951, 157737, 52563, 31431, 59838, 383, 35462, 55449, 68880, 41821, 63984, 213573, 50441,\n  41808, 53480, 40494, 130778, 19335, 64598, 138641, 25152, 27950, 8191, 57199, 35528, 15674, 204275, 70906, 3181,\n  25677, 26876, 2717, 132658, 110950, 49839, 49173, 20862, 35375, 20135, 50308, 213100, 76835, 103314, 64615, 7399,\n  59108, 22329, 92119, 34649, 57370, 20920, 11016, 129444, 35262, 68761, 92220, 17938, 16569, 14039, 59057, 72434,\n  160415, 16248, 7148, 40010, 37706, 58080, 149680, 137070, 78086, 105307, 67671, 478, 32041, 27870, 179796, 13035,\n  49691, 26716, 81195, 147295, 137143, 13139, 168200, 45495, 9782, 24335, 30927, 557, 172080, 226060, 57625, 14169,\n  50148, 53124, 40398, 22321, 77917, 74830, 6334, 70846, 6323, 77024, 9517, 93307, 10110, 13831, 4136, 54992,\n  69172, 15584, 33047, 77148, 17711, 31085, 33621, 126215, 21795, 114268, 35065, 145060, 59511, 11859, 154026, 131303,\n  76184, 102024, 58089, 66420, 135114, 32471, 26586, 9983, 31046, 232116, 194394, 99288, 132319, 610, 10459, 98229,\n  59105, 34807, 29993, 22965, 157578, 4107, 28141, 140655, 20549, 7101, 7846, 55412, 80778, 17135, 7430, 73220,\n  57649, 27939, 10941, 92844, 158421, 173174, 64726, 12726, 65143, 202755, 176021, 57189, 4575, 7195, 177904, 25156,\n  72235, 146111, 11686, 22007, 21899, 135284, 138978, 752, 10797, 65724, 5168, 151662, 92745, 109290, 75372, 160210,\n  34035, 17369, 97529, 60335, 106079, 2306, 2423, 4131, 80159, 158934, 136359, 59711, 4508, 40343, 250673, 65860,\n  78304, 17795, 104032, 148124, 25350, 58256, 33525, 20642, 75457, 81761, 183350, 24569, 46458, 63924, 58666, 8047,\n  32937, 81997, 33987, 7245, 25623, 17931, 5112, 122123, 47, 80630, 79317, 15250, 8531, 7845, 42854, 87493,\n  104751, 31479, 59823, 168974, 84953, 28434, 95840, 86398, 8138, 40995, 4860, 26024, 36508, 101200, 49636, 8174,\n  187199, 50053, 89152, 20854, 66310, 61067, 8004, 30413, 115274, 278866, 106773, 120445, 13253, 40328, 1516, 70360,\n  32461, 1703, 301530, 572, 38536, 75536, 423620, 18713, 1916, 3143, 70650, 60724, 42007, 14851, 262515, 136679,\n  187160, 70985, 131034, 54573, 35055, 14435, 225137, 23005, 26325, 174156, 20786, 195824, 84394, 19162, 85376, 70194,\n  35963, 49566, 21279, 91399, 94216, 64873, 68891, 55512, 45590, 3382, 26979, 72069, 97782, 126859, 187860, 246200\n]\n","import { CodeError } from '@libp2p/interface'\nimport { peerIdFromBytes } from '@libp2p/peer-id'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { CID } from 'multiformats/cid'\nimport type { Message } from '../../message/dht.js'\nimport type { Providers } from '../../providers'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { ComponentLogger, Logger, PeerId } from '@libp2p/interface'\n\nexport interface AddProviderComponents {\n  logger: ComponentLogger\n}\n\nexport interface AddProviderHandlerInit {\n  providers: Providers\n  logPrefix: string\n}\n\nexport class AddProviderHandler implements DHTMessageHandler {\n  private readonly providers: Providers\n  private readonly log: Logger\n\n  constructor (components: AddProviderComponents, init: AddProviderHandlerInit) {\n    this.log = components.logger.forComponent(`${init.logPrefix}:rpc:handlers:add-provider`)\n    this.providers = init.providers\n  }\n\n  async handle (peerId: PeerId, msg: Message): Promise<Message | undefined> {\n    this.log('start')\n\n    if (msg.key == null || msg.key.length === 0) {\n      throw new CodeError('Missing key', 'ERR_MISSING_KEY')\n    }\n\n    let cid: CID\n    try {\n      // this is actually just the multihash, not the whole CID\n      cid = CID.decode(msg.key)\n    } catch (err: any) {\n      throw new CodeError('Invalid CID', 'ERR_INVALID_CID')\n    }\n\n    if (msg.providers == null || msg.providers.length === 0) {\n      this.log.error('no providers found in message')\n    }\n\n    await Promise.all(\n      msg.providers.map(async (pi) => {\n        // Ignore providers not from the originator\n        if (!peerId.equals(pi.id)) {\n          this.log('invalid provider peer %p from %p', pi.id, peerId)\n          return\n        }\n\n        if (pi.multiaddrs.length < 1) {\n          this.log('no valid addresses for provider %p. Ignore', peerId)\n          return\n        }\n\n        this.log('received provider %p for %s (addrs %s)', peerId, cid, pi.multiaddrs.map((m) => multiaddr(m).toString()))\n\n        await this.providers.addProvider(cid, peerIdFromBytes(pi.id))\n      })\n    )\n\n    return undefined\n  }\n}\n","import { CodeError } from '@libp2p/interface'\nimport { protocols } from '@multiformats/multiaddr'\nimport { equals as uint8ArrayEquals } from 'uint8arrays'\nimport { MessageType } from '../../message/dht.js'\nimport type { PeerInfoMapper } from '../../index.js'\nimport type { Message } from '../../message/dht.js'\nimport type { PeerRouting } from '../../peer-routing/index.js'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { ComponentLogger, Logger, PeerId, PeerInfo } from '@libp2p/interface'\nimport type { AddressManager } from '@libp2p/interface-internal'\n\nexport interface FindNodeHandlerInit {\n  peerRouting: PeerRouting\n  logPrefix: string\n  peerInfoMapper: PeerInfoMapper\n}\n\nexport interface FindNodeHandlerComponents {\n  peerId: PeerId\n  addressManager: AddressManager\n  logger: ComponentLogger\n}\n\nexport class FindNodeHandler implements DHTMessageHandler {\n  private readonly peerRouting: PeerRouting\n  private readonly peerInfoMapper: PeerInfoMapper\n  private readonly peerId: PeerId\n  private readonly addressManager: AddressManager\n  private readonly log: Logger\n\n  constructor (components: FindNodeHandlerComponents, init: FindNodeHandlerInit) {\n    const { peerRouting, logPrefix } = init\n\n    this.log = components.logger.forComponent(`${logPrefix}:rpc:handlers:find-node`)\n    this.peerId = components.peerId\n    this.addressManager = components.addressManager\n    this.peerRouting = peerRouting\n    this.peerInfoMapper = init.peerInfoMapper\n  }\n\n  /**\n   * Process `FindNode` DHT messages\n   */\n  async handle (peerId: PeerId, msg: Message): Promise<Message> {\n    this.log('incoming request from %p for peers closer to %b', peerId, msg.key)\n\n    let closer: PeerInfo[] = []\n\n    if (msg.key == null) {\n      throw new CodeError('Invalid FIND_NODE message received - key was missing', 'ERR_INVALID_MESSAGE')\n    }\n\n    if (uint8ArrayEquals(this.peerId.toBytes(), msg.key)) {\n      closer = [{\n        id: this.peerId,\n        multiaddrs: this.addressManager.getAddresses().map(ma => ma.decapsulateCode(protocols('p2p').code))\n      }]\n    } else {\n      closer = await this.peerRouting.getCloserPeersOffline(msg.key, peerId)\n    }\n\n    const response: Message = {\n      type: MessageType.FIND_NODE,\n      clusterLevel: msg.clusterLevel,\n      closer: closer\n        .map(this.peerInfoMapper)\n        .filter(({ multiaddrs }) => multiaddrs.length)\n        .map(peerInfo => ({\n          id: peerInfo.id.toBytes(),\n          multiaddrs: peerInfo.multiaddrs.map(ma => ma.bytes)\n        })),\n      providers: []\n    }\n\n    if (response.closer.length === 0) {\n      this.log('could not find any peers closer to %b than %p', msg.key, peerId)\n    }\n\n    return response\n  }\n}\n","import { CodeError } from '@libp2p/interface'\nimport { CID } from 'multiformats/cid'\nimport { MessageType } from '../../message/dht.js'\nimport type { PeerInfoMapper } from '../../index.js'\nimport type { Message } from '../../message/dht.js'\nimport type { PeerRouting } from '../../peer-routing/index.js'\nimport type { Providers } from '../../providers.js'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { ComponentLogger, Logger, PeerId, PeerInfo, PeerStore } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface GetProvidersHandlerInit {\n  peerRouting: PeerRouting\n  providers: Providers\n  logPrefix: string\n  peerInfoMapper: PeerInfoMapper\n}\n\nexport interface GetProvidersHandlerComponents {\n  peerStore: PeerStore\n  logger: ComponentLogger\n}\n\nexport class GetProvidersHandler implements DHTMessageHandler {\n  private readonly peerRouting: PeerRouting\n  private readonly providers: Providers\n  private readonly peerStore: PeerStore\n  private readonly peerInfoMapper: PeerInfoMapper\n  private readonly log: Logger\n\n  constructor (components: GetProvidersHandlerComponents, init: GetProvidersHandlerInit) {\n    const { peerRouting, providers, logPrefix } = init\n\n    this.log = components.logger.forComponent(`${logPrefix}:rpc:handlers:get-providers`)\n    this.peerStore = components.peerStore\n    this.peerRouting = peerRouting\n    this.providers = providers\n    this.peerInfoMapper = init.peerInfoMapper\n  }\n\n  async handle (peerId: PeerId, msg: Message): Promise<Message> {\n    if (msg.key == null) {\n      throw new CodeError('Invalid FIND_NODE message received - key was missing', 'ERR_INVALID_MESSAGE')\n    }\n\n    let cid\n    try {\n      cid = CID.decode(msg.key)\n    } catch (err: any) {\n      throw new CodeError('Invalid CID', 'ERR_INVALID_CID')\n    }\n\n    this.log('%p asking for providers for %s', peerId, cid)\n\n    const [peers, closer] = await Promise.all([\n      this.providers.getProviders(cid),\n      this.peerRouting.getCloserPeersOffline(msg.key, peerId)\n    ])\n\n    const providerPeers = await this._getPeers(peers)\n    const closerPeers = await this._getPeers(closer.map(({ id }) => id))\n    const response: Message = {\n      type: MessageType.GET_PROVIDERS,\n      key: msg.key,\n      clusterLevel: msg.clusterLevel,\n      closer: closerPeers\n        .map(this.peerInfoMapper)\n        .filter(({ multiaddrs }) => multiaddrs.length)\n        .map(peerInfo => ({\n          id: peerInfo.id.toBytes(),\n          multiaddrs: peerInfo.multiaddrs.map(ma => ma.bytes)\n        })),\n      providers: providerPeers\n        .map(this.peerInfoMapper)\n        .filter(({ multiaddrs }) => multiaddrs.length)\n        .map(peerInfo => ({\n          id: peerInfo.id.toBytes(),\n          multiaddrs: peerInfo.multiaddrs.map(ma => ma.bytes)\n        }))\n    }\n\n    this.log('got %s providers %s closerPeers', response.providers.length, response.closer.length)\n\n    return response\n  }\n\n  async _getAddresses (peerId: PeerId): Promise<Multiaddr[]> {\n    return []\n  }\n\n  async _getPeers (peerIds: PeerId[]): Promise<PeerInfo[]> {\n    const output: PeerInfo[] = []\n\n    for (const peerId of peerIds) {\n      try {\n        const peer = await this.peerStore.get(peerId)\n\n        const peerAfterFilter = this.peerInfoMapper({\n          id: peerId,\n          multiaddrs: peer.addresses.map(({ multiaddr }) => multiaddr)\n        })\n\n        if (peerAfterFilter.multiaddrs.length > 0) {\n          output.push(peerAfterFilter)\n        }\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    return output\n  }\n}\n","import { CodeError } from '@libp2p/interface'\nimport { Libp2pRecord } from '@libp2p/record'\nimport {\n  MAX_RECORD_AGE\n} from '../../constants.js'\nimport { MessageType } from '../../message/dht.js'\nimport { bufferToRecordKey, isPublicKeyKey, fromPublicKeyKey } from '../../utils.js'\nimport type { Message } from '../../message/dht.js'\nimport type { PeerRouting } from '../../peer-routing/index.js'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { ComponentLogger, Logger, PeerId, PeerStore } from '@libp2p/interface'\nimport type { Datastore } from 'interface-datastore'\n\nexport interface GetValueHandlerInit {\n  peerRouting: PeerRouting\n  logPrefix: string\n}\n\nexport interface GetValueHandlerComponents {\n  peerStore: PeerStore\n  datastore: Datastore\n  logger: ComponentLogger\n}\n\nexport class GetValueHandler implements DHTMessageHandler {\n  private readonly peerStore: PeerStore\n  private readonly datastore: Datastore\n  private readonly peerRouting: PeerRouting\n  private readonly log: Logger\n\n  constructor (components: GetValueHandlerComponents, init: GetValueHandlerInit) {\n    this.log = components.logger.forComponent(`${init.logPrefix}:rpc:handlers:get-value`)\n    this.peerStore = components.peerStore\n    this.datastore = components.datastore\n    this.peerRouting = init.peerRouting\n  }\n\n  async handle (peerId: PeerId, msg: Message): Promise<Message> {\n    const key = msg.key\n\n    this.log('%p asked for key %b', peerId, key)\n\n    if (key == null || key.length === 0) {\n      throw new CodeError('Invalid key', 'ERR_INVALID_KEY')\n    }\n\n    const response: Message = {\n      type: MessageType.GET_VALUE,\n      key,\n      clusterLevel: msg.clusterLevel,\n      closer: [],\n      providers: []\n    }\n\n    if (isPublicKeyKey(key)) {\n      this.log('is public key')\n      const idFromKey = fromPublicKeyKey(key)\n      let pubKey: Uint8Array | undefined\n\n      try {\n        const peer = await this.peerStore.get(idFromKey)\n\n        if (peer.id.publicKey == null) {\n          throw new CodeError('No public key found in key book', 'ERR_NOT_FOUND')\n        }\n\n        pubKey = peer.id.publicKey\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      if (pubKey != null) {\n        this.log('returning found public key')\n        response.record = new Libp2pRecord(key, pubKey, new Date()).serialize()\n        return response\n      }\n    }\n\n    const [record, closer] = await Promise.all([\n      this._checkLocalDatastore(key),\n      this.peerRouting.getCloserPeersOffline(key, peerId)\n    ])\n\n    if (record != null) {\n      this.log('had record for %b in local datastore', key)\n      response.record = record.serialize()\n    }\n\n    if (closer.length > 0) {\n      this.log('had %s closer peers in routing table', closer.length)\n      response.closer = closer.map(peerInfo => ({\n        id: peerInfo.id.toBytes(),\n        multiaddrs: peerInfo.multiaddrs.map(ma => ma.bytes)\n      }))\n    }\n\n    return response\n  }\n\n  /**\n   * Try to fetch a given record by from the local datastore.\n   * Returns the record if it is still valid, meaning\n   * - it was either authored by this node, or\n   * - it was received less than `MAX_RECORD_AGE` ago.\n   */\n  async _checkLocalDatastore (key: Uint8Array): Promise<Libp2pRecord | undefined> {\n    this.log('checkLocalDatastore looking for %b', key)\n    const dsKey = bufferToRecordKey(key)\n\n    // Fetch value from ds\n    let rawRecord\n    try {\n      rawRecord = await this.datastore.get(dsKey)\n    } catch (err: any) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        return undefined\n      }\n      throw err\n    }\n\n    // Create record from the returned bytes\n    const record = Libp2pRecord.deserialize(rawRecord)\n\n    if (record == null) {\n      throw new CodeError('Invalid record', 'ERR_INVALID_RECORD')\n    }\n\n    // Check validity: compare time received with max record age\n    if (record.timeReceived == null ||\n      Date.now() - record.timeReceived.getTime() > MAX_RECORD_AGE) {\n      // If record is bad delete it and return\n      await this.datastore.delete(dsKey)\n      return undefined\n    }\n\n    // Record is valid\n    return record\n  }\n}\n","import type { Message } from '../../message/dht.js'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { ComponentLogger, Logger, PeerId } from '@libp2p/interface'\n\nexport interface PingComponents {\n  logger: ComponentLogger\n}\n\nexport interface PingHandlerInit {\n  logPrefix: string\n}\n\nexport class PingHandler implements DHTMessageHandler {\n  private readonly log: Logger\n\n  constructor (components: PingComponents, init: PingHandlerInit) {\n    this.log = components.logger.forComponent(`${init.logPrefix}:rpc:handlers:ping`)\n  }\n\n  async handle (peerId: PeerId, msg: Message): Promise<Message> {\n    this.log('ping from %p', peerId)\n    return msg\n  }\n}\n","import { CodeError } from '@libp2p/interface'\nimport { Libp2pRecord } from '@libp2p/record'\nimport { verifyRecord } from '../../record/validators.js'\nimport { bufferToRecordKey } from '../../utils.js'\nimport type { Validators } from '../../index.js'\nimport type { Message } from '../../message/dht.js'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { ComponentLogger, Logger, PeerId } from '@libp2p/interface'\nimport type { Datastore } from 'interface-datastore'\n\nexport interface PutValueHandlerInit {\n  validators: Validators\n  logPrefix: string\n}\n\nexport interface PutValueHandlerComponents {\n  datastore: Datastore\n  logger: ComponentLogger\n}\n\nexport class PutValueHandler implements DHTMessageHandler {\n  private readonly components: PutValueHandlerComponents\n  private readonly validators: Validators\n  private readonly log: Logger\n\n  constructor (components: PutValueHandlerComponents, init: PutValueHandlerInit) {\n    const { validators } = init\n\n    this.components = components\n    this.log = components.logger.forComponent(`${init.logPrefix}:rpc:handlers:put-value`)\n    this.validators = validators\n  }\n\n  async handle (peerId: PeerId, msg: Message): Promise<Message> {\n    const key = msg.key\n    this.log('%p asked us to store value for key %b', peerId, key)\n\n    if (msg.record == null) {\n      const errMsg = `Empty record from: ${peerId.toString()}`\n\n      this.log.error(errMsg)\n      throw new CodeError(errMsg, 'ERR_EMPTY_RECORD')\n    }\n\n    try {\n      const deserializedRecord = Libp2pRecord.deserialize(msg.record)\n\n      await verifyRecord(this.validators, deserializedRecord)\n\n      deserializedRecord.timeReceived = new Date()\n      const recordKey = bufferToRecordKey(deserializedRecord.key)\n      await this.components.datastore.put(recordKey, deserializedRecord.serialize().subarray())\n      this.log('put record for %b into datastore under key %k', key, recordKey)\n    } catch (err: any) {\n      this.log('did not put record for key %b into datastore %o', key, err)\n    }\n\n    return msg\n  }\n}\n","import * as lp from 'it-length-prefixed'\nimport { pipe } from 'it-pipe'\nimport { Message, MessageType } from '../message/dht.js'\nimport { AddProviderHandler } from './handlers/add-provider.js'\nimport { FindNodeHandler, type FindNodeHandlerComponents } from './handlers/find-node.js'\nimport { GetProvidersHandler, type GetProvidersHandlerComponents } from './handlers/get-providers.js'\nimport { GetValueHandler, type GetValueHandlerComponents } from './handlers/get-value.js'\nimport { PingHandler } from './handlers/ping.js'\nimport { PutValueHandler, type PutValueHandlerComponents } from './handlers/put-value.js'\nimport type { PeerInfoMapper, Validators } from '../index.js'\nimport type { PeerRouting } from '../peer-routing'\nimport type { Providers } from '../providers'\nimport type { RoutingTable } from '../routing-table'\nimport type { Logger, PeerId } from '@libp2p/interface'\nimport type { IncomingStreamData } from '@libp2p/interface-internal'\n\nexport interface DHTMessageHandler {\n  handle(peerId: PeerId, msg: Message): Promise<Message | undefined>\n}\n\nexport interface RPCInit {\n  routingTable: RoutingTable\n  providers: Providers\n  peerRouting: PeerRouting\n  validators: Validators\n  logPrefix: string\n  peerInfoMapper: PeerInfoMapper\n}\n\nexport interface RPCComponents extends GetValueHandlerComponents, PutValueHandlerComponents, FindNodeHandlerComponents, GetProvidersHandlerComponents {\n\n}\n\nexport class RPC {\n  private readonly handlers: Record<string, DHTMessageHandler>\n  private readonly routingTable: RoutingTable\n  private readonly log: Logger\n\n  constructor (components: RPCComponents, init: RPCInit) {\n    const { providers, peerRouting, validators, logPrefix, peerInfoMapper } = init\n\n    this.log = components.logger.forComponent(`${logPrefix}:rpc`)\n    this.routingTable = init.routingTable\n    this.handlers = {\n      [MessageType.GET_VALUE.toString()]: new GetValueHandler(components, { peerRouting, logPrefix }),\n      [MessageType.PUT_VALUE.toString()]: new PutValueHandler(components, { validators, logPrefix }),\n      [MessageType.FIND_NODE.toString()]: new FindNodeHandler(components, { peerRouting, logPrefix, peerInfoMapper }),\n      [MessageType.ADD_PROVIDER.toString()]: new AddProviderHandler(components, { providers, logPrefix }),\n      [MessageType.GET_PROVIDERS.toString()]: new GetProvidersHandler(components, { peerRouting, providers, logPrefix, peerInfoMapper }),\n      [MessageType.PING.toString()]: new PingHandler(components, { logPrefix })\n    }\n  }\n\n  /**\n   * Process incoming DHT messages\n   */\n  async handleMessage (peerId: PeerId, msg: Message): Promise<Message | undefined> {\n    try {\n      await this.routingTable.add(peerId)\n    } catch (err: any) {\n      this.log.error('Failed to update the kbucket store', err)\n    }\n\n    // get handler & execute it\n    const handler = this.handlers[msg.type]\n\n    if (handler == null) {\n      this.log.error(`no handler found for message type: ${msg.type}`)\n      return\n    }\n\n    return handler.handle(peerId, msg)\n  }\n\n  /**\n   * Handle incoming streams on the dht protocol\n   */\n  onIncomingStream (data: IncomingStreamData): void {\n    Promise.resolve().then(async () => {\n      const { stream, connection } = data\n      const peerId = connection.remotePeer\n\n      try {\n        await this.routingTable.add(peerId)\n      } catch (err: any) {\n        this.log.error(err)\n      }\n\n      const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n      await pipe(\n        stream,\n        (source) => lp.decode(source),\n        async function * (source) {\n          for await (const msg of source) {\n            // handle the message\n            const desMessage = Message.decode(msg)\n            self.log('incoming %s from %p', desMessage.type, peerId)\n            const res = await self.handleMessage(peerId, desMessage)\n\n            // Not all handlers will return a response\n            if (res != null) {\n              yield Message.encode(res)\n            }\n          }\n        },\n        (source) => lp.encode(source),\n        stream\n      )\n    })\n      .catch(err => {\n        this.log.error(err)\n      })\n  }\n}\n","import { CustomEvent, TypedEventEmitter } from '@libp2p/interface'\nimport type { KadDHTComponents } from '.'\nimport type { Logger, PeerId, Startable } from '@libp2p/interface'\n\nexport interface TopologyListenerInit {\n  protocol: string\n  logPrefix: string\n}\n\nexport interface TopologyListenerEvents {\n  'peer': CustomEvent<PeerId>\n}\n\n/**\n * Receives notifications of new peers joining the network that support the DHT protocol\n */\nexport class TopologyListener extends TypedEventEmitter<TopologyListenerEvents> implements Startable {\n  private readonly log: Logger\n  private readonly components: KadDHTComponents\n  private readonly protocol: string\n  private running: boolean\n  private registrarId?: string\n\n  constructor (components: KadDHTComponents, init: TopologyListenerInit) {\n    super()\n\n    const { protocol, logPrefix } = init\n\n    this.components = components\n    this.log = components.logger.forComponent(`${logPrefix}:topology-listener`)\n    this.running = false\n    this.protocol = protocol\n  }\n\n  isStarted (): boolean {\n    return this.running\n  }\n\n  /**\n   * Start the network\n   */\n  async start (): Promise<void> {\n    if (this.running) {\n      return\n    }\n\n    this.running = true\n\n    // register protocol with topology\n    this.registrarId = await this.components.registrar.register(this.protocol, {\n      onConnect: (peerId) => {\n        this.log('observed peer %p with protocol %s', peerId, this.protocol)\n        this.dispatchEvent(new CustomEvent('peer', {\n          detail: peerId\n        }))\n      }\n    })\n  }\n\n  /**\n   * Stop all network activity\n   */\n  async stop (): Promise<void> {\n    this.running = false\n\n    // unregister protocol and handlers\n    if (this.registrarId != null) {\n      this.components.registrar.unregister(this.registrarId)\n      this.registrarId = undefined\n    }\n  }\n}\n","import { CodeError, CustomEvent, TypedEventEmitter, contentRoutingSymbol, peerDiscoverySymbol, peerRoutingSymbol } from '@libp2p/interface'\nimport drain from 'it-drain'\nimport pDefer from 'p-defer'\nimport { PROTOCOL } from './constants.js'\nimport { ContentFetching } from './content-fetching/index.js'\nimport { ContentRouting as KADDHTContentRouting } from './content-routing/index.js'\nimport { Network } from './network.js'\nimport { PeerRouting as KADDHTPeerRouting } from './peer-routing/index.js'\nimport { Providers } from './providers.js'\nimport { QueryManager } from './query/manager.js'\nimport { QuerySelf } from './query-self.js'\nimport { selectors as recordSelectors } from './record/selectors.js'\nimport { validators as recordValidators } from './record/validators.js'\nimport { RoutingTable } from './routing-table/index.js'\nimport { RoutingTableRefresh } from './routing-table/refresh.js'\nimport { RPC } from './rpc/index.js'\nimport { TopologyListener } from './topology-listener.js'\nimport {\n  multiaddrIsPublic,\n  removePrivateAddressesMapper\n} from './utils.js'\nimport type { KadDHTComponents, KadDHTInit, Validators, Selectors, KadDHT as KadDHTInterface, QueryEvent, PeerInfoMapper } from './index.js'\nimport type { ContentRouting, Logger, PeerDiscovery, PeerDiscoveryEvents, PeerId, PeerInfo, PeerRouting, RoutingOptions, Startable } from '@libp2p/interface'\nimport type { CID } from 'multiformats/cid'\n\n/**\n * Wrapper class to convert events into returned values\n */\nclass DHTContentRouting implements ContentRouting {\n  private readonly dht: KadDHTInterface\n\n  constructor (dht: KadDHTInterface) {\n    this.dht = dht\n  }\n\n  async provide (cid: CID, options: RoutingOptions = {}): Promise<void> {\n    await drain(this.dht.provide(cid, options))\n  }\n\n  async * findProviders (cid: CID, options: RoutingOptions = {}): AsyncGenerator<PeerInfo, void, undefined> {\n    for await (const event of this.dht.findProviders(cid, options)) {\n      if (event.name === 'PROVIDER') {\n        yield * event.providers\n      }\n    }\n  }\n\n  async put (key: Uint8Array, value: Uint8Array, options?: RoutingOptions): Promise<void> {\n    await drain(this.dht.put(key, value, options))\n  }\n\n  async get (key: Uint8Array, options?: RoutingOptions): Promise<Uint8Array> {\n    for await (const event of this.dht.get(key, options)) {\n      if (event.name === 'VALUE') {\n        return event.value\n      }\n    }\n\n    throw new CodeError('Not found', 'ERR_NOT_FOUND')\n  }\n}\n\n/**\n * Wrapper class to convert events into returned values\n */\nclass DHTPeerRouting implements PeerRouting {\n  private readonly dht: KadDHTInterface\n\n  constructor (dht: KadDHTInterface) {\n    this.dht = dht\n  }\n\n  async findPeer (peerId: PeerId, options: RoutingOptions = {}): Promise<PeerInfo> {\n    for await (const event of this.dht.findPeer(peerId, options)) {\n      if (event.name === 'FINAL_PEER') {\n        return event.peer\n      }\n    }\n\n    throw new CodeError('Not found', 'ERR_NOT_FOUND')\n  }\n\n  async * getClosestPeers (key: Uint8Array, options: RoutingOptions = {}): AsyncIterable<PeerInfo> {\n    for await (const event of this.dht.getClosestPeers(key, options)) {\n      if (event.name === 'FINAL_PEER') {\n        yield event.peer\n      }\n    }\n  }\n}\n\nexport const DEFAULT_MAX_INBOUND_STREAMS = 32\nexport const DEFAULT_MAX_OUTBOUND_STREAMS = 64\n\n/**\n * A DHT implementation modelled after Kademlia with S/Kademlia modifications.\n * Original implementation in go: https://github.com/libp2p/go-libp2p-kad-dht.\n */\nexport class KadDHT extends TypedEventEmitter<PeerDiscoveryEvents> implements KadDHTInterface, Startable {\n  public protocol: string\n  public routingTable: RoutingTable\n  public providers: Providers\n  public network: Network\n  public peerRouting: KADDHTPeerRouting\n\n  public readonly components: KadDHTComponents\n  private readonly log: Logger\n  private running: boolean\n  private readonly kBucketSize: number\n  private clientMode: boolean\n  private readonly validators: Validators\n  private readonly selectors: Selectors\n  private readonly queryManager: QueryManager\n  private readonly contentFetching: ContentFetching\n  private readonly contentRouting: KADDHTContentRouting\n  private readonly routingTableRefresh: RoutingTableRefresh\n  private readonly rpc: RPC\n  private readonly topologyListener: TopologyListener\n  private readonly querySelf: QuerySelf\n  private readonly maxInboundStreams: number\n  private readonly maxOutboundStreams: number\n\n  private readonly dhtContentRouting: DHTContentRouting\n  private readonly dhtPeerRouting: DHTPeerRouting\n  private readonly peerInfoMapper: PeerInfoMapper\n\n  /**\n   * Create a new KadDHT\n   */\n  constructor (components: KadDHTComponents, init: KadDHTInit) {\n    super()\n\n    const {\n      kBucketSize,\n      clientMode,\n      validators,\n      selectors,\n      querySelfInterval,\n      protocol,\n      logPrefix,\n      pingTimeout,\n      pingConcurrency,\n      maxInboundStreams,\n      maxOutboundStreams,\n      providers: providersInit\n    } = init\n\n    const loggingPrefix = logPrefix ?? 'libp2p:kad-dht'\n\n    this.running = false\n    this.components = components\n    this.log = components.logger.forComponent(loggingPrefix)\n    this.protocol = protocol ?? PROTOCOL\n    this.kBucketSize = kBucketSize ?? 20\n    this.clientMode = clientMode ?? true\n    this.maxInboundStreams = maxInboundStreams ?? DEFAULT_MAX_INBOUND_STREAMS\n    this.maxOutboundStreams = maxOutboundStreams ?? DEFAULT_MAX_OUTBOUND_STREAMS\n    this.peerInfoMapper = init.peerInfoMapper ?? removePrivateAddressesMapper\n    this.routingTable = new RoutingTable(components, {\n      kBucketSize,\n      pingTimeout,\n      pingConcurrency,\n      protocol: this.protocol,\n      logPrefix: loggingPrefix\n    })\n\n    this.providers = new Providers(components, providersInit ?? {})\n\n    this.validators = {\n      ...recordValidators,\n      ...validators\n    }\n    this.selectors = {\n      ...recordSelectors,\n      ...selectors\n    }\n    this.network = new Network(components, {\n      protocol: this.protocol,\n      logPrefix: loggingPrefix\n    })\n\n    // all queries should wait for the initial query-self query to run so we have\n    // some peers and don't force consumers to use arbitrary timeouts\n    const initialQuerySelfHasRun = pDefer<any>()\n\n    // if the user doesn't want to wait for query peers, resolve the initial\n    // self-query promise immediately\n    if (init.allowQueryWithZeroPeers === true) {\n      initialQuerySelfHasRun.resolve()\n    }\n\n    this.queryManager = new QueryManager(components, {\n      // Number of disjoint query paths to use - This is set to `kBucketSize/2` per the S/Kademlia paper\n      disjointPaths: Math.ceil(this.kBucketSize / 2),\n      logPrefix: loggingPrefix,\n      initialQuerySelfHasRun,\n      routingTable: this.routingTable\n    })\n\n    // DHT components\n    this.peerRouting = new KADDHTPeerRouting(components, {\n      routingTable: this.routingTable,\n      network: this.network,\n      validators: this.validators,\n      queryManager: this.queryManager,\n      logPrefix: loggingPrefix\n    })\n    this.contentFetching = new ContentFetching(components, {\n      validators: this.validators,\n      selectors: this.selectors,\n      peerRouting: this.peerRouting,\n      queryManager: this.queryManager,\n      network: this.network,\n      logPrefix: loggingPrefix\n    })\n    this.contentRouting = new KADDHTContentRouting(components, {\n      network: this.network,\n      peerRouting: this.peerRouting,\n      queryManager: this.queryManager,\n      routingTable: this.routingTable,\n      providers: this.providers,\n      logPrefix: loggingPrefix\n    })\n    this.routingTableRefresh = new RoutingTableRefresh(components, {\n      peerRouting: this.peerRouting,\n      routingTable: this.routingTable,\n      logPrefix: loggingPrefix\n    })\n    this.rpc = new RPC(components, {\n      routingTable: this.routingTable,\n      providers: this.providers,\n      peerRouting: this.peerRouting,\n      validators: this.validators,\n      logPrefix: loggingPrefix,\n      peerInfoMapper: this.peerInfoMapper\n    })\n    this.topologyListener = new TopologyListener(components, {\n      protocol: this.protocol,\n      logPrefix: loggingPrefix\n    })\n    this.querySelf = new QuerySelf(components, {\n      peerRouting: this.peerRouting,\n      interval: querySelfInterval,\n      initialInterval: init.initialQuerySelfInterval,\n      logPrefix: loggingPrefix,\n      initialQuerySelfHasRun,\n      routingTable: this.routingTable\n    })\n\n    // handle peers being discovered during processing of DHT messages\n    this.network.addEventListener('peer', (evt) => {\n      const peerData = evt.detail\n\n      this.onPeerConnect(peerData).catch(err => {\n        this.log.error('could not add %p to routing table', peerData.id, err)\n      })\n\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: peerData\n      }))\n    })\n\n    // handle peers being discovered via other peer discovery mechanisms\n    this.topologyListener.addEventListener('peer', (evt) => {\n      const peerId = evt.detail\n\n      Promise.resolve().then(async () => {\n        const peer = await this.components.peerStore.get(peerId)\n\n        const peerData = {\n          id: peerId,\n          multiaddrs: peer.addresses.map(({ multiaddr }) => multiaddr),\n          protocols: peer.protocols\n        }\n\n        await this.onPeerConnect(peerData)\n      }).catch(err => {\n        this.log.error('could not add %p to routing table', peerId, err)\n      })\n    })\n\n    this.dhtPeerRouting = new DHTPeerRouting(this)\n    this.dhtContentRouting = new DHTContentRouting(this)\n\n    // if client mode has not been explicitly specified, auto-switch to server\n    // mode when the node's peer data is updated with publicly dialable\n    // addresses\n    if (init.clientMode == null) {\n      components.events.addEventListener('self:peer:update', (evt) => {\n        this.log('received update of self-peer info')\n\n        void Promise.resolve().then(async () => {\n          const hasPublicAddress = evt.detail.peer.addresses\n            .some(({ multiaddr }) => multiaddrIsPublic(multiaddr))\n\n          const mode = this.getMode()\n\n          if (hasPublicAddress && mode === 'client') {\n            await this.setMode('server')\n          } else if (mode === 'server' && !hasPublicAddress) {\n            await this.setMode('client')\n          }\n        })\n          .catch(err => {\n            this.log.error('error setting dht server mode', err)\n          })\n      })\n    }\n  }\n\n  get [contentRoutingSymbol] (): ContentRouting {\n    return this.dhtContentRouting\n  }\n\n  get [peerRoutingSymbol] (): PeerRouting {\n    return this.dhtPeerRouting\n  }\n\n  get [peerDiscoverySymbol] (): PeerDiscovery {\n    return this\n  }\n\n  async onPeerConnect (peerData: PeerInfo): Promise<void> {\n    this.log('peer %p connected', peerData.id)\n\n    peerData = this.peerInfoMapper(peerData)\n\n    if (peerData.multiaddrs.length === 0) {\n      this.log('ignoring %p as there were no valid addresses in %s after filtering', peerData.id, peerData.multiaddrs.map(addr => addr.toString()))\n      return\n    }\n\n    try {\n      await this.routingTable.add(peerData.id)\n    } catch (err: any) {\n      this.log.error('could not add %p to routing table', peerData.id, err)\n    }\n  }\n\n  /**\n   * Is this DHT running.\n   */\n  isStarted (): boolean {\n    return this.running\n  }\n\n  /**\n   * If 'server' this node will respond to DHT queries, if 'client' this node will not\n   */\n  getMode (): 'client' | 'server' {\n    return this.clientMode ? 'client' : 'server'\n  }\n\n  /**\n   * If 'server' this node will respond to DHT queries, if 'client' this node will not\n   */\n  async setMode (mode: 'client' | 'server'): Promise<void> {\n    await this.components.registrar.unhandle(this.protocol)\n\n    if (mode === 'client') {\n      this.log('enabling client mode')\n      this.clientMode = true\n    } else {\n      this.log('enabling server mode')\n      this.clientMode = false\n      await this.components.registrar.handle(this.protocol, this.rpc.onIncomingStream.bind(this.rpc), {\n        maxInboundStreams: this.maxInboundStreams,\n        maxOutboundStreams: this.maxOutboundStreams\n      })\n    }\n  }\n\n  /**\n   * Start listening to incoming connections.\n   */\n  async start (): Promise<void> {\n    this.running = true\n\n    // Only respond to queries when not in client mode\n    await this.setMode(this.clientMode ? 'client' : 'server')\n\n    this.querySelf.start()\n\n    await Promise.all([\n      this.providers.start(),\n      this.queryManager.start(),\n      this.network.start(),\n      this.routingTable.start(),\n      this.topologyListener.start(),\n      this.routingTableRefresh.start()\n    ])\n  }\n\n  /**\n   * Stop accepting incoming connections and sending outgoing\n   * messages.\n   */\n  async stop (): Promise<void> {\n    this.running = false\n\n    this.querySelf.stop()\n\n    await Promise.all([\n      this.providers.stop(),\n      this.queryManager.stop(),\n      this.network.stop(),\n      this.routingTable.stop(),\n      this.routingTableRefresh.stop(),\n      this.topologyListener.stop()\n    ])\n  }\n\n  /**\n   * Store the given key/value pair in the DHT\n   */\n  async * put (key: Uint8Array, value: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<any, void, undefined> {\n    yield * this.contentFetching.put(key, value, options)\n  }\n\n  /**\n   * Get the value that corresponds to the passed key\n   */\n  async * get (key: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<QueryEvent, void, undefined> {\n    yield * this.contentFetching.get(key, options)\n  }\n\n  // ----------- Content Routing\n\n  /**\n   * Announce to the network that we can provide given key's value\n   */\n  async * provide (key: CID, options: RoutingOptions = {}): AsyncGenerator<QueryEvent, void, undefined> {\n    yield * this.contentRouting.provide(key, this.components.addressManager.getAddresses(), options)\n  }\n\n  /**\n   * Search the dht for providers of the given CID\n   */\n  async * findProviders (key: CID, options: RoutingOptions = {}): AsyncGenerator<QueryEvent, any, unknown> {\n    yield * this.contentRouting.findProviders(key, options)\n  }\n\n  // ----------- Peer Routing -----------\n\n  /**\n   * Search for a peer with the given ID\n   */\n  async * findPeer (id: PeerId, options: RoutingOptions = {}): AsyncGenerator<QueryEvent, any, unknown> {\n    yield * this.peerRouting.findPeer(id, options)\n  }\n\n  /**\n   * Kademlia 'node lookup' operation\n   */\n  async * getClosestPeers (key: Uint8Array, options: RoutingOptions = {}): AsyncGenerator<QueryEvent, any, unknown> {\n    yield * this.peerRouting.getClosestPeers(key, options)\n  }\n\n  async refreshRoutingTable (): Promise<void> {\n    this.routingTableRefresh.refreshTable(true)\n  }\n}\n","/**\n * @packageDocumentation\n *\n * This module implements the [libp2p Kademlia spec](https://github.com/libp2p/specs/blob/master/kad-dht/README.md) in TypeScript.\n *\n * The Kademlia DHT allow for several operations such as finding peers, searching for providers of DHT records, etc.\n *\n * @example Using with libp2p\n *\n * ```TypeScript\n * import { kadDHT } from '@libp2p/kad-dht'\n * import { createLibp2p } from 'libp2p'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const node = await createLibp2p({\n *   services: {\n *     dht: kadDHT({\n *       // DHT options\n *     })\n *   }\n * })\n *\n * const peerId = peerIdFromString('QmFoo')\n * const peerInfo = await node.peerRouting.findPeer(peerId)\n *\n * console.info(peerInfo) // peer id, multiaddrs\n * ```\n *\n * @example Connecting to the IPFS Amino DHT\n *\n * The [Amino DHT](https://blog.ipfs.tech/2023-09-amino-refactoring/) is a public-good DHT used by IPFS to fetch content, find peers, etc.\n *\n * If you are trying to access content on the public internet, this is the implementation you want.\n *\n * ```TypeScript\n * import { kadDHT, removePrivateAddressesMapper } from '@libp2p/kad-dht'\n * import { createLibp2p } from 'libp2p'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const node = await createLibp2p({\n *   services: {\n *     aminoDHT: kadDHT({\n *       protocol: '/ipfs/kad/1.0.0',\n *       peerInfoMapper: removePrivateAddressesMapper\n *     })\n *   }\n * })\n *\n * const peerId = peerIdFromString('QmFoo')\n * const peerInfo = await node.peerRouting.findPeer(peerId)\n *\n * console.info(peerInfo) // peer id, multiaddrs\n * ```\n *\n * @example Connecting to a LAN-only DHT\n *\n * This DHT only works with privately dialable peers.\n *\n * This is for use when peers are on the local area network.\n *\n * ```TypeScript\n * import { kadDHT, removePublicAddressesMapper } from '@libp2p/kad-dht'\n * import { createLibp2p } from 'libp2p'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const node = await createLibp2p({\n *   services: {\n *     lanDHT: kadDHT({\n *       protocol: '/ipfs/lan/kad/1.0.0',\n *       peerInfoMapper: removePublicAddressesMapper,\n *       clientMode: false\n *     })\n *   }\n * })\n *\n * const peerId = peerIdFromString('QmFoo')\n * const peerInfo = await node.peerRouting.findPeer(peerId)\n *\n * console.info(peerInfo) // peer id, multiaddrs\n * ```\n */\n\nimport { KadDHT as KadDHTClass } from './kad-dht.js'\nimport { MessageType } from './message/dht.js'\nimport { removePrivateAddressesMapper, removePublicAddressesMapper, passthroughMapper } from './utils.js'\nimport type { ProvidersInit } from './providers.js'\nimport type { Libp2pEvents, ComponentLogger, TypedEventTarget, Metrics, PeerId, PeerInfo, PeerStore, RoutingOptions } from '@libp2p/interface'\nimport type { AddressManager, ConnectionManager, Registrar } from '@libp2p/interface-internal'\nimport type { Datastore } from 'interface-datastore'\nimport type { CID } from 'multiformats/cid'\nimport type { ProgressEvent } from 'progress-events'\n\nexport { Libp2pRecord as Record } from '@libp2p/record'\nexport { removePrivateAddressesMapper, removePublicAddressesMapper, passthroughMapper }\n\n/**\n * The types of events emitted during DHT queries\n */\nexport enum EventTypes {\n  SEND_QUERY = 0,\n  PEER_RESPONSE,\n  FINAL_PEER,\n  QUERY_ERROR,\n  PROVIDER,\n  VALUE,\n  ADD_PEER,\n  DIAL_PEER\n}\n\n/**\n * The types of messages sent to peers during DHT queries\n */\nexport { MessageType }\n\nexport type MessageName = keyof typeof MessageType\n\nexport interface DHTRecord {\n  key: Uint8Array\n  value: Uint8Array\n  timeReceived?: Date\n}\n\nexport type DHTProgressEvents =\n  ProgressEvent<'kad-dht:query:send-query', SendQueryEvent> |\n  ProgressEvent<'kad-dht:query:peer-response', PeerResponseEvent> |\n  ProgressEvent<'kad-dht:query:final-peer', FinalPeerEvent> |\n  ProgressEvent<'kad-dht:query:query-error', QueryErrorEvent> |\n  ProgressEvent<'kad-dht:query:provider', ProviderEvent> |\n  ProgressEvent<'kad-dht:query:value', ValueEvent> |\n  ProgressEvent<'kad-dht:query:add-peer', AddPeerEvent> |\n  ProgressEvent<'kad-dht:query:dial-peer', DialPeerEvent>\n\n/**\n * Emitted when sending queries to remote peers\n */\nexport interface SendQueryEvent {\n  to: PeerId\n  type: EventTypes.SEND_QUERY\n  name: 'SEND_QUERY'\n  messageName: keyof typeof MessageType\n  messageType: MessageType\n}\n\n/**\n * Emitted when query responses are received form remote peers.  Depending on the query\n * these events may be followed by a `FinalPeerEvent`, a `ValueEvent` or a `ProviderEvent`.\n */\nexport interface PeerResponseEvent {\n  from: PeerId\n  type: EventTypes.PEER_RESPONSE\n  name: 'PEER_RESPONSE'\n  messageName: keyof typeof MessageType\n  messageType: MessageType\n  closer: PeerInfo[]\n  providers: PeerInfo[]\n  record?: DHTRecord\n}\n\n/**\n * Emitted at the end of a `findPeer` query\n */\nexport interface FinalPeerEvent {\n  from: PeerId\n  peer: PeerInfo\n  type: EventTypes.FINAL_PEER\n  name: 'FINAL_PEER'\n}\n\n/**\n * Something went wrong with the query\n */\nexport interface QueryErrorEvent {\n  from: PeerId\n  type: EventTypes.QUERY_ERROR\n  name: 'QUERY_ERROR'\n  error: Error\n}\n\n/**\n * Emitted when providers are found\n */\nexport interface ProviderEvent {\n  from: PeerId\n  type: EventTypes.PROVIDER\n  name: 'PROVIDER'\n  providers: PeerInfo[]\n}\n\n/**\n * Emitted when values are found\n */\nexport interface ValueEvent {\n  from: PeerId\n  type: EventTypes.VALUE\n  name: 'VALUE'\n  value: Uint8Array\n}\n\n/**\n * Emitted when peers are added to a query\n */\nexport interface AddPeerEvent {\n  type: EventTypes.ADD_PEER\n  name: 'ADD_PEER'\n  peer: PeerId\n}\n\n/**\n * Emitted when peers are dialled as part of a query\n */\nexport interface DialPeerEvent {\n  peer: PeerId\n  type: EventTypes.DIAL_PEER\n  name: 'DIAL_PEER'\n}\n\nexport type QueryEvent = SendQueryEvent | PeerResponseEvent | FinalPeerEvent | QueryErrorEvent | ProviderEvent | ValueEvent | AddPeerEvent | DialPeerEvent\n\nexport interface RoutingTable {\n  size: number\n}\n\nexport interface PeerInfoMapper {\n  (peer: PeerInfo): PeerInfo\n}\n\nexport interface KadDHT {\n  /**\n   * Get a value from the DHT, the final ValueEvent will be the best value\n   */\n  get(key: Uint8Array, options?: RoutingOptions): AsyncIterable<QueryEvent>\n\n  /**\n   * Find providers of a given CID\n   */\n  findProviders(key: CID, options?: RoutingOptions): AsyncIterable<QueryEvent>\n\n  /**\n   * Find a peer on the DHT\n   */\n  findPeer(id: PeerId, options?: RoutingOptions): AsyncIterable<QueryEvent>\n\n  /**\n   * Find the closest peers to the passed key\n   */\n  getClosestPeers(key: Uint8Array, options?: RoutingOptions): AsyncIterable<QueryEvent>\n\n  /**\n   * Store provider records for the passed CID on the DHT pointing to us\n   */\n  provide(key: CID, options?: RoutingOptions): AsyncIterable<QueryEvent>\n\n  /**\n   * Store the passed value under the passed key on the DHT\n   */\n  put(key: Uint8Array, value: Uint8Array, options?: RoutingOptions): AsyncIterable<QueryEvent>\n\n  /**\n   * Returns the mode this node is in\n   */\n  getMode(): 'client' | 'server'\n\n  /**\n   * If 'server' this node will respond to DHT queries, if 'client' this node\n   * will not.\n   */\n  setMode(mode: 'client' | 'server'): Promise<void>\n\n  /**\n   * Force a routing table refresh\n   */\n  refreshRoutingTable(): Promise<void>\n}\n\nexport interface SingleKadDHT extends KadDHT {\n  routingTable: RoutingTable\n}\n\n/**\n * A selector function takes a DHT key and a list of records and returns the\n * index of the best record in the list\n */\nexport interface SelectFn { (key: Uint8Array, records: Uint8Array[]): number }\n\n/**\n * A validator function takes a DHT key and the value of the record for that key\n * and throws if the record is invalid\n */\nexport interface ValidateFn { (key: Uint8Array, value: Uint8Array): Promise<void> }\n\n/**\n * Selectors are a map of key prefixes to selector functions\n */\nexport type Selectors = Record<string, SelectFn>\n\n/**\n * Validators are a map of key prefixes to validator functions\n */\nexport type Validators = Record<string, ValidateFn>\n\nexport interface KadDHTInit {\n  /**\n   * How many peers to store in each kBucket\n   *\n   * @default 20\n   */\n  kBucketSize?: number\n\n  /**\n   * If true, only ever be a DHT client. If false, be a DHT client until told\n   * to be a DHT server via `setMode`.\n   *\n   * @default false\n   */\n  clientMode?: boolean\n\n  /**\n   * Record selectors\n   */\n  selectors?: Selectors\n\n  /**\n   * Record validators\n   */\n  validators?: Validators\n\n  /**\n   * How often to query our own PeerId in order to ensure we have a\n   * good view on the KAD address space local to our PeerId\n   */\n  querySelfInterval?: number\n\n  /**\n   * During startup we run the self-query at a shorter interval to ensure\n   * the containing node can respond to queries quickly. Set this interval\n   * here in ms.\n   *\n   * @default 1000\n   */\n  initialQuerySelfInterval?: number\n\n  /**\n   * After startup by default all queries will be paused until the initial\n   * self-query has run and there are some peers in the routing table.\n   *\n   * Pass true here to disable this behaviour.\n   *\n   * @default false\n   */\n  allowQueryWithZeroPeers?: boolean\n\n  /**\n   * The network protocol to use\n   *\n   * @default \"/ipfs/kad/1.0.0\"\n   */\n  protocol?: string\n\n  /**\n   * The logging prefix to use\n   *\n   * @default \"libp2p:kad-dht\"\n   */\n  logPrefix?: string\n\n  /**\n   * How long to wait in ms when pinging DHT peers to decide if they\n   * should be evicted from the routing table or not.\n   *\n   * @default 10000\n   */\n  pingTimeout?: number\n\n  /**\n   * How many peers to ping in parallel when deciding if they should\n   * be evicted from the routing table or not\n   *\n   * @default 10\n   */\n  pingConcurrency?: number\n\n  /**\n   * How many parallel incoming streams to allow on the DHT protocol per\n   * connection\n   *\n   * @default 32\n   */\n  maxInboundStreams?: number\n\n  /**\n   * How many parallel outgoing streams to allow on the DHT protocol per\n   * connection\n   *\n   * @default 64\n   */\n  maxOutboundStreams?: number\n\n  /**\n   * Initialization options for the Providers component\n   */\n  providers?: ProvidersInit\n\n  /**\n   * For every incoming and outgoing PeerInfo, override address configuration\n   * with this filter.\n   */\n  peerInfoMapper?(peer: PeerInfo): PeerInfo\n}\n\nexport interface KadDHTComponents {\n  peerId: PeerId\n  registrar: Registrar\n  addressManager: AddressManager\n  peerStore: PeerStore\n  metrics?: Metrics\n  connectionManager: ConnectionManager\n  datastore: Datastore\n  events: TypedEventTarget<Libp2pEvents>\n  logger: ComponentLogger\n}\n\n/**\n * Creates a custom DHT implementation, please ensure you pass a `protocol`\n * string as an option.\n */\nexport function kadDHT (init: KadDHTInit): (components: KadDHTComponents) => KadDHT {\n  return (components: KadDHTComponents) => new KadDHTClass(components, init)\n}\n","import os from 'os'\nimport { logger } from '@libp2p/logger'\nimport { gateway4async } from 'default-gateway'\nimport { discoverGateway } from './discovery/index.js'\nimport { PMPClient } from './pmp/index.js'\nimport { UPNPClient } from './upnp/index.js'\n\nconst log = logger('nat-port-mapper')\n\nexport interface NatAPIOptions {\n  /**\n   * Minimum 20 minutes, default 2 hours\n   */\n  ttl?: number\n  description?: string\n  gateway?: string\n  keepAlive?: boolean\n}\n\nexport interface MapPortOptions {\n  publicPort: number\n  localPort: number\n  localAddress: string\n  protocol: 'TCP' | 'UDP'\n  description: string\n  ttl: number\n  gateway?: string\n}\n\nexport interface UnmapPortOptions {\n  publicPort: number\n  localPort: number\n  protocol: 'TCP' | 'UDP'\n}\n\nexport interface Client {\n  close(): Promise<void>\n  map(options: MapPortOptions): Promise<void>\n  unmap(options: UnmapPortOptions): Promise<void>\n  externalIp(): Promise<string>\n}\n\nexport class NatAPI {\n  public openPorts: MapPortOptions[]\n  private readonly ttl: number\n  private readonly description: string\n  private readonly gateway?: string\n  private readonly keepAlive: boolean\n  private readonly keepAliveInterval: number\n  private readonly destroyed: boolean\n  private readonly client: Client\n  private readonly updateIntervals: Map<string, any>\n\n  constructor (opts: NatAPIOptions = {}, client: Client) {\n    // TTL is 2 hours (min 20 min)\n    this.ttl = opts.ttl != null ? Math.max(opts.ttl, 1200) : 7200\n    this.description = opts.description ?? 'NatAPI'\n    this.gateway = opts.gateway\n    this.keepAlive = opts.keepAlive ?? true\n    this.client = client\n    this.updateIntervals = new Map()\n\n    // Refresh the mapping 10 minutes before the end of its lifetime\n    this.keepAliveInterval = (this.ttl - 600) * 1000\n    this.destroyed = false\n    this.openPorts = []\n  }\n\n  async map (options?: Partial<MapPortOptions>): Promise<void> {\n    if (this.destroyed) {\n      throw new Error('client is destroyed')\n    }\n\n    // Validate input\n    const opts = this.validateInput(options)\n\n    // UDP or TCP\n    await this.client.map(opts)\n\n    this.openPorts.push(opts)\n\n    if (this.keepAlive) {\n      this.updateIntervals.set(`${opts.publicPort}:${opts.localPort}-${opts.protocol}`, setInterval(() => {\n        void this.client.map(opts)\n          .catch(err => {\n            log('Error refreshing port mapping %d:%d for protocol %s mapped on router', opts.publicPort, opts.localPort, opts.protocol, err)\n          })\n      }, this.keepAliveInterval))\n    }\n\n    log('Port %d:%d for protocol %s mapped on router', opts.publicPort, opts.localPort, opts.protocol)\n  }\n\n  async unmap (options: Partial<UnmapPortOptions>): Promise<void> {\n    if (this.destroyed) {\n      throw new Error('client is destroyed')\n    }\n\n    // Validate input\n    const opts = this.validateInput(options)\n\n    // UDP or TCP\n    await this.client.unmap(opts)\n\n    this.openPorts = this.openPorts.filter((openPort) => {\n      return openPort.publicPort !== opts.publicPort && openPort.protocol !== opts.protocol\n    })\n\n    const key = `${opts.publicPort}:${opts.localPort}-${opts.protocol}`\n    clearInterval(this.updateIntervals.get(key))\n    this.updateIntervals.delete(key)\n\n    log('Port %d:%d for protocol %s unmapped on router', opts.publicPort, opts.localPort, opts.protocol)\n  }\n\n  async close (): Promise<void> {\n    if (this.destroyed) {\n      throw new Error('client already closed')\n    }\n\n    if (this.client != null) {\n      log('Close UPnP client')\n      await this.client.close()\n    }\n\n    // stop all updates\n    for (const interval of this.updateIntervals.values()) {\n      clearInterval(interval)\n    }\n    this.updateIntervals.clear()\n\n    // Unmap all ports\n    await Promise.all(\n      this.openPorts.map(async opts => this.unmap(opts))\n    )\n  }\n\n  validateInput (options: Partial<MapPortOptions> = {}): MapPortOptions {\n    if (options.localPort == null) {\n      throw new Error('invalid parameters')\n    }\n\n    const output: MapPortOptions = {\n      localPort: options.localPort,\n      localAddress: options.localAddress ?? findLocalAddress(),\n      publicPort: options.publicPort ?? options.localPort,\n      protocol: options.protocol ?? 'TCP',\n      description: options.description ?? this.description,\n      ttl: options.ttl ?? this.ttl,\n      gateway: options.gateway ?? this.gateway\n    }\n\n    return output\n  }\n\n  async externalIp (): Promise<string> {\n    return this.client.externalIp()\n  }\n}\n\nfunction findLocalAddress (): string {\n  const interfaces = os.networkInterfaces()\n\n  for (const infos of Object.values(interfaces)) {\n    if (infos == null) {\n      continue\n    }\n\n    for (const info of infos) {\n      if (info.internal) {\n        continue\n      }\n\n      if (info.family === 'IPv6') {\n        continue\n      }\n\n      log('Found local address', info.address)\n      return info.address\n    }\n  }\n\n  throw new Error('Please pass a `localAddress` to the map function')\n}\n\nexport function upnpNat (options: Partial<NatAPIOptions> = {}): NatAPI {\n  const client = UPNPClient.createClient(discoverGateway(options))\n\n  return new NatAPI(options, client)\n}\n\nexport async function pmpNat (options: Partial<NatAPIOptions> = {}): Promise<NatAPI> {\n  const client = PMPClient.createClient(discoverGateway({\n    ...options,\n    gateway: (await gateway4async()).gateway\n  }))\n\n  return new NatAPI(options, client)\n}\n","/**\n * @packageDocumentation\n *\n * A logger for libp2p based on the venerable [debug](https://www.npmjs.com/package/debug) module.\n *\n * @example\n *\n * ```TypeScript\n * import { logger } from '@libp2p/logger'\n *\n * const log = logger('libp2p:my:component:name')\n *\n * try {\n *   // an operation\n *   log('something happened: %s', 'it was ok')\n * } catch (err) {\n *   log.error('something bad happened: %o', err)\n * }\n *\n * log('with this peer: %p', {})\n * log('and this base58btc: %b', Uint8Array.from([0, 1, 2, 3]))\n * log('and this base32: %t', Uint8Array.from([4, 5, 6, 7]))\n * ```\n *\n * ```console\n * $ DEBUG=libp2p:* node index.js\n * something happened: it was ok\n * something bad happened: <stack trace>\n * with this peer: 12D3Foo\n * with this base58btc: Qmfoo\n * with this base32: bafyfoo\n * ```\n */\n\nimport debug from 'debug'\nimport { base32 } from 'multiformats/bases/base32'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { base64 } from 'multiformats/bases/base64'\nimport { truncatePeerId } from './utils.js'\nimport type { PeerId } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { Key } from 'interface-datastore'\nimport type { CID } from 'multiformats/cid'\n\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v?: Uint8Array): string => {\n  return v == null ? 'undefined' : base58btc.baseEncode(v)\n}\n\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v?: Uint8Array): string => {\n  return v == null ? 'undefined' : base32.baseEncode(v)\n}\n\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v?: Uint8Array): string => {\n  return v == null ? 'undefined' : base64.baseEncode(v)\n}\n\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v?: PeerId): string => {\n  return v == null ? 'undefined' : v.toString()\n}\n\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v?: CID): string => {\n  return v == null ? 'undefined' : v.toString()\n}\n\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v: Key): string => {\n  return v == null ? 'undefined' : v.toString()\n}\n\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = (v?: Multiaddr): string => {\n  return v == null ? 'undefined' : v.toString()\n}\n\nexport interface Logger {\n  (formatter: any, ...args: any[]): void\n  error(formatter: any, ...args: any[]): void\n  trace(formatter: any, ...args: any[]): void\n  enabled: boolean\n}\n\nexport interface ComponentLogger {\n  forComponent(name: string): Logger\n}\n\nfunction createDisabledLogger (namespace: string): debug.Debugger {\n  const logger = (): void => {}\n  logger.enabled = false\n  logger.color = ''\n  logger.diff = 0\n  logger.log = (): void => {}\n  logger.namespace = namespace\n  logger.destroy = () => true\n  logger.extend = () => logger\n\n  return logger\n}\n\nexport interface PeerLoggerOptions {\n  prefixLength: number\n  suffixLength: number\n}\n\n/**\n * Create a component logger that will prefix any log messages with a truncated\n * peer id.\n *\n * @example\n *\n * ```TypeScript\n * import { peerLogger } from '@libp2p/logger'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const peerId = peerIdFromString('12D3FooBar')\n * const logger = peerLogger(peerId)\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"12…oBar:my-component hello world\"\n * ```\n */\nexport function peerLogger (peerId: PeerId, options: Partial<PeerLoggerOptions> = {}): ComponentLogger {\n  return prefixLogger(truncatePeerId(peerId, options))\n}\n\n/**\n * Create a component logger that will prefix any log messages with the passed\n * string.\n *\n * @example\n *\n * ```TypeScript\n * import { prefixLogger } from '@libp2p/logger'\n *\n * const logger = prefixLogger('my-node')\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"my-node:my-component hello world\"\n * ```\n */\nexport function prefixLogger (prefix: string): ComponentLogger {\n  return {\n    forComponent (name: string) {\n      return logger(`${prefix}:${name}`)\n    }\n  }\n}\n\n/**\n * Create a component logger\n *\n * @example\n *\n * ```TypeScript\n * import { defaultLogger } from '@libp2p/logger'\n * import { peerIdFromString } from '@libp2p/peer-id'\n *\n * const logger = defaultLogger()\n *\n * const log = logger.forComponent('my-component')\n * log.info('hello world')\n * // logs \"my-component hello world\"\n * ```\n */\nexport function defaultLogger (): ComponentLogger {\n  return {\n    forComponent (name: string) {\n      return logger(name)\n    }\n  }\n}\n\n/**\n * Creates a logger for the passed component name.\n *\n * @example\n *\n * ```TypeScript\n * import { logger } from '@libp2p/logger'\n *\n * const log = logger('my-component')\n * log.info('hello world')\n * // logs \"my-component hello world\"\n * ```\n */\nexport function logger (name: string): Logger {\n  // trace logging is a no-op by default\n  let trace: debug.Debugger = createDisabledLogger(`${name}:trace`)\n\n  // look at all the debug names and see if trace logging has explicitly been enabled\n  if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n    trace = debug(`${name}:trace`)\n  }\n\n  return Object.assign(debug(name), {\n    error: debug(`${name}:error`),\n    trace\n  })\n}\n\nexport function disable (): void {\n  debug.disable()\n}\n\nexport function enable (namespaces: string): void {\n  debug.enable(namespaces)\n}\n\nexport function enabled (namespaces: string): boolean {\n  return debug.enabled(namespaces)\n}\n","import { EventEmitter } from 'events'\nimport { EventIterator } from 'event-iterator'\nimport { advertise } from './advertise/index.js'\nimport { adverts, type CachedAdvert } from './adverts.js'\nimport { notify } from './commands/notify.js'\nimport { search } from './commands/search.js'\nimport { createSockets } from './create-sockets.js'\nimport { defaultSsdpOptions } from './default-ssdp-options.js'\nimport { discover } from './discover/index.js'\nimport { searchResponse } from './discover/search-response.js'\nimport { parseSsdpMessage } from './parse-ssdp-message.js'\nimport { sendSsdpMessage } from './send-ssdp-message.js'\nimport type { Socket } from 'dgram'\n\nexport interface NetworkAddress {\n  address: string\n  port: number\n}\n\nexport interface SSDPSocketOptions {\n  type: 'udp4' | 'udp6'\n  broadcast: NetworkAddress\n  bind: NetworkAddress\n  maxHops: number\n}\n\nexport interface SSDPOptions {\n  udn: string\n  signature: string\n  sockets: SSDPSocketOptions[]\n  start: boolean\n}\n\nexport interface SSDPSocket extends Socket {\n  type: 'udp4' | 'udp6'\n  closed: boolean\n  options: SSDPSocketOptions\n}\n\nexport interface NotfiyMessage {\n  LOCATION: string\n  USN: string\n  NT: string\n  NTS: 'ssdp:alive' | 'ssdp:byebye'\n  ttl(): number\n}\n\nexport interface SearchMessage {\n  LOCATION: string\n  USN: string\n  ST: string\n  ttl(): number\n}\n\ninterface SSDPEvents {\n  'transport:incoming-message'(buffer: Buffer, from: NetworkAddress): void\n  'transport:outgoing-message'(socket: SSDPSocket, buffer: Buffer, to: NetworkAddress): void\n  'ssdp:send-message'(status: string, headers: Record<string, any>, to?: NetworkAddress): void\n  'ssdp:m-search'(message: SearchMessage, from: NetworkAddress): void\n  'ssdp:notify'(message: NotfiyMessage, from: NetworkAddress): void\n  'ssdp:search-response'(message: SearchMessage, from: NetworkAddress): void\n\n  'service:discover'(service: Service): void\n  'service:update'(service: Service): void\n  'service:remove'(usn: string): void\n\n  'error'(err: Error): void\n}\n\nexport interface Service<DeviceDescription = Record<string, any>> {\n  location: URL\n  details: DeviceDescription\n  expires: number\n  serviceType: string\n  uniqueServiceName: string\n}\n\nexport interface Advertisment {\n  usn: string\n  details: Record<string, any> | (() => Promise<Record<string, any>>)\n}\n\nexport interface SSDP {\n  /**\n   * Unique device name - identifies the device and must the same over time for a specific device instance\n   */\n  udn: string\n\n  /**\n   * A user-agent style string to identify the implementation\n   */\n  signature: string\n\n  /**\n   * Currently open sockets\n   */\n  sockets: SSDPSocket[]\n\n  /**\n   * Options passed to the constructor\n   */\n  options: SSDPOptions\n\n  start(): Promise<void>\n  stop(): Promise<void>\n\n  advertise(advert: Advertisment): Promise<CachedAdvert>\n  discover<Details = Record<string, any>>(serviceType?: string): AsyncIterable<Service<Details>>\n\n  // events\n  on<U extends keyof SSDPEvents>(\n    event: U, listener: SSDPEvents[U]\n  ): this\n  off<U extends keyof SSDPEvents>(\n    event: U, listener: SSDPEvents[U]\n  ): this\n  once<U extends keyof SSDPEvents>(\n    event: U, listener: SSDPEvents[U]\n  ): this\n  emit<U extends keyof SSDPEvents>(\n    event: U, ...args: Parameters<SSDPEvents[U]>\n  ): boolean\n}\n\nclass SSDPImpl extends EventEmitter implements SSDP {\n  public udn: string\n  public signature: string\n  public sockets: SSDPSocket[]\n  public readonly options: SSDPOptions\n  private readonly abortController: AbortController\n\n  constructor (options?: Partial<SSDPOptions>) {\n    super()\n\n    this.options = defaultSsdpOptions(options)\n    this.udn = this.options.udn\n    this.signature = this.options.signature\n    this.sockets = []\n    this.abortController = new AbortController()\n  }\n\n  async start (): Promise<void> {\n    // set up UDP sockets listening for SSDP broadcasts\n    this.sockets = await createSockets(this, this.abortController.signal)\n\n    // set up protocol listeners\n    this.on('transport:incoming-message', parseSsdpMessage.bind(null, this))\n    this.on('ssdp:send-message', sendSsdpMessage.bind(null, this))\n    this.on('ssdp:m-search', search.bind(null, this))\n    this.on('ssdp:notify', notify.bind(null, this))\n    this.on('ssdp:search-response', searchResponse.bind(null, this))\n  }\n\n  async stop (): Promise<void> {\n    await adverts.stopAll()\n\n    await Promise.all(\n      this.sockets.map(async socket => {\n        await new Promise<void>(resolve => {\n          socket.on('close', () => { resolve() })\n          socket.close()\n          socket.closed = true\n        })\n      })\n    )\n\n    this.abortController.abort()\n  }\n\n  async advertise (advert: Advertisment): Promise<CachedAdvert> {\n    return advertise(this, advert)\n  }\n\n  async * discover <Details = Record<string, any>> (serviceType?: string): AsyncGenerator<any, void, any> {\n    const iterator = new EventIterator<Service<Details>>(\n      ({ push }) => {\n        const listener = (service: Service<Details>): void => {\n          if (serviceType != null && service.serviceType !== serviceType) {\n            return\n          }\n\n          push(service)\n        }\n\n        this.addListener('service:discover', listener)\n\n        return () => {\n          this.removeListener('service:discover', listener)\n        }\n      }\n    )\n\n    discover(this, serviceType)\n\n    yield * iterator\n  }\n}\n\nexport default async function (options: Partial<SSDPOptions> = {}): Promise<SSDP> {\n  const ssdp = new SSDPImpl(options)\n\n  if (options.start !== false) {\n    await ssdp.start()\n  }\n\n  return ssdp\n}\n","import type { Advert } from './advertise/index.js'\n\nexport interface CachedAdvert {\n  service: Advert\n  stop(): Promise<void>\n}\n\nclass Adverts {\n  private adverts: CachedAdvert[]\n\n  constructor () {\n    this.adverts = []\n  }\n\n  add (advert: CachedAdvert): void {\n    this.adverts.push(advert)\n  }\n\n  remove (advert: CachedAdvert): void {\n    this.adverts = this.adverts.filter(ad => ad !== advert)\n  }\n\n  clear (): void {\n    this.adverts = []\n  }\n\n  forEach (fn: (advert: Advert) => void): void {\n    this.adverts.forEach(ad => { fn(ad.service) })\n  }\n\n  async stopAll (): Promise<void> {\n    await Promise.all(\n      this.adverts.map(async ad => ad.stop())\n    )\n  }\n}\n\nexport const adverts = new Adverts()\n","import type { Service } from './index.js'\n\nclass Cache {\n  // service type => unique service name => service\n  private services: Map<string, Map<string, Service>>\n\n  constructor () {\n    this.services = new Map()\n  }\n\n  hasService (serviceType: string, uniqueServiceName: string): boolean {\n    const instances = this.services.get(serviceType)\n\n    if (instances == null) {\n      return false\n    }\n\n    return instances.has(uniqueServiceName)\n  }\n\n  getService (serviceType: string, uniqueServiceName: string): Service<Record<string, any>> | undefined {\n    const instances = this.services.get(serviceType)\n\n    if (instances == null) {\n      return\n    }\n\n    const service = instances.get(uniqueServiceName)\n\n    if (service == null) {\n      return\n    }\n\n    return service\n  }\n\n  deleteService (serviceType: string, uniqueServiceName: string): void {\n    const instances = this.services.get(serviceType)\n\n    if (instances == null) {\n      return\n    }\n\n    instances.delete(uniqueServiceName)\n\n    if (instances.size === 0) {\n      this.services.delete(serviceType)\n    }\n  }\n\n  cacheService (service: Service): void {\n    const instances = this.services.get(service.serviceType) ?? new Map()\n    instances.set(service.uniqueServiceName, service)\n\n    this.services.set(service.serviceType, instances)\n  }\n\n  clear (): void {\n    this.services = new Map()\n  }\n}\n\nexport const cache = new Cache()\n","import { parseStringPromise } from 'xml2js'\nimport { fetch } from '../fetch.js'\n\nexport async function resolveLocation (location: string): Promise<any> {\n  if (location.substring(0, 4) !== 'http') {\n    location = `http://${location}`\n  }\n\n  const text = await fetch(location, {\n    method: 'GET',\n    headers: {\n      accept: 'application/xml'\n    }\n  })\n  const result = await parseStringPromise(text, {\n    normalize: true,\n    explicitArray: false,\n    explicitRoot: true\n  })\n\n  if (result == null) {\n    return {}\n  }\n\n  return result.root ?? result\n}\n","import http from 'http'\nimport https from 'https'\n\nexport interface RequestInit {\n  method?: 'POST' | 'GET'\n  headers?: Record<string, string>\n  body?: Buffer | string\n}\n\nfunction initRequest (url: URL, init: RequestInit): http.ClientRequest {\n  if (url.protocol === 'http:') {\n    return http.request(url, {\n      method: init.method,\n      headers: init.headers\n    })\n  } else if (url.protocol === 'https:') {\n    return https.request(url, {\n      method: init.method,\n      headers: init.headers,\n      rejectUnauthorized: false\n    })\n  } else {\n    throw new Error('Invalid protocol ' + url.protocol)\n  }\n}\n\nexport async function fetch (url: string, init: RequestInit = {}): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    const request = initRequest(new URL(url), init)\n\n    if (init.body != null) {\n      request.write(init.body)\n    }\n\n    request.end()\n\n    request.on('error', (err) => {\n      reject(err)\n    })\n\n    request.on('response', (response) => {\n      if (response.headers['content-type'] != null && !response.headers['content-type'].includes('/xml')) {\n        reject(new Error(`Bad content type ${response.headers['content-type']}`))\n        return\n      }\n\n      let body = ''\n\n      response.on('data', (chunk: Buffer) => {\n        body += chunk.toString()\n      })\n      response.on('end', () => {\n        resolve(body)\n      })\n      response.on('error', (err) => {\n        reject(err)\n      })\n    })\n  })\n}\n","import { cache } from '../cache.js'\nimport { resolveLocation } from './resolve-location.js'\nimport type { SSDP } from '../index.js'\n\nexport async function resolveService (ssdp: SSDP, usn: string, st: string, location: string, ttl: number): Promise<void> {\n  // all arguments are required\n  if (ssdp == null || usn == null || st == null || location == null || ttl == null) {\n    return\n  }\n\n  let newService = false\n  let service = cache.getService(st, usn)\n\n  if (service == null) {\n    newService = true\n    service = {\n      location: new URL(location),\n      details: {\n        pending: true\n      },\n      expires: 0,\n      serviceType: st,\n      uniqueServiceName: usn\n    }\n\n    cache.cacheService(service)\n  }\n\n  if (!newService) {\n    if (service.details.pending === true) {\n      // not yet loaded the advert details\n      return\n    }\n  }\n\n  let oldDetails = null\n\n  if (!newService) {\n    oldDetails = JSON.stringify(service.details)\n  }\n\n  try {\n    service.details = await resolveLocation(location)\n    service.expires = Date.now() + ttl\n\n    cache.cacheService(service)\n\n    if (oldDetails === JSON.stringify(service.details)) {\n      // details have not changed, ignore the notify\n      return\n    }\n\n    if (newService) {\n      ssdp.emit('service:discover', service)\n    } else {\n      ssdp.emit('service:update', service)\n    }\n  } catch (err: any) {\n    // remove it so we can try again later\n    cache.deleteService(st, usn)\n\n    ssdp.emit('error', err)\n  }\n}\n","import { cache } from '../cache.js'\nimport { resolveService } from './resolve-service.js'\nimport type { NotfiyMessage, SSDP } from '../index.js'\n\nexport const ALIVE = 'ssdp:alive'\nexport const BYEBYE = 'ssdp:byebye'\n\nexport function notify (ssdp: SSDP, message: NotfiyMessage): void {\n  if (message.LOCATION == null || message.USN == null || message.NT == null || message.NTS == null) {\n    return\n  }\n\n  if (message.NTS === BYEBYE) {\n    cache.deleteService(message.NT, message.USN)\n\n    ssdp.emit('service:remove', message.USN)\n\n    return\n  }\n\n  resolveService(ssdp, message.USN, message.NT, message.LOCATION, message.ttl())\n    .catch(err => {\n      ssdp.emit('error', err)\n    })\n}\n","import type { Advert } from './index.js'\nimport type { SSDP } from '../index.js'\n\nexport const broadcastAdvert = (ssdp: SSDP, advert: Advert, notifcationSubType: string): void => {\n  ssdp.emit('ssdp:send-message', 'NOTIFY * HTTP/1.1', {\n    NT: advert.usn,\n    NTS: notifcationSubType,\n    USN: `${ssdp.udn}::${advert.usn}`,\n    'CACHE-CONTROL': `max-age=${Math.round(advert.ttl / 1000)}`,\n    SERVER: ssdp.signature,\n    LOCATION: advert.location\n  })\n}\n","import http from 'http'\nimport { freeport } from 'freeport-promise'\nimport { detailsHandler } from './details-handler.js'\nimport { findAllInterfaces } from './find-all-interfaces.js'\nimport type { Advert } from './index.js'\nimport type { SSDP } from '../index.js'\n\nexport async function createLocation (ssdp: SSDP, advert: Advert): Promise<() => Promise<void>> {\n  if (advert.location != null) {\n    return async () => Promise.resolve()\n  }\n\n  const servers: http.Server[] = []\n\n  advert.location = {}\n\n  await Promise.all(\n    ssdp.sockets.map(async socket => Promise.all(\n      findAllInterfaces(socket.type === 'udp4' && advert.ipv4, socket.type === 'udp6' && advert.ipv6)\n        .map(async iface => {\n          await freeport()\n            .then(async port => {\n              await new Promise<void>((resolve, reject) => {\n                let location = 'http://'\n\n                if (socket.type === 'udp6') {\n                  location += `[${iface.address}]`\n                } else {\n                  location += iface.address\n                }\n\n                location += `:${port}`\n\n                advert.location[socket.type] = location\n\n                const server = http.createServer((req, res) => {\n                  detailsHandler(advert.details, req, res)\n                })\n\n                const addr = socket.address()\n\n                server.listen(port, addr.address, () => {\n                  resolve()\n                })\n                server.on('error', err => {\n                  reject(err)\n                })\n\n                servers.push(server)\n              })\n            })\n        }))\n    )\n  )\n\n  return async () => {\n    await Promise.all(\n      servers.map(async server => new Promise<void>((resolve, reject) => {\n        server.close()\n        resolve()\n      }))\n    )\n  }\n}\n","import { createServer } from 'net'\n\nexport async function freeport (): Promise<number> {\n  return await new Promise((resolve, reject) => {\n    const server = createServer()\n    let port = 0\n\n    server.once('listening', () => {\n      const address = server.address()\n\n      if (address == null) {\n        return reject(new Error('Server was not listening'))\n      }\n\n      if (typeof address === 'string') {\n        return reject(new Error('Server was Unix Socket'))\n      }\n\n      port = address.port\n      server.close()\n    })\n    server.once('close', () => {\n      resolve(port)\n    })\n    server.once('error', reject)\n    server.listen(0, '127.0.0.1')\n  })\n}\n","import type { IncomingMessage, ServerResponse } from 'http'\n\nexport function detailsHandler (createDetails: () => Promise<Record<string, any>>, request: IncomingMessage, response: ServerResponse): void {\n  createDetails()\n    .then(details => {\n      response.writeHead(200, { 'Content-Type': 'text/xml' })\n      response.end(details)\n    })\n    .catch(error => {\n      response.writeHead(500)\n      response.end(error)\n    })\n}\n","import os from 'os'\nimport type { NetworkInterfaceInfo } from 'os'\n\nexport function findAllInterfaces (includeIPv4: boolean, includeIPv6: boolean): NetworkInterfaceInfo[] {\n  const output: NetworkInterfaceInfo[] = []\n  const networkInterfaces = os.networkInterfaces()\n\n  Object.values(networkInterfaces).forEach(info => {\n    if (info == null) {\n      return\n    }\n\n    info.forEach((iface) => {\n      if (iface.internal) {\n        return\n      }\n\n      if (iface.family === 'IPv4' && includeIPv4) {\n        output.push(iface)\n      }\n\n      if (iface.family === 'IPv6' && includeIPv6) {\n        output.push(iface)\n      }\n    })\n  })\n\n  return output\n}\n","import mergeOptions from 'merge-options'\nimport xml2js from 'xml2js'\nimport type { Advert } from './index.js'\nimport type { Advertisment, SSDP } from '../index.js'\n\nexport function parseAdvertOptions (ssdp: SSDP, options: Advertisment): Advert {\n  if (options == null) {\n    throw new Error('Empty advert passed')\n  }\n\n  if (options.usn == null) {\n    throw new Error('Advert should have a usn property')\n  }\n\n  const opts: Advert = mergeOptions(options, {\n    usn: options.usn,\n    interval: 10000,\n    ttl: 1800000,\n    ipv4: true,\n    ipv6: true,\n    location: null,\n    details: {\n      $: {\n        xmlns: 'urn:schemas-upnp-org:device-1-0'\n      },\n      specVersion: {\n        major: 1,\n        minor: 1\n      },\n      URLBase: 'http://example.com',\n      device: {\n        deviceType: options.usn,\n        friendlyName: 'A friendly device name',\n        manufacturer: 'Manufactuer name',\n        manufacturerURL: 'http://example.com',\n        modelDescription: 'A description of the device',\n        modelName: 'A model name',\n        modelNumber: 'A vendor specific model number',\n        modelURL: 'http://example.com',\n        serialNumber: 'A device specific serial number',\n        UDN: ssdp.udn,\n        presentationURL: 'index.html'\n      }\n    }\n  })\n\n  const details = opts.details\n\n  opts.details = async () => {\n    return new Promise((resolve, reject) => {\n      try {\n        const builder = new xml2js.Builder()\n        resolve(builder.buildObject(details))\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  return opts\n}\n","import { adverts, type CachedAdvert } from '../adverts.js'\nimport { BYEBYE, ALIVE } from '../commands/notify.js'\nimport { broadcastAdvert } from './broadcast-advert.js'\nimport { createLocation } from './create-location.js'\nimport { parseAdvertOptions } from './parse-options.js'\nimport type { Advertisment, SSDP } from '../index.js'\n\nexport interface Advert {\n  usn: string\n  interval: number\n  ttl: number\n  ipv4: boolean\n  ipv6: boolean\n  location: Record<string, string>\n  details(): Promise<any>\n}\n\nexport async function advertise (ssdp: SSDP, options: Advertisment): Promise<CachedAdvert> {\n  const advert = parseAdvertOptions(ssdp, options)\n  const shutDownServers = await createLocation(ssdp, advert)\n  let timeout: NodeJS.Timeout\n\n  const broadcast = (): void => {\n    broadcastAdvert(ssdp, advert, ALIVE)\n\n    timeout = setTimeout(broadcast, advert.interval)\n  }\n\n  // send ssdp:byebye then ssdp:alive\n  // see: https://msdn.microsoft.com/en-us/library/cc247331.aspx\n  broadcastAdvert(ssdp, advert, BYEBYE)\n  broadcast()\n\n  const ad = {\n    service: advert,\n    stop: async () => {\n      clearTimeout(timeout)\n\n      // tell the network we are going away\n      broadcastAdvert(ssdp, advert, BYEBYE)\n\n      await shutDownServers()\n\n      // remove advert from list\n      adverts.remove(ad)\n    }\n  }\n\n  adverts.add(ad)\n\n  return ad\n}\n","import { adverts } from '../adverts.js'\nimport type { NetworkAddress, SearchMessage, SSDP } from '../index.js'\n\nexport function search (ssdp: SSDP, message: SearchMessage, remote: NetworkAddress): void {\n  if (message.ST == null) {\n    return\n  }\n\n  adverts.forEach(advert => {\n    if (message.ST === 'ssdp:all' || advert.usn.toLowerCase() === message.ST.toLowerCase()) {\n      ssdp.emit('ssdp:send-message', 'HTTP/1.1 200 OK', {\n        ST: message.ST === 'ssdp:all' ? advert.usn : message.ST,\n        USN: `${ssdp.udn}::${advert.usn}`,\n        LOCATION: advert.location,\n        'CACHE-CONTROL': `max-age=${Math.round(advert.ttl / 1000)}`,\n        DATE: new Date().toUTCString(),\n        SERVER: ssdp.signature,\n        EXT: ''\n      }, remote)\n    }\n  })\n}\n","import { createSocket } from 'dgram'\nimport type { SSDP, SSDPSocket } from './index.js'\n\nexport async function createSockets (ssdp: SSDP, signal: AbortSignal): Promise<SSDPSocket[]> {\n  return Promise.all(\n    ssdp.options.sockets.map(async options => {\n      return new Promise<SSDPSocket>((resolve, reject) => {\n        const socket = createSocket({\n          type: options.type,\n          reuseAddr: true,\n          signal\n        }, (buf, info) => {\n          ssdp.emit('transport:incoming-message', buf, info)\n        })\n        socket.bind(options.bind.port, options.bind.address)\n        // @ts-expect-error .options is not a property of Socket\n        socket.options = options\n        socket.on('error', (err) => {\n          ssdp.emit('error', err)\n        })\n        socket.on('listening', () => {\n          try {\n            socket.addMembership(options.broadcast.address, socket.address().address)\n            socket.setBroadcast(true)\n            socket.setMulticastTTL(options.maxHops)\n\n            resolve(socket as SSDPSocket)\n          } catch (error: any) {\n            error.message = `Adding membership ${options.broadcast.address} failed - ${error.message}` // eslint-disable-line @typescript-eslint/restrict-template-expressions\n            reject(error)\n          }\n        })\n      })\n    })\n  )\n}\n","import { webcrypto as crypto } from 'crypto' // remove when having crypto global\nimport { createRequire } from 'module'\nimport mergeOptions from 'merge-options'\nimport { defaultSocketOptions } from './default-socket-options.js'\nimport type { SSDPOptions } from './index.js'\n\nconst req = createRequire(import.meta.url)\nconst { name, version } = req('../../package.json')\n\nconst DEFAULT_SSDP_SIGNATURE = `node.js/${process.version.substring(1)} UPnP/1.1 ${name}/${version}`\n\nexport function defaultSsdpOptions (options?: Partial<SSDPOptions>): SSDPOptions {\n  return mergeOptions(options ?? {}, {\n    usn: `uuid:${crypto.randomUUID()}`, // eslint-disable-line @typescript-eslint/restrict-template-expressions\n    signature: DEFAULT_SSDP_SIGNATURE,\n    sockets: [{}].map(defaultSocketOptions),\n    retry: {\n      times: 5,\n      interval: 5000\n    }\n  })\n}\n","import mergeOptions from 'merge-options'\nimport type { SSDPSocketOptions } from './index.js'\n\nexport function defaultSocketOptions (options?: Partial<SSDPSocketOptions>): SSDPSocketOptions {\n  return mergeOptions(options ?? {}, {\n    type: 'udp4', // or 'udp6'\n    broadcast: {\n      address: '239.255.255.250', // or 'FF02::C'\n      port: 1900\n    },\n    bind: {\n      address: '0.0.0.0', // or '0:0:0:0:0:0:0:0'\n      port: 1900\n    },\n    maxHops: 4\n  })\n}\n","import type { SSDP } from '../index.js'\n\nexport function discover (ssdp: SSDP, serviceType?: string): void {\n  serviceType = serviceType ?? 'ssdp:all'\n\n  ssdp.emit('ssdp:send-message', 'M-SEARCH * HTTP/1.1', {\n    ST: serviceType,\n    MAN: 'ssdp:discover',\n    MX: 0\n  })\n}\n","import { resolveService } from '../commands/resolve-service.js'\nimport type { SearchMessage, SSDP } from '../index.js'\n\nexport function searchResponse (ssdp: SSDP, message: SearchMessage): void {\n  resolveService(ssdp, message.USN, message.ST, message.LOCATION, message.ttl())\n    .catch(err => {\n      ssdp.emit('error', err)\n    })\n}\n","import type { NetworkAddress, SSDP } from './index.js'\n\nconst SEARCH_RESPONSE = 'SEARCH-RESPONSE'\n\nexport function parseSsdpMessage (ssdp: SSDP, buffer: Buffer, remote: NetworkAddress): void {\n  const lines = buffer.toString('utf8').trim().split(/\\r?\\n/)\n  let type = lines.shift()\n\n  if (type == null) {\n    return\n  }\n\n  const message: Record<string, any> = {\n    remote: () => remote\n  }\n\n  if (type.endsWith('* HTTP/1.1')) {\n    type = type.split(' ')[0]\n  } else if (type === 'HTTP/1.1 200 OK') {\n    type = SEARCH_RESPONSE\n  } else {\n    return\n  }\n\n  lines.forEach(function (line) {\n    const colon = line.indexOf(':')\n    let key = line.substring(0, colon).toUpperCase()\n    key = key.trim()\n    let value = line.substring(colon + 1)\n    value = value.trim()\n\n    message[key] = unwrap(value)\n\n    if (key === 'CACHE-CONTROL') {\n      const ttl = parseInt(value.toLowerCase().split('max-age=')[1], 10)\n\n      message.ttl = () => ttl * 1000\n    }\n  })\n\n  type = type.toLowerCase()\n\n  if (!['m-search', 'notify', 'search-response'].includes(type)) {\n    // TODO: remove this\n    throw new Error(`unknown ssdp message type ${type}`)\n  }\n\n  // @ts-expect-error cannot infer message type\n  ssdp.emit(`ssdp:${type}`, message, remote)\n}\n\nfunction unwrap (string: string): string | number {\n  const length = string.length\n\n  if (string.substring(0, 1) === '\"' && string.substring(length - 1) === '\"') {\n    string = string.substring(1, length - 1)\n  }\n\n  const asNumber = parseFloat(string)\n\n  if (!isNaN(asNumber) && asNumber.toString() === string) {\n    return asNumber\n  }\n\n  return string.trim()\n}\n","import type { NetworkAddress, SSDP, SSDPSocket } from './index.js'\n\nfunction isIpv4Address (address: string): boolean {\n  const parts = address.trim().split('.')\n\n  if (parts.length !== 4) {\n    return false\n  }\n\n  for (let i = 0; i < parts.length; i++) {\n    const octet = parseInt(parts[i], 10)\n\n    if (octet < 0 || octet > 255) {\n      return false\n    }\n  }\n\n  return true\n}\n\nconst addressFamilyMismatch = (remote: NetworkAddress, socket: SSDPSocket): boolean => {\n  return !(socket.type === 'udp4' && isIpv4Address(remote.address))\n}\n\nexport function sendSsdpMessage (ssdp: SSDP, status: string, headers: Record<string, string>, remote: NetworkAddress): void {\n  Promise.all(\n    ssdp.sockets.map(async socket => {\n      await new Promise<void>((resolve, reject) => {\n        if (socket.closed) {\n          resolve(); return\n        }\n\n        const recipient = remote ?? socket.options.broadcast\n\n        // don't send messages over udp6 sockets and expect them to reach upd4 recipients\n        if (recipient != null && addressFamilyMismatch(recipient, socket)) {\n          resolve(); return\n        }\n\n        if (headers.LOCATION != null) {\n          // @ts-expect-error wat\n          headers.LOCATION = headers.LOCATION[socket.type]\n        }\n\n        const message = [status]\n\n        if (!status.startsWith('HTTP/1.1')) {\n          // not a response so insert the host header\n          message.push(`HOST: ${socket.options.broadcast.address}:${socket.options.broadcast.port}`)\n        }\n\n        Object.keys(headers).forEach(function (header) {\n          message.push(`${header}: ${headers[header]}`)\n        })\n\n        message.push('\\r\\n')\n\n        const buffer = Buffer.from(message.join('\\r\\n'))\n\n        ssdp.emit('transport:outgoing-message', socket, buffer, recipient)\n\n        socket.send(buffer, 0, buffer.length, recipient.port, recipient.address, error => {\n          if (error != null) {\n            reject(error); return\n          }\n\n          resolve()\n        })\n      })\n    })\n  ).catch(err => {\n    ssdp.emit('error', err)\n  })\n}\n","import ssdp from '@achingbrain/ssdp'\nimport { logger } from '@libp2p/logger'\nimport first from 'it-first'\nimport pTimeout from 'p-timeout'\nimport type { InternetGatewayDevice } from '../upnp/device'\nimport type { Service, SSDP } from '@achingbrain/ssdp'\n\nconst log = logger('nat-port-mapper:discovery')\n\nexport interface DiscoverGateway {\n  gateway(): Promise<Service<InternetGatewayDevice>>\n  cancel(): Promise<void>\n}\n\nexport interface DiscoveryOptions {\n  /**\n   * Do not search the network for a gateway, use this instead\n   */\n  gateway?: string\n\n  /**\n   * Rediscover gateway after this number of ms\n   */\n  timeout?: number\n\n  /**\n   * Only search the network for this long\n   */\n  discoveryTimeout?: number\n}\n\nconst ST = 'urn:schemas-upnp-org:device:InternetGatewayDevice:1'\nconst ONE_MINUTE = 60000\nconst ONE_HOUR = ONE_MINUTE * 60\n\nexport function discoverGateway (options: DiscoveryOptions = {}): () => DiscoverGateway {\n  const timeout = options.timeout ?? ONE_HOUR\n  const discoveryTimeout = options.discoveryTimeout ?? ONE_MINUTE\n  let service: Service<InternetGatewayDevice>\n  let expires: number\n\n  return () => {\n    let discovery: SSDP\n    let clear: (() => void) | undefined\n\n    const discover: DiscoverGateway = {\n      gateway: async () => {\n        if (service != null && !(expires < Date.now())) {\n          return service\n        }\n\n        if (options.gateway != null) {\n          log('Using overridden gateway address %s', options.gateway)\n\n          if (!options.gateway.startsWith('http')) {\n            options.gateway = `http://${options.gateway}`\n          }\n\n          expires = Date.now() + timeout\n\n          service = {\n            location: new URL(options.gateway),\n            details: {\n              device: {\n                serviceList: {\n                  service: []\n                },\n                deviceList: {\n                  device: []\n                }\n              }\n            },\n            expires,\n            serviceType: ST,\n            uniqueServiceName: 'unknown'\n          }\n        } else {\n          if (discovery == null) {\n            discovery = await ssdp({\n              start: false\n            })\n            discovery.on('error', (err) => {\n              log.error('ssdp error', err)\n            })\n            await discovery.start()\n          }\n\n          log('Discovering gateway')\n          const clearable = pTimeout(first(discovery.discover<InternetGatewayDevice>(ST)), {\n            milliseconds: discoveryTimeout\n          })\n\n          clear = clearable.clear\n\n          const result = await clearable\n\n          if (result == null) {\n            throw new Error('Could not discover gateway')\n          }\n\n          log('Discovered gateway %s', result.location)\n\n          service = result\n          expires = Date.now() + timeout\n        }\n\n        return service\n      },\n      cancel: async () => {\n        if (discovery != null) {\n          await discovery.stop()\n        }\n\n        if (clear != null) {\n          clear()\n        }\n      }\n    }\n\n    return discover\n  }\n}\n","import { createSocket } from 'dgram'\nimport { EventEmitter } from 'events'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport defer, { type DeferredPromise } from 'p-defer'\nimport type { DiscoverGateway } from '../discovery/index.js'\nimport type { Client, MapPortOptions, UnmapPortOptions } from '../index.js'\nimport type { Socket, RemoteInfo } from 'dgram'\n\nconst debug = logger('nat-port-mapper:pmp')\n\n// Ports defined by draft\nconst CLIENT_PORT = 5350\nconst SERVER_PORT = 5351\n\n// Opcodes\nconst OP_EXTERNAL_IP = 0\nconst OP_MAP_UDP = 1\nconst OP_MAP_TCP = 2\nconst SERVER_DELTA = 128\n\n// Resulit codes\nconst RESULT_CODES: Record<number, string> = {\n  0: 'Success',\n  1: 'Unsupported Version',\n  2: 'Not Authorized/Refused (gateway may have NAT-PMP disabled)',\n  3: 'Network Failure (gateway may have not obtained a DHCP lease)',\n  4: 'Out of Resources (no ports left)',\n  5: 'Unsupported opcode'\n}\n\nexport interface PortMappingOptions {\n  type?: 'tcp' | 'udp'\n  ttl?: number\n  public?: boolean\n  private?: boolean\n  internal?: boolean\n  external?: boolean\n}\n\nexport class PMPClient extends EventEmitter implements Client {\n  private readonly socket: Socket\n  private queue: Array<{ op: number, buf: Uint8Array, deferred: DeferredPromise<any> }>\n  private connecting: boolean\n  private listening: boolean\n  private req: any\n  private reqActive: boolean\n  private readonly discoverGateway: () => DiscoverGateway\n  private gateway?: string\n  private cancelGatewayDiscovery?: () => Promise<void>\n\n  static createClient (discoverGateway: () => DiscoverGateway): PMPClient {\n    return new PMPClient(discoverGateway)\n  }\n\n  constructor (discoverGateway: () => DiscoverGateway) {\n    super()\n\n    if (discoverGateway == null) {\n      throw new Error('discoverGateway is not defined')\n    }\n\n    this.discoverGateway = discoverGateway\n    this.queue = []\n    this.connecting = false\n    this.listening = false\n    this.req = null\n    this.reqActive = false\n\n    // Create socket\n    this.socket = createSocket({ type: 'udp4', reuseAddr: true })\n    this.socket.on('listening', () => { this.onListening() })\n    this.socket.on('message', (msg, rinfo) => { this.onMessage(msg, rinfo) })\n    this.socket.on('close', () => { this.onClose() })\n    this.socket.on('error', (err) => { this.onError(err) })\n\n    // Try to connect\n    this.connect()\n  }\n\n  connect (): void {\n    debug('Client#connect()')\n    if (this.connecting) return\n    this.connecting = true\n    this.socket.bind(CLIENT_PORT)\n  }\n\n  async map (opts: MapPortOptions): Promise<void> {\n    debug('Client#portMapping()')\n    let opcode: number\n    switch (String(opts.protocol ?? 'tcp').toLowerCase()) {\n      case 'tcp':\n        opcode = OP_MAP_TCP\n        break\n      case 'udp':\n        opcode = OP_MAP_UDP\n        break\n      default:\n        throw new Error('\"type\" must be either \"tcp\" or \"udp\"')\n    }\n\n    const discoverGateway = this.discoverGateway()\n    this.cancelGatewayDiscovery = discoverGateway.cancel\n\n    const gateway = await discoverGateway.gateway()\n    this.cancelGatewayDiscovery = undefined\n\n    this.gateway = new URL(gateway.location).host\n\n    const deferred = defer()\n\n    this.request(opcode, opts, deferred)\n\n    await deferred.promise\n  }\n\n  async unmap (opts: UnmapPortOptions): Promise<void> {\n    debug('Client#portUnmapping()')\n\n    await this.map({\n      ...opts,\n      description: '',\n      localAddress: '',\n      ttl: 0\n    })\n  }\n\n  async externalIp (): Promise<string> {\n    debug('Client#externalIp()')\n\n    const discoverGateway = this.discoverGateway()\n    this.cancelGatewayDiscovery = discoverGateway.cancel\n\n    const gateway = await discoverGateway.gateway()\n    this.cancelGatewayDiscovery = undefined\n\n    this.gateway = new URL(gateway.location).host\n\n    const deferred = defer<string>()\n\n    this.request(OP_EXTERNAL_IP, {}, deferred)\n\n    return deferred.promise\n  }\n\n  async close (): Promise<void> {\n    debug('Client#close()')\n\n    if (this.socket != null) {\n      this.socket.close()\n    }\n\n    this.queue = []\n    this.connecting = false\n    this.listening = false\n    this.req = null\n    this.reqActive = false\n\n    if (this.cancelGatewayDiscovery != null) {\n      await this.cancelGatewayDiscovery()\n    }\n  }\n\n  /**\n   * Queues a UDP request to be send to the gateway device.\n   */\n\n  request (op: number, obj: PortMappingOptions, deferred: DeferredPromise<any>): void {\n    debug('Client#request()', [op, obj])\n\n    let buf\n    let size\n    let pos = 0\n\n    let internal\n    let external\n    let ttl\n\n    switch (op) {\n      case OP_MAP_UDP:\n      case OP_MAP_TCP:\n        if (obj == null) {\n          throw new Error('mapping a port requires an \"options\" object')\n        }\n\n        internal = Number(obj.private ?? obj.internal ?? 0)\n        if (internal !== (internal | 0) ?? internal < 0) {\n          throw new Error('the \"private\" port must be a whole integer >= 0')\n        }\n\n        external = Number(obj.public ?? obj.external ?? 0)\n        if (external !== (external | 0) ?? external < 0) {\n          throw new Error('the \"public\" port must be a whole integer >= 0')\n        }\n\n        ttl = Number(obj.ttl ?? 0)\n        if (ttl !== (ttl | 0)) {\n          // The RECOMMENDED Port Mapping Lifetime is 7200 seconds (two hours)\n          ttl = 7200\n        }\n\n        size = 12\n        buf = Buffer.alloc(size)\n        buf.writeUInt8(0, pos)\n        pos++ // Vers = 0\n        buf.writeUInt8(op, pos)\n        pos++ // OP = x\n        buf.writeUInt16BE(0, pos)\n        pos += 2 // Reserved (MUST be zero)\n        buf.writeUInt16BE(internal, pos)\n        pos += 2 // Internal Port\n        buf.writeUInt16BE(external, pos)\n        pos += 2 // Requested External Port\n        buf.writeUInt32BE(ttl, pos)\n        pos += 4 // Requested Port Mapping Lifetime in Seconds\n        break\n      case OP_EXTERNAL_IP:\n        size = 2\n        buf = Buffer.alloc(size)\n        // Vers = 0\n        buf.writeUInt8(0, 0)\n        pos++\n        // OP = x\n        buf.writeUInt8(op, 1)\n        pos++\n        break\n      default:\n        throw new Error(`Invalid opcode: ${op}`)\n    }\n    // assert.equal(pos, size, 'buffer not fully written!')\n\n    // Add it to queue\n    this.queue.push({ op, buf, deferred })\n\n    // Try to send next message\n    this._next()\n  }\n\n  /**\n   * Processes the next request if the socket is listening.\n   */\n  _next (): void {\n    debug('Client#_next()')\n\n    const req = this.queue[0]\n\n    if (req == null) {\n      debug('_next: nothing to process')\n      return\n    }\n\n    if (this.socket == null) {\n      debug('_next: client is closed')\n      return\n    }\n\n    if (!this.listening) {\n      debug('_next: not \"listening\" yet, cannot send out request yet')\n\n      if (!this.connecting) {\n        this.connect()\n      }\n\n      return\n    }\n\n    if (this.reqActive) {\n      debug('_next: already an active request so wait...')\n      return\n    }\n\n    this.reqActive = true\n    this.req = req\n\n    const buf = req.buf\n\n    debug('_next: sending request', buf, this.gateway)\n    this.socket.send(buf, 0, buf.length, SERVER_PORT, this.gateway)\n  }\n\n  onListening (): void {\n    debug('Client#onListening()')\n    this.listening = true\n    this.connecting = false\n\n    // Try to send next message\n    this._next()\n  }\n\n  onMessage (msg: Buffer, rinfo: RemoteInfo): void {\n    // Ignore message if we're not expecting it\n    if (this.queue.length === 0) {\n      return\n    }\n\n    debug('Client#onMessage()', [msg, rinfo])\n\n    const cb = (err?: Error, parsed?: any): void => {\n      this.req = null\n      this.reqActive = false\n\n      if (err != null) {\n        if (req.deferred != null) {\n          req.deferred.reject(err)\n        } else {\n          this.emit('error', err)\n        }\n      } else if (req.deferred != null) {\n        req.deferred.resolve(parsed)\n      }\n\n      // Try to send next message\n      this._next()\n    }\n\n    const req = this.queue[0]\n    const parsed: any = { msg }\n    parsed.vers = msg.readUInt8(0)\n    parsed.op = msg.readUInt8(1)\n\n    if (parsed.op - SERVER_DELTA !== req.op) {\n      debug('WARN: ignoring unexpected message opcode', parsed.op)\n      return\n    }\n\n    // if we got here, then we're gonna invoke the request's callback,\n    // so shift this request off of the queue.\n    debug('removing \"req\" off of the queue')\n    this.queue.shift()\n\n    if (parsed.vers !== 0) {\n      cb(new Error(`\"vers\" must be 0. Got: ${parsed.vers}`)) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n      return\n    }\n\n    // Common fields\n    parsed.resultCode = msg.readUInt16BE(2)\n    parsed.resultMessage = RESULT_CODES[parsed.resultCode]\n    parsed.epoch = msg.readUInt32BE(4)\n\n    // Error\n    if (parsed.resultCode !== 0) {\n      cb(errCode(new Error(parsed.resultMessage), parsed.resultCode)); return\n    }\n\n    // Success\n    switch (req.op) {\n      case OP_MAP_UDP:\n      case OP_MAP_TCP:\n        parsed.private = parsed.internal = msg.readUInt16BE(8)\n        parsed.public = parsed.external = msg.readUInt16BE(10)\n        parsed.ttl = msg.readUInt32BE(12)\n        parsed.type = (req.op === OP_MAP_UDP) ? 'udp' : 'tcp'\n        break\n      case OP_EXTERNAL_IP:\n        parsed.ip = []\n        parsed.ip.push(msg.readUInt8(8))\n        parsed.ip.push(msg.readUInt8(9))\n        parsed.ip.push(msg.readUInt8(10))\n        parsed.ip.push(msg.readUInt8(11))\n        break\n      default:\n      { cb(new Error(`Unknown opcode: ${req.op}`)); return }\n    }\n\n    cb(undefined, parsed)\n  }\n\n  onClose (): void {\n    debug('Client#onClose()')\n    this.listening = false\n    this.connecting = false\n  }\n\n  onError (err: Error): void {\n    debug('Client#onError()', [err])\n    if (this.req?.cb != null) {\n      this.req.cb(err)\n    } else {\n      this.emit('error', err)\n    }\n\n    if (this.socket != null) {\n      this.socket.close()\n      // Force close - close() does not guarantee to trigger onClose()\n      this.onClose()\n    }\n  }\n}\n","import { logger } from '@libp2p/logger'\nimport xml2js from 'xml2js'\nimport { fetchXML } from './fetch.js'\nimport type { Service } from '@achingbrain/ssdp'\n\nconst log = logger('nat-port-mapper:upnp:device')\n\nexport interface InternetGatewayDevice {\n  device: GatewayDevice\n}\n\ninterface GatewayDevice {\n  serviceList: {\n    service: GatewayService[]\n  }\n  deviceList: {\n    device: GatewayDevice[]\n  }\n}\n\ninterface GatewayService {\n  serviceType: string\n  serviceId: string\n  SCPDURL: string\n  controlURL: string\n  eventSubURL: string\n}\n\ninterface ServiceDescription {\n  services: GatewayService[]\n  devices: GatewayDevice[]\n}\n\ninterface ServiceInfo {\n  service: string\n  SCPDURL: string\n  controlURL: string\n}\n\nexport class Device {\n  private readonly service: Service<InternetGatewayDevice>\n  private readonly services: string[]\n\n  constructor (service: Service<InternetGatewayDevice>) {\n    this.service = service\n    this.services = [\n      'urn:schemas-upnp-org:service:WANIPConnection:1',\n      'urn:schemas-upnp-org:service:WANIPConnection:2',\n      'urn:schemas-upnp-org:service:WANPPPConnection:1'\n    ]\n  }\n\n  async run (action: string, args: Array<[string, string | number]>, signal: AbortSignal): Promise<any> {\n    const info = this.getService(this.services)\n\n    const requestBody = `<?xml version=\"1.0\"?>\n<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">\n  <s:Body>\n    <u:${action} xmlns:u=\"${info.service}\">${args.map((args) => `\n      <${args[0]}>${args[1] != null ? args[1] : ''}</${args[0]}>`).join('')}\n    </u:${action}>\n  </s:Body>\n</s:Envelope>`\n\n    log.trace('-> POST', info.controlURL)\n    log.trace('->', requestBody)\n\n    const text = await fetchXML(new URL(info.controlURL), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/xml',\n        'Content-Length': requestBody.length.toString(),\n        SOAPAction: JSON.stringify(info.service + '#' + action)\n      },\n      body: requestBody,\n      signal\n    })\n\n    log.trace('<-', text)\n\n    const parser = new xml2js.Parser({\n      explicitRoot: false,\n      explicitArray: false,\n      attrkey: '@'\n    })\n    const responseBody = await parser.parseStringPromise(text)\n\n    const soapns = this.getNamespace(\n      responseBody,\n      'http://schemas.xmlsoap.org/soap/envelope/'\n    )\n\n    return responseBody[soapns + 'Body']\n  }\n\n  getService (types: string[]): ServiceInfo {\n    const [service] = this.parseDescription(this.service.details).services\n      .filter(function (service) {\n        return types.includes(service.serviceType)\n      })\n\n    // Use the first available service\n    if (service == null || service.controlURL == null || service.SCPDURL == null) {\n      throw new Error('Service not found')\n    }\n\n    const base = new URL(this.service.location)\n    function addPrefix (u: string): string {\n      let uri: URL\n      try {\n        uri = new URL(u)\n      } catch (err) {\n        // Is only the path of the URL\n        uri = new URL(u, base.href)\n      }\n\n      uri.host = uri.host ?? base.host\n      uri.protocol = uri.protocol ?? base.protocol\n\n      return uri.toString()\n    }\n\n    return {\n      service: service.serviceType,\n      SCPDURL: addPrefix(service.SCPDURL),\n      controlURL: addPrefix(service.controlURL)\n    }\n  }\n\n  parseDescription (info: Record<string, any>): ServiceDescription {\n    const services: GatewayService[] = []\n    const devices: GatewayDevice[] = []\n\n    function toArray <T> (item: T | T[]): T[] {\n      return Array.isArray(item) ? item : [item]\n    }\n\n    function traverseServices (service: GatewayService): void {\n      if (service == null) {\n        return\n      }\n\n      services.push(service)\n    }\n\n    function traverseDevices (device: GatewayDevice): void {\n      if (device == null) {\n        return\n      }\n\n      devices.push(device)\n\n      if (device.deviceList?.device != null) {\n        toArray(device.deviceList.device).forEach(traverseDevices)\n      }\n\n      if (device.serviceList?.service != null) {\n        toArray(device.serviceList.service).forEach(traverseServices)\n      }\n    }\n\n    traverseDevices(info.device)\n\n    return {\n      services,\n      devices\n    }\n  }\n\n  getNamespace (data: any, uri: string): string {\n    let ns: string | undefined\n\n    if (data['@'] != null) {\n      Object.keys(data['@']).some(function (key) {\n        if (!/^xmlns:/.test(key)) return false\n        if (data['@'][key] !== uri) return false\n\n        ns = key.replace(/^xmlns:/, '')\n        return true\n      })\n    }\n\n    return ns != null ? `${ns}:` : ''\n  }\n}\n","import http from 'http'\nimport https from 'https'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('nat-port-mapper:upnp:fetch')\n\nexport interface RequestInit {\n  method: 'POST' | 'GET'\n  headers: Record<string, string>\n  body: Buffer | string\n  signal: AbortSignal\n}\n\nfunction initRequest (url: URL, init: RequestInit): http.ClientRequest {\n  if (url.protocol === 'http:') {\n    return http.request(url, {\n      method: init.method,\n      headers: init.headers,\n      signal: init.signal\n    })\n  } else if (url.protocol === 'https:') {\n    return https.request(url, {\n      method: init.method,\n      headers: init.headers,\n      rejectUnauthorized: false,\n      signal: init.signal\n    })\n  } else {\n    throw new Error('Invalid protocol ' + url.protocol)\n  }\n}\n\nexport async function fetchXML (url: URL, init: RequestInit): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    const request = initRequest(url, init)\n\n    if (init.body != null) {\n      request.write(init.body)\n    }\n\n    request.end()\n\n    request.on('error', (err) => {\n      reject(err)\n    })\n\n    request.on('response', (response) => {\n      if (response.statusCode === 302 && response.headers.location != null) {\n        log('Redirecting to %s', response.headers.location)\n        fetchXML(new URL(response.headers.location), init)\n          .then(resolve, reject)\n        return\n      }\n\n      if (response.statusCode !== 200) {\n        throw new Error(`Request failed: ${response.statusCode}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n      }\n\n      if (response.headers['content-type'] != null && !response.headers['content-type'].includes('/xml')) {\n        reject(new Error('Bad content type ' + response.headers['content-type'])); return\n      }\n\n      let body = ''\n\n      response.on('data', (chunk: Buffer) => {\n        body += chunk.toString()\n      })\n      response.on('end', () => {\n        resolve(body)\n      })\n      response.on('error', (err) => {\n        reject(err)\n      })\n    })\n  })\n}\n","import { logger } from '@libp2p/logger'\nimport { Device } from './device.js'\nimport type { DiscoverGateway } from '../discovery/index.js'\nimport type { Client, MapPortOptions, UnmapPortOptions } from '../index.js'\n\nconst log = logger('nat-port-mapper:upnp')\n\nexport class UPNPClient implements Client {\n  private closed: boolean\n  private readonly discoverGateway: () => DiscoverGateway\n  private cancelGatewayDiscovery?: () => Promise<void>\n  private readonly abortController: AbortController\n\n  static createClient (discoverGateway: () => DiscoverGateway): UPNPClient {\n    return new UPNPClient(discoverGateway)\n  }\n\n  constructor (discoverGateway: () => DiscoverGateway) {\n    this.discoverGateway = discoverGateway\n    this.closed = false\n\n    // used to terminate network operations on shutdown\n    this.abortController = new AbortController()\n  }\n\n  async map (options: MapPortOptions): Promise<void> {\n    if (this.closed) {\n      throw new Error('client is closed')\n    }\n\n    const gateway = await this.findGateway()\n    const description = options.description ?? 'node:nat:upnp'\n    const protocol = options.protocol === 'TCP' ? options.protocol : 'UDP'\n    let ttl = 60 * 30\n\n    if (typeof options.ttl === 'number') {\n      ttl = options.ttl\n    }\n\n    if (typeof options.ttl === 'string' && !isNaN(options.ttl)) {\n      ttl = Number(options.ttl)\n    }\n\n    log('Mapping local port %d to public port %d', options.localPort, options.publicPort)\n\n    await gateway.run('AddPortMapping', [\n      ['NewExternalPort', options.publicPort],\n      ['NewProtocol', protocol],\n      ['NewInternalPort', options.localPort],\n      ['NewInternalClient', options.localAddress],\n      ['NewEnabled', 1],\n      ['NewPortMappingDescription', description],\n      ['NewLeaseDuration', ttl],\n      ['NewProtocol', options.protocol]\n    ], this.abortController.signal)\n  }\n\n  async unmap (options: UnmapPortOptions): Promise<void> {\n    if (this.closed) {\n      throw new Error('client is closed')\n    }\n\n    const gateway = await this.findGateway()\n\n    await gateway.run('DeletePortMapping', [\n      ['NewExternalPort', options.publicPort],\n      ['NewProtocol', options.protocol]\n    ], this.abortController.signal)\n  }\n\n  async externalIp (): Promise<string> {\n    if (this.closed) {\n      throw new Error('client is closed')\n    }\n\n    log('Discover external IP address')\n\n    const gateway = await this.findGateway()\n    const data = await gateway.run('GetExternalIPAddress', [], this.abortController.signal)\n\n    let key = null\n    Object.keys(data).some(function (k) {\n      if (!/:GetExternalIPAddressResponse$/.test(k)) return false\n\n      key = k\n      return true\n    })\n\n    if (key == null) {\n      throw new Error('Incorrect response')\n    }\n\n    log('Discovered external IP address %s', data[key].NewExternalIPAddress)\n    return data[key].NewExternalIPAddress\n  }\n\n  async findGateway (): Promise<Device> {\n    if (this.closed) {\n      throw new Error('client is closed')\n    }\n\n    const discovery = this.discoverGateway()\n    this.cancelGatewayDiscovery = discovery.cancel\n\n    const service = await discovery.gateway()\n\n    this.cancelGatewayDiscovery = undefined\n\n    return new Device(service)\n  }\n\n  async close (): Promise<void> {\n    this.closed = true\n\n    this.abortController.abort()\n\n    if (this.cancelGatewayDiscovery != null) {\n      await this.cancelGatewayDiscovery()\n    }\n  }\n}\n","/**\n * Check if a given ip address is a loopback address\n */\nexport function isLoopbackAddr (ip: string) {\n  return /^127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n    /^::1$/.test(ip)\n}\n","import { isLoopbackAddr } from 'is-loopback-addr'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\n/**\n * Check if a given multiaddr is a loopback address.\n */\nexport function isLoopback (ma: Multiaddr): boolean {\n  const { address } = ma.nodeAddress()\n\n  return isLoopbackAddr(address)\n}\n","import { upnpNat, type NatAPI } from '@achingbrain/nat-port-mapper'\nimport { CodeError, ERR_INVALID_PARAMETERS } from '@libp2p/interface'\nimport { isLoopback } from '@libp2p/utils/multiaddr/is-loopback'\nimport { isPrivateIp } from '@libp2p/utils/private-ip'\nimport { fromNodeAddress } from '@multiformats/multiaddr'\nimport { isBrowser } from 'wherearewe'\nimport type { UPnPNATComponents, UPnPNATInit } from './index.js'\nimport type { Logger, Startable } from '@libp2p/interface'\n\nconst DEFAULT_TTL = 7200\n\nfunction highPort (min = 1024, max = 65535): number {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport class UPnPNAT implements Startable {\n  private readonly components: UPnPNATComponents\n  private readonly externalAddress?: string\n  private readonly localAddress?: string\n  private readonly description: string\n  private readonly ttl: number\n  private readonly keepAlive: boolean\n  private readonly gateway?: string\n  private started: boolean\n  private client?: NatAPI\n  private readonly log: Logger\n\n  constructor (components: UPnPNATComponents, init: UPnPNATInit) {\n    this.components = components\n\n    this.log = components.logger.forComponent('libp2p:upnp-nat')\n    this.started = false\n    this.externalAddress = init.externalAddress\n    this.localAddress = init.localAddress\n    this.description = init.description ?? `${components.nodeInfo.name}@${components.nodeInfo.version} ${this.components.peerId.toString()}`\n    this.ttl = init.ttl ?? DEFAULT_TTL\n    this.keepAlive = init.keepAlive ?? true\n    this.gateway = init.gateway\n\n    if (this.ttl < DEFAULT_TTL) {\n      throw new CodeError(`NatManager ttl should be at least ${DEFAULT_TTL} seconds`, ERR_INVALID_PARAMETERS)\n    }\n  }\n\n  isStarted (): boolean {\n    return this.started\n  }\n\n  start (): void {\n    // #TODO: is there a way to remove this? Seems like a hack\n  }\n\n  /**\n   * Attempt to use uPnP to configure port mapping using the current gateway.\n   *\n   * Run after start to ensure the transport manager has all addresses configured.\n   */\n  afterStart (): void {\n    if (isBrowser || this.started) {\n      return\n    }\n\n    this.started = true\n\n    // done async to not slow down startup\n    void this.mapIpAddresses().catch((err) => {\n      // hole punching errors are non-fatal\n      this.log.error(err)\n    })\n  }\n\n  async mapIpAddresses (): Promise<void> {\n    const addrs = this.components.transportManager.getAddrs()\n\n    for (const addr of addrs) {\n      // try to open uPnP ports for each thin waist address\n      const { family, host, port, transport } = addr.toOptions()\n\n      if (!addr.isThinWaistAddress() || transport !== 'tcp') {\n        // only bare tcp addresses\n        // eslint-disable-next-line no-continue\n        continue\n      }\n\n      if (isLoopback(addr)) {\n        // eslint-disable-next-line no-continue\n        continue\n      }\n\n      if (family !== 4) {\n        // ignore ipv6\n        // eslint-disable-next-line no-continue\n        continue\n      }\n\n      const client = this._getClient()\n      const publicIp = this.externalAddress ?? await client.externalIp()\n      const isPrivate = isPrivateIp(publicIp)\n\n      if (isPrivate === true) {\n        throw new CodeError(`${publicIp} is private - please set config.nat.externalIp to an externally routable IP or ensure you are not behind a double NAT`, 'ERR_DOUBLE_NAT')\n      }\n\n      if (isPrivate == null) {\n        throw new CodeError(`${publicIp} is not an IP address`, ERR_INVALID_PARAMETERS)\n      }\n\n      const publicPort = highPort()\n\n      this.log(`opening uPnP connection from ${publicIp}:${publicPort} to ${host}:${port}`)\n\n      await client.map({\n        publicPort,\n        localPort: port,\n        localAddress: this.localAddress,\n        protocol: transport.toUpperCase() === 'TCP' ? 'TCP' : 'UDP'\n      })\n\n      this.components.addressManager.addObservedAddr(fromNodeAddress({\n        family: 4,\n        address: publicIp,\n        port: publicPort\n      }, transport))\n    }\n  }\n\n  _getClient (): NatAPI {\n    if (this.client != null) {\n      return this.client\n    }\n\n    this.client = upnpNat({\n      description: this.description,\n      ttl: this.ttl,\n      keepAlive: this.keepAlive,\n      gateway: this.gateway\n    })\n\n    return this.client\n  }\n\n  /**\n   * Stops the NAT manager\n   */\n  async stop (): Promise<void> {\n    if (isBrowser || this.client == null) {\n      return\n    }\n\n    try {\n      await this.client.close()\n      this.client = undefined\n    } catch (err: any) {\n      this.log.error(err)\n    }\n  }\n}\n","/**\n * @packageDocumentation\n *\n * The service exported by this module attempts to configure NAT hole punching\n * via UPnP.\n *\n * This will make your node publicly accessible from the internet.\n *\n * For this to work there are some prerequisites:\n *\n * 1. Your router must have UPnP support enabled\n * 2. Your libp2p node must be listening on a non-loopback IPv4 address\n * 3. You must not be [double-NATed](https://kb.netgear.com/30186/What-is-double-NAT-and-why-is-it-bad) by your ISP\n *\n * @example\n *\n * ```typescript\n * import { createLibp2p } from 'libp2p'\n * import { tcp } from '@libp2p/tcp'\n * import { uPnPNAT } from '@libp2p/upnp-nat'\n *\n * const node = await createLibp2p({\n *   addresses: {\n *     listen: [\n *       '/ip4/0.0.0.0/tcp/0'\n *     ]\n *   },\n *   transports: [\n *     tcp()\n *   ],\n *   services: {\n *     upnpNAT: uPnPNAT()\n *   }\n * })\n * ```\n */\n\nimport { UPnPNAT } from './upnp-nat.js'\nimport type { ComponentLogger, NodeInfo, PeerId } from '@libp2p/interface'\nimport type { AddressManager, TransportManager } from '@libp2p/interface-internal'\n\nexport interface PMPOptions {\n  /**\n   * Whether to enable PMP as well as UPnP\n   */\n  enabled?: boolean\n}\n\nexport interface UPnPNATInit {\n  /**\n   * Pass a value to use instead of auto-detection\n   */\n  externalAddress?: string\n\n  /**\n   * Pass a value to use instead of auto-detection\n   */\n  localAddress?: string\n\n  /**\n   * A string value to use for the port mapping description on the gateway\n   */\n  description?: string\n\n  /**\n   * How long UPnP port mappings should last for in seconds (minimum 1200)\n   */\n  ttl?: number\n\n  /**\n   * Whether to automatically refresh UPnP port mappings when their TTL is reached\n   */\n  keepAlive?: boolean\n\n  /**\n   * Pass a value to use instead of auto-detection\n   */\n  gateway?: string\n}\n\nexport interface UPnPNATComponents {\n  peerId: PeerId\n  nodeInfo: NodeInfo\n  logger: ComponentLogger\n  transportManager: TransportManager\n  addressManager: AddressManager\n}\n\nexport function uPnPNAT (init: UPnPNATInit = {}): (components: UPnPNATComponents) => unknown {\n  return (components: UPnPNATComponents) => {\n    return new UPnPNAT(components, init)\n  }\n}\n","/**\n * @packageDocumentation\n *\n * @example\n *\n * Let's create a little directory to import:\n *\n * ```console\n * > cd /tmp\n * > mkdir foo\n * > echo 'hello' > foo/bar\n * > echo 'world' > foo/quux\n * ```\n *\n * And write the importing logic:\n *\n * ```js\n * import { importer } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core/memory'\n * import * as fs from 'node:fs'\n *\n * // Where the blocks will be stored\n * const blockstore = new MemoryBlockstore()\n *\n * // Import path /tmp/foo/\n * const source = [{\n *   path: '/tmp/foo/bar',\n *   content: fs.createReadStream('/tmp/foo/bar')\n * }, {\n *   path: '/tmp/foo/quxx',\n *   content: fs.createReadStream('/tmp/foo/quux')\n * }]\n *\n * for await (const entry of importer(source, blockstore)) {\n *   console.info(entry)\n * }\n * ```\n *\n * When run, metadata about DAGNodes in the created tree is printed until the root:\n *\n * ```js\n * {\n *   cid: CID, // see https://github.com/multiformats/js-cid\n *   path: 'tmp/foo/bar',\n *   unixfs: UnixFS // see https://github.com/ipfs/js-ipfs-unixfs\n * }\n * {\n *   cid: CID, // see https://github.com/multiformats/js-cid\n *   path: 'tmp/foo/quxx',\n *   unixfs: UnixFS // see https://github.com/ipfs/js-ipfs-unixfs\n * }\n * {\n *   cid: CID, // see https://github.com/multiformats/js-cid\n *   path: 'tmp/foo',\n *   unixfs: UnixFS // see https://github.com/ipfs/js-ipfs-unixfs\n * }\n * {\n *   cid: CID, // see https://github.com/multiformats/js-cid\n *   path: 'tmp',\n *   unixfs: UnixFS // see https://github.com/ipfs/js-ipfs-unixfs\n * }\n * ```\n */\n\nimport errcode from 'err-code'\nimport first from 'it-first'\nimport parallelBatch from 'it-parallel-batch'\nimport { fixedSize } from './chunker/fixed-size.js'\nimport { type BufferImportProgressEvents, defaultBufferImporter } from './dag-builder/buffer-importer.js'\nimport { type DAGBuilder, type DagBuilderProgressEvents, defaultDagBuilder } from './dag-builder/index.js'\nimport { type ChunkValidator, defaultChunkValidator } from './dag-builder/validate-chunks.js'\nimport { balanced, type FileLayout } from './layout/index.js'\nimport { defaultTreeBuilder } from './tree-builder.js'\nimport type { Chunker } from './chunker/index.js'\nimport type { ReducerProgressEvents } from './dag-builder/file.js'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { AwaitIterable } from 'interface-store'\nimport type { UnixFS, Mtime } from 'ipfs-unixfs'\nimport type { CID, Version as CIDVersion } from 'multiformats/cid'\nimport type { ProgressOptions } from 'progress-events'\n\nexport type ByteStream = AwaitIterable<Uint8Array>\nexport type ImportContent = ByteStream | Uint8Array\n\nexport type WritableStorage = Pick<Blockstore, 'put'>\n\nexport interface FileCandidate<T extends ImportContent = ImportContent> {\n  path?: string\n  content: T\n  mtime?: Mtime\n  mode?: number\n}\n\nexport interface DirectoryCandidate {\n  path: string\n  mtime?: Mtime\n  mode?: number\n}\n\nexport type ImportCandidate = FileCandidate | DirectoryCandidate\n\nexport interface File {\n  content: AsyncIterable<Uint8Array>\n  path?: string\n  mtime?: Mtime\n  mode?: number\n  originalPath?: string\n}\n\nexport interface Directory {\n  path?: string\n  mtime?: Mtime\n  mode?: number\n  originalPath?: string\n}\n\nexport interface ImportResult {\n  cid: CID\n  size: bigint\n  path?: string\n  unixfs?: UnixFS\n}\n\nexport interface MultipleBlockImportResult extends ImportResult {\n  originalPath?: string\n}\n\nexport interface SingleBlockImportResult extends ImportResult {\n  single: true\n  originalPath?: string\n  block: Uint8Array\n}\n\nexport type InProgressImportResult = SingleBlockImportResult | MultipleBlockImportResult\n\nexport interface BufferImporterResult extends ImportResult {\n  block: Uint8Array\n}\n\nexport interface HamtHashFn { (value: Uint8Array): Promise<Uint8Array> }\nexport interface TreeBuilder { (source: AsyncIterable<InProgressImportResult>, blockstore: WritableStorage): AsyncIterable<ImportResult> }\nexport interface BufferImporter { (file: File, blockstore: WritableStorage): AsyncIterable<() => Promise<BufferImporterResult>> }\n\nexport type ImporterProgressEvents =\n  BufferImportProgressEvents |\n  DagBuilderProgressEvents |\n  ReducerProgressEvents\n\n/**\n * Options to control the importer's behaviour\n */\nexport interface ImporterOptions extends ProgressOptions<ImporterProgressEvents> {\n  /**\n   * When a file would span multiple DAGNodes, if this is true the leaf nodes\n   * will not be wrapped in `UnixFS` protobufs and will instead contain the\n   * raw file bytes. Default: true\n   */\n  rawLeaves?: boolean\n\n  /**\n   * If the file being imported is small enough to fit into one DAGNodes, store\n   * the file data in the root node along with the UnixFS metadata instead of\n   * in a leaf node which would then require additional I/O to load. Default: true\n   */\n  reduceSingleLeafToSelf?: boolean\n\n  /**\n   * What type of UnixFS node leaves should be - can be `'file'` or `'raw'`\n   * (ignored when `rawLeaves` is `true`).\n   *\n   * This option exists to simulate kubo's trickle dag which uses a combination\n   * of `'raw'` UnixFS leaves and `reduceSingleLeafToSelf: false`.\n   *\n   * For modern code the `rawLeaves: true` option should be used instead so leaves\n   * are plain Uint8Arrays without a UnixFS/Protobuf wrapper.\n   */\n  leafType?: 'file' | 'raw'\n\n  /**\n   * the CID version to use when storing the data. Default: 1\n   */\n  cidVersion?: CIDVersion\n\n  /**\n   * If the serialized node is larger than this it might be converted to a HAMT\n   * sharded directory. Default: 256KiB\n   */\n  shardSplitThresholdBytes?: number\n\n  /**\n   * The number of bits of a hash digest used at each level of sharding to\n   * the child index. 2**shardFanoutBits will dictate the maximum number of\n   * children for any shard in the HAMT. Default: 8\n   */\n  shardFanoutBits?: number\n\n  /**\n   * How many files to import concurrently. For large numbers of small files this\n   * should be high (e.g. 50). Default: 10\n   */\n  fileImportConcurrency?: number\n\n  /**\n   * How many blocks to hash and write to the block store concurrently. For small\n   * numbers of large files this should be high (e.g. 50). Default: 50\n   */\n  blockWriteConcurrency?: number\n\n  /**\n   * If true, all imported files and folders will be contained in a directory that\n   * will correspond to the CID of the final entry yielded. Default: false\n   */\n  wrapWithDirectory?: boolean\n\n  /**\n   * The chunking strategy. See [./src/chunker/index.ts](./src/chunker/index.ts)\n   * for available chunkers. Default: fixedSize\n   */\n  chunker?: Chunker\n\n  /**\n   * How the DAG that represents files are created. See\n   * [./src/layout/index.ts](./src/layout/index.ts) for available layouts. Default: balanced\n   */\n  layout?: FileLayout\n\n  /**\n   * This option can be used to override the importer internals.\n   *\n   * This function should read `{ path, content }` entries from `source` and turn them\n   * into DAGs\n   * It should yield a `function` that returns a `Promise` that resolves to\n   * `{ cid, path, unixfs, node }` where `cid` is a `CID`, `path` is a string, `unixfs`\n   * is a UnixFS entry and `node` is a `DAGNode`.\n   * Values will be pulled from this generator in parallel - the amount of parallelisation\n   * is controlled by the `fileImportConcurrency` option (default: 50)\n   */\n  dagBuilder?: DAGBuilder\n\n  /**\n   * This option can be used to override the importer internals.\n   *\n   * This function should read `{ cid, path, unixfs, node }` entries from `source` and\n   * place them in a directory structure\n   * It should yield an object with the properties `{ cid, path, unixfs, size }` where\n   * `cid` is a `CID`, `path` is a string, `unixfs` is a UnixFS entry and `size` is a `Number`.\n   */\n  treeBuilder?: TreeBuilder\n\n  /**\n   * This option can be used to override the importer internals.\n   *\n   * This function should read `Buffer`s from `source` and persist them using `blockstore.put`\n   * or similar\n   * `entry` is the `{ path, content }` entry, where `entry.content` is an async\n   * generator that yields Buffers\n   * It should yield functions that return a Promise that resolves to an object with\n   * the properties `{ cid, unixfs, size }` where `cid` is a [CID], `unixfs` is a [UnixFS] entry and `size` is a `Number` that represents the serialized size of the [IPLD] node that holds the buffer data.\n   * Values will be pulled from this generator in parallel - the amount of\n   * parallelisation is controlled by the `blockWriteConcurrency` option (default: 10)\n   */\n  bufferImporter?: BufferImporter\n\n  /**\n   * This option can be used to override the importer internals.\n   *\n   * This function takes input from the `content` field of imported entries.\n   * It should transform them into `Buffer`s, throwing an error if it cannot.\n   * It should yield `Buffer` objects constructed from the `source` or throw an\n   * `Error`\n   */\n  chunkValidator?: ChunkValidator\n}\n\nexport type ImportCandidateStream = AsyncIterable<FileCandidate | DirectoryCandidate> | Iterable<FileCandidate | DirectoryCandidate>\n\n/**\n * The importer creates UnixFS DAGs and stores the blocks that make\n * them up in the passed blockstore.\n *\n * @example\n *\n * ```typescript\n * import { importer } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input = [{\n *   path: './foo.txt',\n *   content: Uint8Array.from([0, 1, 2, 3, 4])\n * }, {\n *   path: './bar.txt',\n *   content: Uint8Array.from([0, 1, 2, 3, 4])\n * }]\n *\n * for await (const entry of importer(input, blockstore)) {\n *   console.info(entry)\n *   // { cid: CID(), ... }\n * }\n * ```\n */\nexport async function * importer (source: ImportCandidateStream, blockstore: WritableStorage, options: ImporterOptions = {}): AsyncGenerator<ImportResult, void, unknown> {\n  let candidates: AsyncIterable<FileCandidate | DirectoryCandidate> | Iterable<FileCandidate | DirectoryCandidate>\n\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source\n  } else {\n    candidates = [source]\n  }\n\n  const wrapWithDirectory = options.wrapWithDirectory ?? false\n  const shardSplitThresholdBytes = options.shardSplitThresholdBytes ?? 262144\n  const shardFanoutBits = options.shardFanoutBits ?? 8\n  const cidVersion = options.cidVersion ?? 1\n  const rawLeaves = options.rawLeaves ?? true\n  const leafType = options.leafType ?? 'file'\n  const fileImportConcurrency = options.fileImportConcurrency ?? 50\n  const blockWriteConcurrency = options.blockWriteConcurrency ?? 10\n  const reduceSingleLeafToSelf = options.reduceSingleLeafToSelf ?? true\n\n  const chunker = options.chunker ?? fixedSize()\n  const chunkValidator = options.chunkValidator ?? defaultChunkValidator()\n  const buildDag: DAGBuilder = options.dagBuilder ?? defaultDagBuilder({\n    chunker,\n    chunkValidator,\n    wrapWithDirectory,\n    layout: options.layout ?? balanced(),\n    bufferImporter: options.bufferImporter ?? defaultBufferImporter({\n      cidVersion,\n      rawLeaves,\n      leafType,\n      onProgress: options.onProgress\n    }),\n    blockWriteConcurrency,\n    reduceSingleLeafToSelf,\n    cidVersion,\n    onProgress: options.onProgress\n  })\n  const buildTree: TreeBuilder = options.treeBuilder ?? defaultTreeBuilder({\n    wrapWithDirectory,\n    shardSplitThresholdBytes,\n    shardFanoutBits,\n    cidVersion,\n    onProgress: options.onProgress\n  })\n\n  for await (const entry of buildTree(parallelBatch(buildDag(candidates, blockstore), fileImportConcurrency), blockstore)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    }\n  }\n}\n\n/**\n * `importFile` is similar to `importer` except it accepts a single\n * `FileCandidate` and returns a promise of a single `ImportResult`\n * instead of a stream of results.\n *\n * @example\n *\n * ```typescript\n * import { importFile } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input: FileCandidate = {\n *   path: './foo.txt',\n *   content: Uint8Array.from([0, 1, 2, 3, 4])\n * }\n *\n * const entry = await importFile(input, blockstore)\n * ```\n */\nexport async function importFile (content: FileCandidate, blockstore: WritableStorage, options: ImporterOptions = {}): Promise<ImportResult> {\n  const result = await first(importer([content], blockstore, options))\n\n  if (result == null) {\n    throw errcode(new Error('Nothing imported'), 'ERR_INVALID_PARAMS')\n  }\n\n  return result\n}\n\n/**\n * `importDir` is similar to `importer` except it accepts a single\n * `DirectoryCandidate` and returns a promise of a single `ImportResult`\n * instead of a stream of results.\n *\n * @example\n *\n * ```typescript\n * import { importDirectory } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input: DirectoryCandidate = {\n *   path: './foo.txt'\n * }\n *\n * const entry = await importDirectory(input, blockstore)\n * ```\n */\nexport async function importDirectory (content: DirectoryCandidate, blockstore: WritableStorage, options: ImporterOptions = {}): Promise<ImportResult> {\n  const result = await first(importer([content], blockstore, options))\n\n  if (result == null) {\n    throw errcode(new Error('Nothing imported'), 'ERR_INVALID_PARAMS')\n  }\n\n  return result\n}\n\n/**\n * `importBytes` accepts a single Uint8Array and returns a promise\n * of a single `ImportResult`.\n *\n * @example\n *\n * ```typescript\n * import { importBytes } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input = Uint8Array.from([0, 1, 2, 3, 4])\n *\n * const entry = await importBytes(input, blockstore)\n * ```\n */\nexport async function importBytes (buf: ImportContent, blockstore: WritableStorage, options: ImporterOptions = {}): Promise<ImportResult> {\n  return importFile({\n    content: buf\n  }, blockstore, options)\n}\n\n/**\n * `importByteStream` accepts a single stream of Uint8Arrays and\n * returns a promise of a single `ImportResult`.\n *\n * @example\n *\n * ```typescript\n * import { importByteStream } from 'ipfs-unixfs-importer'\n * import { MemoryBlockstore } from 'blockstore-core'\n *\n * // store blocks in memory, other blockstores are available\n * const blockstore = new MemoryBlockstore()\n *\n * const input = [\n *   Uint8Array.from([0, 1, 2, 3, 4]),\n *   Uint8Array.from([5, 6, 7, 8, 9])\n * ]\n *\n * const entry = await importByteStream(input, blockstore)\n * ```\n */\nexport async function importByteStream (bufs: ByteStream, blockstore: WritableStorage, options: ImporterOptions = {}): Promise<ImportResult> {\n  return importFile({\n    content: bufs\n  }, blockstore, options)\n}\n","/**\n * @packageDocumentation\n *\n * The final batch may be smaller than the max.\n *\n * @example\n *\n * ```javascript\n * import batch from 'it-batch'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n * const batchSize = 2\n *\n * const result = all(batch(values, batchSize))\n *\n * console.info(result) // [0, 1], [2, 3], [4]\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import batch from 'it-batch'\n * import all from 'it-all'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const batchSize = 2\n * const result = await all(batch(values(), batchSize))\n *\n * console.info(result) // [0, 1], [2, 3], [4]\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches\n */\nfunction batch <T> (source: Iterable<T>, size?: number): Generator<T[], void, undefined>\nfunction batch <T> (source: Iterable<T> | AsyncIterable<T>, size?: number): AsyncGenerator<T[], void, undefined>\nfunction batch <T> (source: Iterable<T> | AsyncIterable<T>, size: number = 1): Generator<T[], void, undefined> | AsyncGenerator<T[], void, undefined> {\n  size = Number(size)\n\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      let things: T[] = []\n\n      if (size < 1) {\n        size = 1\n      }\n\n      if (size !== Math.round(size)) {\n        throw new Error('Batch size must be an integer')\n      }\n\n      for await (const thing of source) {\n        things.push(thing)\n\n        while (things.length >= size) {\n          yield things.slice(0, size)\n\n          things = things.slice(size)\n        }\n      }\n\n      while (things.length > 0) {\n        yield things.slice(0, size)\n\n        things = things.slice(size)\n      }\n    }())\n  }\n\n  return (function * () {\n    let things: T[] = []\n\n    if (size < 1) {\n      size = 1\n    }\n\n    if (size !== Math.round(size)) {\n      throw new Error('Batch size must be an integer')\n    }\n\n    for (const thing of source) {\n      things.push(thing)\n\n      while (things.length >= size) {\n        yield things.slice(0, size)\n\n        things = things.slice(size)\n      }\n    }\n\n    while (things.length > 0) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }())\n}\n\nexport default batch\n","/**\n * @packageDocumentation\n *\n * Takes an async iterator that emits promise-returning functions, invokes them in parallel and emits the results in the same order as the input.\n *\n * The final batch may be smaller than the batch size.\n *\n * @example\n *\n * ```javascript\n * import parallelBatch from 'it-parallel-batch'\n * import all from 'it-all'\n * import delay from 'delay'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const input = [\n *   async () => {\n *     await delay(500)\n *\n *     return 1\n *   },\n *   async () => {\n *     await delay(200)\n *\n *     return 2\n *   },\n *   async () => {\n *     await delay(100)\n *\n *     return 3\n *   }\n * ]\n *\n * const batchSize = 2\n *\n * const result = await all(parallelBatch(input, batchSize))\n *\n * console.info(result) // [1, 2, 3]\n * ```\n */\n\nimport batch from 'it-batch'\n\ninterface Success<T> {\n  ok: true\n  value: T\n}\n\ninterface Failure {\n  ok: false\n  err: Error\n}\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n */\nexport default async function * parallelBatch <T> (source: AsyncIterable<() => Promise<T>> | Iterable<() => Promise<T>>, size: number = 1): AsyncGenerator<T, void, undefined> {\n  for await (const tasks of batch(source, size)) {\n    const things: Array<Promise<Success<T> | Failure>> = tasks.map(\n      async (p: () => Promise<T>) => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n","import { Uint8ArrayList } from 'uint8arraylist'\nimport type { Chunker } from './index.js'\n\nexport interface FixedSizeOptions {\n  chunkSize?: number\n}\n\nconst DEFAULT_CHUNK_SIZE = 262144\n\nexport const fixedSize = (options: FixedSizeOptions = {}): Chunker => {\n  const chunkSize = options.chunkSize ?? DEFAULT_CHUNK_SIZE\n\n  return async function * fixedSizeChunker (source) {\n    let list = new Uint8ArrayList()\n    let currentLength = 0\n    let emitted = false\n\n    for await (const buffer of source) {\n      list.append(buffer)\n\n      currentLength += buffer.length\n\n      while (currentLength >= chunkSize) {\n        yield list.slice(0, chunkSize)\n        emitted = true\n\n        // throw away consumed bytes\n        if (chunkSize === list.length) {\n          list = new Uint8ArrayList()\n          currentLength = 0\n        } else {\n          const newBl = new Uint8ArrayList()\n          newBl.append(list.sublist(chunkSize))\n          list = newBl\n\n          // update our offset\n          currentLength -= chunkSize\n        }\n      }\n    }\n\n    if (!emitted || currentLength > 0) {\n      // return any remaining bytes\n      yield list.subarray(0, currentLength)\n    }\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { decodeNode } from './pb-decode.js'\nimport { encodeNode } from './pb-encode.js'\nimport { prepare, validate, createNode, createLink, toByteView } from './util.js'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\nexport const name = 'dag-pb'\nexport const code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nexport function encode (node) {\n  validate(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return encodeNode(pbn)\n}\n\n/**\n * @param {ByteView<PBNode> | ArrayBufferView<PBNode>} bytes\n * @returns {PBNode}\n */\nexport function decode (bytes) {\n  const buf = toByteView(bytes)\n  const pbn = decodeNode(buf)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = CID.decode(l.Hash)\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\nexport { prepare, validate, createNode, createLink }\n","const textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nexport function decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links = undefined // eslint-disable-line no-undef-init\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data = undefined // eslint-disable-line no-undef-init\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Data/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n","const textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface.js').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface.js').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nexport function encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n","import { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./interface.js').PBLink} PBLink\n * @typedef {import('./interface.js').PBNode} PBNode\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nexport function prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nexport function validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  // @ts-ignore private property for TS\n  if (!node || typeof node !== 'object' || Array.isArray(node) || node instanceof Uint8Array || (node['/'] && node['/'] === node.bytes)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be bytes)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be a list)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    // @ts-ignore private property for TS\n    if (!link || typeof link !== 'object' || Array.isArray(link) || link instanceof Uint8Array || (link['/'] && link['/'] === link.bytes)) {\n      throw new TypeError('Invalid DAG-PB form (bad link)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link)')\n    }\n\n    if (link.Hash === undefined) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash == null || !link.Hash['/'] || link.Hash['/'] !== link.Hash.bytes) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined) {\n      if (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n      }\n      if (link.Tsize < 0) {\n        throw new TypeError('Invalid DAG-PB form (link Tsize cannot be negative)')\n      }\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links=[]]\n * @returns {PBNode}\n */\nexport function createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nexport function createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nexport function toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n","/**\n * @packageDocumentation\n *\n * This module contains the protobuf definition of the UnixFS data structure found at the root of all UnixFS DAGs.\n *\n * The UnixFS spec can be found in the [ipfs/specs repository](http://github.com/ipfs/specs)\n *\n * @example Create a file composed of several blocks\n *\n * ```JavaScript\n * const data = new UnixFS({ type: 'file' })\n * data.addBlockSize(256) // add the size of each block\n * data.addBlockSize(256)\n * // ...\n * ```\n *\n * @example Create a directory that contains several files\n *\n * Creating a directory that contains several files is achieve by creating a unixfs element that identifies a MerkleDAG node as a directory. The links of that MerkleDAG node are the files that are contained in this directory.\n *\n * ```JavaScript\n * const data = new UnixFS({ type: 'directory' })\n * ```\n *\n * @example Create an unixfs Data element\n *\n * ```JavaScript\n * const data = new UnixFS([options])\n * ```\n *\n * `options` is an optional object argument that might include the following keys:\n *\n * - type (string, default `file`): The type of UnixFS entry.  Can be:\n *   - `raw`\n *   - `directory`\n *   - `file`\n *   - `metadata`\n *   - `symlink`\n *   - `hamt-sharded-directory`\n * - data (Uint8Array): The optional data field for this node\n * - blockSizes (Array, default: `[]`): If this is a `file` node that is made up of multiple blocks, `blockSizes` is a list numbers that represent the size of the file chunks stored in each child node. It is used to calculate the total file size.\n * - mode (Number, default `0644` for files, `0755` for directories/hamt-sharded-directories) file mode\n * - mtime (`Date`, `{ secs, nsecs }`, `{ Seconds, FractionalNanoseconds }`, `[ secs, nsecs ]`): The modification time of this node\n *\n * @example Add and remove a block size to the block size list\n *\n * ```JavaScript\n * data.addBlockSize(<size in bytes>)\n * ```\n *\n * ```JavaScript\n * data.removeBlockSize(<index>)\n * ```\n *\n * @example Get total fileSize\n *\n * ```JavaScript\n * data.fileSize() // => size in bytes\n * ```\n *\n * @example Marshal and unmarshal\n *\n * ```javascript\n * const marshaled = data.marshal()\n * const unmarshaled = Unixfs.unmarshal(marshaled)\n * ```\n *\n * @example Is this UnixFS entry a directory?\n *\n * ```JavaScript\n * const dir = new Data({ type: 'directory' })\n * dir.isDirectory() // true\n *\n * const file = new Data({ type: 'file' })\n * file.isDirectory() // false\n * ```\n *\n * @example Has an mtime been set?\n *\n * If no modification time has been set, no `mtime` property will be present on the `Data` instance:\n *\n * ```JavaScript\n * const file = new Data({ type: 'file' })\n * file.mtime // undefined\n *\n * Object.prototype.hasOwnProperty.call(file, 'mtime') // false\n *\n * const dir = new Data({ type: 'dir', mtime: new Date() })\n * dir.mtime // { secs: Number, nsecs: Number }\n * ```\n */\n\nimport errcode from 'err-code'\nimport { Data as PBData } from './unixfs.js'\n\nexport interface Mtime {\n  secs: bigint\n  nsecs?: number\n}\n\nexport type MtimeLike = Mtime | { Seconds: number, FractionalNanoseconds?: number } | [number, number] | Date\n\nconst types: Record<string, string> = {\n  Raw: 'raw',\n  Directory: 'directory',\n  File: 'file',\n  Metadata: 'metadata',\n  Symlink: 'symlink',\n  HAMTShard: 'hamt-sharded-directory'\n}\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\nexport interface UnixFSOptions {\n  type?: string\n  data?: Uint8Array\n  blockSizes?: bigint[]\n  hashType?: bigint\n  fanout?: bigint\n  mtime?: Mtime\n  mode?: number\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   */\n  static unmarshal (marshaled: Uint8Array): UnixFS {\n    const message = PBData.decode(marshaled)\n\n    const data = new UnixFS({\n      type: types[message.Type != null ? message.Type.toString() : 'File'],\n      data: message.Data,\n      blockSizes: message.blocksizes,\n      mode: message.mode,\n      mtime: message.mtime != null\n        ? {\n            secs: message.mtime.Seconds ?? 0n,\n            nsecs: message.mtime.FractionalNanoseconds\n          }\n        : undefined,\n      fanout: message.fanout\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = message.mode ?? 0\n\n    return data\n  }\n\n  public type: string\n  public data?: Uint8Array\n  public blockSizes: bigint[]\n  public hashType?: bigint\n  public fanout?: bigint\n  public mtime?: Mtime\n\n  private _mode?: number\n  private _originalMode: number\n\n  constructor (options: UnixFSOptions = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type != null && !Object.values(types).includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type ?? 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n    this.blockSizes = blockSizes ?? []\n    this._originalMode = 0\n    this.mode = mode\n    this.mtime = mtime\n  }\n\n  set mode (mode: number | undefined) {\n    if (mode == null) {\n      this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n    } else {\n      this._mode = (mode & 0xFFF)\n    }\n  }\n\n  get mode (): number | undefined {\n    return this._mode\n  }\n\n  isDirectory (): boolean {\n    return dirTypes.includes(this.type)\n  }\n\n  addBlockSize (size: bigint): void {\n    this.blockSizes.push(size)\n  }\n\n  removeBlockSize (index: number): void {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0n` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize (): bigint {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0n\n    }\n\n    let sum = 0n\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data != null) {\n      sum += BigInt(this.data.length)\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal (): Uint8Array {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error(`Type: ${type} is not valid`), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (this.data == null || this.data.length === 0) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (this.mode ?? 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      mtime = {\n        Seconds: this.mtime.secs,\n        FractionalNanoseconds: this.mtime.nsecs\n      }\n    }\n\n    return PBData.encode({\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    })\n  }\n}\n\nexport { UnixFS }\n","/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Data {\n  Type?: Data.DataType\n  Data?: Uint8Array\n  filesize?: bigint\n  blocksizes: bigint[]\n  hashType?: bigint\n  fanout?: bigint\n  mode?: number\n  mtime?: UnixTime\n}\n\nexport namespace Data {\n  export enum DataType {\n    Raw = 'Raw',\n    Directory = 'Directory',\n    File = 'File',\n    Metadata = 'Metadata',\n    Symlink = 'Symlink',\n    HAMTShard = 'HAMTShard'\n  }\n\n  enum __DataTypeValues {\n    Raw = 0,\n    Directory = 1,\n    File = 2,\n    Metadata = 3,\n    Symlink = 4,\n    HAMTShard = 5\n  }\n\n  export namespace DataType {\n    export const codec = (): Codec<DataType> => {\n      return enumeration<DataType>(__DataTypeValues)\n    }\n  }\n\n  let _codec: Codec<Data>\n\n  export const codec = (): Codec<Data> => {\n    if (_codec == null) {\n      _codec = message<Data>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          Data.DataType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (obj.filesize != null) {\n          w.uint32(24)\n          w.uint64(obj.filesize)\n        }\n\n        if (obj.blocksizes != null) {\n          for (const value of obj.blocksizes) {\n            w.uint32(32)\n            w.uint64(value)\n          }\n        }\n\n        if (obj.hashType != null) {\n          w.uint32(40)\n          w.uint64(obj.hashType)\n        }\n\n        if (obj.fanout != null) {\n          w.uint32(48)\n          w.uint64(obj.fanout)\n        }\n\n        if (obj.mode != null) {\n          w.uint32(56)\n          w.uint32(obj.mode)\n        }\n\n        if (obj.mtime != null) {\n          w.uint32(66)\n          UnixTime.codec().encode(obj.mtime, w)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          blocksizes: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = Data.DataType.codec().decode(reader)\n              break\n            case 2:\n              obj.Data = reader.bytes()\n              break\n            case 3:\n              obj.filesize = reader.uint64()\n              break\n            case 4:\n              obj.blocksizes.push(reader.uint64())\n              break\n            case 5:\n              obj.hashType = reader.uint64()\n              break\n            case 6:\n              obj.fanout = reader.uint64()\n              break\n            case 7:\n              obj.mode = reader.uint32()\n              break\n            case 8:\n              obj.mtime = UnixTime.codec().decode(reader, reader.uint32())\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Data>): Uint8Array => {\n    return encodeMessage(obj, Data.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Data => {\n    return decodeMessage(buf, Data.codec())\n  }\n}\n\nexport interface UnixTime {\n  Seconds?: bigint\n  FractionalNanoseconds?: number\n}\n\nexport namespace UnixTime {\n  let _codec: Codec<UnixTime>\n\n  export const codec = (): Codec<UnixTime> => {\n    if (_codec == null) {\n      _codec = message<UnixTime>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Seconds != null) {\n          w.uint32(8)\n          w.int64(obj.Seconds)\n        }\n\n        if (obj.FractionalNanoseconds != null) {\n          w.uint32(21)\n          w.fixed32(obj.FractionalNanoseconds)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Seconds = reader.int64()\n              break\n            case 2:\n              obj.FractionalNanoseconds = reader.fixed32()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<UnixTime>): Uint8Array => {\n    return encodeMessage(obj, UnixTime.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): UnixTime => {\n    return decodeMessage(buf, UnixTime.codec())\n  }\n}\n\nexport interface Metadata {\n  MimeType?: string\n}\n\nexport namespace Metadata {\n  let _codec: Codec<Metadata>\n\n  export const codec = (): Codec<Metadata> => {\n    if (_codec == null) {\n      _codec = message<Metadata>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.MimeType != null) {\n          w.uint32(10)\n          w.string(obj.MimeType)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.MimeType = reader.string()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Metadata>): Uint8Array => {\n    return encodeMessage(obj, Metadata.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Metadata => {\n    return decodeMessage(buf, Metadata.codec())\n  }\n}\n","import * as dagPb from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport * as raw from 'multiformats/codecs/raw'\nimport { CustomProgressEvent } from 'progress-events'\nimport { persist, type PersistOptions } from '../utils/persist.js'\nimport type { BufferImporter } from '../index.js'\nimport type { CID, Version } from 'multiformats/cid'\nimport type { ProgressOptions, ProgressEvent } from 'progress-events'\n\n/**\n * Passed to the onProgress callback while importing files\n */\nexport interface ImportWriteProgress {\n  /**\n   * How many bytes we have written for this source so far - this may be\n   * bigger than the file size due to the DAG-PB wrappers of each block\n   */\n  bytesWritten: bigint\n\n  /**\n   * The CID of the block that has been written\n   */\n  cid: CID\n\n  /**\n   * The path of the file being imported, if one was specified\n   */\n  path?: string\n}\n\nexport type BufferImportProgressEvents =\n  ProgressEvent<'unixfs:importer:progress:file:write', ImportWriteProgress>\n\nexport interface BufferImporterOptions extends ProgressOptions<BufferImportProgressEvents> {\n  cidVersion: Version\n  rawLeaves: boolean\n  leafType: 'file' | 'raw'\n}\n\nexport function defaultBufferImporter (options: BufferImporterOptions): BufferImporter {\n  return async function * bufferImporter (file, blockstore) {\n    let bytesWritten = 0n\n\n    for await (let block of file.content) {\n      yield async () => { // eslint-disable-line no-loop-func\n        let unixfs\n\n        const opts: PersistOptions = {\n          codec: dagPb,\n          cidVersion: options.cidVersion,\n          onProgress: options.onProgress\n        }\n\n        if (options.rawLeaves) {\n          opts.codec = raw\n          opts.cidVersion = 1\n        } else {\n          unixfs = new UnixFS({\n            type: options.leafType,\n            data: block\n          })\n\n          block = dagPb.encode({\n            Data: unixfs.marshal(),\n            Links: []\n          })\n        }\n\n        const cid = await persist(block, blockstore, opts)\n\n        bytesWritten += BigInt(block.byteLength)\n\n        options.onProgress?.(new CustomProgressEvent<ImportWriteProgress>('unixfs:importer:progress:file:write', {\n          bytesWritten,\n          cid,\n          path: file.path\n        }))\n\n        return {\n          cid,\n          unixfs,\n          size: BigInt(block.length),\n          block\n        }\n      }\n    }\n  }\n}\n","\n/**\n * Progress events are emitted during long running operations\n */\nexport interface ProgressEvent<T extends string = any, D = unknown> {\n  /**\n   * The event type\n   */\n  type: T\n\n  /**\n   * Context-specific event information\n   */\n  detail: D\n}\n\n/**\n * An implementation of the ProgressEvent interface, this is essentially\n * a typed `CustomEvent` with a `type` property that lets us disambiguate\n * events passed to `progress` callbacks.\n */\nexport class CustomProgressEvent<D = unknown, T extends string = any> extends Event implements ProgressEvent<T, D> {\n  // @ts-expect-error type is a property of Event, we just declare it here for use as a type disambiguator\n  public type: T\n  public detail: D\n\n  constructor (type: T, detail?: any) {\n    super(type)\n\n    this.detail = detail\n  }\n}\n\n/**\n * Define an `onProgress` callback that can be invoked with `ProgressEvent`s\n *\n * @example\n *\n * ```typescript\n * type MyOperationProgressEvents =\n *   ProgressEvent<'operation:start'> |\n *   ProgressEvent<'operation:success', Result> |\n *   ProgressEvent<'operation:error', Error>\n *\n * export interface MyOperationOptions extends ProgressOptions<MyOperationProgressEvents> {\n *  // define options here\n * }\n * ```\n */\nexport interface ProgressOptions<Event extends ProgressEvent = any> {\n  onProgress?: (evt: Event) => void\n}\n","import * as dagPb from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport type { WritableStorage } from '../index.js'\nimport type { Version as CIDVersion } from 'multiformats/cid'\nimport type { BlockCodec } from 'multiformats/codecs/interface'\nimport type { ProgressOptions } from 'progress-events'\n\nexport interface PersistOptions extends ProgressOptions {\n  codec?: BlockCodec<any, any>\n  cidVersion: CIDVersion\n  signal?: AbortSignal\n}\n\nexport const persist = async (buffer: Uint8Array, blockstore: WritableStorage, options: PersistOptions): Promise<CID> => {\n  if (options.codec == null) {\n    options.codec = dagPb\n  }\n\n  const multihash = await sha256.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  await blockstore.put(cid, buffer, options)\n\n  return cid\n}\n","import errCode from 'err-code'\nimport { CustomProgressEvent } from 'progress-events'\nimport { dirBuilder, type DirBuilderOptions } from './dir.js'\nimport { fileBuilder, type FileBuilderOptions } from './file.js'\nimport type { ChunkValidator } from './validate-chunks.js'\nimport type { Chunker } from '../chunker/index.js'\nimport type { Directory, File, FileCandidate, ImportCandidate, ImporterProgressEvents, InProgressImportResult, WritableStorage } from '../index.js'\nimport type { ProgressEvent, ProgressOptions } from 'progress-events'\n\n/**\n * Passed to the onProgress callback while importing files\n */\nexport interface ImportReadProgress {\n  /**\n   * How many bytes we have read from this source so far\n   */\n  bytesRead: bigint\n\n  /**\n   * The size of the current chunk\n   */\n  chunkSize: bigint\n\n  /**\n   * The path of the file being imported, if one was specified\n   */\n  path?: string\n}\n\nexport type DagBuilderProgressEvents =\n  ProgressEvent<'unixfs:importer:progress:file:read', ImportReadProgress>\n\nfunction isIterable (thing: any): thing is Iterable<any> {\n  return Symbol.iterator in thing\n}\n\nfunction isAsyncIterable (thing: any): thing is AsyncIterable<any> {\n  return Symbol.asyncIterator in thing\n}\n\nfunction contentAsAsyncIterable (content: Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>): AsyncIterable<Uint8Array> {\n  try {\n    if (content instanceof Uint8Array) {\n      return (async function * () {\n        yield content\n      }())\n    } else if (isIterable(content)) {\n      return (async function * () {\n        yield * content\n      }())\n    } else if (isAsyncIterable(content)) {\n      return content\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n  }\n\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n}\n\nexport interface DagBuilderOptions extends FileBuilderOptions, DirBuilderOptions, ProgressOptions<ImporterProgressEvents> {\n  chunker: Chunker\n  chunkValidator: ChunkValidator\n  wrapWithDirectory: boolean\n}\n\nexport type ImporterSourceStream = AsyncIterable<ImportCandidate> | Iterable<ImportCandidate>\n\nexport interface DAGBuilder {\n  (source: ImporterSourceStream, blockstore: WritableStorage): AsyncIterable<() => Promise<InProgressImportResult>>\n}\n\nexport function defaultDagBuilder (options: DagBuilderOptions): DAGBuilder {\n  return async function * dagBuilder (source, blockstore) {\n    for await (const entry of source) {\n      let originalPath: string | undefined\n\n      if (entry.path != null) {\n        originalPath = entry.path\n        entry.path = entry.path\n          .split('/')\n          .filter(path => path != null && path !== '.')\n          .join('/')\n      }\n\n      if (isFileCandidate(entry)) {\n        const file: File = {\n          path: entry.path,\n          mtime: entry.mtime,\n          mode: entry.mode,\n          content: (async function * () {\n            let bytesRead = 0n\n\n            for await (const chunk of options.chunker(options.chunkValidator(contentAsAsyncIterable(entry.content)))) {\n              const currentChunkSize = BigInt(chunk.byteLength)\n              bytesRead += currentChunkSize\n\n              options.onProgress?.(new CustomProgressEvent<ImportReadProgress>('unixfs:importer:progress:file:read', {\n                bytesRead,\n                chunkSize: currentChunkSize,\n                path: entry.path\n              }))\n\n              yield chunk\n            }\n          })(),\n          originalPath\n        }\n\n        yield async () => fileBuilder(file, blockstore, options)\n      } else if (entry.path != null) {\n        const dir: Directory = {\n          path: entry.path,\n          mtime: entry.mtime,\n          mode: entry.mode,\n          originalPath\n        }\n\n        yield async () => dirBuilder(dir, blockstore, options)\n      } else {\n        throw new Error('Import candidate must have content or path or both')\n      }\n    }\n  }\n}\n\nfunction isFileCandidate (entry: any): entry is FileCandidate {\n  return entry.content != null\n}\n","import { encode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { persist } from '../utils/persist.js'\nimport type { Directory, InProgressImportResult, WritableStorage } from '../index.js'\nimport type { Version } from 'multiformats/cid'\n\nexport interface DirBuilderOptions {\n  cidVersion: Version\n  signal?: AbortSignal\n}\n\nexport const dirBuilder = async (dir: Directory, blockstore: WritableStorage, options: DirBuilderOptions): Promise<InProgressImportResult> => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: dir.mtime,\n    mode: dir.mode\n  })\n\n  const block = encode(prepare({ Data: unixfs.marshal() }))\n  const cid = await persist(block, blockstore, options)\n  const path = dir.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    size: BigInt(block.length),\n    originalPath: dir.originalPath,\n    block\n  }\n}\n","import { encode, type PBLink, type PBNode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport parallelBatch from 'it-parallel-batch'\nimport * as rawCodec from 'multiformats/codecs/raw'\nimport { CustomProgressEvent } from 'progress-events'\nimport { persist } from '../utils/persist.js'\nimport type { BufferImporter, File, InProgressImportResult, WritableStorage, SingleBlockImportResult, ImporterProgressEvents } from '../index.js'\nimport type { FileLayout, Reducer } from '../layout/index.js'\nimport type { CID, Version } from 'multiformats/cid'\nimport type { ProgressOptions, ProgressEvent } from 'progress-events'\n\ninterface BuildFileBatchOptions {\n  bufferImporter: BufferImporter\n  blockWriteConcurrency: number\n}\n\nasync function * buildFileBatch (file: File, blockstore: WritableStorage, options: BuildFileBatchOptions): AsyncGenerator<InProgressImportResult> {\n  let count = -1\n  let previous: SingleBlockImportResult | undefined\n\n  for await (const entry of parallelBatch(options.bufferImporter(file, blockstore), options.blockWriteConcurrency)) {\n    count++\n\n    if (count === 0) {\n      // cache the first entry if case there aren't any more\n      previous = {\n        ...entry,\n        single: true\n      }\n\n      continue\n    } else if (count === 1 && (previous != null)) {\n      // we have the second block of a multiple block import so yield the first\n      yield {\n        ...previous,\n        block: undefined,\n        single: undefined\n      }\n      previous = undefined\n    }\n\n    // yield the second or later block of a multiple block import\n    yield {\n      ...entry,\n      block: undefined\n    }\n  }\n\n  if (previous != null) {\n    yield previous\n  }\n}\n\nexport interface LayoutLeafProgress {\n  /**\n   * The CID of the leaf being written\n   */\n  cid: CID\n\n  /**\n   * The path of the file being imported, if one was specified\n   */\n  path?: string\n}\n\nexport type ReducerProgressEvents =\n  ProgressEvent<'unixfs:importer:progress:file:layout', LayoutLeafProgress>\n\ninterface ReduceOptions extends ProgressOptions<ImporterProgressEvents> {\n  reduceSingleLeafToSelf: boolean\n  cidVersion: Version\n  signal?: AbortSignal\n}\n\nfunction isSingleBlockImport (result: any): result is SingleBlockImportResult {\n  return result.single === true\n}\n\nconst reduce = (file: File, blockstore: WritableStorage, options: ReduceOptions): Reducer => {\n  const reducer: Reducer = async function (leaves) {\n    if (leaves.length === 1 && isSingleBlockImport(leaves[0]) && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0]\n      let node: Uint8Array | PBNode = leaf.block\n\n      if (isSingleBlockImport(leaf) && (file.mtime !== undefined || file.mode !== undefined)) {\n        // only one leaf node which is a raw leaf - we have metadata so convert it into a\n        // UnixFS entry otherwise we'll have nowhere to store the metadata\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: leaf.block\n        })\n\n        node = { Data: leaf.unixfs.marshal(), Links: [] }\n\n        leaf.block = encode(prepare(node))\n\n        leaf.cid = await persist(leaf.block, blockstore, {\n          ...options,\n          cidVersion: options.cidVersion\n        })\n        leaf.size = BigInt(leaf.block.length)\n      }\n\n      options.onProgress?.(new CustomProgressEvent<LayoutLeafProgress>('unixfs:importer:progress:file:layout', {\n        cid: leaf.cid,\n        path: leaf.originalPath\n      }))\n\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size,\n        originalPath: leaf.originalPath\n      }\n    }\n\n    // create a parent node and add all the leaves\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    })\n\n    const links: PBLink[] = leaves\n      .filter(leaf => {\n        if (leaf.cid.code === rawCodec.code && leaf.size > 0) {\n          return true\n        }\n\n        if ((leaf.unixfs != null) && (leaf.unixfs.data == null) && leaf.unixfs.fileSize() > 0n) {\n          return true\n        }\n\n        return Boolean(leaf.unixfs?.data?.length)\n      })\n      .map((leaf) => {\n        if (leaf.cid.code === rawCodec.code) {\n          // node is a leaf buffer\n          f.addBlockSize(leaf.size)\n\n          return {\n            Name: '',\n            Tsize: Number(leaf.size),\n            Hash: leaf.cid\n          }\n        }\n\n        if ((leaf.unixfs == null) || (leaf.unixfs.data == null)) {\n          // node is an intermediate node\n          f.addBlockSize(leaf.unixfs?.fileSize() ?? 0n)\n        } else {\n          // node is a unixfs 'file' leaf node\n          f.addBlockSize(BigInt(leaf.unixfs.data.length))\n        }\n\n        return {\n          Name: '',\n          Tsize: Number(leaf.size),\n          Hash: leaf.cid\n        }\n      })\n\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    }\n    const block = encode(prepare(node))\n    const cid = await persist(block, blockstore, options)\n\n    options.onProgress?.(new CustomProgressEvent<LayoutLeafProgress>('unixfs:importer:progress:file:layout', {\n      cid,\n      path: file.originalPath\n    }))\n\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: BigInt(block.length + node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), 0)),\n      originalPath: file.originalPath,\n      block\n    }\n  }\n\n  return reducer\n}\n\nexport interface FileBuilderOptions extends BuildFileBatchOptions, ReduceOptions {\n  layout: FileLayout\n}\n\nexport const fileBuilder = async (file: File, block: WritableStorage, options: FileBuilderOptions): Promise<InProgressImportResult> => {\n  return options.layout(buildFileBatch(file, block, options), reduce(file, block, options))\n}\n","import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nexport interface ChunkValidator { (source: AsyncIterable<Uint8Array>): AsyncIterable<Uint8Array> }\n\nexport const defaultChunkValidator = (): ChunkValidator => {\n  return async function * validateChunks (source) {\n    for await (const content of source) {\n      if (content.length === undefined) {\n        throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n      }\n\n      if (typeof content === 'string' || content instanceof String) {\n        yield uint8ArrayFromString(content.toString())\n      } else if (Array.isArray(content)) {\n        yield Uint8Array.from(content)\n      } else if (content instanceof Uint8Array) {\n        yield content\n      } else {\n        throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n      }\n    }\n  }\n}\n","import batch from 'it-batch'\nimport type { FileLayout } from './index.js'\nimport type { InProgressImportResult } from '../index.js'\n\nconst DEFAULT_MAX_CHILDREN_PER_NODE = 174\n\nexport interface BalancedOptions {\n  maxChildrenPerNode?: number\n}\n\nexport function balanced (options?: BalancedOptions): FileLayout {\n  const maxChildrenPerNode = options?.maxChildrenPerNode ?? DEFAULT_MAX_CHILDREN_PER_NODE\n\n  return async function balancedLayout (source, reduce): Promise<InProgressImportResult> {\n    const roots = []\n\n    for await (const chunked of batch(source, maxChildrenPerNode)) {\n      roots.push(await reduce(chunked))\n    }\n\n    if (roots.length > 1) {\n      return balancedLayout(roots, reduce)\n    }\n\n    return roots[0]\n  }\n}\n","/**\n * @packageDocumentation\n *\n * For when you need a one-liner to collect iterable values.\n *\n * @example\n *\n * ```javascript\n * import all from 'it-all'\n *\n * // This can also be an iterator, etc\n * const values = function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = all(values)\n *\n * console.info(arr) // 0, 1, 2, 3, 4\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const arr = await all(values())\n *\n * console.info(arr) // 0, 1, 2, 3, 4\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nfunction all <T> (source: Iterable<T>): T[]\nfunction all <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T[]>\nfunction all <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T[]> | T[] {\n  if (isAsyncIterable(source)) {\n    return (async () => {\n      const arr = []\n\n      for await (const entry of source) {\n        arr.push(entry)\n      }\n\n      return arr\n    })()\n  }\n\n  const arr = []\n\n  for (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nexport default all\n","import { CID } from 'multiformats/cid'\nimport type { WritableStorage, ImportResult, InProgressImportResult } from './index.js'\nimport type { PersistOptions } from './utils/persist.js'\nimport type { Mtime, UnixFS } from 'ipfs-unixfs'\n\nexport interface DirProps {\n  root: boolean\n  dir: boolean\n  path: string\n  dirty: boolean\n  flat: boolean\n  parent?: Dir\n  parentKey?: string\n  unixfs?: UnixFS\n  mode?: number\n  mtime?: Mtime\n}\n\nexport abstract class Dir {\n  public options: PersistOptions\n  public root: boolean\n  public dir: boolean\n  public path: string\n  public dirty: boolean\n  public flat: boolean\n  public parent?: Dir\n  public parentKey?: string\n  public unixfs?: UnixFS\n  public mode?: number\n  public mtime?: Mtime\n  public cid?: CID\n  public size?: number\n  public nodeSize?: number\n\n  constructor (props: DirProps, options: PersistOptions) {\n    this.options = options ?? {}\n\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n  }\n\n  abstract put (name: string, value: InProgressImportResult | Dir): Promise<void>\n  abstract get (name: string): Promise<InProgressImportResult | Dir | undefined>\n  abstract eachChildSeries (): AsyncIterable<{ key: string, child: InProgressImportResult | Dir }>\n  abstract flush (blockstore: WritableStorage): AsyncGenerator<ImportResult>\n  abstract estimateNodeSize (): number\n  abstract childCount (): number\n}\n\n// we use these to calculate the node size to use as a check for whether a directory\n// should be sharded or not. Since CIDs have a constant length and We're only\n// interested in the data length and not the actual content identifier we can use\n// any old CID instead of having to hash the data which is expensive.\nexport const CID_V0 = CID.parse('QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn')\nexport const CID_V1 = CID.parse('zdj7WbTaiJT1fgatdet9Ei9iDB5hdCxkbVyhyh8YTUnXMiwYi')\n","import { encode, type PBNode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { Dir, CID_V0, CID_V1, type DirProps } from './dir.js'\nimport { persist, type PersistOptions } from './utils/persist.js'\nimport type { ImportResult, InProgressImportResult } from './index.js'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nexport class DirFlat extends Dir {\n  private readonly _children: Map<string, InProgressImportResult | Dir>\n\n  constructor (props: DirProps, options: PersistOptions) {\n    super(props, options)\n\n    this._children = new Map()\n  }\n\n  async put (name: string, value: InProgressImportResult | Dir): Promise<void> {\n    this.cid = undefined\n    this.size = undefined\n    this.nodeSize = undefined\n\n    this._children.set(name, value)\n  }\n\n  async get (name: string): Promise<InProgressImportResult | Dir | undefined> {\n    return Promise.resolve(this._children.get(name))\n  }\n\n  childCount (): number {\n    return this._children.size\n  }\n\n  directChildrenCount (): number {\n    return this.childCount()\n  }\n\n  onlyChild (): InProgressImportResult | Dir {\n    return this._children.values().next().value\n  }\n\n  async * eachChildSeries (): AsyncGenerator<{ key: string, child: InProgressImportResult | Dir }, void, undefined> {\n    for (const [key, child] of this._children.entries()) {\n      yield {\n        key,\n        child\n      }\n    }\n  }\n\n  estimateNodeSize (): number {\n    if (this.nodeSize !== undefined) {\n      return this.nodeSize\n    }\n\n    this.nodeSize = 0\n\n    // estimate size only based on DAGLink name and CID byte lengths\n    // https://github.com/ipfs/go-unixfsnode/blob/37b47f1f917f1b2f54c207682f38886e49896ef9/data/builder/directory.go#L81-L96\n    for (const [name, child] of this._children.entries()) {\n      if (child.size != null && (child.cid != null)) {\n        this.nodeSize += name.length + (this.options.cidVersion === 1 ? CID_V1.bytes.byteLength : CID_V0.bytes.byteLength)\n      }\n    }\n\n    return this.nodeSize\n  }\n\n  async * flush (block: Blockstore): AsyncGenerator<ImportResult> {\n    const links = []\n\n    for (const [name, child] of this._children.entries()) {\n      let result: { size?: bigint | number, cid?: CID } = child\n\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          result = entry\n\n          yield entry\n        }\n      }\n\n      if (result.size != null && (result.cid != null)) {\n        links.push({\n          Name: name,\n          Tsize: Number(result.size),\n          Hash: result.cid\n        })\n      }\n    }\n\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    })\n\n    const node: PBNode = { Data: unixfs.marshal(), Links: links }\n    const buffer = encode(prepare(node))\n    const cid = await persist(buffer, block, this.options)\n    const size = buffer.length + node.Links.reduce(\n      /**\n       * @param {number} acc\n       * @param {PBLink} curr\n       */\n      (acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize),\n      0)\n\n    this.cid = cid\n    this.size = size\n\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size: BigInt(size)\n    }\n  }\n}\n","import { bytes } from 'multiformats'\nimport { from } from 'multiformats/hashes/hasher'\n// @ts-expect-error no types\nimport mur from 'murmurhash3js-revisited'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(mur.x86.hash32(input))\n})\n\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nexport const murmur364 = from({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input)).subarray(0, 8)\n})\n","// @ts-expect-error no types\nimport SparseArray from 'sparse-array'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport type { InfiniteHash } from './consumable-hash.js'\n\nexport interface BucketChild<V> {\n  key: string\n  value: V\n  hash: InfiniteHash\n}\n\ninterface SA<B> {\n  length: number\n  compactArray(): B[]\n  get(i: number): B\n  set(i: number, value: B): void\n  reduce <A> (fn: (acc: A, curr: B, index: number) => A, initial: A): B\n  find(fn: (item: B) => boolean): B | undefined\n  bitField(): number[]\n  unset(i: number): void\n}\n\nexport interface BucketPosition<T> {\n  bucket: Bucket<T>\n  pos: number\n  hash: InfiniteHash\n  existingChild?: BucketChild<T>\n}\n\nexport interface BucketOptions {\n  bits: number\n  hash(value: Uint8Array | InfiniteHash): InfiniteHash\n}\n\nexport class Bucket<T> {\n  _options: BucketOptions\n  _popCount: number\n  _parent?: Bucket<T>\n  _posAtParent: number\n  _children: SA<Bucket<T> | BucketChild<T>>\n\n  key: string | null\n\n  constructor (options: BucketOptions, parent?: Bucket<T>, posAtParent = 0) {\n    this._options = options\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n    this._children = new SparseArray()\n    this.key = null\n  }\n\n  async put (key: string, value: T): Promise<void> {\n    const place = await this._findNewBucketAndPos(key)\n\n    place.bucket._putAt(place, key, value)\n  }\n\n  async get (key: string): Promise<T | undefined> {\n    const child = await this._findChild(key)\n\n    if (child != null) {\n      return child.value\n    }\n  }\n\n  async del (key: string): Promise<void> {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child != null && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  leafCount (): number {\n    const children = this._children.compactArray()\n\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount (): number {\n    return this._children.length\n  }\n\n  onlyChild (): Bucket<T> | BucketChild<T> {\n    return this._children.get(0)\n  }\n\n  * eachLeafSeries (): Iterable<BucketChild<T>> {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield * child.eachLeafSeries()\n      } else {\n        yield child\n      }\n    }\n  }\n\n  serialize <M> (map: (value: BucketChild<T>, index: number) => M, reduce: (reduced: Bucket<T> | BucketChild<T>) => M): M {\n    const acc: M[] = []\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child != null) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, acc))\n  }\n\n  async asyncTransform <R = T> (asyncMap: (value: BucketChild<T>) => Promise<T[]>, asyncReduce: (reduced: any) => Promise<R>): Promise<R> {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON (): Record<string, any> {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint (): string {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize (): number {\n    return Math.pow(2, this._options.bits)\n  }\n\n  async _findChild (key: string): Promise<BucketChild<T> | undefined> {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined\n    }\n\n    if (child != null && child.key === key) {\n      return child\n    }\n  }\n\n  async _findPlace (key: string | InfiniteHash): Promise<BucketPosition<T>> {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    }\n  }\n\n  async _findNewBucketAndPos (key: string | InfiniteHash): Promise<BucketPosition<T>> {\n    const place = await this._findPlace(key)\n\n    if ((place.existingChild != null) && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash)\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  _putAt (place: BucketPosition<T>, key: string, value: T): void {\n    this._putObjectAt(place.pos, {\n      key,\n      value,\n      hash: place.hash\n    })\n  }\n\n  _putObjectAt (pos: number, object: Bucket<T> | BucketChild<T>): void {\n    if (this._children.get(pos) == null) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  _delAt (pos: number): void {\n    if (pos === -1) {\n      throw new Error('Invalid position')\n    }\n\n    if (this._children.get(pos) != null) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level (): void {\n    if (this._parent != null && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if ((onlyChild != null) && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash,\n            bucket: this._parent\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  _at (index: number): Bucket<T> | BucketChild<T> {\n    return this._children.get(index)\n  }\n}\n\nfunction exists (o: any): boolean {\n  return Boolean(o)\n}\n\nfunction mapNode (node: { key: string }, _: number): string {\n  return node.key\n}\n\nfunction reduceNodes <T> (nodes: T): any {\n  return nodes\n}\n\nasync function asyncTransformBucket <T, R = T> (bucket: Bucket<T>, asyncMap: (value: BucketChild<T>) => Promise<T[]>, asyncReduce: (reduced: any) => Promise<R>): Promise<R> {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n  }\n\n  return asyncReduce(output)\n}\n","const START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nexport class ConsumableBuffer {\n  _value: Uint8Array\n  _currentBytePos: number\n  _currentBitPos: number\n\n  constructor (value: Uint8Array) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits (): number {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits (): number {\n    return this._value.length * 8\n  }\n\n  take (bits: number): number {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits > 0 && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  untake (bits: number): void {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits (): boolean {\n    return this._currentBytePos >= 0\n  }\n}\n\nfunction byteBitsToInt (byte: number, start: number, length: number): number {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\nfunction maskFor (start: number, length: number): number {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","import { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { ConsumableBuffer } from './consumable-buffer.js'\n\nexport function wrapHash (hashFn: (value: Uint8Array) => Promise<Uint8Array>): (value: InfiniteHash | Uint8Array) => InfiniteHash {\n  function hashing (value: InfiniteHash | Uint8Array): InfiniteHash {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nexport class InfiniteHash {\n  _value: Uint8Array\n  _hashFn: (value: Uint8Array) => Promise<Uint8Array>\n  _depth: number\n  _availableBits: number\n  _currentBufferIndex: number\n  _buffers: ConsumableBuffer[]\n\n  constructor (value: Uint8Array, hashFn: (value: Uint8Array) => Promise<Uint8Array>) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n    this._buffers = []\n  }\n\n  async take (bits: number): Promise<number> {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  untake (bits: number): void {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits (): Promise<void> {\n    this._depth++\n\n    const value = this._depth > 0 ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n","/**\n * @packageDocumentation\n *\n * A [Hash Mapped Trie](https://en.wikipedia.org/wiki/Hash_array_mapped_trie) implementation for JavaScript.\n *\n * This is used by [@helia/unixfs](https://www.npmjs.com/package/@helia/unixfs) for it's HAMT-sharded directory implementation.\n *\n * @example\n *\n * ```TypeScript\n * import { createHAMT } from 'hamt-sharding'\n * import crypto from 'crypto-promise'\n *\n * // decide how to hash buffers made from keys, can return a Promise\n * const hashFn = async (buf) => {\n *   return crypto\n *     .createHash('sha256')\n *     .update(buf)\n *     .digest()\n * }\n *\n * const bucket = createHAMT({\n *   hashFn: hashFn\n * })\n *\n * await bucket.put('key', 'value')\n *\n * const output = await bucket.get('key')\n * // output === 'value'\n * ```\n */\n\nimport { Bucket } from './bucket.js'\nimport { wrapHash } from './consumable-hash.js'\nimport type { BucketOptions, BucketPosition, BucketChild } from './bucket.js'\n\ninterface UserBucketOptions {\n  hashFn(value: Uint8Array): Promise<Uint8Array>\n  bits?: number\n}\n\nexport function createHAMT<T> (options: UserBucketOptions): Bucket<T> {\n  if (options == null || options.hashFn == null) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits ?? 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket<T>(bucketOptions)\n}\n\nexport { Bucket }\nexport type { BucketOptions, BucketPosition, BucketChild }\n","import { encode, type PBLink, prepare } from '@ipld/dag-pb'\nimport { murmur3128 } from '@multiformats/murmur3'\nimport { createHAMT, Bucket, type BucketChild } from 'hamt-sharding'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { Dir, CID_V0, CID_V1, type DirProps } from './dir.js'\nimport { persist, type PersistOptions } from './utils/persist.js'\nimport type { ImportResult, InProgressImportResult } from './index.js'\nimport type { Blockstore } from 'interface-blockstore'\n\nasync function hamtHashFn (buf: Uint8Array): Promise<Uint8Array> {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\nconst HAMT_HASH_CODE = BigInt(0x22)\nconst DEFAULT_FANOUT_BITS = 8\n\nexport interface DirShardedOptions extends PersistOptions {\n  shardFanoutBits: number\n}\n\nclass DirSharded extends Dir {\n  private readonly _bucket: Bucket<InProgressImportResult | Dir>\n\n  constructor (props: DirProps, options: DirShardedOptions) {\n    super(props, options)\n\n    this._bucket = createHAMT({\n      hashFn: hamtHashFn,\n      bits: options.shardFanoutBits ?? DEFAULT_FANOUT_BITS\n    })\n  }\n\n  async put (name: string, value: InProgressImportResult | Dir): Promise<void> {\n    this.cid = undefined\n    this.size = undefined\n    this.nodeSize = undefined\n\n    await this._bucket.put(name, value)\n  }\n\n  async get (name: string): Promise<InProgressImportResult | Dir | undefined> {\n    return this._bucket.get(name)\n  }\n\n  childCount (): number {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount (): number {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild (): Bucket<InProgressImportResult | Dir> | BucketChild<InProgressImportResult | Dir> {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries (): AsyncGenerator<{ key: string, child: InProgressImportResult | Dir }> {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  estimateNodeSize (): number {\n    if (this.nodeSize !== undefined) {\n      return this.nodeSize\n    }\n\n    this.nodeSize = calculateSize(this._bucket, this, this.options)\n\n    return this.nodeSize\n  }\n\n  async * flush (blockstore: Blockstore): AsyncGenerator<ImportResult> {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      }\n    }\n  }\n}\n\nexport default DirSharded\n\nasync function * flush (bucket: Bucket<Dir | InProgressImportResult>, blockstore: Blockstore, shardRoot: DirSharded | null, options: PersistOptions): AsyncIterable<ImportResult> {\n  const children = bucket._children\n  const padLength = (bucket.tableSize() - 1).toString(16).length\n  const links: PBLink[] = []\n  let childrenSize = 0n\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (child == null) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(padLength, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of flush(child, blockstore, null, options)) {\n        shard = subShard\n      }\n\n      if (shard == null) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: Number(shard.size),\n        Hash: shard.cid\n      })\n      childrenSize += shard.size\n    } else if (isDir(child.value)) {\n      const dir = child.value\n      let flushedDir: ImportResult | undefined\n\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      if (flushedDir == null) {\n        throw new Error('Did not flush dir')\n      }\n\n      const label = labelPrefix + child.key\n      links.push({\n        Name: label,\n        Tsize: Number(flushedDir.size),\n        Hash: flushedDir.cid\n      })\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (value.cid == null) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: Number(size),\n        Hash: value.cid\n      })\n      childrenSize += BigInt(size ?? 0)\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: BigInt(bucket.tableSize()),\n    hashType: HAMT_HASH_CODE,\n    mtime: shardRoot?.mtime,\n    mode: shardRoot?.mode\n  })\n\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  }\n  const buffer = encode(prepare(node))\n  const cid = await persist(buffer, blockstore, options)\n  const size = BigInt(buffer.byteLength) + childrenSize\n\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  }\n}\n\nfunction isDir (obj: any): obj is Dir {\n  return typeof obj.flush === 'function'\n}\n\nfunction calculateSize (bucket: Bucket<any>, shardRoot: DirSharded | null, options: PersistOptions): number {\n  const children = bucket._children\n  const padLength = (bucket.tableSize() - 1).toString(16).length\n  const links: PBLink[] = []\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (child == null) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(padLength, '0')\n\n    if (child instanceof Bucket) {\n      const size = calculateSize(child, null, options)\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: Number(size),\n        Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n      })\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      const size = dir.nodeSize()\n\n      links.push({\n        Name: labelPrefix + child.key,\n        Tsize: Number(size),\n        Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n      })\n    } else {\n      const value = child.value\n\n      if (value.cid == null) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: Number(size),\n        Hash: value.cid\n      })\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: BigInt(bucket.tableSize()),\n    hashType: HAMT_HASH_CODE,\n    mtime: shardRoot?.mtime,\n    mode: shardRoot?.mode\n  })\n\n  const buffer = encode(prepare({\n    Data: dir.marshal(),\n    Links: links\n  }))\n\n  return buffer.length\n}\n","import { DirFlat } from './dir-flat.js'\nimport DirSharded, { type DirShardedOptions } from './dir-sharded.js'\nimport type { Dir } from './dir.js'\n\nexport async function flatToShard (child: Dir | null, dir: Dir, threshold: number, options: DirShardedOptions): Promise<DirSharded> {\n  let newDir = dir as DirSharded\n\n  if (dir instanceof DirFlat && dir.estimateNodeSize() > threshold) {\n    newDir = await convertToShard(dir, options)\n  }\n\n  const parent = newDir.parent\n\n  if (parent != null) {\n    if (newDir !== dir) {\n      if (child != null) {\n        child.parent = newDir\n      }\n\n      if (newDir.parentKey == null) {\n        throw new Error('No parent key found')\n      }\n\n      await parent.put(newDir.parentKey, newDir)\n    }\n\n    return flatToShard(newDir, parent, threshold, options)\n  }\n\n  return newDir\n}\n\nasync function convertToShard (oldDir: DirFlat, options: DirShardedOptions): Promise<DirSharded> {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options)\n\n  for await (const { key, child } of oldDir.eachChildSeries()) {\n    await newDir.put(key, child)\n  }\n\n  return newDir\n}\n","export const toPathComponents = (path: string = ''): string[] => {\n  // split on / unless escaped with \\\n  return path.split(/(?<!\\\\)\\//).filter(Boolean)\n}\n","import { DirFlat } from './dir-flat.js'\nimport { Dir } from './dir.js'\nimport { flatToShard } from './flat-to-shard.js'\nimport { toPathComponents } from './utils/to-path-components.js'\nimport type { ImportResult, InProgressImportResult, TreeBuilder, WritableStorage } from './index.js'\nimport type { PersistOptions } from './utils/persist.js'\n\nexport interface AddToTreeOptions extends PersistOptions {\n  shardSplitThresholdBytes: number\n  shardFanoutBits: number\n}\n\nasync function addToTree (elem: InProgressImportResult, tree: Dir, options: AddToTreeOptions): Promise<Dir> {\n  const pathElems = toPathComponents(elem.path ?? '')\n  const lastIndex = pathElems.length - 1\n  let parent = tree\n  let currentPath = ''\n\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i]\n\n    currentPath += `${currentPath !== '' ? '/' : ''}${pathElem}`\n\n    const last = (i === lastIndex)\n    parent.dirty = true\n    parent.cid = undefined\n    parent.size = undefined\n\n    if (last) {\n      await parent.put(pathElem, elem)\n      tree = await flatToShard(null, parent, options.shardSplitThresholdBytes, options)\n    } else {\n      let dir = await parent.get(pathElem)\n\n      if ((dir == null) || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir?.unixfs?.mtime,\n          mode: dir?.unixfs?.mode\n        }, options)\n      }\n\n      await parent.put(pathElem, dir)\n\n      parent = dir\n    }\n  }\n\n  return tree\n}\n\nasync function * flushAndYield (tree: Dir | InProgressImportResult, blockstore: WritableStorage): AsyncGenerator<ImportResult> {\n  if (!(tree instanceof Dir)) {\n    if (tree.unixfs?.isDirectory() === true) {\n      yield tree\n    }\n\n    return\n  }\n\n  yield * tree.flush(blockstore)\n}\n\nexport interface TreeBuilderOptions extends AddToTreeOptions {\n  wrapWithDirectory: boolean\n}\n\nexport function defaultTreeBuilder (options: TreeBuilderOptions): TreeBuilder {\n  return async function * treeBuilder (source, block) {\n    let tree: Dir = new DirFlat({\n      root: true,\n      dir: true,\n      path: '',\n      dirty: true,\n      flat: true\n    }, options)\n\n    let rootDir: string | undefined\n    let singleRoot = false\n\n    for await (const entry of source) {\n      if (entry == null) {\n        continue\n      }\n\n      // if all paths are from the same root directory, we should\n      // wrap them all in that root directory\n      const dir = `${entry.originalPath ?? ''}`.split('/')[0]\n\n      if (dir != null && dir !== '') {\n        if (rootDir == null) {\n          rootDir = dir\n          singleRoot = true\n        } else if (rootDir !== dir) {\n          singleRoot = false\n        }\n      }\n\n      tree = await addToTree(entry, tree, options)\n\n      if (entry.unixfs == null || !entry.unixfs.isDirectory()) {\n        yield entry\n      }\n    }\n\n    if (options.wrapWithDirectory || (singleRoot && tree.childCount() > 1)) {\n      yield * flushAndYield(tree, block)\n    } else {\n      for await (const unwrapped of tree.eachChildSeries()) {\n        if (unwrapped == null) {\n          continue\n        }\n\n        yield * flushAndYield(unwrapped.child, block)\n      }\n    }\n  }\n}\n","import { type ByteStream, type DirectoryCandidate, type FileCandidate, importBytes, importByteStream, type ImportCandidateStream, importDirectory, importer, type ImporterOptions, importFile, type ImportResult } from 'ipfs-unixfs-importer'\nimport { fixedSize } from 'ipfs-unixfs-importer/chunker'\nimport { balanced } from 'ipfs-unixfs-importer/layout'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\n/**\n * Default importer settings match Filecoin\n */\nconst defaultImporterSettings: ImporterOptions = {\n  cidVersion: 1,\n  rawLeaves: true,\n  layout: balanced({\n    maxChildrenPerNode: 1024\n  }),\n  chunker: fixedSize({\n    chunkSize: 1048576\n  })\n}\n\nexport async function * addAll (source: ImportCandidateStream, blockstore: Blockstore, options: Partial<ImporterOptions> = {}): AsyncGenerator<ImportResult, void, unknown> {\n  yield * importer(source, blockstore, {\n    ...defaultImporterSettings,\n    ...options\n  })\n}\n\nexport async function addBytes (bytes: Uint8Array, blockstore: Blockstore, options: Partial<ImporterOptions> = {}): Promise<CID> {\n  const { cid } = await importBytes(bytes, blockstore, {\n    ...defaultImporterSettings,\n    ...options\n  })\n\n  return cid\n}\n\nexport async function addByteStream (bytes: ByteStream, blockstore: Blockstore, options: Partial<ImporterOptions> = {}): Promise<CID> {\n  const { cid } = await importByteStream(bytes, blockstore, {\n    ...defaultImporterSettings,\n    ...options\n  })\n\n  return cid\n}\n\nexport async function addFile (file: FileCandidate, blockstore: Blockstore, options: Partial<ImporterOptions> = {}): Promise<CID> {\n  const { cid } = await importFile(file, blockstore, {\n    ...defaultImporterSettings,\n    ...options\n  })\n\n  return cid\n}\n\nexport async function addDirectory (dir: Partial<DirectoryCandidate>, blockstore: Blockstore, options: Partial<ImporterOptions> = {}): Promise<CID> {\n  const { cid } = await importDirectory({\n    ...dir,\n    path: dir.path ?? '-'\n  }, blockstore, {\n    ...defaultImporterSettings,\n    ...options\n  })\n\n  return cid\n}\n","/**\n * @packageDocumentation\n *\n * The UnixFS Exporter provides a means to read DAGs from a blockstore given a CID.\n *\n * @example\n *\n * ```js\n * // import a file and export it again\n * import { importer } from 'ipfs-unixfs-importer'\n * import { exporter } from 'ipfs-unixfs-exporter'\n * import { MemoryBlockstore } from 'blockstore-core/memory'\n *\n * // Should contain the blocks we are trying to export\n * const blockstore = new MemoryBlockstore()\n * const files = []\n *\n * for await (const file of importer([{\n *   path: '/foo/bar.txt',\n *   content: new Uint8Array([0, 1, 2, 3])\n * }], blockstore)) {\n *   files.push(file)\n * }\n *\n * console.info(files[0].cid) // Qmbaz\n *\n * const entry = await exporter(files[0].cid, blockstore)\n *\n * console.info(entry.cid) // Qmqux\n * console.info(entry.path) // Qmbaz/foo/bar.txt\n * console.info(entry.name) // bar.txt\n * console.info(entry.unixfs.fileSize()) // 4\n *\n * // stream content from unixfs node\n * const size = entry.unixfs.fileSize()\n * const bytes = new Uint8Array(size)\n * let offset = 0\n *\n * for await (const buf of entry.content()) {\n *   bytes.set(buf, offset)\n *   offset += chunk.length\n * }\n *\n * console.info(bytes) // 0, 1, 2, 3\n * ```\n */\n\nimport errCode from 'err-code'\nimport last from 'it-last'\nimport { CID } from 'multiformats/cid'\nimport resolve from './resolvers/index.js'\nimport type { PBNode } from '@ipld/dag-pb'\nimport type { Bucket } from 'hamt-sharding'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { UnixFS } from 'ipfs-unixfs'\nimport type { ProgressOptions, ProgressEvent } from 'progress-events'\n\nexport interface ExportProgress {\n  /**\n   * How many bytes of the file have been read\n   */\n  bytesRead: bigint\n\n  /**\n   * How many bytes of the file will be read - n.b. this may be\n   * smaller than `fileSize` if `offset`/`length` have been\n   * specified\n   */\n  totalBytes: bigint\n\n  /**\n   * The size of the file being read - n.b. this may be\n   * larger than `total` if `offset`/`length` has been\n   * specified\n   */\n  fileSize: bigint\n}\n\nexport interface ExportWalk {\n  cid: CID\n}\n\n/**\n * Progress events emitted by the exporter\n */\nexport type ExporterProgressEvents =\n  ProgressEvent<'unixfs:exporter:progress:unixfs:file', ExportProgress> |\n  ProgressEvent<'unixfs:exporter:progress:unixfs:raw', ExportProgress> |\n  ProgressEvent<'unixfs:exporter:progress:raw', ExportProgress> |\n  ProgressEvent<'unixfs:exporter:progress:identity', ExportProgress> |\n  ProgressEvent<'unixfs:exporter:walk:file', ExportWalk> |\n  ProgressEvent<'unixfs:exporter:walk:directory', ExportWalk> |\n  ProgressEvent<'unixfs:exporter:walk:hamt-sharded-directory', ExportWalk> |\n  ProgressEvent<'unixfs:exporter:walk:raw', ExportWalk>\n\nexport interface ExporterOptions extends ProgressOptions<ExporterProgressEvents> {\n  /**\n   * An optional offset to start reading at.\n   *\n   * If the CID resolves to a file this will be a byte offset within that file,\n   * otherwise if it's a directory it will be a directory entry offset within\n   * the directory listing. (default: undefined)\n   */\n  offset?: number\n\n  /**\n   * An optional length to read.\n   *\n   * If the CID resolves to a file this will be the number of bytes read from\n   * the file, otherwise if it's a directory it will be the number of directory\n   * entries read from the directory listing. (default: undefined)\n   */\n  length?: number\n\n  /**\n   * This signal can be used to abort any long-lived operations such as fetching\n   * blocks from the network. (default: undefined)\n   */\n  signal?: AbortSignal\n\n  /**\n   * When a DAG layer is encountered, all child nodes are loaded in parallel but\n   * processed as they arrive. This allows us to load sibling nodes in advance\n   * of yielding their bytes. Pass a value here to control the number of blocks\n   * loaded in parallel. If a strict depth-first traversal is required, this\n   * value should be set to `1`, otherwise the traversal order will tend to\n   * resemble a breadth-first fan-out and yield a have stable ordering.\n   * (default: undefined)\n   */\n  blockReadConcurrency?: number\n}\n\nexport interface Exportable<T> {\n  /**\n   * A disambiguator to allow TypeScript to work out the type of the entry.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * if (entry.type === 'file') {\n   *   // access UnixFSFile properties safely\n   * }\n   *\n   * if (entry.type === 'directory') {\n   *   // access UnixFSDirectory properties safely\n   * }\n   * ```\n   */\n  type: 'file' | 'directory' | 'object' | 'raw' | 'identity'\n\n  /**\n   * The name of the entry\n   */\n  name: string\n\n  /**\n   * The path of the entry within the DAG in which it was encountered\n   */\n  path: string\n\n  /**\n   * The CID of the entry\n   */\n  cid: CID\n\n  /**\n   * How far down the DAG the entry is\n   */\n  depth: number\n\n  /**\n   * The size of the entry\n   */\n  size: bigint\n\n  /**\n   * @example File content\n   *\n   * When `entry` is a file or a `raw` node, `offset` and/or `length` arguments can be passed to `entry.content()` to return slices of data:\n   *\n   * ```javascript\n   * const length = 5\n   * const data = new Uint8Array(length)\n   * let offset = 0\n   *\n   * for await (const chunk of entry.content({\n   *   offset: 0,\n   *   length\n   * })) {\n   *   data.set(chunk, offset)\n   *   offset += chunk.length\n   * }\n   *\n   * // `data` contains the first 5 bytes of the file\n   * return data\n   * ```\n   *\n   * @example Directory content\n   *\n   * If `entry` is a directory, passing `offset` and/or `length` to `entry.content()` will limit the number of files returned from the directory.\n   *\n   * ```javascript\n   * const entries = []\n   *\n   * for await (const entry of dir.content({\n   *   offset: 0,\n   *   length: 5\n   * })) {\n   *   entries.push(entry)\n   * }\n   *\n   * // `entries` contains the first 5 files/directories in the directory\n   * ```\n   */\n  content(options?: ExporterOptions): AsyncGenerator<T, void, unknown>\n}\n\n/**\n * If the entry is a file, `entry.content()` returns an async iterator that yields one or more Uint8Arrays containing the file content:\n *\n * ```javascript\n * if (entry.type === 'file') {\n *   for await (const chunk of entry.content()) {\n *     // chunk is a Buffer\n *   }\n * }\n * ```\n */\nexport interface UnixFSFile extends Exportable<Uint8Array> {\n  type: 'file'\n  unixfs: UnixFS\n  node: PBNode\n}\n\n/**\n * If the entry is a directory, `entry.content()` returns further `entry` objects:\n *\n * ```javascript\n * if (entry.type === 'directory') {\n *   for await (const entry of dir.content()) {\n *     console.info(entry.name)\n *   }\n * }\n * ```\n */\nexport interface UnixFSDirectory extends Exportable<UnixFSEntry> {\n  type: 'directory'\n  unixfs: UnixFS\n  node: PBNode\n}\n\n/**\n * Entries with a `dag-cbor` or `dag-json` codec {@link CID} return JavaScript object entries\n */\nexport interface ObjectNode extends Exportable<any> {\n  type: 'object'\n  node: Uint8Array\n}\n\n/**\n * Entries with a `raw` codec {@link CID} return raw entries.\n *\n * `entry.content()` returns an async iterator that yields a buffer containing the node content:\n *\n * ```javascript\n * for await (const chunk of entry.content()) {\n *   // chunk is a Buffer\n * }\n * ```\n *\n * Unless you an options object containing `offset` and `length` keys as an argument to `entry.content()`, `chunk` will be equal to `entry.node`.\n */\nexport interface RawNode extends Exportable<Uint8Array> {\n  type: 'raw'\n  node: Uint8Array\n}\n\n/**\n * Entries with a `identity` codec {@link CID} return identity entries.\n *\n * These are entries where the data payload is stored in the CID itself,\n * otherwise they are identical to {@link RawNode}s.\n */\nexport interface IdentityNode extends Exportable<Uint8Array> {\n  type: 'identity'\n  node: Uint8Array\n}\n\n/**\n * A UnixFSEntry is a representation of the types of node that can be\n * encountered in a DAG.\n */\nexport type UnixFSEntry = UnixFSFile | UnixFSDirectory | ObjectNode | RawNode | IdentityNode\n\nexport interface NextResult {\n  cid: CID\n  name: string\n  path: string\n  toResolve: string[]\n}\n\nexport interface ResolveResult {\n  entry: UnixFSEntry\n  next?: NextResult\n}\n\nexport interface Resolve { (cid: CID, name: string, path: string, toResolve: string[], depth: number, blockstore: ReadableStorage, options: ExporterOptions): Promise<ResolveResult> }\nexport interface Resolver { (cid: CID, name: string, path: string, toResolve: string[], resolve: Resolve, depth: number, blockstore: ReadableStorage, options: ExporterOptions): Promise<ResolveResult> }\n\nexport type UnixfsV1FileContent = AsyncIterable<Uint8Array> | Iterable<Uint8Array>\nexport type UnixfsV1DirectoryContent = AsyncIterable<UnixFSEntry> | Iterable<UnixFSEntry>\nexport type UnixfsV1Content = UnixfsV1FileContent | UnixfsV1DirectoryContent\nexport interface UnixfsV1Resolver { (cid: CID, node: PBNode, unixfs: UnixFS, path: string, resolve: Resolve, depth: number, blockstore: ReadableStorage): (options: ExporterOptions) => UnixfsV1Content }\n\nexport interface ShardTraversalContext {\n  hamtDepth: number\n  rootBucket: Bucket<boolean>\n  lastBucket: Bucket<boolean>\n}\n\n/**\n * A subset of the {@link Blockstore} interface that just contains the get\n * method.\n */\nexport type ReadableStorage = Pick<Blockstore, 'get'>\n\nconst toPathComponents = (path: string = ''): string[] => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) ?? [])\n    .filter(Boolean)\n}\n\nconst cidAndRest = (path: string | Uint8Array | CID): { cid: CID, toResolve: string[] } => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    }\n  }\n\n  const cid = CID.asCID(path)\n  if (cid != null) {\n    return {\n      cid,\n      toResolve: []\n    }\n  }\n\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6)\n    }\n\n    const output = toPathComponents(path)\n\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    }\n  }\n\n  throw errCode(new Error(`Unknown path type ${path}`), 'ERR_BAD_PATH')\n}\n\n/**\n * Returns an async iterator that yields entries for all segments in a path\n *\n * @example\n *\n * ```javascript\n * import { walkPath } from 'ipfs-unixfs-exporter'\n *\n * const entries = []\n *\n * for await (const entry of walkPath('Qmfoo/foo/bar/baz.txt', blockstore)) {\n *   entries.push(entry)\n * }\n *\n * // entries contains 4x `entry` objects\n * ```\n */\nexport async function * walkPath (path: string | CID, blockstore: ReadableStorage, options: ExporterOptions = {}): AsyncGenerator<UnixFSEntry, void, any> {\n  let {\n    cid,\n    toResolve\n  } = cidAndRest(path)\n  let name = cid.toString()\n  let entryPath = name\n  const startingDepth = toResolve.length\n\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options)\n\n    if (result.entry == null && result.next == null) {\n      throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n    }\n\n    if (result.entry != null) {\n      yield result.entry\n    }\n\n    if (result.next == null) {\n      return\n    }\n\n    // resolve further parts\n    toResolve = result.next.toResolve\n    cid = result.next.cid\n    name = result.next.name\n    entryPath = result.next.path\n  }\n}\n\n/**\n * Uses the given blockstore instance to fetch an IPFS node by a CID or path.\n *\n * Returns a {@link Promise} which resolves to a {@link UnixFSEntry}.\n *\n * @example\n *\n * ```typescript\n * import { exporter } from 'ipfs-unixfs-exporter'\n * import { CID } from 'multiformats/cid'\n *\n * const cid = CID.parse('QmFoo')\n *\n * const entry = await exporter(cid, blockstore, {\n *   signal: AbortSignal.timeout(50000)\n * })\n *\n * if (entry.type === 'file') {\n *   for await (const chunk of entry.content()) {\n *     // chunk is a Uint8Array\n *   }\n * }\n * ```\n */\nexport async function exporter (path: string | CID, blockstore: ReadableStorage, options: ExporterOptions = {}): Promise<UnixFSEntry> {\n  const result = await last(walkPath(path, blockstore, options))\n\n  if (result == null) {\n    throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n  }\n\n  return result\n}\n\n/**\n * Returns an async iterator that yields all entries beneath a given CID or IPFS\n * path, as well as the containing directory.\n *\n * @example\n *\n * ```typescript\n * import { recursive } from 'ipfs-unixfs-exporter'\n *\n * const entries = []\n *\n * for await (const child of recursive('Qmfoo/foo/bar', blockstore)) {\n *   entries.push(entry)\n * }\n *\n * // entries contains all children of the `Qmfoo/foo/bar` directory and it's children\n * ```\n */\nexport async function * recursive (path: string | CID, blockstore: ReadableStorage, options: ExporterOptions = {}): AsyncGenerator<UnixFSEntry, void, any> {\n  const node = await exporter(path, blockstore, options)\n\n  if (node == null) {\n    return\n  }\n\n  yield node\n\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child\n    }\n  }\n\n  async function * recurse (node: UnixFSDirectory, options: ExporterOptions): AsyncGenerator<UnixFSEntry, void, any> {\n    for await (const file of node.content(options)) {\n      yield file\n\n      if (file instanceof Uint8Array) {\n        continue\n      }\n\n      if (file.type === 'directory') {\n        yield * recurse(file, options)\n      }\n    }\n  }\n}\n","/**\n * @packageDocumentation\n *\n * Return the last value from an (async)iterable.\n *\n * @example\n *\n * ```javascript\n * import last from 'it-last'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const res = last(values)\n *\n * console.info(res) // 4\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import last from 'it-last'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const res = await last(values())\n *\n * console.info(res) // 4\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`\n */\nfunction last <T> (source: Iterable<T>): T | undefined\nfunction last <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T | undefined>\nfunction last <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T | undefined> | T | undefined {\n  if (isAsyncIterable(source)) {\n    return (async () => {\n      let res\n\n      for await (const entry of source) {\n        res = entry\n      }\n\n      return res\n    })()\n  }\n\n  let res\n\n  for (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nexport default last\n","// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nexport function is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n","class Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\nexport { Type, Token }\n","// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nexport const useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nexport function asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nexport const toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nexport const fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nexport const fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nexport const slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nexport const concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nexport const alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nexport const toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nexport const fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nexport function decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n","/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\nimport { alloc, concat, slice } from './byte-utils.js'\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nexport class Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = alloc(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = slice(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = concat(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n","const decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n}\n","/* globals BigInt */\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix, assertEnoughData } from './common.js'\n\nexport const uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint8 (data, offset, options) {\n  assertEnoughData(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint16 (data, offset, options) {\n  assertEnoughData(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint32 (data, offset, options) {\n  assertEnoughData(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nexport function readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  assertEnoughData(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint8 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint16 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint32 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint64 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nexport function encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n","/* eslint-env es2020 */\n\nimport { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint8 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint16 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint32 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint64 (data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n","import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { compare, fromString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length)\n  const buf = slice(data, pos + prefix, pos + prefix + length)\n  return new Token(Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2)\n}\n","import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { toString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  assertEnoughData(data, pos, totLength)\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nexport const encodeString = encodeBytes\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeArray (buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeMap (buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeTagCompact (_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag8 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag16 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag32 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag64 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeTag (buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix } from './common.js'\nimport { encodeUint } from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1)\n  }\n  return new Token(Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new Token(Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new Token(Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nexport function encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport * as negint from './1negint.js'\nimport * as bytes from './2bytes.js'\nimport * as string from './3string.js'\nimport * as array from './4array.js'\nimport * as map from './5map.js'\nimport * as tag from './6tag.js'\nimport * as float from './7float.js'\nimport { decodeErrPrefix } from './common.js'\nimport { fromArray } from './byte-utils.js'\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nexport const jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = uint.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = uint.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = uint.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = uint.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = negint.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = negint.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = negint.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = negint.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = bytes.decodeBytesCompact\n}\njump[0x58] = bytes.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = bytes.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = bytes.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = bytes.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = string.decodeStringCompact\n}\njump[0x78] = string.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = string.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = string.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = string.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = array.decodeArrayCompact\n}\njump[0x98] = array.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = array.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = array.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = array.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = array.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = map.decodeMapCompact\n}\njump[0xb8] = map.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = map.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = map.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = map.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = map.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = tag.decodeTagCompact\n}\njump[0xd8] = tag.decodeTag8\njump[0xd9] = tag.decodeTag16\njump[0xda] = tag.decodeTag32\njump[0xdb] = tag.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = float.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = float.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = float.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = float.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = float.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nexport const quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new Token(Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new Token(Type.string, '', 1)\n// empty list\nquick[0x80] = new Token(Type.array, 0, 1)\n// empty map\nquick[0xa0] = new Token(Type.map, 0, 1)\n// false\nquick[0xf4] = new Token(Type.false, false, 1)\n// true\nquick[0xf5] = new Token(Type.true, true, 1)\n// null\nquick[0xf6] = new Token(Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nexport function quickEncodeToken (token) {\n  switch (token.type) {\n    case Type.false:\n      return fromArray([0xf4])\n    case Type.true:\n      return fromArray([0xf5])\n    case Type.null:\n      return fromArray([0xf6])\n    case Type.bytes:\n      if (!token.value.length) {\n        return fromArray([0x40])\n      }\n      return\n    case Type.string:\n      if (token.value === '') {\n        return fromArray([0x60])\n      }\n      return\n    case Type.array:\n      if (token.value === 0) {\n        return fromArray([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.map:\n      if (token.value === 0) {\n        return fromArray([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.uint:\n      if (token.value < 24) {\n        return fromArray([Number(token.value)])\n      }\n      return\n    case Type.negint:\n      if (token.value >= -24) {\n        return fromArray([31 - Number(token.value)])\n      }\n  }\n}\n","import { is } from './is.js'\nimport { Token, Type } from './token.js'\nimport { Bl } from './bl.js'\nimport { encodeErrPrefix } from './common.js'\nimport { quickEncodeToken } from './jump.js'\nimport { asU8A } from './byte-utils.js'\n\nimport { encodeUint } from './0uint.js'\nimport { encodeNegint } from './1negint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { encodeString } from './3string.js'\nimport { encodeArray } from './4array.js'\nimport { encodeMap } from './5map.js'\nimport { encodeTag } from './6tag.js'\nimport { encodeFloat } from './7float.js'\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nexport function makeCborEncoders () {\n  const encoders = []\n  encoders[Type.uint.major] = encodeUint\n  encoders[Type.negint.major] = encodeNegint\n  encoders[Type.bytes.major] = encodeBytes\n  encoders[Type.string.major] = encodeString\n  encoders[Type.array.major] = encodeArray\n  encoders[Type.map.major] = encodeMap\n  encoders[Type.tag.major] = encodeTag\n  encoders[Type.float.major] = encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj)\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new Token(Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new Token(Type.array, obj.length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new Token(Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new Token(Type.map, length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = is(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return asU8A(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\nexport { objectToTokens, encode, encodeCustom, Ref }\n","import { decodeErrPrefix } from './common.js'\nimport { Type } from './token.js'\nimport { jump, quick } from './jump.js'\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = quick[byt]\n    if (token === undefined) {\n      const decoder = jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\nexport { Tokeniser, tokensToObject, decode, decodeFirst }\n","import * as cborg from 'cborg'\nimport { CID } from 'multiformats/cid'\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nexport function toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nexport const encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nexport const decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nexport const name = 'dag-cbor'\nexport const code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborg.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => cborg.decode(toByteView(data), _decodeOptions)\n","import { Type } from '../token.js'\nimport { encodeCustom } from '../encode.js'\nimport { encodeErrPrefix } from '../common.js'\nimport { asU8A, fromString } from '../byte-utils.js'\n\n/**\n * @typedef {import('../../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../token').Token} Token\n * @typedef {import('../bl').Bl} Bl\n */\n\nclass JSONEncoder extends Array {\n  constructor () {\n    super()\n    /** @type {{type:Type,elements:number}[]} */\n    this.inRecursive = []\n  }\n\n  /**\n   * @param {Bl} buf\n   */\n  prefix (buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1]\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          buf.push([44]) // ','\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          if (recurs.elements % 2 === 1) { // key\n            buf.push([44]) // ','\n          } else {\n            buf.push([58]) // ':'\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.uint.major] (buf, token) {\n    this.prefix(buf)\n    const is = String(token.value)\n    const isa = []\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n    }\n    buf.push(isa)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.negint.major] (buf, token) {\n    // @ts-ignore hack\n    this[Type.uint.major](buf, token)\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [Type.bytes.major] (_buf, _token) {\n    throw new Error(`${encodeErrPrefix} unsupported type: Uint8Array`)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.string.major] (buf, token) {\n    this.prefix(buf)\n    // buf.push(34) // '\"'\n    // encodeUtf8(token.value, byts)\n    // buf.push(34) // '\"'\n    const byts = fromString(JSON.stringify(token.value))\n    buf.push(byts.length > 32 ? asU8A(byts) : byts)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [Type.array.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: Type.array, elements: 0 })\n    buf.push([91]) // '['\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [Type.map.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: Type.map, elements: 0 })\n    buf.push([123]) // '{'\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [Type.tag.major] (_buf, _token) {}\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [Type.float.major] (buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop()\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]) // ']'\n        } else if (recurs.type === Type.map) {\n          buf.push([125]) // '}'\n        /* c8 ignore next 3 */\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!')\n        }\n        return\n      }\n      /* c8 ignore next 2 */\n      throw new Error('Unexpected break; this should not happen!')\n    }\n    if (token.value === undefined) {\n      throw new Error(`${encodeErrPrefix} unsupported type: undefined`)\n    }\n\n    this.prefix(buf)\n    if (token.type.name === 'true') {\n      buf.push([116, 114, 117, 101]) // 'true'\n      return\n    } else if (token.type.name === 'false') {\n      buf.push([102, 97, 108, 115, 101]) // 'false'\n      return\n    } else if (token.type.name === 'null') {\n      buf.push([110, 117, 108, 108]) // 'null'\n      return\n    }\n\n    // number\n    const is = String(token.value)\n    const isa = []\n    let dp = false\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) { // '[.eE]'\n        dp = true\n      }\n    }\n    if (!dp) { // need a decimal point for floats\n      isa.push(46) // '.'\n      isa.push(48) // '0'\n    }\n    buf.push(isa)\n  }\n}\n\n// The below code is mostly taken and modified from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n// function encodeUtf8 (string, byts) {\n//   let codePoint\n//   const length = string.length\n//   let leadSurrogate = null\n\n//   for (let i = 0; i < length; ++i) {\n//     codePoint = string.charCodeAt(i)\n\n//     // is surrogate component\n//     if (codePoint > 0xd7ff && codePoint < 0xe000) {\n//       // last char was a lead\n//       if (!leadSurrogate) {\n//         // no lead yet\n//         /* c8 ignore next 9 */\n//         if (codePoint > 0xdbff) {\n//           // unexpected trail\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         } else if (i + 1 === length) {\n//           // unpaired lead\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         }\n\n//         // valid lead\n//         leadSurrogate = codePoint\n\n//         continue\n//       }\n\n//       // 2 leads in a row\n//       /* c8 ignore next 5 */\n//       if (codePoint < 0xdc00) {\n//         byts.push(0xef, 0xbf, 0xbd)\n//         leadSurrogate = codePoint\n//         continue\n//       }\n\n//       // valid surrogate pair\n//       codePoint = (leadSurrogate - 0xd800 << 10 | codePoint - 0xdc00) + 0x10000\n//     /* c8 ignore next 4 */\n//     } else if (leadSurrogate) {\n//       // valid bmp char, but last char was a lead\n//       byts.push(0xef, 0xbf, 0xbd)\n//     }\n\n//     leadSurrogate = null\n\n//     // encode utf8\n//     if (codePoint < 0x80) {\n//       // special JSON escapes\n//       switch (codePoint) {\n//         case 8: // '\\b'\n//           byts.push(92, 98) // '\\\\b'\n//           continue\n//         case 9: // '\\t'\n//           byts.push(92, 116) // '\\\\t'\n//           continue\n//         case 10: // '\\n'\n//           byts.push(92, 110) // '\\\\n'\n//           continue\n//         case 12: // '\\f'\n//           byts.push(92, 102) // '\\\\f'\n//           continue\n//         case 13: // '\\r'\n//           byts.push(92, 114) // '\\\\r'\n//           continue\n//         case 34: // '\"'\n//           byts.push(92, 34) // '\\\\\"'\n//           continue\n//         case 92: // '\\\\'\n//           byts.push(92, 92) // '\\\\\\\\'\n//           continue\n//       }\n\n//       byts.push(codePoint)\n//     } else if (codePoint < 0x800) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0x6 | 0xc0,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else if (codePoint < 0x10000) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0xc | 0xe0,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     /* c8 ignore next 9 */\n//     } else if (codePoint < 0x110000) {\n//       byts.push(\n//         codePoint >> 0x12 | 0xf0,\n//         codePoint >> 0xc & 0x3f | 0x80,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else {\n//       /* c8 ignore next 2 */\n//       throw new Error('Invalid code point')\n//     }\n//   }\n// }\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${encodeErrPrefix} complex map keys are not supported`)\n  }\n  const keyToken1 = e1[0]\n  const keyToken2 = e2[0]\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${encodeErrPrefix} non-string map keys are not supported`)\n  }\n  if (keyToken1 < keyToken2) {\n    return -1\n  }\n  if (keyToken1 > keyToken2) {\n    return 1\n  }\n  /* c8 ignore next 1 */\n  throw new Error(`${encodeErrPrefix} unexpected duplicate map keys, this is not supported`)\n}\n\nconst defaultEncodeOptions = { addBreakTokens: true, mapSorter }\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, new JSONEncoder(), options)\n}\n\nexport { encode }\n","import { decode as _decode, decodeFirst as _decodeFirst } from '../decode.js'\nimport { Token, Type } from '../token.js'\nimport { decodeCodePointsArray } from '../byte-utils.js'\nimport { decodeErrPrefix } from '../common.js'\n\n/**\n * @typedef {import('../../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../../interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n    /** @type {string[]} */\n    this.modeStack = ['value']\n    this.lastToken = ''\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  /**\n   * @returns {number}\n   */\n  ch () {\n    return this.data[this._pos]\n  }\n\n  /**\n   * @returns {string}\n   */\n  currentMode () {\n    return this.modeStack[this.modeStack.length - 1]\n  }\n\n  skipWhitespace () {\n    let c = this.ch()\n    // @ts-ignore\n    while (c === 32 /* ' ' */ || c === 9 /* '\\t' */ || c === 13 /* '\\r' */ || c === 10 /* '\\n' */) {\n      c = this.data[++this._pos]\n    }\n  }\n\n  /**\n   * @param {number[]} str\n   */\n  expect (str) {\n    if (this.data.length - this._pos < str.length) {\n      throw new Error(`${decodeErrPrefix} unexpected end of input at position ${this._pos}`)\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this._pos++] !== str[i]) {\n        throw new Error(`${decodeErrPrefix} unexpected token at position ${this._pos}, expected to find '${String.fromCharCode(...str)}'`)\n      }\n    }\n  }\n\n  parseNumber () {\n    const startPos = this._pos\n    let negative = false\n    let float = false\n\n    /**\n     * @param {number[]} chars\n     */\n    const swallow = (chars) => {\n      while (!this.done()) {\n        const ch = this.ch()\n        if (chars.includes(ch)) {\n          this._pos++\n        } else {\n          break\n        }\n      }\n    }\n\n    // lead\n    if (this.ch() === 45) { // '-'\n      negative = true\n      this._pos++\n    }\n    if (this.ch() === 48) { // '0'\n      this._pos++\n      if (this.ch() === 46) { // '.'\n        this._pos++\n        float = true\n      } else {\n        return new Token(Type.uint, 0, this._pos - startPos)\n      }\n    }\n    swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    if (negative && this._pos === startPos + 1) {\n      throw new Error(`${decodeErrPrefix} unexpected token at position ${this._pos}`)\n    }\n    if (!this.done() && this.ch() === 46) { // '.'\n      if (float) {\n        throw new Error(`${decodeErrPrefix} unexpected token at position ${this._pos}`)\n      }\n      float = true\n      this._pos++\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) { // '[eE]'\n      float = true\n      this._pos++\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) { // '+', '-'\n        this._pos++\n      }\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    // @ts-ignore\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this._pos))\n    const num = parseFloat(numStr)\n    if (float) {\n      return new Token(Type.float, num, this._pos - startPos)\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this._pos - startPos)\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this._pos - startPos)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseString () {\n    /* c8 ignore next 4 */\n    if (this.ch() !== 34) { // '\"'\n      // this would be a programming error\n      throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}; this shouldn't happen`)\n    }\n    this._pos++\n\n    // check for simple fast-path, all printable ascii, no escapes\n    // >0x10000 elements may fail fn.apply() (http://stackoverflow.com/a/22747272/680742)\n    for (let i = this._pos, l = 0; i < this.data.length && l < 0x10000; i++, l++) {\n      const ch = this.data[i]\n      if (ch === 92 || ch < 32 || ch >= 128) { // '\\', ' ', control-chars or non-trivial\n        break\n      }\n      if (ch === 34) { // '\"'\n        // @ts-ignore\n        const str = String.fromCharCode.apply(null, this.data.subarray(this._pos, i))\n        this._pos = i + 1\n        return new Token(Type.string, str, l)\n      }\n    }\n\n    const startPos = this._pos\n    const chars = []\n\n    const readu4 = () => {\n      if (this._pos + 4 >= this.data.length) {\n        throw new Error(`${decodeErrPrefix} unexpected end of unicode escape sequence at position ${this._pos}`)\n      }\n      let u4 = 0\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch()\n        if (ch >= 48 && ch <= 57) { // '0' && '9'\n          ch -= 48\n        } else if (ch >= 97 && ch <= 102) { // 'a' && 'f'\n          ch = ch - 97 + 10\n        } else if (ch >= 65 && ch <= 70) { // 'A' && 'F'\n          ch = ch - 65 + 10\n        } else {\n          throw new Error(`${decodeErrPrefix} unexpected unicode escape character at position ${this._pos}`)\n        }\n        u4 = u4 * 16 + ch\n        this._pos++\n      }\n      return u4\n    }\n\n    // mostly taken from feross/buffer and adjusted to fit\n    const readUtf8Char = () => {\n      const firstByte = this.ch()\n      let codePoint = null\n      /* c8 ignore next 1 */\n      let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n      if (this._pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${decodeErrPrefix} unexpected unicode sequence at position ${this._pos}`)\n      }\n\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        /* c8 ignore next 6 */\n        // this case is dealt with by the caller function\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = this.data[this._pos + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          fourthByte = this.data[this._pos + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n\n      /* c8 ignore next 5 */\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xfffd\n        bytesPerSequence = 1\n      } else if (codePoint > 0xffff) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000\n        chars.push(codePoint >>> 10 & 0x3ff | 0xd800)\n        codePoint = 0xdc00 | codePoint & 0x3ff\n      }\n\n      chars.push(codePoint)\n      this._pos += bytesPerSequence\n    }\n\n    // TODO: could take the approach of a quick first scan for special chars like encoding/json/decode.go#unquoteBytes\n    // and converting all of the ascii chars from the base array in bulk\n    while (!this.done()) {\n      const ch = this.ch()\n      let ch1\n      switch (ch) {\n        case 92: // '\\'\n          this._pos++\n          if (this.done()) {\n            throw new Error(`${decodeErrPrefix} unexpected string termination at position ${this._pos}`)\n          }\n          ch1 = this.ch()\n          this._pos++\n          switch (ch1) {\n            case 34: // '\"'\n            case 39: // '\\''\n            case 92: // '\\'\n            case 47: // '/'\n              chars.push(ch1)\n              break\n            case 98: // 'b'\n              chars.push(8)\n              break\n            case 116: // 't'\n              chars.push(9)\n              break\n            case 110: // 'n'\n              chars.push(10)\n              break\n            case 102: // 'f'\n              chars.push(12)\n              break\n            case 114: // 'r'\n              chars.push(13)\n              break\n            case 117: // 'u'\n              chars.push(readu4())\n              break\n            default:\n              throw new Error(`${decodeErrPrefix} unexpected string escape character at position ${this._pos}`)\n          }\n          break\n        case 34: // '\"'\n          this._pos++\n          return new Token(Type.string, decodeCodePointsArray(chars), this._pos - startPos)\n        default:\n          if (ch < 32) { // ' '\n            throw new Error(`${decodeErrPrefix} invalid control character at position ${this._pos}`)\n          } else if (ch < 0x80) {\n            chars.push(ch)\n            this._pos++\n          } else {\n            readUtf8Char()\n          }\n      }\n    }\n\n    throw new Error(`${decodeErrPrefix} unexpected end of string at position ${this._pos}`)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseValue () {\n    switch (this.ch()) {\n      case 123: // '{'\n        this.modeStack.push('obj-start')\n        this._pos++\n        return new Token(Type.map, Infinity, 1)\n      case 91: // '['\n        this.modeStack.push('array-start')\n        this._pos++\n        return new Token(Type.array, Infinity, 1)\n      case 34: { // '\"'\n        return this.parseString()\n      }\n      case 110: // 'n' / null\n        this.expect([110, 117, 108, 108]) // 'null'\n        return new Token(Type.null, null, 4)\n      case 102: // 'f' / // false\n        this.expect([102, 97, 108, 115, 101]) // 'false'\n        return new Token(Type.false, false, 5)\n      case 116: // 't' / // true\n        this.expect([116, 114, 117, 101]) // 'true'\n        return new Token(Type.true, true, 4)\n      case 45: // '-'\n      case 48: // '0'\n      case 49: // '1'\n      case 50: // '2'\n      case 51: // '3'\n      case 52: // '4'\n      case 53: // '5'\n      case 54: // '6'\n      case 55: // '7'\n      case 56: // '8'\n      case 57: // '9'\n        return this.parseNumber()\n      default:\n        throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}`)\n    }\n  }\n\n  /**\n   * @returns {Token}\n   */\n  next () {\n    this.skipWhitespace()\n    switch (this.currentMode()) {\n      case 'value':\n        this.modeStack.pop()\n        return this.parseValue()\n      case 'array-value': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      case 'array-start': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      // @ts-ignore\n      case 'obj-key':\n        if (this.ch() === 125) { // '}'\n          this.modeStack.pop()\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.skipWhitespace()\n      case 'obj-start': { // eslint-disable-line no-fallthrough\n        this.modeStack.pop()\n        if (this.ch() === 125) { // '}'\n          this._pos++\n          this.skipWhitespace()\n          return new Token(Type.break, undefined, 1)\n        }\n        const token = this.parseString()\n        this.skipWhitespace()\n        if (this.ch() !== 58) { // ':'\n          throw new Error(`${decodeErrPrefix} unexpected character at position ${this._pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('obj-value')\n        return token\n      }\n      case 'obj-value': {\n        this.modeStack.pop()\n        this.modeStack.push('obj-key')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      /* c8 ignore next 2 */\n      default:\n        throw new Error(`${decodeErrPrefix} unexpected parse state at position ${this._pos}; this shouldn't happen`)\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return _decode(data, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return _decodeFirst(data, options)\n}\n\nexport { decode, decodeFirst, Tokenizer }\n","/* eslint max-depth: [\"error\", 7] */\nimport { Token, Type } from 'cborg'\nimport * as cborgJson from 'cborg/json'\nimport { CID } from 'multiformats'\nimport { base64 } from 'multiformats/bases/base64'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n/**\n * @template T\n * @typedef {import('multiformats').ToString<T>} ToString\n */\n/**\n * @typedef {import('cborg/interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nfunction toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal. Encoding a CID means replacing it with a `{\"/\":\"<CidString>}`\n * object as per the DAG-JSON spec.\n *\n * @param {any} obj\n * @returns {Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const cidString = cid.toString()\n\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.string, cidString, cidString.length), // value\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n/**\n * bytesEncoder will receive all Uint8Arrays (and friends) during encode, it\n * needs to replace it with a `{\"/\":{\"bytes\":\"Base64ByteString\"}}` object as\n * per the DAG-JSON spec.\n *\n * @param {Uint8Array} bytes\n * @returns {Token[]|null}\n */\nfunction bytesEncoder (bytes) {\n  const bytesString = base64.encode(bytes).slice(1) // no mbase prefix\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.map, Infinity, 1), // value\n    new Token(Type.string, 'bytes', 5), // inner key\n    new Token(Type.string, bytesString, bytesString.length), // inner value\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n/**\n * taBytesEncoder wraps bytesEncoder() but for the more exotic typed arrays so\n * that we access the underlying ArrayBuffer data\n *\n * @param {Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array|Float32Array|Float64Array|Uint8ClampedArray|BigInt64Array|BigUint64Array} obj\n * @returns {Token[]|null}\n */\nfunction taBytesEncoder (obj) {\n  return bytesEncoder(new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n}\n\n/**\n * abBytesEncoder wraps bytesEncoder() but for plain ArrayBuffers\n *\n * @param {ArrayBuffer} ab\n * @returns {Token[]|null}\n */\nfunction abBytesEncoder (ab) {\n  return bytesEncoder(new Uint8Array(ab))\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null // process with standard number encoder\n}\n\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Buffer: bytesEncoder,\n    Uint8Array: bytesEncoder,\n    Int8Array: taBytesEncoder,\n    Uint16Array: taBytesEncoder,\n    Int16Array: taBytesEncoder,\n    Uint32Array: taBytesEncoder,\n    Int32Array: taBytesEncoder,\n    Float32Array: taBytesEncoder,\n    Float64Array: taBytesEncoder,\n    Uint8ClampedArray: taBytesEncoder,\n    BigInt64Array: taBytesEncoder,\n    BigUint64Array: taBytesEncoder,\n    DataView: taBytesEncoder,\n    ArrayBuffer: abBytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {object} [options]\n   */\n  constructor (data, options) {\n    super(data, options)\n    /** @type {Token[]} */\n    this.tokenBuffer = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this.tokenBuffer.length === 0 && super.done()\n  }\n\n  /**\n   * @returns {Token}\n   */\n  _next () {\n    if (this.tokenBuffer.length > 0) {\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/30406\n      return this.tokenBuffer.pop()\n    }\n    return super.next()\n  }\n\n  /**\n   * Implements rules outlined in https://github.com/ipld/specs/pull/356\n   *\n   * @returns {Token}\n   */\n  next () {\n    const token = this._next()\n\n    if (token.type === Type.map) {\n      const keyToken = this._next()\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next()\n        if (valueToken.type === Type.string) { // *must* be a CID\n          const breakToken = this._next() // swallow the end-of-map token\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form')\n          }\n          this.tokenBuffer.push(valueToken) // CID.parse will pick this up after our tag token\n          return new Token(Type.tag, 42, 0)\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next()\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next()\n            if (innerValueToken.type === Type.string) { // *must* be Bytes\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next() // swallow two end-of-map tokens\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form')\n                }\n              }\n              const bytes = base64.decode(`m${innerValueToken.value}`)\n              return new Token(Type.bytes, bytes, innerValueToken.value.length)\n            }\n            this.tokenBuffer.push(innerValueToken) // bail\n          }\n          this.tokenBuffer.push(innerKeyToken) // bail\n        }\n        this.tokenBuffer.push(valueToken) // bail\n      }\n      this.tokenBuffer.push(keyToken) // bail\n    }\n    return token\n  }\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n\n// we're going to get TAG(42)STRING(\"bafy...\") from the tokenizer so we only need\n// to deal with the STRING(\"bafy...\") at this point\ndecodeOptions.tags[42] = CID.parse\n\nexport const name = 'dag-json'\nexport const code = 0x0129\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborgJson.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => {\n  const buf = toByteView(data)\n  // the tokenizer is stateful so we need a single instance of it\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(buf, decodeOptions) })\n  return cborgJson.decode(buf, options)\n}\n\n/**\n * @template T\n * @param {T} node\n * @returns {ToString<T>}\n */\nexport const format = (node) => utf8Decoder.decode(encode(node))\nexport { format as stringify }\nconst utf8Decoder = new TextDecoder()\n\n/**\n * @template T\n * @param {ToString<T>} data\n * @returns {T}\n */\nexport const parse = (data) => decode(utf8Encoder.encode(data))\nconst utf8Encoder = new TextEncoder()\n","import * as dagCbor from '@ipld/dag-cbor'\nimport * as dagJson from '@ipld/dag-json'\nimport * as dagPb from '@ipld/dag-pb'\nimport errCode from 'err-code'\nimport * as json from 'multiformats/codecs/json'\nimport * as raw from 'multiformats/codecs/raw'\nimport { identity } from 'multiformats/hashes/identity'\nimport dagCborResolver from './dag-cbor.js'\nimport dagJsonResolver from './dag-json.js'\nimport identifyResolver from './identity.js'\nimport jsonResolver from './json.js'\nimport rawResolver from './raw.js'\nimport dagPbResolver from './unixfs-v1/index.js'\nimport type { Resolve, Resolver } from '../index.js'\n\nconst resolvers: Record<number, Resolver> = {\n  [dagPb.code]: dagPbResolver,\n  [raw.code]: rawResolver,\n  [dagCbor.code]: dagCborResolver,\n  [dagJson.code]: dagJsonResolver,\n  [identity.code]: identifyResolver,\n  [json.code]: jsonResolver\n}\n\nconst resolve: Resolve = async (cid, name, path, toResolve, depth, blockstore, options) => {\n  const resolver = resolvers[cid.code]\n\n  if (resolver == null) {\n    throw errCode(new Error(`No resolver for code ${cid.code}`), 'ERR_NO_RESOLVER')\n  }\n\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options)\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\nimport type { ResolveResult } from '../index.js'\n\nexport function resolveObjectPath (object: any, block: Uint8Array, cid: CID, name: string, path: string, toResolve: string[], depth: number): ResolveResult {\n  let subObject = object\n  let subPath = path\n\n  while (toResolve.length > 0) {\n    const prop = toResolve[0]\n\n    if (prop in subObject) {\n      // remove the bit of the path we have resolved\n      toResolve.shift()\n      subPath = `${subPath}/${prop}`\n\n      const subObjectCid = CID.asCID(subObject[prop])\n      if (subObjectCid != null) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: BigInt(block.length),\n            content: async function * () {\n              yield object\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        }\n      }\n\n      subObject = subObject[prop]\n    } else {\n      // cannot resolve further\n      throw errCode(new Error(`No property named ${prop} found in node ${cid}`), 'ERR_NO_PROP')\n    }\n  }\n\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: BigInt(block.length),\n      content: async function * () {\n        yield object\n      }\n    }\n  }\n}\n","import * as dagCbor from '@ipld/dag-cbor'\nimport { resolveObjectPath } from '../utils/resolve-object-path.js'\nimport type { Resolver } from '../index.js'\n\nconst resolve: Resolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options)\n  const object = dagCbor.decode<any>(block)\n\n  return resolveObjectPath(object, block, cid, name, path, toResolve, depth)\n}\n\nexport default resolve\n","import * as dagJson from '@ipld/dag-json'\nimport { resolveObjectPath } from '../utils/resolve-object-path.js'\nimport type { Resolver } from '../index.js'\n\nconst resolve: Resolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options)\n  const object = dagJson.decode<any>(block)\n\n  return resolveObjectPath(object, block, cid, name, path, toResolve, depth)\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport * as mh from 'multiformats/hashes/digest'\nimport { CustomProgressEvent } from 'progress-events'\nimport extractDataFromBlock from '../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js'\nimport type { ExporterOptions, Resolver, ExportProgress } from '../index.js'\n\nconst rawContent = (node: Uint8Array): ((options?: ExporterOptions) => AsyncGenerator<Uint8Array, void, undefined>) => {\n  async function * contentGenerator (options: ExporterOptions = {}): AsyncGenerator<Uint8Array, void, undefined> {\n    const {\n      start,\n      end\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    const buf = extractDataFromBlock(node, 0n, start, end)\n\n    options.onProgress?.(new CustomProgressEvent<ExportProgress>('unixfs:exporter:progress:identity', {\n      bytesRead: BigInt(buf.byteLength),\n      totalBytes: end - start,\n      fileSize: BigInt(node.byteLength)\n    }))\n\n    yield buf\n  }\n\n  return contentGenerator\n}\n\nconst resolve: Resolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length > 0) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n  const buf = mh.decode(cid.multihash.bytes)\n\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: BigInt(buf.digest.length),\n      node: buf.digest\n    }\n  }\n}\n\nexport default resolve\n","function extractDataFromBlock (block: Uint8Array, blockStart: bigint, requestedStart: bigint, requestedEnd: bigint): Uint8Array {\n  const blockLength = BigInt(block.length)\n  const blockEnd = BigInt(blockStart + blockLength)\n\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    // If we are looking for a byte range that is starts after the start of the block,\n    // return an empty block.  This can happen when internal nodes contain data\n    return new Uint8Array(0)\n  }\n\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    // If the end byte is in the current block, truncate the block to the end byte\n    block = block.subarray(0, Number(requestedEnd - blockStart))\n  }\n\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    // If the start byte is in the current block, skip to the start byte\n    block = block.subarray(Number(requestedStart - blockStart))\n  }\n\n  return block\n}\n\nexport default extractDataFromBlock\n","import errCode from 'err-code'\n\nconst validateOffsetAndLength = (size: number | bigint, offset: number | bigint = 0, length: number | bigint = size): { start: bigint, end: bigint } => {\n  const fileSize = BigInt(size)\n  const start = BigInt(offset ?? 0)\n  let end = BigInt(length)\n\n  if (end !== fileSize) {\n    end = start + end\n  }\n\n  if (end > fileSize) {\n    end = fileSize\n  }\n\n  if (start < 0n) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (start > fileSize) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (end < 0n) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (end > fileSize) {\n    throw errCode(new Error('Length must be less than the file size'), 'ERR_INVALID_PARAMS')\n  }\n\n  return {\n    start,\n    end\n  }\n}\n\nexport default validateOffsetAndLength\n","import * as json from 'multiformats/codecs/json'\nimport { resolveObjectPath } from '../utils/resolve-object-path.js'\nimport type { Resolver } from '../index.js'\n\nconst resolve: Resolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options)\n  const object = json.decode<any>(block)\n\n  return resolveObjectPath(object, block, cid, name, path, toResolve, depth)\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport { CustomProgressEvent } from 'progress-events'\nimport extractDataFromBlock from '../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js'\nimport type { ExporterOptions, Resolver, ExportProgress } from '../index.js'\n\nconst rawContent = (node: Uint8Array): ((options?: ExporterOptions) => AsyncGenerator<Uint8Array, void, undefined>) => {\n  async function * contentGenerator (options: ExporterOptions = {}): AsyncGenerator<Uint8Array, void, undefined> {\n    const {\n      start,\n      end\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    const buf = extractDataFromBlock(node, 0n, start, end)\n\n    options.onProgress?.(new CustomProgressEvent<ExportProgress>('unixfs:exporter:progress:raw', {\n      bytesRead: BigInt(buf.byteLength),\n      totalBytes: end - start,\n      fileSize: BigInt(node.byteLength)\n    }))\n\n    yield buf\n  }\n\n  return contentGenerator\n}\n\nconst resolve: Resolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length > 0) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n\n  const block = await blockstore.get(cid, options)\n\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: BigInt(block.length),\n      node: block\n    }\n  }\n}\n\nexport default resolve\n","import { decode, type PBNode } from '@ipld/dag-pb'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport findShardCid from '../../utils/find-cid-in-shard.js'\nimport contentDirectory from './content/directory.js'\nimport contentFile from './content/file.js'\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js'\nimport type { Resolver, UnixfsV1Resolver } from '../../index.js'\nimport type { CID } from 'multiformats/cid'\n\nconst findLinkCid = (node: PBNode, name: string): CID | undefined => {\n  const link = node.Links.find(link => link.Name === name)\n\n  return link?.Hash\n}\n\nconst contentExporters: Record<string, UnixfsV1Resolver> = {\n  raw: contentFile,\n  file: contentFile,\n  directory: contentDirectory,\n  'hamt-sharded-directory': contentHamtShardedDirectory,\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  }\n}\n\n// @ts-expect-error types are wrong\nconst unixFsResolver: Resolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options)\n  const node = decode(block)\n  let unixfs\n  let next\n\n  if (name == null) {\n    name = cid.toString()\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  try {\n    unixfs = UnixFS.unmarshal(node.Data)\n  } catch (err: any) {\n    // non-UnixFS dag-pb node? It could happen.\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  if (path == null) {\n    path = name\n  }\n\n  if (toResolve.length > 0) {\n    let linkCid\n\n    if (unixfs?.type === 'hamt-sharded-directory') {\n      // special case - unixfs v1 hamt shards\n      linkCid = await findShardCid(node, toResolve[0], blockstore)\n    } else {\n      linkCid = findLinkCid(node, toResolve[0])\n    }\n\n    if (linkCid == null) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND')\n    }\n\n    // remove the path component we have resolved\n    const nextName = toResolve.shift()\n    const nextPath = `${path}/${nextName}`\n\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName ?? '',\n      path: nextPath\n    }\n  }\n\n  const content = contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore)\n\n  if (content == null) {\n    throw errCode(new Error('could not find content exporter'), 'ERR_NOT_FOUND')\n  }\n\n  if (unixfs.isDirectory()) {\n    return {\n      entry: {\n        type: 'directory',\n        name,\n        path,\n        cid,\n        content,\n        unixfs,\n        depth,\n        node,\n        size: unixfs.fileSize()\n      },\n      next\n    }\n  }\n\n  return {\n    entry: {\n      type: 'file',\n      name,\n      path,\n      cid,\n      content,\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  }\n}\n\nexport default unixFsResolver\n","import { decode, type PBLink, type PBNode } from '@ipld/dag-pb'\nimport { murmur3128 } from '@multiformats/murmur3'\nimport errCode from 'err-code'\nimport { Bucket, type BucketPosition, createHAMT } from 'hamt-sharding'\nimport { UnixFS } from 'ipfs-unixfs'\nimport type { ExporterOptions, ShardTraversalContext, ReadableStorage } from '../index.js'\nimport type { CID } from 'multiformats/cid'\n\n// FIXME: this is copy/pasted from ipfs-unixfs-importer/src/options.js\nconst hashFn = async function (buf: Uint8Array): Promise<Uint8Array> {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\nconst addLinksToHamtBucket = async (links: PBLink[], bucket: Bucket<boolean>, rootBucket: Bucket<boolean>): Promise<void> => {\n  const padLength = (bucket.tableSize() - 1).toString(16).length\n  await Promise.all(\n    links.map(async link => {\n      if (link.Name == null) {\n        // TODO(@rvagg): what do? this is technically possible\n        throw new Error('Unexpected Link without a Name')\n      }\n      if (link.Name.length === padLength) {\n        const pos = parseInt(link.Name, 16)\n\n        bucket._putObjectAt(pos, new Bucket({\n          hash: rootBucket._options.hash,\n          bits: rootBucket._options.bits\n        }, bucket, pos))\n        return\n      }\n\n      await rootBucket.put(link.Name.substring(2), true)\n    })\n  )\n}\n\nconst toPrefix = (position: number, padLength: number): string => {\n  return position\n    .toString(16)\n    .toUpperCase()\n    .padStart(padLength, '0')\n    .substring(0, padLength)\n}\n\nconst toBucketPath = (position: BucketPosition<boolean>): Array<Bucket<boolean>> => {\n  let bucket = position.bucket\n  const path = []\n\n  while (bucket._parent != null) {\n    path.push(bucket)\n\n    bucket = bucket._parent\n  }\n\n  path.push(bucket)\n\n  return path.reverse()\n}\n\nconst findShardCid = async (node: PBNode, name: string, blockstore: ReadableStorage, context?: ShardTraversalContext, options?: ExporterOptions): Promise<CID | undefined> => {\n  if (context == null) {\n    if (node.Data == null) {\n      throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n    }\n\n    let dir: UnixFS\n    try {\n      dir = UnixFS.unmarshal(node.Data)\n    } catch (err: any) {\n      throw errCode(err, 'ERR_NOT_UNIXFS')\n    }\n\n    if (dir.type !== 'hamt-sharded-directory') {\n      throw errCode(new Error('not a HAMT'), 'ERR_NOT_UNIXFS')\n    }\n    if (dir.fanout == null) {\n      throw errCode(new Error('missing fanout'), 'ERR_NOT_UNIXFS')\n    }\n\n    const rootBucket = createHAMT<boolean>({\n      hashFn,\n      bits: Math.log2(Number(dir.fanout))\n    })\n\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    }\n  }\n\n  const padLength = (context.lastBucket.tableSize() - 1).toString(16).length\n\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket)\n\n  const position = await context.rootBucket._findNewBucketAndPos(name)\n  let prefix = toPrefix(position.pos, padLength)\n  const bucketPath = toBucketPath(position)\n\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth]\n\n    prefix = toPrefix(context.lastBucket._posAtParent, padLength)\n  }\n\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false\n    }\n\n    const entryPrefix = link.Name.substring(0, padLength)\n    const entryName = link.Name.substring(padLength)\n\n    if (entryPrefix !== prefix) {\n      // not the entry or subshard we're looking for\n      return false\n    }\n\n    if (entryName !== '' && entryName !== name) {\n      // not the entry we're looking for\n      return false\n    }\n\n    return true\n  })\n\n  if (link == null) {\n    return\n  }\n\n  if (link.Name != null && link.Name.substring(padLength) === name) {\n    return link.Hash\n  }\n\n  context.hamtDepth++\n\n  const block = await blockstore.get(link.Hash, options)\n  node = decode(block)\n\n  return findShardCid(node, name, blockstore, context, options)\n}\n\nexport default findShardCid\n","/**\n * @packageDocumentation\n *\n * Filter values out of an (async)iterable\n *\n * @example\n *\n * ```javascript\n * import all from 'it-all'\n * import filter from 'it-filter'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const fn = val => val > 2 // Return boolean to keep item\n *\n * const arr = all(filter(values, fn))\n *\n * console.info(arr) // 3, 4\n * ```\n *\n * Async sources and filter functions must be awaited:\n *\n * ```javascript\n * import all from 'it-all'\n * import filter from 'it-filter'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const fn = async val => val > 2 // Return boolean or promise of boolean to keep item\n *\n * const arr = await all(filter(values, fn))\n *\n * console.info(arr) // 3, 4\n * ```\n */\n\nimport peek from 'it-peekable'\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Filters the passed (async) iterable by using the filter function\n */\nfunction filter <T> (source: Iterable<T>, fn: (val: T) => Promise<boolean>): AsyncGenerator<T, void, undefined>\nfunction filter <T> (source: Iterable<T>, fn: (val: T) => boolean): Generator<T, void, undefined>\nfunction filter <T> (source: Iterable<T> | AsyncIterable<T>, fn: (val: T) => boolean | Promise<boolean>): AsyncGenerator<T, void, undefined>\nfunction filter <T> (source: Iterable<T> | AsyncIterable<T>, fn: (val: T) => boolean | Promise<boolean>): Generator<T, void, undefined> | AsyncGenerator<T, void, undefined> {\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const entry of source) {\n        if (await fn(entry)) {\n          yield entry\n        }\n      }\n    })()\n  }\n\n  // if mapping function returns a promise we have to return an async generator\n  const peekable = peek(source)\n  const { value, done } = peekable.next()\n\n  if (done === true) {\n    return (function * () {}())\n  }\n\n  const res = fn(value)\n\n  // @ts-expect-error .then is not present on O\n  if (typeof res.then === 'function') {\n    return (async function * () {\n      if (await res) {\n        yield value\n      }\n\n      for await (const entry of peekable) {\n        if (await fn(entry)) {\n          yield entry\n        }\n      }\n    })()\n  }\n\n  const func = fn as (val: T) => boolean\n\n  return (function * () {\n    if (res === true) {\n      yield value\n    }\n\n    for (const entry of peekable) {\n      if (func(entry)) {\n        yield entry\n      }\n    }\n  })()\n}\n\nexport default filter\n","import filter from 'it-filter'\nimport map from 'it-map'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport { CustomProgressEvent } from 'progress-events'\nimport type { ExporterOptions, ExportWalk, UnixfsV1DirectoryContent, UnixfsV1Resolver } from '../../../index.js'\n\nconst directoryContent: UnixfsV1Resolver = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  async function * yieldDirectoryContent (options: ExporterOptions = {}): UnixfsV1DirectoryContent {\n    const offset = options.offset ?? 0\n    const length = options.length ?? node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    options.onProgress?.(new CustomProgressEvent<ExportWalk>('unixfs:exporter:walk:directory', {\n      cid\n    }))\n\n    yield * pipe(\n      links,\n      source => map(source, link => {\n        return async () => {\n          const linkName = link.Name ?? ''\n          const linkPath = `${path}/${linkName}`\n          const result = await resolve(link.Hash, linkName, linkPath, [], depth + 1, blockstore, options)\n          return result.entry\n        }\n      }),\n      source => parallel(source, {\n        ordered: true,\n        concurrency: options.blockReadConcurrency\n      }),\n      source => filter(source, entry => entry != null)\n    )\n  }\n\n  return yieldDirectoryContent\n}\n\nexport default directoryContent\n","import * as dagPb from '@ipld/dag-pb'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport map from 'it-map'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport { type Pushable, pushable } from 'it-pushable'\nimport * as raw from 'multiformats/codecs/raw'\nimport PQueue from 'p-queue'\nimport { CustomProgressEvent } from 'progress-events'\nimport extractDataFromBlock from '../../../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js'\nimport type { ExporterOptions, UnixfsV1FileContent, UnixfsV1Resolver, ReadableStorage, ExportProgress, ExportWalk } from '../../../index.js'\n\nasync function walkDAG (blockstore: ReadableStorage, node: dagPb.PBNode | Uint8Array, queue: Pushable<Uint8Array>, streamPosition: bigint, start: bigint, end: bigint, options: ExporterOptions): Promise<void> {\n  // a `raw` node\n  if (node instanceof Uint8Array) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end)\n\n    queue.push(buf)\n\n    return\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  let file: UnixFS\n\n  try {\n    file = UnixFS.unmarshal(node.Data)\n  } catch (err: any) {\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  // might be a unixfs `raw` node or have data on intermediate nodes\n  if (file.data != null) {\n    const data = file.data\n    const buf = extractDataFromBlock(data, streamPosition, start, end)\n\n    queue.push(buf)\n\n    streamPosition += BigInt(buf.byteLength)\n  }\n\n  const childOps: Array<{ link: dagPb.PBLink, blockStart: bigint }> = []\n\n  if (node.Links.length !== file.blockSizes.length) {\n    throw errCode(new Error('Inconsistent block sizes and dag links'), 'ERR_NOT_UNIXFS')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i]\n    const childStart = streamPosition // inclusive\n    const childEnd = childStart + file.blockSizes[i] // exclusive\n\n    if ((start >= childStart && start < childEnd) || // child has offset byte\n        (end >= childStart && end <= childEnd) || // child has end byte\n        (start < childStart && end > childEnd)) { // child is between offset and end bytes\n      childOps.push({\n        link: childLink,\n        blockStart: streamPosition\n      })\n    }\n\n    streamPosition = childEnd\n\n    if (streamPosition > end) {\n      break\n    }\n  }\n\n  await pipe(\n    childOps,\n    (source) => map(source, (op) => {\n      return async () => {\n        const block = await blockstore.get(op.link.Hash, options)\n\n        return {\n          ...op,\n          block\n        }\n      }\n    }),\n    (source) => parallel(source, {\n      ordered: true,\n      concurrency: options.blockReadConcurrency\n    }),\n    async (source) => {\n      for await (const { link, block, blockStart } of source) {\n        let child: dagPb.PBNode | Uint8Array\n        switch (link.Hash.code) {\n          case dagPb.code:\n            child = dagPb.decode(block)\n            break\n          case raw.code:\n            child = block\n            break\n          default:\n            queue.end(errCode(new Error(`Unsupported codec: ${link.Hash.code}`), 'ERR_NOT_UNIXFS'))\n            return\n        }\n\n        // create a queue for this child - we use a queue instead of recursion\n        // to avoid overflowing the stack\n        const childQueue = new PQueue({\n          concurrency: 1\n        })\n        // if any of the child jobs error, end the read queue with the error\n        childQueue.on('error', error => {\n          queue.end(error)\n        })\n\n        // if the job rejects the 'error' event will be emitted on the child queue\n        void childQueue.add(async () => {\n          options.onProgress?.(new CustomProgressEvent<ExportWalk>('unixfs:exporter:walk:file', {\n            cid: link.Hash\n          }))\n\n          await walkDAG(blockstore, child, queue, blockStart, start, end, options)\n        })\n\n        // wait for this child to complete before moving on to the next\n        await childQueue.onIdle()\n      }\n    }\n  )\n\n  if (streamPosition >= end) {\n    queue.end()\n  }\n}\n\nconst fileContent: UnixfsV1Resolver = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  async function * yieldFileContent (options: ExporterOptions = {}): UnixfsV1FileContent {\n    const fileSize = unixfs.fileSize()\n\n    if (fileSize === undefined) {\n      throw new Error('File was a directory')\n    }\n\n    const {\n      start,\n      end\n    } = validateOffsetAndLength(fileSize, options.offset, options.length)\n\n    if (end === 0n) {\n      return\n    }\n\n    let read = 0n\n    const wanted = end - start\n    const queue = pushable()\n\n    options.onProgress?.(new CustomProgressEvent<ExportWalk>('unixfs:exporter:walk:file', {\n      cid\n    }))\n\n    void walkDAG(blockstore, node, queue, 0n, start, end, options)\n      .catch(err => {\n        queue.end(err)\n      })\n\n    for await (const buf of queue) {\n      if (buf == null) {\n        continue\n      }\n\n      read += BigInt(buf.byteLength)\n\n      if (read > wanted) {\n        queue.end()\n        throw errCode(new Error('Read too many bytes - the file size reported by the UnixFS data in the root node may be incorrect'), 'ERR_OVER_READ')\n      }\n\n      if (read === wanted) {\n        queue.end()\n      }\n\n      options.onProgress?.(new CustomProgressEvent<ExportProgress>('unixfs:exporter:progress:unixfs:file', {\n        bytesRead: read,\n        totalBytes: wanted,\n        fileSize\n      }))\n\n      yield buf\n    }\n\n    if (read < wanted) {\n      throw errCode(new Error('Traversed entire DAG but did not read enough bytes'), 'ERR_UNDER_READ')\n    }\n  }\n\n  return yieldFileContent\n}\n\nexport default fileContent\n","import { decode, type PBNode } from '@ipld/dag-pb'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport map from 'it-map'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport { CustomProgressEvent } from 'progress-events'\nimport type { ExporterOptions, Resolve, UnixfsV1DirectoryContent, UnixfsV1Resolver, ReadableStorage, ExportWalk } from '../../../index.js'\n\nconst hamtShardedDirectoryContent: UnixfsV1Resolver = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldHamtDirectoryContent (options: ExporterOptions = {}): UnixfsV1DirectoryContent {\n    options.onProgress?.(new CustomProgressEvent<ExportWalk>('unixfs:exporter:walk:hamt-sharded-directory', {\n      cid\n    }))\n\n    return listDirectory(node, path, resolve, depth, blockstore, options)\n  }\n\n  return yieldHamtDirectoryContent\n}\n\nasync function * listDirectory (node: PBNode, path: string, resolve: Resolve, depth: number, blockstore: ReadableStorage, options: ExporterOptions): UnixfsV1DirectoryContent {\n  const links = node.Links\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  let dir: UnixFS\n  try {\n    dir = UnixFS.unmarshal(node.Data)\n  } catch (err: any) {\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  if (dir.fanout == null) {\n    throw errCode(new Error('missing fanout'), 'ERR_NOT_UNIXFS')\n  }\n\n  const padLength = (dir.fanout - 1n).toString(16).length\n\n  const results = pipe(\n    links,\n    source => map(source, link => {\n      return async () => {\n        const name = link.Name != null ? link.Name.substring(padLength) : null\n\n        if (name != null && name !== '') {\n          const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, blockstore, options)\n\n          return { entries: result.entry == null ? [] : [result.entry] }\n        } else {\n          // descend into subshard\n          const block = await blockstore.get(link.Hash, options)\n          node = decode(block)\n\n          options.onProgress?.(new CustomProgressEvent<ExportWalk>('unixfs:exporter:walk:hamt-sharded-directory', {\n            cid: link.Hash\n          }))\n\n          return { entries: listDirectory(node, path, resolve, depth, blockstore, options) }\n        }\n      }\n    }),\n    source => parallel(source, {\n      ordered: true,\n      concurrency: options.blockReadConcurrency\n    })\n  )\n\n  for await (const { entries } of results) {\n    yield * entries\n  }\n}\n\nexport default hamtShardedDirectoryContent\n","export abstract class UnixFSError extends Error {\n  public readonly name: string\n  public readonly code: string\n\n  constructor (message: string, name: string, code: string) {\n    super(message)\n\n    this.name = name\n    this.code = code\n  }\n}\n\nexport class NotUnixFSError extends UnixFSError {\n  constructor (message = 'not a Unixfs node') {\n    super(message, 'NotUnixFSError', 'ERR_NOT_UNIXFS')\n  }\n}\n\nexport class InvalidPBNodeError extends UnixFSError {\n  constructor (message = 'invalid PBNode') {\n    super(message, 'InvalidPBNodeError', 'ERR_INVALID_PBNODE')\n  }\n}\n\nexport class UnknownError extends UnixFSError {\n  constructor (message = 'unknown error') {\n    super(message, 'InvalidPBNodeError', 'ERR_UNKNOWN_ERROR')\n  }\n}\n\nexport class AlreadyExistsError extends UnixFSError {\n  constructor (message = 'path already exists') {\n    super(message, 'AlreadyExistsError', 'ERR_ALREADY_EXISTS')\n  }\n}\n\nexport class DoesNotExistError extends UnixFSError {\n  constructor (message = 'path does not exist') {\n    super(message, 'DoesNotExistError', 'ERR_DOES_NOT_EXIST')\n  }\n}\n\nexport class NoContentError extends UnixFSError {\n  constructor (message = 'no content') {\n    super(message, 'NoContentError', 'ERR_NO_CONTENT')\n  }\n}\n\nexport class NotAFileError extends UnixFSError {\n  constructor (message = 'not a file') {\n    super(message, 'NotAFileError', 'ERR_NOT_A_FILE')\n  }\n}\n\nexport class NotADirectoryError extends UnixFSError {\n  constructor (message = 'not a directory') {\n    super(message, 'NotADirectoryError', 'ERR_NOT_A_DIRECTORY')\n  }\n}\n\nexport class InvalidParametersError extends UnixFSError {\n  constructor (message = 'invalid parameters') {\n    super(message, 'InvalidParametersError', 'ERR_INVALID_PARAMETERS')\n  }\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { CID, type Version } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\n// @ts-expect-error no types\nimport SparseArray from 'sparse-array'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { AlreadyExistsError, InvalidParametersError, InvalidPBNodeError } from '../../errors.js'\nimport { wrapHash } from './consumable-hash.js'\nimport { hamtBucketBits, hamtHashFn } from './hamt-constants.js'\nimport {\n  createShard,\n  recreateShardedDirectory,\n  toPrefix,\n  updateShardedDirectory\n} from './hamt-utils.js'\nimport { isOverShardThreshold } from './is-over-shard-threshold.js'\nimport type { Directory } from './cid-to-directory.js'\nimport type { PBNode, PBLink } from '@ipld/dag-pb/interface'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { ImportResult } from 'ipfs-unixfs-importer'\n\nconst log = logger('helia:unixfs:components:utils:add-link')\n\nexport interface AddLinkResult {\n  node: PBNode\n  cid: CID\n}\n\nexport interface AddLinkOptions extends AbortOptions {\n  allowOverwriting: boolean\n  shardSplitThresholdBytes: number\n  cidVersion: Version\n}\n\nexport async function addLink (parent: Directory, child: Required<PBLink>, blockstore: Blockstore, options: AddLinkOptions): Promise<AddLinkResult> {\n  if (parent.node.Data == null) {\n    throw new InvalidParametersError('Invalid parent passed to addLink')\n  }\n\n  const meta = UnixFS.unmarshal(parent.node.Data)\n\n  if (meta.type === 'hamt-sharded-directory') {\n    log('adding link to sharded directory')\n\n    return addToShardedDirectory(parent, child, blockstore, options)\n  }\n\n  log(`adding ${child.Name} (${child.Hash}) to regular directory`)\n\n  const result = await addToDirectory(parent, child, blockstore, options)\n\n  if (await isOverShardThreshold(result.node, blockstore, options.shardSplitThresholdBytes, options)) {\n    log('converting directory to sharded directory')\n\n    const converted = await convertToShardedDirectory(result, blockstore)\n    result.cid = converted.cid\n    result.node = dagPB.decode(await blockstore.get(converted.cid, options))\n  }\n\n  return result\n}\n\nconst convertToShardedDirectory = async (parent: Directory, blockstore: Blockstore): Promise<ImportResult> => {\n  if (parent.node.Data == null) {\n    throw new InvalidParametersError('Invalid parent passed to convertToShardedDirectory')\n  }\n\n  const unixfs = UnixFS.unmarshal(parent.node.Data)\n\n  const result = await createShard(blockstore, parent.node.Links.map(link => ({\n    name: (link.Name ?? ''),\n    size: BigInt(link.Tsize ?? 0),\n    cid: link.Hash\n  })), {\n    mode: unixfs.mode,\n    mtime: unixfs.mtime,\n    cidVersion: parent.cid.version\n  })\n\n  log(`converted directory to sharded directory ${result.cid}`)\n\n  return result\n}\n\nconst addToDirectory = async (parent: Directory, child: PBLink, blockstore: Blockstore, options: AddLinkOptions): Promise<AddLinkResult> => {\n  // Remove existing link if it exists\n  const parentLinks = parent.node.Links.filter((link) => {\n    const matches = link.Name === child.Name\n\n    if (matches && !options.allowOverwriting) {\n      throw new AlreadyExistsError()\n    }\n\n    return !matches\n  })\n  parentLinks.push(child)\n\n  if (parent.node.Data == null) {\n    throw new InvalidPBNodeError('Parent node with no data passed to addToDirectory')\n  }\n\n  const node = UnixFS.unmarshal(parent.node.Data)\n\n  let data\n  if (node.mtime != null) {\n    // Update mtime if previously set\n    const ms = Date.now()\n    const secs = Math.floor(ms / 1000)\n\n    node.mtime = {\n      secs: BigInt(secs),\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n\n    data = node.marshal()\n  } else {\n    data = parent.node.Data\n  }\n  parent.node = dagPB.prepare({\n    Data: data,\n    Links: parentLinks\n  })\n\n  // Persist the new parent PbNode\n  const buf = dagPB.encode(parent.node)\n  const hash = await sha256.digest(buf)\n  const cid = CID.create(parent.cid.version, dagPB.code, hash)\n\n  await blockstore.put(cid, buf)\n\n  return {\n    node: parent.node,\n    cid\n  }\n}\n\nconst addToShardedDirectory = async (parent: Directory, child: Required<PBLink>, blockstore: Blockstore, options: AddLinkOptions): Promise<AddLinkResult> => {\n  const { path, hash } = await recreateShardedDirectory(parent.cid, child.Name, blockstore, options)\n  const finalSegment = path[path.length - 1]\n\n  if (finalSegment == null) {\n    throw new Error('Invalid HAMT, could not generate path')\n  }\n\n  // find the next prefix\n  // const index = await hash.take(hamtBucketBits)\n  const prefix = finalSegment.prefix\n  const index = parseInt(prefix, 16)\n\n  log('next prefix for %s is %s', child.Name, prefix)\n\n  const linkName = `${prefix}${child.Name}`\n  const existingLink = finalSegment.node.Links.find(l => (l.Name ?? '').startsWith(prefix))\n\n  if (existingLink != null) {\n    log('link %s was present in shard', linkName)\n    // link is already present in shard\n\n    if (existingLink.Name === linkName) {\n      // file with same name is already present in shard\n      if (!options.allowOverwriting) {\n        throw new AlreadyExistsError()\n      }\n\n      log('overwriting %s in subshard', child.Name)\n      finalSegment.node.Links = finalSegment.node.Links.filter(l => l.Name !== linkName)\n      finalSegment.node.Links.push({\n        Name: linkName,\n        Hash: child.Hash,\n        Tsize: child.Tsize\n      })\n    } else if (existingLink.Name?.length === 2) {\n      throw new Error('Existing link was subshard?!')\n    } else {\n      // conflict, add a new HAMT segment\n      log('prefix %s already exists, creating new subshard', prefix)\n      // find the sibling we are going to replace\n      const index = finalSegment.node.Links.findIndex(l => l.Name?.startsWith(prefix))\n      const sibling = finalSegment.node.Links.splice(index, 1)[0]\n\n      // give the sibling a new HAMT prefix\n      const siblingName = (sibling.Name ?? '').substring(2)\n      const wrapped = wrapHash(hamtHashFn)\n      const siblingHash = wrapped(uint8ArrayFromString(siblingName))\n\n      // discard hash bits until we reach the subshard depth\n      for (let i = 0; i < path.length; i++) {\n        await siblingHash.take(hamtBucketBits)\n      }\n\n      while (true) {\n        const siblingIndex = await siblingHash.take(hamtBucketBits)\n        const siblingPrefix = toPrefix(siblingIndex)\n        sibling.Name = `${siblingPrefix}${siblingName}`\n\n        // calculate the target file's HAMT prefix in the new sub-shard\n        const newIndex = await hash.take(hamtBucketBits)\n        const newPrefix = toPrefix(newIndex)\n\n        if (siblingPrefix === newPrefix) {\n          // the two sibling names have caused another conflict - add an intermediate node to\n          // the HAMT and try again\n\n          // create the child locations\n          const children = new SparseArray()\n          children.set(newIndex, true)\n\n          path.push({\n            prefix: newPrefix,\n            children,\n            node: {\n              Links: []\n            }\n          })\n\n          continue\n        }\n\n        // create the child locations\n        const children = new SparseArray()\n        children.set(newIndex, true)\n        children.set(siblingIndex, true)\n\n        // add our new segment\n        path.push({\n          prefix,\n          children,\n          node: {\n            Links: [\n              sibling, {\n                Name: `${newPrefix}${child.Name}`,\n                Hash: child.Hash,\n                Tsize: child.Tsize\n              }\n            ]\n          }\n        })\n\n        break\n      }\n    }\n  } else {\n    log('link %s was not present in sub-shard', linkName)\n\n    // add new link to shard\n    child.Name = linkName\n    finalSegment.node.Links.push(child)\n    finalSegment.children.set(index, true)\n\n    log('adding %s to existing sub-shard', linkName)\n  }\n\n  return updateShardedDirectory(path, blockstore, options)\n}\n","import { concat as uint8ArrayConcat } from 'uint8arrays/concat'\n\nexport function wrapHash (hashFn: (value: Uint8Array) => Promise<Uint8Array>): (value: InfiniteHash | Uint8Array) => InfiniteHash {\n  function hashing (value: InfiniteHash | Uint8Array): InfiniteHash {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nexport class InfiniteHash {\n  _value: Uint8Array\n  _hashFn: (value: Uint8Array) => Promise<Uint8Array>\n  _depth: number\n  _availableBits: number\n  _currentBufferIndex: number\n  _buffers: ConsumableBuffer[]\n\n  constructor (value: Uint8Array, hashFn: (value: Uint8Array) => Promise<Uint8Array>) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n    this._buffers = []\n  }\n\n  async take (bits: number): Promise<number> {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  untake (bits: number): void {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits (): Promise<void> {\n    this._depth++\n\n    const value = this._depth > 0 ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nexport class ConsumableBuffer {\n  _value: Uint8Array\n  _currentBytePos: number\n  _currentBitPos: number\n\n  constructor (value: Uint8Array) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits (): number {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits (): number {\n    return this._value.length * 8\n  }\n\n  take (bits: number): number {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits > 0 && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  untake (bits: number): void {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits (): boolean {\n    return this._currentBytePos >= 0\n  }\n}\n\nfunction byteBitsToInt (byte: number, start: number, length: number): number {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\nfunction maskFor (start: number, length: number): number {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","import { murmur3128 } from '@multiformats/murmur3'\n\nexport const hamtHashCode = BigInt(murmur3128.code)\nexport const hamtBucketBits = 8\n\nexport async function hamtHashFn (buf: Uint8Array): Promise<Uint8Array> {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .subarray(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport last from 'it-last'\n// @ts-expect-error no types\nimport SparseArray from 'sparse-array'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { type InfiniteHash, wrapHash } from './consumable-hash.js'\nimport { DirSharded } from './dir-sharded.js'\nimport {\n  hamtHashCode,\n  hamtHashFn,\n  hamtBucketBits\n} from './hamt-constants.js'\nimport { persist } from './persist.js'\nimport type { PersistOptions } from './persist.js'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { Mtime } from 'ipfs-unixfs'\nimport type { ImportResult } from 'ipfs-unixfs-importer'\nimport type { CID, Version } from 'multiformats/cid'\n\nconst log = logger('helia:unixfs:commands:utils:hamt-utils')\n\nexport interface UpdateHamtDirectoryOptions extends AbortOptions {\n  cidVersion: Version\n}\n\nexport const toPrefix = (position: number): string => {\n  return position\n    .toString(16)\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\nexport interface CreateShardOptions {\n  mtime?: Mtime\n  mode?: number\n  cidVersion: Version\n}\n\nexport const createShard = async (blockstore: Blockstore, contents: Array<{ name: string, size: bigint, cid: CID }>, options: CreateShardOptions): Promise<ImportResult> => {\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: undefined,\n    parentKey: undefined,\n    path: '',\n    dirty: true,\n    flat: false,\n    mtime: options.mtime,\n    mode: options.mode\n  }, options)\n\n  for (let i = 0; i < contents.length; i++) {\n    await shard._bucket.put(contents[i].name, {\n      size: contents[i].size,\n      cid: contents[i].cid\n    })\n  }\n\n  const res = await last(shard.flush(blockstore))\n\n  if (res == null) {\n    throw new Error('Flushing shard yielded no result')\n  }\n\n  return res\n}\n\nexport interface HAMTPath {\n  prefix: string\n  children: SparseArray\n  node: dagPB.PBNode\n}\n\nexport const updateShardedDirectory = async (path: HAMTPath[], blockstore: Blockstore, options: PersistOptions): Promise<{ cid: CID, node: dagPB.PBNode }> => {\n  // persist any metadata on the shard root\n  const shardRoot = UnixFS.unmarshal(path[0].node.Data ?? new Uint8Array(0))\n\n  // this is always the same\n  const fanout = BigInt(Math.pow(2, hamtBucketBits))\n\n  // start from the leaf and ascend to the root\n  path.reverse()\n\n  let cid: CID | undefined\n  let node: dagPB.PBNode | undefined\n\n  for (let i = 0; i < path.length; i++) {\n    const isRoot = i === path.length - 1\n    const segment = path[i]\n\n    // go-ipfs uses little endian, that's why we have to\n    // reverse the bit field before storing it\n    const data = Uint8Array.from(segment.children.bitField().reverse())\n    const dir = new UnixFS({\n      type: 'hamt-sharded-directory',\n      data,\n      fanout,\n      hashType: hamtHashCode\n    })\n\n    if (isRoot) {\n      dir.mtime = shardRoot.mtime\n      dir.mode = shardRoot.mode\n    }\n\n    node = {\n      Data: dir.marshal(),\n      Links: segment.node.Links\n    }\n\n    const block = dagPB.encode(dagPB.prepare(node))\n\n    cid = await persist(block, blockstore, options)\n\n    if (!isRoot) {\n      // update link in parent sub-shard\n      const nextSegment = path[i + 1]\n\n      if (nextSegment == null) {\n        throw new Error('Was not operating on shard root but also had no parent?')\n      }\n\n      log('updating link in parent sub-shard with prefix %s', nextSegment.prefix)\n\n      nextSegment.node.Links = nextSegment.node.Links.filter(l => l.Name !== nextSegment.prefix)\n      nextSegment.node.Links.push({\n        Name: nextSegment.prefix,\n        Hash: cid,\n        Tsize: segment.node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), block.byteLength)\n      })\n    }\n  }\n\n  if (cid == null || node == null) {\n    throw new Error('Noting persisted')\n  }\n\n  return { cid, node }\n}\n\nexport const recreateShardedDirectory = async (cid: CID, fileName: string, blockstore: Blockstore, options: AbortOptions): Promise<{ path: HAMTPath[], hash: InfiniteHash }> => {\n  const wrapped = wrapHash(hamtHashFn)\n  const hash = wrapped(uint8ArrayFromString(fileName))\n  const path: HAMTPath[] = []\n\n  // descend the HAMT, loading each layer as we head towards the target child\n  while (true) {\n    const block = await blockstore.get(cid, options)\n    const node = dagPB.decode(block)\n    const children = new SparseArray()\n    const index = await hash.take(hamtBucketBits)\n    const prefix = toPrefix(index)\n\n    path.push({\n      prefix,\n      children,\n      node\n    })\n\n    let childLink: dagPB.PBLink | undefined\n\n    // update sparsearray child layout - the bitfield is used as the data field for the\n    // intermediate DAG node so this is required to generate consistent hashes\n    for (const link of node.Links) {\n      const linkName = link.Name ?? ''\n\n      if (linkName.length < 2) {\n        throw new Error('Invalid HAMT - link name was too short')\n      }\n\n      const position = parseInt(linkName.substring(0, 2), 16)\n      children.set(position, true)\n\n      // we found the child we are looking for\n      if (linkName.startsWith(prefix)) {\n        childLink = link\n      }\n    }\n\n    if (childLink == null) {\n      log('no link found with prefix %s for %s', prefix, fileName)\n      // hash.untake(hamtBucketBits)\n      break\n    }\n\n    const linkName = childLink.Name ?? ''\n\n    if (linkName.length < 2) {\n      throw new Error('Invalid HAMT - link name was too short')\n    }\n\n    if (linkName.length === 2) {\n      // found sub-shard\n      cid = childLink.Hash\n      log('descend into sub-shard with prefix %s', linkName)\n\n      continue\n    }\n\n    break\n  }\n\n  return { path, hash }\n}\n","import { encode, type PBLink, prepare } from '@ipld/dag-pb'\nimport { createHAMT, Bucket, type BucketChild } from 'hamt-sharding'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { CID } from 'multiformats/cid'\nimport {\n  hamtHashCode,\n  hamtHashFn\n} from './hamt-constants.js'\nimport { persist, type PersistOptions } from './persist.js'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { Mtime } from 'ipfs-unixfs'\n\ninterface InProgressImportResult extends ImportResult {\n  single?: boolean\n  originalPath?: string\n}\n\ninterface ImportResult {\n  cid: CID\n  size: bigint\n  path?: string\n  unixfs?: UnixFS\n}\n\ninterface DirProps {\n  root: boolean\n  dir: boolean\n  path: string\n  dirty: boolean\n  flat: boolean\n  parent?: Dir\n  parentKey?: string\n  unixfs?: UnixFS\n  mode?: number\n  mtime?: Mtime\n}\n\nabstract class Dir {\n  public options: PersistOptions\n  public root: boolean\n  public dir: boolean\n  public path: string\n  public dirty: boolean\n  public flat: boolean\n  public parent?: Dir\n  public parentKey?: string\n  public unixfs?: UnixFS\n  public mode?: number\n  public mtime?: Mtime\n  public cid?: CID\n  public size?: number\n  public nodeSize?: number\n\n  constructor (props: DirProps, options: PersistOptions) {\n    this.options = options ?? {}\n\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n  }\n\n  abstract put (name: string, value: InProgressImportResult | Dir): Promise<void>\n  abstract get (name: string): Promise<InProgressImportResult | Dir | undefined>\n  abstract eachChildSeries (): AsyncIterable<{ key: string, child: InProgressImportResult | Dir }>\n  abstract flush (blockstore: Blockstore): AsyncGenerator<ImportResult>\n  abstract estimateNodeSize (): number\n  abstract childCount (): number\n}\n\nexport class DirSharded extends Dir {\n  public _bucket: Bucket<InProgressImportResult | Dir>\n\n  constructor (props: DirProps, options: PersistOptions) {\n    super(props, options)\n\n    this._bucket = createHAMT({\n      hashFn: hamtHashFn,\n      bits: 8\n    })\n  }\n\n  async put (name: string, value: InProgressImportResult | Dir): Promise<void> {\n    this.cid = undefined\n    this.size = undefined\n    this.nodeSize = undefined\n\n    await this._bucket.put(name, value)\n  }\n\n  async get (name: string): Promise<InProgressImportResult | Dir | undefined> {\n    return this._bucket.get(name)\n  }\n\n  childCount (): number {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount (): number {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild (): Bucket<InProgressImportResult | Dir> | BucketChild<InProgressImportResult | Dir> {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries (): AsyncGenerator<{ key: string, child: InProgressImportResult | Dir }> {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  estimateNodeSize (): number {\n    if (this.nodeSize !== undefined) {\n      return this.nodeSize\n    }\n\n    this.nodeSize = calculateSize(this._bucket, this, this.options)\n\n    return this.nodeSize\n  }\n\n  async * flush (blockstore: Blockstore): AsyncGenerator<ImportResult> {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      }\n    }\n  }\n}\n\nasync function * flush (bucket: Bucket<Dir | InProgressImportResult>, blockstore: Blockstore, shardRoot: DirSharded | null, options: PersistOptions): AsyncIterable<ImportResult> {\n  const children = bucket._children\n  const links: PBLink[] = []\n  let childrenSize = 0n\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (child == null) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of flush(child, blockstore, null, options)) {\n        shard = subShard\n      }\n\n      if (shard == null) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: Number(shard.size),\n        Hash: shard.cid\n      })\n      childrenSize += shard.size\n    } else if (isDir(child.value)) {\n      const dir = child.value\n      let flushedDir: ImportResult | undefined\n\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      if (flushedDir == null) {\n        throw new Error('Did not flush dir')\n      }\n\n      const label = labelPrefix + child.key\n      links.push({\n        Name: label,\n        Tsize: Number(flushedDir.size),\n        Hash: flushedDir.cid\n      })\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (value.cid == null) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: Number(size),\n        Hash: value.cid\n      })\n      childrenSize += BigInt(size ?? 0)\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: BigInt(bucket.tableSize()),\n    hashType: hamtHashCode,\n    mtime: shardRoot?.mtime,\n    mode: shardRoot?.mode\n  })\n\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  }\n  const buffer = encode(prepare(node))\n  const cid = await persist(buffer, blockstore, options)\n  const size = BigInt(buffer.byteLength) + childrenSize\n\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  }\n}\n\nfunction isDir (obj: any): obj is Dir {\n  return typeof obj.flush === 'function'\n}\n\nfunction calculateSize (bucket: Bucket<any>, shardRoot: DirSharded | null, options: PersistOptions): number {\n  const children = bucket._children\n  const links: PBLink[] = []\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (child == null) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      const size = calculateSize(child, null, options)\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: Number(size),\n        Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n      })\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      const size = dir.nodeSize()\n\n      links.push({\n        Name: labelPrefix + child.key,\n        Tsize: Number(size),\n        Hash: options.cidVersion === 0 ? CID_V0 : CID_V1\n      })\n    } else {\n      const value = child.value\n\n      if (value.cid == null) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: Number(size),\n        Hash: value.cid\n      })\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: BigInt(bucket.tableSize()),\n    hashType: hamtHashCode,\n    mtime: shardRoot?.mtime,\n    mode: shardRoot?.mode\n  })\n\n  const buffer = encode(prepare({\n    Data: dir.marshal(),\n    Links: links\n  }))\n\n  return buffer.length\n}\n\n// we use these to calculate the node size to use as a check for whether a directory\n// should be sharded or not. Since CIDs have a constant length and We're only\n// interested in the data length and not the actual content identifier we can use\n// any old CID instead of having to hash the data which is expensive.\nexport const CID_V0 = CID.parse('QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn')\nexport const CID_V1 = CID.parse('zdj7WbTaiJT1fgatdet9Ei9iDB5hdCxkbVyhyh8YTUnXMiwYi')\n","import * as dagPb from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport type { Blocks } from '@helia/interface/blocks'\nimport type { Version as CIDVersion } from 'multiformats/cid'\nimport type { BlockCodec } from 'multiformats/codecs/interface'\n\nexport interface PersistOptions {\n  codec?: BlockCodec<any, any>\n  cidVersion: CIDVersion\n  signal?: AbortSignal\n}\n\ntype PutStore = Pick<Blocks, 'put'>\n\nexport const persist = async (buffer: Uint8Array, blockstore: PutStore, options: PersistOptions): Promise<CID> => {\n  if (options.codec == null) {\n    options.codec = dagPb\n  }\n\n  const multihash = await sha256.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  await blockstore.put(cid, buffer, {\n    ...options,\n    signal: options.signal\n  })\n\n  return cid\n}\n","import * as dagPb from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { CID_V0, CID_V1 } from './dir-sharded.js'\nimport type { PBNode } from '@ipld/dag-pb'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Blockstore } from 'interface-blockstore'\n\n/**\n * Estimate node size only based on DAGLink name and CID byte lengths\n * https://github.com/ipfs/go-unixfsnode/blob/37b47f1f917f1b2f54c207682f38886e49896ef9/data/builder/directory.go#L81-L96\n *\n * If the node is a hamt sharded directory the calculation is based on if it was a regular directory.\n */\nexport async function isOverShardThreshold (node: PBNode, blockstore: Blockstore, threshold: number, options: AbortOptions): Promise<boolean> {\n  if (node.Data == null) {\n    throw new Error('DagPB node had no data')\n  }\n\n  const unixfs = UnixFS.unmarshal(node.Data)\n  let size: number\n\n  if (unixfs.type === 'directory') {\n    size = estimateNodeSize(node)\n  } else if (unixfs.type === 'hamt-sharded-directory') {\n    size = await estimateShardSize(node, 0, threshold, blockstore, options)\n  } else {\n    throw new Error('Can only estimate the size of directories or shards')\n  }\n\n  return size > threshold\n}\n\nfunction estimateNodeSize (node: PBNode): number {\n  let size = 0\n\n  // estimate size only based on DAGLink name and CID byte lengths\n  // https://github.com/ipfs/go-unixfsnode/blob/37b47f1f917f1b2f54c207682f38886e49896ef9/data/builder/directory.go#L81-L96\n  for (const link of node.Links) {\n    size += (link.Name ?? '').length\n    size += link.Hash.version === 1 ? CID_V1.bytes.byteLength : CID_V0.bytes.byteLength\n  }\n\n  return size\n}\n\nasync function estimateShardSize (node: PBNode, current: number, max: number, blockstore: Blockstore, options: AbortOptions): Promise<number> {\n  if (current > max) {\n    return max\n  }\n\n  if (node.Data == null) {\n    return current\n  }\n\n  const unixfs = UnixFS.unmarshal(node.Data)\n\n  if (!unixfs.isDirectory()) {\n    return current\n  }\n\n  for (const link of node.Links) {\n    let name = link.Name ?? ''\n\n    // remove hamt hash prefix from name\n    name = name.substring(2)\n\n    current += name.length\n    current += link.Hash.bytes.byteLength\n\n    if (link.Hash.code === dagPb.code) {\n      const block = await blockstore.get(link.Hash, options)\n      const node = dagPb.decode(block)\n\n      current += await estimateShardSize(node, current, max, blockstore, options)\n    }\n  }\n\n  return current\n}\n","import { exporter, type ExporterOptions } from 'ipfs-unixfs-exporter'\nimport { NotADirectoryError } from '../../errors.js'\nimport type { PBNode } from '@ipld/dag-pb'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nexport interface Directory {\n  cid: CID\n  node: PBNode\n}\n\nexport async function cidToDirectory (cid: CID, blockstore: Blockstore, options: ExporterOptions = {}): Promise<Directory> {\n  const entry = await exporter(cid, blockstore, options)\n\n  if (entry.type !== 'directory') {\n    throw new NotADirectoryError(`${cid.toString()} was not a UnixFS directory`)\n  }\n\n  return {\n    cid,\n    node: entry.node\n  }\n}\n","import * as dagPb from '@ipld/dag-pb'\nimport { exporter, type ExporterOptions } from 'ipfs-unixfs-exporter'\nimport { NotUnixFSError } from '../../errors.js'\nimport type { PBNode, PBLink } from '@ipld/dag-pb'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nexport async function cidToPBLink (cid: CID, name: string, blockstore: Blockstore, options?: ExporterOptions): Promise<Required<PBLink>> {\n  const sourceEntry = await exporter(cid, blockstore, options)\n\n  if (sourceEntry.type !== 'directory' && sourceEntry.type !== 'file' && sourceEntry.type !== 'raw') {\n    throw new NotUnixFSError(`${cid.toString()} was not a UnixFS node`)\n  }\n\n  return {\n    Name: name,\n    Tsize: sourceEntry.node instanceof Uint8Array ? sourceEntry.node.byteLength : dagNodeTsize(sourceEntry.node),\n    Hash: cid\n  }\n}\n\nfunction dagNodeTsize (node: PBNode): number {\n  const linkSizes = node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), 0)\n\n  return dagPb.encode(node).byteLength + linkSizes\n}\n","import { logger } from '@libp2p/logger'\nimport { walkPath } from 'ipfs-unixfs-exporter'\nimport all from 'it-all'\nimport { DoesNotExistError } from '../../errors.js'\nimport { addLink } from './add-link.js'\nimport { cidToDirectory } from './cid-to-directory.js'\nimport { cidToPBLink } from './cid-to-pblink.js'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nconst log = logger('helia:unixfs:components:utils:resolve')\n\nexport interface Segment {\n  name: string\n  cid: CID\n  size: bigint\n}\n\nexport interface ResolveResult {\n  /**\n   * The CID at the end of the path\n   */\n  cid: CID\n\n  path?: string\n\n  /**\n   * If present, these are the CIDs and path segments that were traversed through to reach the final CID\n   *\n   * If not present, there was no path passed or the path was an empty string\n   */\n  segments?: Segment[]\n}\n\nexport async function resolve (cid: CID, path: string | undefined, blockstore: Blockstore, options: AbortOptions): Promise<ResolveResult> {\n  if (path == null || path === '') {\n    return { cid }\n  }\n\n  const p = `/ipfs/${cid}${path == null ? '' : `/${path}`}`\n  const segments = await all(walkPath(p, blockstore, options))\n\n  if (segments.length === 0) {\n    throw new DoesNotExistError('Could not find path in directory')\n  }\n\n  log('resolved %s to %c', path, cid)\n\n  return {\n    cid: segments[segments.length - 1].cid,\n    path,\n    segments\n  }\n}\n\nexport interface UpdatePathCidsOptions extends AbortOptions {\n  shardSplitThresholdBytes: number\n}\n\n/**\n * Where we have descended into a DAG to update a child node, ascend up the DAG creating\n * new hashes and blocks for the changed content\n */\nexport async function updatePathCids (cid: CID, result: ResolveResult, blockstore: Blockstore, options: UpdatePathCidsOptions): Promise<CID> {\n  if (result.segments == null || result.segments.length === 0) {\n    return cid\n  }\n\n  let child = result.segments.pop()\n\n  if (child == null) {\n    throw new Error('Insufficient segments')\n  }\n\n  child.cid = cid\n\n  result.segments.reverse()\n\n  for (const parent of result.segments) {\n    const [\n      directory,\n      pblink\n    ] = await Promise.all([\n      cidToDirectory(parent.cid, blockstore, options),\n      cidToPBLink(child.cid, child.name, blockstore, options)\n    ])\n\n    const result = await addLink(directory, pblink, blockstore, {\n      ...options,\n      allowOverwriting: true,\n      cidVersion: cid.version\n    })\n\n    cid = result.cid\n    parent.cid = cid\n    child = parent\n  }\n\n  return cid\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport mergeOpts from 'merge-options'\nimport { NoContentError, NotAFileError } from '../errors.js'\nimport { resolve } from './utils/resolve.js'\nimport type { CatOptions } from '../index.js'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\nconst defaultOptions: CatOptions = {\n\n}\n\nexport async function * cat (cid: CID, blockstore: Blockstore, options: Partial<CatOptions> = {}): AsyncIterable<Uint8Array> {\n  const opts: CatOptions = mergeOptions(defaultOptions, options)\n  const resolved = await resolve(cid, opts.path, blockstore, opts)\n  const result = await exporter(resolved.cid, blockstore, opts)\n\n  if (result.type !== 'file' && result.type !== 'raw') {\n    throw new NotAFileError()\n  }\n\n  if (result.content == null) {\n    throw new NoContentError()\n  }\n\n  yield * result.content(opts)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { recursive } from 'ipfs-unixfs-exporter'\nimport { importer } from 'ipfs-unixfs-importer'\nimport last from 'it-last'\nimport { pipe } from 'it-pipe'\nimport mergeOpts from 'merge-options'\nimport { CID } from 'multiformats/cid'\nimport * as raw from 'multiformats/codecs/raw'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { InvalidPBNodeError, NotUnixFSError, UnknownError } from '../errors.js'\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js'\nimport { persist } from './utils/persist.js'\nimport { resolve, updatePathCids } from './utils/resolve.js'\nimport type { ChmodOptions } from '../index.js'\nimport type { PBNode, PBLink } from '@ipld/dag-pb'\nimport type { Blockstore } from 'interface-blockstore'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('helia:unixfs:chmod')\n\nconst defaultOptions: ChmodOptions = {\n  recursive: false,\n  shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n}\n\nexport async function chmod (cid: CID, mode: number, blockstore: Blockstore, options: Partial<ChmodOptions> = {}): Promise<CID> {\n  const opts: ChmodOptions = mergeOptions(defaultOptions, options)\n  const resolved = await resolve(cid, opts.path, blockstore, options)\n\n  log('chmod %c %d', resolved.cid, mode)\n\n  if (opts.recursive) {\n    // recursively export from root CID, change perms of each entry then reimport\n    // but do not reimport files, only manipulate dag-pb nodes\n    const root = await pipe(\n      async function * () {\n        for await (const entry of recursive(resolved.cid, blockstore, options)) {\n          let metadata: UnixFS\n          let links: PBLink[] = []\n\n          if (entry.type === 'raw') {\n            // convert to UnixFS\n            metadata = new UnixFS({ type: 'file', data: entry.node })\n          } else if (entry.type === 'file' || entry.type === 'directory') {\n            metadata = entry.unixfs\n            links = entry.node.Links\n          } else {\n            throw new NotUnixFSError()\n          }\n\n          metadata.mode = mode\n\n          const node = {\n            Data: metadata.marshal(),\n            Links: links\n          }\n\n          yield {\n            path: entry.path,\n            content: node\n          }\n        }\n      },\n      // @ts-expect-error cannot combine progress types\n      (source) => importer(source, blockstore, {\n        ...opts,\n        dagBuilder: async function * (source, block) {\n          for await (const entry of source) {\n            yield async function () {\n              // @ts-expect-error cannot derive type\n              const node: PBNode = entry.content\n\n              const buf = dagPB.encode(node)\n              const updatedCid = await persist(buf, block, {\n                ...opts,\n                cidVersion: cid.version\n              })\n\n              if (node.Data == null) {\n                throw new InvalidPBNodeError(`${updatedCid} had no data`)\n              }\n\n              const unixfs = UnixFS.unmarshal(node.Data)\n\n              return {\n                cid: updatedCid,\n                size: BigInt(buf.length),\n                path: entry.path,\n                unixfs\n              }\n            }\n          }\n        }\n      }),\n      async (nodes) => last(nodes)\n    )\n\n    if (root == null) {\n      throw new UnknownError(`Could not chmod ${resolved.cid.toString()}`)\n    }\n\n    return updatePathCids(root.cid, resolved, blockstore, opts)\n  }\n\n  const block = await blockstore.get(resolved.cid, options)\n  let metadata: UnixFS\n  let links: PBLink[] = []\n\n  if (resolved.cid.code === raw.code) {\n    // convert to UnixFS\n    metadata = new UnixFS({ type: 'file', data: block })\n  } else {\n    const node = dagPB.decode(block)\n\n    if (node.Data == null) {\n      throw new InvalidPBNodeError(`${resolved.cid.toString()} had no data`)\n    }\n\n    links = node.Links\n    metadata = UnixFS.unmarshal(node.Data)\n  }\n\n  metadata.mode = mode\n  const updatedBlock = dagPB.encode({\n    Data: metadata.marshal(),\n    Links: links\n  })\n\n  const hash = await sha256.digest(updatedBlock)\n  const updatedCid = CID.create(resolved.cid.version, dagPB.code, hash)\n\n  await blockstore.put(updatedCid, updatedBlock)\n\n  return updatePathCids(updatedCid, resolved, blockstore, opts)\n}\n","export const SHARD_SPLIT_THRESHOLD_BYTES = 262144\n","import { logger } from '@libp2p/logger'\nimport mergeOpts from 'merge-options'\nimport { InvalidParametersError } from '../errors.js'\nimport { addLink } from './utils/add-link.js'\nimport { cidToDirectory } from './utils/cid-to-directory.js'\nimport { cidToPBLink } from './utils/cid-to-pblink.js'\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js'\nimport type { CpOptions } from '../index.js'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('helia:unixfs:cp')\n\nconst defaultOptions: CpOptions = {\n  force: false,\n  shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n}\n\nexport async function cp (source: CID, target: CID, name: string, blockstore: Blockstore, options: Partial<CpOptions> = {}): Promise<CID> {\n  const opts: CpOptions = mergeOptions(defaultOptions, options)\n\n  if (name.includes('/')) {\n    throw new InvalidParametersError('Name must not have slashes')\n  }\n\n  const [\n    directory,\n    pblink\n  ] = await Promise.all([\n    cidToDirectory(target, blockstore, opts),\n    cidToPBLink(source, name, blockstore, opts)\n  ])\n\n  log('Adding %c as \"%s\" to %c', source, name, target)\n\n  const result = await addLink(directory, pblink, blockstore, {\n    allowOverwriting: opts.force,\n    cidVersion: target.version,\n    ...opts\n  })\n\n  return result.cid\n}\n","import { exporter, type UnixFSEntry } from 'ipfs-unixfs-exporter'\nimport mergeOpts from 'merge-options'\nimport { NoContentError, NotADirectoryError } from '../errors.js'\nimport { resolve } from './utils/resolve.js'\nimport type { LsOptions } from '../index.js'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\nconst defaultOptions: LsOptions = {\n\n}\n\nexport async function * ls (cid: CID, blockstore: Blockstore, options: Partial<LsOptions> = {}): AsyncIterable<UnixFSEntry> {\n  const opts: LsOptions = mergeOptions(defaultOptions, options)\n  const resolved = await resolve(cid, opts.path, blockstore, opts)\n  const result = await exporter(resolved.cid, blockstore)\n\n  if (result.type === 'file' || result.type === 'raw') {\n    yield result\n    return\n  }\n\n  if (result.content == null) {\n    throw new NoContentError()\n  }\n\n  if (result.type !== 'directory') {\n    throw new NotADirectoryError()\n  }\n\n  yield * result.content({\n    offset: options.offset,\n    length: options.length\n  })\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport mergeOpts from 'merge-options'\nimport { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { InvalidParametersError, NotADirectoryError } from '../errors.js'\nimport { addLink } from './utils/add-link.js'\nimport { cidToDirectory } from './utils/cid-to-directory.js'\nimport { cidToPBLink } from './utils/cid-to-pblink.js'\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js'\nimport type { MkdirOptions } from '../index.js'\nimport type { Blockstore } from 'interface-blockstore'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('helia:unixfs:mkdir')\n\nconst defaultOptions: MkdirOptions = {\n  cidVersion: 1,\n  force: false,\n  shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n}\n\nexport async function mkdir (parentCid: CID, dirname: string, blockstore: Blockstore, options: Partial<MkdirOptions> = {}): Promise<CID> {\n  const opts: MkdirOptions = mergeOptions(defaultOptions, options)\n\n  if (dirname.includes('/')) {\n    throw new InvalidParametersError('Path must not have slashes')\n  }\n\n  const entry = await exporter(parentCid, blockstore, options)\n\n  if (entry.type !== 'directory') {\n    throw new NotADirectoryError(`${parentCid.toString()} was not a UnixFS directory`)\n  }\n\n  log('creating %s', dirname)\n\n  const metadata = new UnixFS({\n    type: 'directory',\n    mode: opts.mode,\n    mtime: opts.mtime\n  })\n\n  // Persist the new parent PBNode\n  const node = {\n    Data: metadata.marshal(),\n    Links: []\n  }\n  const buf = dagPB.encode(node)\n  const hash = await sha256.digest(buf)\n  const emptyDirCid = CID.create(opts.cidVersion, dagPB.code, hash)\n\n  await blockstore.put(emptyDirCid, buf)\n\n  const [\n    directory,\n    pblink\n  ] = await Promise.all([\n    cidToDirectory(parentCid, blockstore, opts),\n    cidToPBLink(emptyDirCid, dirname, blockstore, opts)\n  ])\n\n  log('adding empty dir called %s to %c', dirname, parentCid)\n\n  const result = await addLink(directory, pblink, blockstore, {\n    ...opts,\n    allowOverwriting: opts.force\n  })\n\n  return result.cid\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport { InvalidParametersError, InvalidPBNodeError } from '../../errors.js'\nimport {\n  recreateShardedDirectory,\n  type UpdateHamtDirectoryOptions,\n  updateShardedDirectory\n} from './hamt-utils.js'\nimport { isOverShardThreshold } from './is-over-shard-threshold.js'\nimport { persist } from './persist.js'\nimport type { Directory } from './cid-to-directory.js'\nimport type { PBNode } from '@ipld/dag-pb'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID, Version } from 'multiformats/cid'\n\nconst log = logger('helia:unixfs:utils:remove-link')\n\nexport interface RmLinkOptions extends AbortOptions {\n  shardSplitThresholdBytes: number\n  cidVersion: Version\n}\n\nexport interface RemoveLinkResult {\n  node: PBNode\n  cid: CID\n}\n\nexport async function removeLink (parent: Directory, name: string, blockstore: Blockstore, options: RmLinkOptions): Promise<RemoveLinkResult> {\n  if (parent.node.Data == null) {\n    throw new InvalidPBNodeError('Parent node had no data')\n  }\n\n  const meta = UnixFS.unmarshal(parent.node.Data)\n\n  if (meta.type === 'hamt-sharded-directory') {\n    log(`removing ${name} from sharded directory`)\n\n    const result = await removeFromShardedDirectory(parent, name, blockstore, options)\n\n    if (!(await isOverShardThreshold(result.node, blockstore, options.shardSplitThresholdBytes, options))) {\n      log('converting shard to flat directory %c', parent.cid)\n\n      return convertToFlatDirectory(result, blockstore, options)\n    }\n\n    return result\n  }\n\n  log(`removing link ${name} regular directory`)\n\n  return removeFromDirectory(parent, name, blockstore, options)\n}\n\nconst removeFromDirectory = async (parent: Directory, name: string, blockstore: Blockstore, options: AbortOptions): Promise<RemoveLinkResult> => {\n  // Remove existing link if it exists\n  parent.node.Links = parent.node.Links.filter((link) => {\n    return link.Name !== name\n  })\n\n  const parentBlock = dagPB.encode(parent.node)\n  const parentCid = await persist(parentBlock, blockstore, {\n    ...options,\n    cidVersion: parent.cid.version\n  })\n\n  log(`Updated regular directory ${parentCid}`)\n\n  return {\n    node: parent.node,\n    cid: parentCid\n  }\n}\n\nconst removeFromShardedDirectory = async (parent: Directory, name: string, blockstore: Blockstore, options: UpdateHamtDirectoryOptions): Promise<{ cid: CID, node: PBNode }> => {\n  const { path } = await recreateShardedDirectory(parent.cid, name, blockstore, options)\n  const finalSegment = path[path.length - 1]\n\n  if (finalSegment == null) {\n    throw new Error('Invalid HAMT, could not generate path')\n  }\n\n  const linkName = finalSegment.node.Links.filter(l => (l.Name ?? '').substring(2) === name).map(l => l.Name).pop()\n\n  if (linkName == null) {\n    throw new Error('File not found')\n  }\n\n  const prefix = linkName.substring(0, 2)\n  const index = parseInt(prefix, 16)\n\n  // remove the file from the shard\n  finalSegment.node.Links = finalSegment.node.Links.filter(link => link.Name !== linkName)\n  finalSegment.children.unset(index)\n\n  if (finalSegment.node.Links.length === 1) {\n    // replace the subshard with the last remaining file in the parent\n    while (true) {\n      if (path.length === 1) {\n        break\n      }\n\n      const segment = path[path.length - 1]\n\n      if (segment == null || segment.node.Links.length > 1) {\n        break\n      }\n\n      // remove final segment\n      path.pop()\n\n      const nextSegment = path[path.length - 1]\n\n      if (nextSegment == null) {\n        break\n      }\n\n      const link = segment.node.Links[0]\n\n      nextSegment.node.Links = nextSegment.node.Links.filter(l => !(l.Name ?? '').startsWith(nextSegment.prefix))\n      nextSegment.node.Links.push({\n        Hash: link.Hash,\n        Name: `${nextSegment.prefix}${(link.Name ?? '').substring(2)}`,\n        Tsize: link.Tsize\n      })\n    }\n  }\n\n  return updateShardedDirectory(path, blockstore, options)\n}\n\nconst convertToFlatDirectory = async (parent: Directory, blockstore: Blockstore, options: RmLinkOptions): Promise<RemoveLinkResult> => {\n  if (parent.node.Data == null) {\n    throw new InvalidParametersError('Invalid parent passed to convertToFlatDirectory')\n  }\n\n  const rootNode: PBNode = {\n    Links: []\n  }\n  const dir = await exporter(parent.cid, blockstore)\n\n  if (dir.type !== 'directory') {\n    throw new Error('Unexpected node type')\n  }\n\n  for await (const entry of dir.content()) {\n    let tsize = 0\n\n    if (entry.node instanceof Uint8Array) {\n      tsize = entry.node.byteLength\n    } else {\n      tsize = dagPB.encode(entry.node).length\n    }\n\n    rootNode.Links.push({\n      Hash: entry.cid,\n      Name: entry.name,\n      Tsize: tsize\n    })\n  }\n\n  // copy mode/mtime over if set\n  const oldUnixfs = UnixFS.unmarshal(parent.node.Data)\n  rootNode.Data = new UnixFS({ type: 'directory', mode: oldUnixfs.mode, mtime: oldUnixfs.mtime }).marshal()\n  const block = dagPB.encode(dagPB.prepare(rootNode))\n\n  const cid = await persist(block, blockstore, {\n    codec: dagPB,\n    cidVersion: parent.cid.version,\n    signal: options.signal\n  })\n\n  return {\n    cid,\n    node: rootNode\n  }\n}\n","import { logger } from '@libp2p/logger'\nimport mergeOpts from 'merge-options'\nimport { InvalidParametersError } from '../errors.js'\nimport { cidToDirectory } from './utils/cid-to-directory.js'\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js'\nimport { removeLink } from './utils/remove-link.js'\nimport type { RmOptions } from '../index.js'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { CID } from 'multiformats/cid'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('helia:unixfs:rm')\n\nconst defaultOptions: RmOptions = {\n  shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n}\n\nexport async function rm (target: CID, name: string, blockstore: Blockstore, options: Partial<RmOptions> = {}): Promise<CID> {\n  const opts: RmOptions = mergeOptions(defaultOptions, options)\n\n  if (name.includes('/')) {\n    throw new InvalidParametersError('Name must not have slashes')\n  }\n\n  const directory = await cidToDirectory(target, blockstore, opts)\n\n  log('Removing %s from %c', name, target)\n\n  const result = await removeLink(directory, name, blockstore, {\n    ...opts,\n    cidVersion: target.version\n  })\n\n  return result.cid\n}\n","import * as dagPb from '@ipld/dag-pb'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport mergeOpts from 'merge-options'\nimport * as raw from 'multiformats/codecs/raw'\nimport { InvalidPBNodeError, NotUnixFSError, UnknownError } from '../errors.js'\nimport { resolve } from './utils/resolve.js'\nimport type { StatOptions, UnixFSStats } from '../index.js'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { Mtime } from 'ipfs-unixfs'\nimport type { CID } from 'multiformats/cid'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('helia:unixfs:stat')\n\nconst defaultOptions: StatOptions = {\n\n}\n\nexport async function stat (cid: CID, blockstore: Blockstore, options: Partial<StatOptions> = {}): Promise<UnixFSStats> {\n  const opts: StatOptions = mergeOptions(defaultOptions, options)\n  const resolved = await resolve(cid, options.path, blockstore, opts)\n\n  log('stat %c', resolved.cid)\n\n  const result = await exporter(resolved.cid, blockstore, opts)\n\n  if (result.type !== 'file' && result.type !== 'directory' && result.type !== 'raw') {\n    throw new NotUnixFSError()\n  }\n\n  let fileSize: bigint = 0n\n  let dagSize: bigint = 0n\n  let localFileSize: bigint = 0n\n  let localDagSize: bigint = 0n\n  let blocks: number = 0\n  let mode: number | undefined\n  let mtime: Mtime | undefined\n  const type = result.type\n  let unixfs: UnixFS | undefined\n\n  if (result.type === 'raw') {\n    fileSize = BigInt(result.node.byteLength)\n    dagSize = BigInt(result.node.byteLength)\n    localFileSize = BigInt(result.node.byteLength)\n    localDagSize = BigInt(result.node.byteLength)\n    blocks = 1\n  }\n\n  if (result.type === 'directory') {\n    fileSize = 0n\n    dagSize = BigInt(result.unixfs.marshal().byteLength)\n    localFileSize = 0n\n    localDagSize = dagSize\n    blocks = 1\n    mode = result.unixfs.mode\n    mtime = result.unixfs.mtime\n    unixfs = result.unixfs\n  }\n\n  if (result.type === 'file') {\n    const results = await inspectDag(resolved.cid, blockstore, opts)\n\n    fileSize = result.unixfs.fileSize()\n    dagSize = BigInt((result.node.Data?.byteLength ?? 0) + result.node.Links.reduce((acc, curr) => acc + (curr.Tsize ?? 0), 0))\n    localFileSize = BigInt(results.localFileSize)\n    localDagSize = BigInt(results.localDagSize)\n    blocks = results.blocks\n    mode = result.unixfs.mode\n    mtime = result.unixfs.mtime\n    unixfs = result.unixfs\n  }\n\n  return {\n    cid: resolved.cid,\n    mode,\n    mtime,\n    fileSize,\n    dagSize,\n    localFileSize,\n    localDagSize,\n    blocks,\n    type,\n    unixfs\n  }\n}\n\ninterface InspectDagResults {\n  localFileSize: number\n  localDagSize: number\n  blocks: number\n}\n\nasync function inspectDag (cid: CID, blockstore: Blockstore, options: AbortOptions): Promise<InspectDagResults> {\n  const results = {\n    localFileSize: 0,\n    localDagSize: 0,\n    blocks: 0\n  }\n\n  if (await blockstore.has(cid, options)) {\n    const block = await blockstore.get(cid, options)\n    results.blocks++\n    results.localDagSize += block.byteLength\n\n    if (cid.code === raw.code) {\n      results.localFileSize += block.byteLength\n    } else if (cid.code === dagPb.code) {\n      const pbNode = dagPb.decode(block)\n\n      if (pbNode.Links.length > 0) {\n        // intermediate node\n        for (const link of pbNode.Links) {\n          const linkResult = await inspectDag(link.Hash, blockstore, options)\n\n          results.localFileSize += linkResult.localFileSize\n          results.localDagSize += linkResult.localDagSize\n          results.blocks += linkResult.blocks\n        }\n      } else {\n        // leaf node\n        if (pbNode.Data == null) {\n          throw new InvalidPBNodeError(`PBNode ${cid.toString()} had no data`)\n        }\n\n        const unixfs = UnixFS.unmarshal(pbNode.Data)\n\n        if (unixfs.data == null) {\n          throw new InvalidPBNodeError(`UnixFS node ${cid.toString()} had no data`)\n        }\n\n        results.localFileSize += unixfs.data.byteLength ?? 0\n      }\n    } else {\n      throw new UnknownError(`${cid.toString()} was neither DAG_PB nor RAW`)\n    }\n  }\n\n  return results\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { recursive } from 'ipfs-unixfs-exporter'\nimport { importer } from 'ipfs-unixfs-importer'\nimport last from 'it-last'\nimport { pipe } from 'it-pipe'\nimport mergeOpts from 'merge-options'\nimport { CID } from 'multiformats/cid'\nimport * as raw from 'multiformats/codecs/raw'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { InvalidPBNodeError, NotUnixFSError, UnknownError } from '../errors.js'\nimport { SHARD_SPLIT_THRESHOLD_BYTES } from './utils/constants.js'\nimport { persist } from './utils/persist.js'\nimport { resolve, updatePathCids } from './utils/resolve.js'\nimport type { TouchOptions } from '../index.js'\nimport type { PBNode, PBLink } from '@ipld/dag-pb'\nimport type { Blockstore } from 'interface-blockstore'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('helia:unixfs:touch')\n\nconst defaultOptions: TouchOptions = {\n  recursive: false,\n  shardSplitThresholdBytes: SHARD_SPLIT_THRESHOLD_BYTES\n}\n\nexport async function touch (cid: CID, blockstore: Blockstore, options: Partial<TouchOptions> = {}): Promise<CID> {\n  const opts: TouchOptions = mergeOptions(defaultOptions, options)\n  const resolved = await resolve(cid, opts.path, blockstore, opts)\n  const mtime = opts.mtime ?? {\n    secs: BigInt(Math.round(Date.now() / 1000)),\n    nsecs: 0\n  }\n\n  log('touch %c %o', resolved.cid, mtime)\n\n  if (opts.recursive) {\n    // recursively export from root CID, change perms of each entry then reimport\n    // but do not reimport files, only manipulate dag-pb nodes\n    const root = await pipe(\n      async function * () {\n        for await (const entry of recursive(resolved.cid, blockstore)) {\n          let metadata: UnixFS\n          let links: PBLink[]\n\n          if (entry.type === 'raw') {\n            metadata = new UnixFS({ data: entry.node })\n            links = []\n          } else if (entry.type === 'file' || entry.type === 'directory') {\n            metadata = entry.unixfs\n            links = entry.node.Links\n          } else {\n            throw new NotUnixFSError()\n          }\n\n          metadata.mtime = mtime\n\n          const node = {\n            Data: metadata.marshal(),\n            Links: links\n          }\n\n          yield {\n            path: entry.path,\n            content: node\n          }\n        }\n      },\n      // @ts-expect-error blockstore types are incompatible\n      (source) => importer(source, blockstore, {\n        ...opts,\n        dagBuilder: async function * (source, block) {\n          for await (const entry of source) {\n            yield async function () {\n              // @ts-expect-error cannot derive type\n              const node: PBNode = entry.content\n\n              const buf = dagPB.encode(node)\n              const updatedCid = await persist(buf, block, {\n                ...opts,\n                cidVersion: cid.version\n              })\n\n              if (node.Data == null) {\n                throw new InvalidPBNodeError(`${updatedCid} had no data`)\n              }\n\n              const unixfs = UnixFS.unmarshal(node.Data)\n\n              return {\n                cid: updatedCid,\n                size: BigInt(buf.length),\n                path: entry.path,\n                unixfs\n              }\n            }\n          }\n        }\n      }),\n      async (nodes) => last(nodes)\n    )\n\n    if (root == null) {\n      throw new UnknownError(`Could not chmod ${resolved.cid.toString()}`)\n    }\n\n    return updatePathCids(root.cid, resolved, blockstore, opts)\n  }\n\n  const block = await blockstore.get(resolved.cid, options)\n  let metadata: UnixFS\n  let links: PBLink[] = []\n\n  if (resolved.cid.code === raw.code) {\n    metadata = new UnixFS({ data: block })\n  } else {\n    const node = dagPB.decode(block)\n    links = node.Links\n\n    if (node.Data == null) {\n      throw new InvalidPBNodeError(`${resolved.cid.toString()} had no data`)\n    }\n\n    metadata = UnixFS.unmarshal(node.Data)\n  }\n\n  metadata.mtime = mtime\n  const updatedBlock = dagPB.encode({\n    Data: metadata.marshal(),\n    Links: links\n  })\n\n  const hash = await sha256.digest(updatedBlock)\n  const updatedCid = CID.create(resolved.cid.version, dagPB.code, hash)\n\n  await blockstore.put(updatedCid, updatedBlock)\n\n  return updatePathCids(updatedCid, resolved, blockstore, opts)\n}\n","/**\n * @packageDocumentation\n *\n * `@helia/unixfs` is an implementation of a {@link https://github.com/ipfs/specs/blob/main/UNIXFS.md UnixFS filesystem} compatible with {@link https://github.com/ipfs/helia Helia}.\n *\n * See the [API docs](https://ipfs.github.io/helia/modules/_helia_unixfs.html) for all available operations.\n *\n * @example Creating files and directories\n *\n * ```typescript\n * import { createHelia } from 'helia'\n * import { unixfs } from '@helia/unixfs'\n *\n * const helia = createHelia({\n *   // ... helia config\n * })\n * const fs = unixfs(helia)\n *\n * // create an empty dir and a file, then add the file to the dir\n * const emptyDirCid = await fs.addDirectory()\n * const fileCid = await fs.addBytes(Uint8Array.from([0, 1, 2, 3]))\n * const updateDirCid = await fs.cp(fileCid, emptyDirCid, 'foo.txt')\n *\n * // or doing the same thing as a stream\n * for await (const entry of fs.addAll([{\n *   path: 'foo.txt',\n *   content: Uint8Array.from([0, 1, 2, 3])\n * }])) {\n *   console.info(entry)\n * }\n * ```\n *\n * @example Recursively adding a directory\n *\n * Node.js-compatibly environments only:\n *\n * ```typescript\n * import { globSource } from '@helia/unixfs'\n *\n * for await (const entry of fs.addAll(globSource('path/to/containing/dir', 'glob-pattern'))) {\n *   console.info(entry)\n * }\n * ```\n */\n\nimport { addAll, addBytes, addByteStream, addDirectory, addFile } from './commands/add.js'\nimport { cat } from './commands/cat.js'\nimport { chmod } from './commands/chmod.js'\nimport { cp } from './commands/cp.js'\nimport { ls } from './commands/ls.js'\nimport { mkdir } from './commands/mkdir.js'\nimport { rm } from './commands/rm.js'\nimport { stat } from './commands/stat.js'\nimport { touch } from './commands/touch.js'\nimport type { GetBlockProgressEvents, PutBlockProgressEvents } from '@helia/interface/blocks'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Blockstore } from 'interface-blockstore'\nimport type { Mtime, UnixFS as IPFSUnixFS } from 'ipfs-unixfs'\nimport type { ExporterProgressEvents, UnixFSEntry } from 'ipfs-unixfs-exporter'\nimport type { ByteStream, DirectoryCandidate, FileCandidate, ImportCandidateStream, ImporterOptions, ImporterProgressEvents, ImportResult } from 'ipfs-unixfs-importer'\nimport type { CID, Version } from 'multiformats/cid'\nimport type { ProgressOptions } from 'progress-events'\n\nexport interface UnixFSComponents {\n  blockstore: Blockstore\n}\n\nexport type AddEvents = PutBlockProgressEvents\n| ImporterProgressEvents\n\nexport interface AddOptions extends AbortOptions, Omit<ImporterOptions, 'onProgress'>, ProgressOptions<AddEvents> {\n\n}\n\nexport type GetEvents = GetBlockProgressEvents\n| ExporterProgressEvents\n\n/**\n * Options to pass to the cat command\n */\nexport interface CatOptions extends AbortOptions, ProgressOptions<GetEvents> {\n  /**\n   * Start reading the file at this offset\n   */\n  offset?: number\n\n  /**\n   * Stop reading the file after this many bytes\n   */\n  length?: number\n\n  /**\n   * An optional path to allow reading files inside directories\n   */\n  path?: string\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * Options to pass to the chmod command\n */\nexport interface ChmodOptions extends AbortOptions, ProgressOptions<GetEvents | PutBlockProgressEvents> {\n  /**\n   * If the target of the operation is a directory and this is true,\n   * apply the new mode to all directory contents\n   */\n  recursive: boolean\n\n  /**\n   * Optional path to set the mode on directory contents\n   */\n  path?: string\n\n  /**\n   * DAGs with a root block larger than this value will be sharded. Blocks\n   * smaller than this value will be regular UnixFS directories.\n   */\n  shardSplitThresholdBytes: number\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * Options to pass to the cp command\n */\nexport interface CpOptions extends AbortOptions, ProgressOptions<GetEvents | PutBlockProgressEvents> {\n  /**\n   * If true, allow overwriting existing directory entries (default: false)\n   */\n  force: boolean\n\n  /**\n   * DAGs with a root block larger than this value will be sharded. Blocks\n   * smaller than this value will be regular UnixFS directories.\n   */\n  shardSplitThresholdBytes: number\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * Options to pass to the ls command\n */\nexport interface LsOptions extends AbortOptions, ProgressOptions<GetEvents> {\n  /**\n   * Optional path to list subdirectory contents if the target CID resolves to\n   * a directory\n   */\n  path?: string\n\n  /**\n   * Start reading the directory entries at this offset\n   */\n  offset?: number\n\n  /**\n   * Stop reading the directory contents after this many directory entries\n   */\n  length?: number\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * Options to pass to the mkdir command\n */\nexport interface MkdirOptions extends AbortOptions, ProgressOptions<GetEvents | PutBlockProgressEvents> {\n  /**\n   * The CID version to create the new directory with - defaults to the same\n   * version as the containing directory\n   */\n  cidVersion: Version\n\n  /**\n   * If true, allow overwriting existing directory entries (default: false)\n   */\n  force: boolean\n\n  /**\n   * An optional mode to set on the new directory\n   */\n  mode?: number\n\n  /**\n   * An optional mtime to set on the new directory\n   */\n  mtime?: Mtime\n\n  /**\n   * DAGs with a root block larger than this value will be sharded. Blocks\n   * smaller than this value will be regular UnixFS directories.\n   */\n  shardSplitThresholdBytes: number\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * Options to pass to the rm command\n */\nexport interface RmOptions extends AbortOptions, ProgressOptions<GetEvents | PutBlockProgressEvents> {\n  /**\n   * DAGs with a root block larger than this value will be sharded. Blocks\n   * smaller than this value will be regular UnixFS directories.\n   */\n  shardSplitThresholdBytes: number\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * Options to pass to the stat command\n */\nexport interface StatOptions extends AbortOptions, ProgressOptions<GetEvents> {\n  /**\n   * An optional path to allow statting paths inside directories\n   */\n  path?: string\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * Statistics relating to a UnixFS DAG\n */\nexport interface UnixFSStats {\n  /**\n   * The file or directory CID\n   */\n  cid: CID\n\n  /**\n   * The file or directory mode\n   */\n  mode?: number\n\n  /**\n   * The file or directory mtime\n   */\n  mtime?: Mtime\n\n  /**\n   * The size of the file in bytes\n   */\n  fileSize: bigint\n\n  /**\n   * The size of the DAG that holds the file in bytes\n   */\n  dagSize: bigint\n\n  /**\n   * How much of the file is in the local block store\n   */\n  localFileSize: bigint\n\n  /**\n   * How much of the DAG that holds the file is in the local blockstore\n   */\n  localDagSize: bigint\n\n  /**\n   * How many blocks make up the DAG - nb. this will only be accurate\n   * if all blocks are present in the local blockstore\n   */\n  blocks: number\n\n  /**\n   * The type of file\n   */\n  type: 'file' | 'directory' | 'raw'\n\n  /**\n   * UnixFS metadata about this file or directory. Will not be present\n   * if the node is a `raw` type.\n   */\n  unixfs?: IPFSUnixFS\n}\n\n/**\n * Options to pass to the touch command\n */\nexport interface TouchOptions extends AbortOptions, ProgressOptions<GetEvents | PutBlockProgressEvents> {\n  /**\n   * Optional mtime to set on the DAG root, defaults to the current time\n   */\n  mtime?: Mtime\n\n  /**\n   * Optional path to set mtime on directory contents\n   */\n  path?: string\n\n  /**\n   * If the DAG is a directory and this is true, update the mtime on all contents\n   */\n  recursive: boolean\n\n  /**\n   * DAGs with a root block larger than this value will be sharded. Blocks\n   * smaller than this value will be regular UnixFS directories.\n   */\n  shardSplitThresholdBytes: number\n\n  /**\n   * If true, do not perform any network operations and throw if blocks are\n   * missing from the local store. (default: false)\n   */\n  offline?: boolean\n}\n\n/**\n * The UnixFS interface provides familiar filesystem operations to make working with\n * UnixFS DAGs simple and intuitive.\n */\nexport interface UnixFS {\n  /**\n   * Add all files and directories from the passed stream. This method wraps the\n   * `importer` export from the `ipfs-unixfs-importer` module - please see the docs\n   * for input/output types.\n   *\n   * @example\n   *\n   * ```typescript\n   * const source = [{\n   *   path: './foo.txt',\n   *   content: Uint8Array.from([0, 1, 2, 3])\n   * }, {\n   *   path: './bar.txt',\n   *   content: Uint8Array.from([4, 5, 6, 7])\n   * }]\n   *\n   * for await (const entry of fs.import(source)) {\n   *   console.info(entry)\n   * }\n   * ```\n   */\n  addAll(source: ImportCandidateStream, options?: Partial<AddOptions>): AsyncIterable<ImportResult>\n\n  /**\n   * Add a single `Uint8Array` to your Helia node as a file.\n   *\n   * @example\n   *\n   * ```typescript\n   * const cid = await fs.addBytes(Uint8Array.from([0, 1, 2, 3]))\n   *\n   * console.info(cid)\n   * ```\n   */\n  addBytes(bytes: Uint8Array, options?: Partial<AddOptions>): Promise<CID>\n\n  /**\n   * Add a stream of `Uint8Array` to your Helia node as a file.\n   *\n   * @example\n   *\n   * ```typescript\n   * import fs from 'fs'\n   *\n   * const stream = fs.createReadStream('./foo.txt')\n   * const cid = await fs.addByteStream(stream)\n   *\n   * console.info(cid)\n   * ```\n   */\n  addByteStream(bytes: ByteStream, options?: Partial<AddOptions>): Promise<CID>\n\n  /**\n   * Add a file to your Helia node with optional metadata.\n   *\n   * @example\n   *\n   * ```typescript\n   * const cid = await fs.addFile({\n   *   path: './foo.txt',\n   *   content: Uint8Array.from([0, 1, 2, 3]),\n   *   mode: 0x755,\n   *   mtime: {\n   *     secs: 10n,\n   *     nsecs: 0\n   *   }\n   * })\n   *\n   * console.info(cid)\n   * ```\n   */\n  addFile(file: FileCandidate, options?: Partial<AddOptions>): Promise<CID>\n\n  /**\n   * Add a directory to your Helia node.\n   *\n   * @example\n   *\n   * ```typescript\n   * const cid = await fs.addDirectory()\n   *\n   * console.info(cid)\n   * ```\n   */\n  addDirectory(dir?: Partial<DirectoryCandidate>, options?: Partial<AddOptions>): Promise<CID>\n\n  /**\n   * Retrieve the contents of a file from your Helia node.\n   *\n   * @example\n   *\n   * ```typescript\n   * for await (const buf of fs.cat(cid)) {\n   *   console.info(buf)\n   * }\n   * ```\n   */\n  cat(cid: CID, options?: Partial<CatOptions>): AsyncIterable<Uint8Array>\n\n  /**\n   * Change the permissions on a file or directory in a DAG\n   *\n   * @example\n   *\n   * ```typescript\n   * const beforeCid = await fs.addBytes(Uint8Array.from([0, 1, 2, 3]))\n   * const beforeStats = await fs.stat(beforeCid)\n   *\n   * const afterCid = await fs.chmod(cid, 0x755)\n   * const afterStats = await fs.stat(afterCid)\n   *\n   * console.info(beforeCid, beforeStats)\n   * console.info(afterCid, afterStats)\n   * ```\n   */\n  chmod(cid: CID, mode: number, options?: Partial<ChmodOptions>): Promise<CID>\n\n  /**\n   * Add a file or directory to a target directory.\n   *\n   * @example\n   *\n   * ```typescript\n   * const fileCid = await fs.addBytes(Uint8Array.from([0, 1, 2, 3]))\n   * const directoryCid = await fs.addDirectory()\n   *\n   * const updatedCid = await fs.cp(fileCid, directoryCid, 'foo.txt')\n   *\n   * console.info(updatedCid)\n   * ```\n   */\n  cp(source: CID, target: CID, name: string, options?: Partial<CpOptions>): Promise<CID>\n\n  /**\n   * List directory contents.\n   *\n   * @example\n   *\n   * ```typescript\n   * for await (const entry of fs.ls(directoryCid)) {\n   *   console.info(entry)\n   * }\n   * ```\n   */\n  ls(cid: CID, options?: Partial<LsOptions>): AsyncIterable<UnixFSEntry>\n\n  /**\n   * Make a new directory under an existing directory.\n   *\n   * @example\n   *\n   * ```typescript\n   * const directoryCid = await fs.addDirectory()\n   *\n   * const updatedCid = await fs.mkdir(directoryCid, 'new-dir')\n   *\n   * console.info(updatedCid)\n   * ```\n   */\n  mkdir(cid: CID, dirname: string, options?: Partial<MkdirOptions>): Promise<CID>\n\n  /**\n   * Remove a file or directory from an existing directory.\n   *\n   * @example\n   *\n   * ```typescript\n   * const directoryCid = await fs.addDirectory()\n   * const updatedCid = await fs.mkdir(directoryCid, 'new-dir')\n   *\n   * const finalCid = await fs.rm(updatedCid, 'new-dir')\n   *\n   * console.info(finalCid)\n   * ```\n   */\n  rm(cid: CID, path: string, options?: Partial<RmOptions>): Promise<CID>\n\n  /**\n   * Return statistics about a UnixFS DAG.\n   *\n   * @example\n   *\n   * ```typescript\n   * const fileCid = await fs.addBytes(Uint8Array.from([0, 1, 2, 3]))\n   *\n   * const stats = await fs.stat(fileCid)\n   *\n   * console.info(stats)\n   * ```\n   */\n  stat(cid: CID, options?: Partial<StatOptions>): Promise<UnixFSStats>\n\n  /**\n   * Update the mtime of a UnixFS DAG\n   *\n   * @example\n   *\n   * ```typescript\n   * const beforeCid = await fs.addBytes(Uint8Array.from([0, 1, 2, 3]))\n   * const beforeStats = await fs.stat(beforeCid)\n   *\n   * const afterCid = await fs.touch(beforeCid)\n   * const afterStats = await fs.stat(afterCid)\n   *\n   * console.info(beforeCid, beforeStats)\n   * console.info(afterCid, afterStats)\n   * ```\n   */\n  touch(cid: CID, options?: Partial<TouchOptions>): Promise<CID>\n}\n\nclass DefaultUnixFS implements UnixFS {\n  private readonly components: UnixFSComponents\n\n  constructor (components: UnixFSComponents) {\n    this.components = components\n  }\n\n  async * addAll (source: ImportCandidateStream, options: Partial<AddOptions> = {}): AsyncIterable<ImportResult> {\n    yield * addAll(source, this.components.blockstore, options)\n  }\n\n  async addBytes (bytes: Uint8Array, options: Partial<AddOptions> = {}): Promise<CID> {\n    return addBytes(bytes, this.components.blockstore, options)\n  }\n\n  async addByteStream (bytes: ByteStream, options: Partial<AddOptions> = {}): Promise<CID> {\n    return addByteStream(bytes, this.components.blockstore, options)\n  }\n\n  async addFile (file: FileCandidate, options: Partial<AddOptions> = {}): Promise<CID> {\n    return addFile(file, this.components.blockstore, options)\n  }\n\n  async addDirectory (dir: Partial<DirectoryCandidate> = {}, options: Partial<AddOptions> = {}): Promise<CID> {\n    return addDirectory(dir, this.components.blockstore, options)\n  }\n\n  async * cat (cid: CID, options: Partial<CatOptions> = {}): AsyncIterable<Uint8Array> {\n    yield * cat(cid, this.components.blockstore, options)\n  }\n\n  async chmod (cid: CID, mode: number, options: Partial<ChmodOptions> = {}): Promise<CID> {\n    return chmod(cid, mode, this.components.blockstore, options)\n  }\n\n  async cp (source: CID, target: CID, name: string, options: Partial<CpOptions> = {}): Promise<CID> {\n    return cp(source, target, name, this.components.blockstore, options)\n  }\n\n  async * ls (cid: CID, options: Partial<LsOptions> = {}): AsyncIterable<UnixFSEntry> {\n    yield * ls(cid, this.components.blockstore, options)\n  }\n\n  async mkdir (cid: CID, dirname: string, options: Partial<MkdirOptions> = {}): Promise<CID> {\n    return mkdir(cid, dirname, this.components.blockstore, options)\n  }\n\n  async rm (cid: CID, path: string, options: Partial<RmOptions> = {}): Promise<CID> {\n    return rm(cid, path, this.components.blockstore, options)\n  }\n\n  async stat (cid: CID, options: Partial<StatOptions> = {}): Promise<UnixFSStats> {\n    return stat(cid, this.components.blockstore, options)\n  }\n\n  async touch (cid: CID, options: Partial<TouchOptions> = {}): Promise<CID> {\n    return touch(cid, this.components.blockstore, options)\n  }\n}\n\n/**\n * Create a {@link UnixFS} instance for use with {@link https://github.com/ipfs/helia Helia}\n */\nexport function unixfs (helia: { blockstore: Blockstore }): UnixFS {\n  return new DefaultUnixFS(helia)\n}\n\nexport { globSource } from './utils/glob-source.js'\nexport { urlSource } from './utils/url-source.js'\n","import dotenv from 'dotenv';\ndotenv.config();\n\ninterface EnvConfig {\n    TARGET_FOLDER: string;\n    IPNS: string;\n}\n\nexport const config: EnvConfig = {\n    TARGET_FOLDER: process.env.TARGET_FOLDER,\n    IPNS: process.env.IPNS!\n};\n"],"mappings":"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,IAAG,GAAE,KAAI,KAAI,GAAE,IAAG,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,GAAE,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,KAAI,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,KAAI,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,KAAI,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,KAAI,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE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I,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,GAAE,GAAE,GAAE,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,GAAE,GAAE,GAAE,KAAI,KAAI,KAAI,IAAG,KAAI,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,KAAI,KAAI,GAAE,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,KAAI,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,GAAE,KAAI,IAAG,GAAE,KAAI,KAAI,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,KAAI,IAAG,GAAE,IAAG,GAAE,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,GAAE,KAAI,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,GAAE,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,GAAE,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,GAAE,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,GAAE,KAAI,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAE,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,IAAG,KAAI,GAAE,KAAI,KAAI,GAAE,IAAG,IAAG,KAAI,GAAE,KAAI,IAAG,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,GAAE,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,KAAI,KAAI,KAAI,KAAI,IAAG,GAA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EAAM;EAAO;EAAO;EAAQ;EAAO;EAAQ;EAAO;EAAO;EAAM;EAAO;EAAO;EAC1G;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAQ;EAAM;EAAO;EAAM;EAAO;EAAO;EAAO;EAAO;EAAO;EAC1G;EAAO;EAAQ;EAAO;EAAM;EAAK;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAK;EAAO;EACvG;EAAM;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAM;EAAO;EAAQ;EAAQ;EAC3G;EAAO;EAAQ;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAQ;EAAM;EAAO;EAAO;EAAO;EAAQ;EAAM;EAC5G;EAAO;EAAM;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAQ;EAAO;EAC3G;EAAM;EAAO;EAAO;EAAM;EAAO;EAAO;EAAQ;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAM;EACxG;EAAO;EAAM;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAK;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAM;EACvG;EAAO;EAAO;EAAQ;EAAQ;EAAM;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAQ;EAAO;EAAQ;EAAM;EAAO;EAC5G;EAAO;EAAM;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAQ;EAC1G;EAAQ;EAAO;EAAO;EAAM;EAAM;EAAO;EAAM;EAAO;EAAO;EAAO;EAAO;EAAM;EAAQ;EAAO;EAAO;EACvG;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAM;EAAM;EAAM;EAAO;EAAO;EAAM;EAAO;EAAO;EAAQ;EAAO;EACvG;EAAM;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAM;EAAQ;EAAO;EAAQ;EAAQ;EAAM;EAAO;EAAQ;EAAQ;EAC5G;EAAQ;EAAO;EAAO;EAAO;EAAM;EAAQ;EAAM;EAAO;EAAO;EAAO;EAAO;EAAM;EAAQ;EAAO;EAAM;EACxG;EAAM;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAM;EAAQ;EAAQ;EAAO;EAAM;EAAM;EAAQ;EAAO;EACxG;EAAO;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;EACxG;EAAO;EAAQ;EAAQ;EAAQ;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAM;EAAO;EAAM;EAAO;EAAO;EAC3G;EAAM;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAQ;EAAO;EAC3G;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAQ;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAM;EAC3G;EAAM;EAAO;EAAO;EAAO;EAAO;EAAO;EAAM;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAQ;EAAM;EAAO;EACxG;EAAM;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAM;EAAO;EAAO;EAAO;EAAO;EAAO;EACxG;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAM;EAAQ;EAAQ;EAAO;EAAO;EAAM;EAAO;EAAO;EAAO;EAAQ;EAC3G;EAAO;EAAO;EAAO;EAAO;EAAM;EAAO;EAAO;EAAO;EAAM;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EACxG;EAAO;EAAO;EAAM;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAQ;EAAQ;EAAO;EAAQ;EAC5G;EAAO;EAAO;EAAO;EAAO;EAAM;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAM;EACzG;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAM;EAAO;EAAQ;EAAO;EAAM;EAAO;EAAO;EAAQ;EAC1G;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAQ;EAAQ;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAM;EAAQ;EAAM;EAC5G;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAQ;EAAM;EAC3G;EAAO;EAAQ;EAAM;EAAO;EAAQ;EAAO;EAAO;EAAM;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAQ;EAAO;EAC3G;EAAO;EAAK;EAAM;EAAO;EAAK;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAQ;EAAO;EAAQ;EACxG;EAAQ;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO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AQ;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAC5G;EAAM;EAAQ;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAC3G;EAAM;EAAQ;EAAQ;EAAM;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAM;EAC1G;EAAM;EAAO;EAAO;EAAQ;EAAQ;EAAQ;EAAO;EAAM;EAAO;EAAO;EAAO;EAAM;EAAO;EAAM;EAAO;EACxG;EAAK;EAAQ;EAAQ;EAAO;EAAQ;EAAQ;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAM;EAAO;EAAO;EAAQ;EAC5G;EAAO;EAAO;EAAO;EAAQ;EAAQ;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAC5G;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAQ;EAAO;EAAM;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAC1G;EAAQ;EAAO;EAAO;EAAM;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAC1G;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAM;EAAK;EAAQ;EAAO;EAAK;EAAO;EAAO;EACtG;EAAQ;EAAO;EAAO;EAAO;EAAM;EAAM;EAAQ;EAAQ;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAM;EAC1G;EAAM;EAAO;EAAM;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAQ;EAAQ;EAAO;EAAO;EAAO;EAC3G;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAM;EAAO;EAAO;EAC1G;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAO;EAAK;EAAO;EAAO;EAAO;EAAM;EAAO;EAAO;EAAQ;EAAO;EACxG;EAAO;EAAO;EAAO;EAAQ;EAAO;EAAO;EAAO;EAAM;EAAQ;EAAM;EAAO;EAAO;EAAQ;EAAO;EAAO;EAC1G;EAAO;EAAQ;EAAO;EAAQ;EAAQ;EAAO;EAAO;EAAO;EAAO;EAAM;EAAO;EAAO;EAAO;EAAQ;EAAO;EAC5G;EA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,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7C;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,E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","names":["exports","module","code","output","exports","ChaCha20Poly1305","ctx","length","exports","Poly1305","ctx","exports","exports","newInstance","exports","ctx","output","length","exports","exports","exports","newInstance","exports","exports","SHA256","output","exports","exports","ctx","digest","output","bytes2","exports","module","isElectron","exports","Netmask","atob","base","net","exports","module","exports","module","name","globalThis","symbol","source","config","merge","exports","module","string","exports","module","exports","module","sanitize","output","exports","module","cache","exports","module","EventEmitter","names","name","length","exports","module","name","exports","module","hash","debug","self","split","name","exports","module","exports","module","exports","module","os","version","exports","module","log","name","useColors","debug","require_src","exports","module","exports","resolve","EventIterator","require_node","exports","exports","exports","module","isPlainObject","slice","source","exports","module","XMLDOMImplementation","version","exports","module","XMLDOMErrorHandler","exports","module","XMLDOMStringList","exports","module","XMLDOMConfiguration","name","exports","module","exports","module","XMLAttribute","name","exports","module","XMLNamedNodeMap","name","exports","module","XMLElement","name","exports","module","XMLCharacterData","exports","module","XMLCData","exports","module","XMLComment","exports","module","XMLDeclaration","version","exports","module","XMLDTDAttList","exports","module","XMLDTDEntity","name","exports","module","XMLDTDElement","name","exports","module","XMLDTDNotation","name","exports","module","XMLDocType","name","exports","module","XMLRaw","exports","module","XMLText","exports","module","XMLProcessingInstruction","exports","module","XMLDummy","exports","module","XMLNodeList","exports","module","exports","module","XMLNode","name","version","func","exports","module","XMLStringifier","exports","module","exports","module","XMLWriterBase","name","exports","module","XMLStringWriter","exports","module","isPlainObject","XMLDocument","name","source","filter","exports","module","isPlainObject","XMLDocumentCB","name","version","exports","module","XMLStreamWriter","name","require_lib","exports","module","name","exports","exports","createStream","parser","write","s","message","name","buffer","length","exports","exports","exports","processors","process","Parser","err","resolve","parser","exports","parser","message","exports","module","undefined","bytes","exports","module","exports","module","last","exists","bytes","src_exports","path","import_events","import_net","FaultTolerance","message","code","nodeSetMaxListeners","message","import_base58","import_cid","import_node_buffer","buf","name","encode","decode","buf","encoder","string","base","buf","import_node_buffer","length","import_basics","import_node_buffer","string","base","ipVersion","bytes","toString","buf","length","code","name","path","buf","toString","buf","hash","mh","path","bytes","code","buf","tcp","code","name","name","source","err","resolve","duplex","config","os","path","ip","log","sink","source","buf","options","resolve","TCPListenerStatusCode","net","err","peerId","resolve","TCP","resolve","net","import_base58","import_basics","import_cid","Digest","inspect","buf","keys_exports","generateKeyPair","generateKeyPairFromSeed","unmarshalPrivateKey","import_base58","import_identity","import_sha2","crypto","crypto","import_crypto","create","digest","crypto","cipher","create","buf","buf","buf","buf","string","buffer","buf","buffer","length","bytes","buf","size","buf","alloc","buf","message","CODEC_TYPES","createCodec","name","encode","decode","encode","decode","createCodec","encode","decode","createCodec","CodeError","message","code","KeyType","__KeyTypeValues","PublicKey","length","buf","PrivateKey","bytes","message","privateKeyBytes","publicKeyBytes","length","import_crypto","names","crypto","import_base64","create","import_crypto","create","hash","hmac","crypto","hash","create","generateKeyPair","import_sha2","import_crypto","import_util","crypto","toBytes","crypto","randomBytes","length","hash","toBytes","buf","message","hash","toBytes","isLE","_32n","buffer","toBytes","take","dataView","length","Bl","Bl","buffer","buf","dataView","code","base64","base64url","base","buf","retBuf","retView","concat","buffer","buf","_a","retView","number","tempBufferView","name","optional","length","Boolean","buf","first","second","bytes","concat","string","Set","buffer","parser","import_crypto","bytes","crypto","randomBytes","keySize","buf","keypair","crypto","generateKey","keypair","hashAndSign","hash","crypto","buf","hashAndVerify","hashAndVerify","bytes","randomBytes","message","hashAndSign","hash","generateKeyPair","generateKey","generateKeyPair","import_sha2","sha256","concatBytes","isBytes","utf8ToBytes","bytes","validators","_0n","_1n","_2n","number","Fp","map","bitLen","isLE","_0n","_1n","bytes","Fp","length","isLE","_1n","_0n","_1n","base","window","Fp","slice","s","_0n","_1n","_2n","_3n","_4n","toBytes","concatBytes","bytes","isBytes","Point","a","cat","number","from","length","hash","randomBytes","r","is","hash","create","_1n","_2n","_3n","sha256","_0n","generateKey","hashAndSign","hash","crypto","buf","digest","hashAndVerify","hashAndVerify","bytes","message","hashAndSign","hash","generateKeyPair","generateKey","generateKeyPair","generateKeyPairFromSeed","buf","unmarshalPrivateKey","symbol","buf","length","bytes","search","length","encode","source","ReadMode","buf","length","decode","source","buffer","errCode","resolve","AbortError","message","code","resolve","CodeError","message","code","AbortError","duplex","write","source","buf","bytes","resolve","CodeError","message","code","duplex","bytes","buf","source","last","AbortError","message","code","pushable","buffer","buffer","pushable","drain","resolve","options","AbortError","_pushable","isAsyncIterable","source","output","pushable","first","duplex","isAsyncIterable","source","pushable","import_node_crypto","detectElectron","isBytes","createView","isLE","utf8ToBytes","toBytes","utf8ToBytes","isBytes","checkOpts","ensureBytes","isBytes","equalBytes","setBigUint64","isLE","_32n","number","isBytes","bytes","exists","output","bytes","toBytes","ensureBytes","exists","buffer","take","output","utf8ToBytes","rotl","output","take","checkOpts","number","bytes","nc","rotl","createView","setBigUint64","ensureBytes","output","equalBytes","_0n","_1n","_2n","_8n","validateOpts","Fp","randomBytes","uvRatio","adjustScalarBytes","bytes","ctx","Point","G","A","B","F","C","D","E","H","X3","Y3","T3","Z3","cofactor","hash","concatBytes","_0n","_1n","validateOpts","adjustScalarBytes","bytes","_0n","_1n","_2n","_5n","bytes","pow","Fp","ctx","Fp","_2n","Fp","hash","toBytes","EMPTY_BUFFER","length","HMAC","sha256","hash","crypto","buf","final","output","crypto","keypair","import_node_buffer","message","crypto","message","NoiseExtensions","length","buf","NoiseHandshakePayload","log","crypto","plaintext","source","crypto","unmarshalPrivateKey","source","decode","config","FrameType","Flag","GoAwayCode","source","length","isPromise","source","log","isPromise","isPromise","pushable","source","err","symbol","src_default","isAsyncIterable","isPromise","source","res","peekable","src_default","func","StreamState","src_default","buf","resolve","CLOSE_TIMEOUT","pushable","source","isPromise","errCode","name","resolve","length","resolve","MessageTypes","Decoder","length","MSB","REST","buf","pool","encode","source","message","name","CLOSE_TIMEOUT","output","pushable","source","encode","name","sink","Decoder","message","stream","generateKeyPair","import_netmask","isAsyncIterable","source","src_default","isAsyncIterable","source","func","peekable","src_default","CustomEvent","source","Message","MessageType","__MessageTypeValues","ResponseStatus","__ResponseStatusValues","PeerInfo","_codec","length","buf","Dial","DialResponse","self","source","decode","buf","src_default","peerId","multiaddr","encode","map","stream","duplex","message","HolePunch","Type","__TypeValues","length","buf","import_base58","import_base64","string","number","or","and","DNS4","DNS6","DNSADDR","DNS","IP","TCP","UDP","QUIC","QUICV1","_WebSockets","WebSockets","_WebSocketsSecure","WebSocketsSecure","_WebRTCDirect","WebRTCDirect","_WebTransport","WebTransport","_P2P","P2P","_Circuit","Circuit","WebRTC","HTTP","HTTPS","Circuit","DNS","IP","peerId","output","codes","Envelope","length","buf","peerId","unmarshalPrivateKey","codes","a","b","PeerRecord","AddressInfo","_codec","length","buf","PeerRecord","buf","peerId","Identify","length","buf","defaultValues","Identify","PeerRecord","message","buf","peerId","output","multiaddr","Identify","K","import_base64","sha256","pbkdf2","keySize","hash","types","bytes","import_index","mergeOptions","codes","name","sanitize","delay","resolve","pbkdf2","randomBytes","codes","exists","keypair","generateKeyPair","batch","unmarshalPrivateKey","PROTOCOL_VERSION","PROTOCOL_NAME","PROTOCOL_PREFIX","TIMEOUT","MAX_INBOUND_STREAMS","MAX_OUTBOUND_STREAMS","PROTOCOL_PREFIX","PROTOCOL_NAME","PROTOCOL_VERSION","TIMEOUT","MAX_INBOUND_STREAMS","MAX_OUTBOUND_STREAMS","randomBytes","source","src_default","isAsyncIterable","source","src_default","Record","length","buf","hour","minute","second","raw","Record","length","buf","MessageType","__MessageTypeValues","ConnectionType","__ConnectionTypeValues","PeerInfo","Message","selectors","import_sha2","validators","import_sha2","multiaddr","buf","peerId","buf","multiaddr","validators","selectors","raw","from","source","src_default","self","map","peerId","output","output","source","src_default","self","providers","peerId","multiaddr","CodeError","stream","Message","message","peerId","validators","keys_exports","self","peerId","multiaddr","output","import_index","message","AbortError","resolve","first","EventEmitter","delay","resolve","filter","cache","batch","peerId","buffer","buf","signal","log","pushable","log","signal","log","isAsyncIterable","length","source","src_default","isAsyncIterable","source","src_default","resolve","event","source","src_default","AbortError","message","code","resolve","lowerBound","first","pushable","peerId","arrayEquals","length","name","Message","import_sha2","peerId","src_default","randomBytes","keyPrefix","length","import_cid","peerId","peerId","import_cid","peerId","output","multiaddr","peerId","peerId","validators","peerId","validators","peerId","self","source","decode","Message","encode","peerId","src_default","peerId","validators","selectors","multiaddr","EventTypes","import_os","import_base32","import_base58","import_base64","debug","logger","name","debug","import_events","cache","http","https","resolve","cache","message","cache","import_http","import_net","resolve","import_os","output","os","resolve","http","req","import_xml2js","resolve","xml2js","message","resolve","buf","import_crypto","crypto","message","buffer","message","string","length","resolve","message","buffer","resolve","src_default","discover","src_default","import_err_code","debug","import_xml2js","import_http","import_https","log","initRequest","http","https","resolve","log","args","parser","xml2js","types","service","base","log","discoverGateway","log","output","os","import_err_code","isAsyncIterable","source","src_default","source","src_default","source","buffer","src_exports","createNode","decode","encode","name","import_cid","bytes","bytes","size","base","import_cid","textEncoder","Hash","createNode","name","buf","name","encode","decode","bytes","buf","import_err_code","Data","DataType","__DataTypeValues","length","buf","UnixTime","Metadata","message","errcode","import_cid","import_sha2","buffer","src_exports","unixfs","src_exports","encode","import_err_code","unixfs","encode","path","node","encode","isIterable","isAsyncIterable","errCode","source","path","import_err_code","source","errCode","source","reduce","src_default","isAsyncIterable","source","arr","src_default","import_cid","name","unixfs","buffer","encode","number","bytes","mur","SparseArray","children","map","reduce","acc","exists","hash","output","length","hashFn","hash","buffer","buf","name","children","dir","size","buffer","encode","path","last","source","importer","source","src_default","errcode","buf","source","importer","bytes","import_err_code","isAsyncIterable","source","res","src_default","import_cid","name","textDecoder","textEncoder","isBuffer","buf","toString","bytes","fromString","string","utf8ToBytes","bytes","isBuffer","concat","length","alloc","compare","isBuffer","utf8ToBytes","buf","bytes","alloc","concat","buf","encodedSize","buf","encodedSize","compareTokens","length","buf","fromString","bytes","encodedSize","compareTokens","compare","toToken","length","toString","toToken","length","buf","encodedSize","toToken","length","buf","encodedSize","buf","encodedSize","bytes","buf","encodedSize","ui8a","length","decode","import_cid","toByteView","buf","bytes","code","decode","toByteView","buf","is","fromString","decode","import_multiformats","import_base64","toByteView","buf","bytes","decodeOptions","code","decode","buf","toByteView","decodeOptions","import_err_code","json","raw","import_identity","import_err_code","import_cid","name","path","errCode","name","path","resolve","decode","resolve","name","path","decode","import_err_code","import_err_code","length","errCode","buf","resolve","name","path","errCode","resolve","name","path","import_err_code","rawContent","buf","resolve","name","path","errCode","import_err_code","import_err_code","buf","path","name","errCode","link","decode","isAsyncIterable","source","peekable","src_default","func","unixfs","path","resolve","length","source","src_default","import_err_code","raw","buf","errCode","source","src_default","decode","unixfs","path","resolve","read","pushable","import_err_code","unixfs","path","resolve","errCode","source","src_default","name","decode","name","link","unixfs","path","resolve","decode","errCode","resolvers","code","resolve","name","path","errCode","toPathComponents","path","output","errCode","name","exporter","src_default","node","options","message","name","code","import_cid","import_sha2","import_sparse_array","wrapHash","hashFn","InfiniteHash","hash","buffer","ConsumableBuffer","START_MASKS","STOP_MASKS","byteBitsToInt","length","maskFor","hamtHashFn","buf","import_sparse_array","import_cid","import_cid","import_sha2","persist","buffer","src_exports","Dir","DirSharded","hamtHashFn","name","calculateSize","flush","children","isDir","dir","size","buffer","encode","persist","CID_V0","CID_V1","log","toPrefix","DirSharded","src_default","path","encode","persist","wrapHash","hamtHashFn","hash","decode","children","SparseArray","linkName","unixfs","CID_V1","CID_V0","name","node","decode","log","decode","unixfs","buf","encode","hash","path","index","wrapHash","hamtHashFn","toPrefix","children","SparseArray","exporter","name","exporter","encode","log","resolve","path","src_default","result","mergeOptions","defaultOptions","resolve","exporter","import_cid","raw","import_sha2","mergeOptions","log","defaultOptions","resolve","metadata","links","source","importer","block","buf","encode","updatedCid","persist","unixfs","src_default","decode","hash","mergeOptions","log","defaultOptions","source","name","mergeOptions","defaultOptions","resolve","exporter","import_cid","import_sha2","mergeOptions","log","defaultOptions","exporter","buf","encode","hash","log","name","encode","persist","path","exporter","src_exports","mergeOptions","log","defaultOptions","name","raw","mergeOptions","log","defaultOptions","resolve","exporter","unixfs","decode","import_cid","raw","import_sha2","mergeOptions","log","defaultOptions","resolve","metadata","links","source","importer","block","buf","encode","updatedCid","persist","unixfs","src_default","decode","hash","source","bytes","name","path","dotenv","fs"]}